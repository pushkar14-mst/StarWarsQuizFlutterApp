// Generated by dart2js (NullSafetyMode.sound, trust primitives, omit checks, lax runtime type, csp, intern-composite-values), the Dart to JavaScript compiler version: 3.2.0.
// The code supports the following hooks:
// dartPrint(message):
//    if this function is defined it is called instead of the Dart [print]
//    method.
//
// dartMainRunner(main, args):
//    if this function is defined, the Dart [main] method will not be invoked
//    directly. Instead, a closure that will invoke [main], and its arguments
//    [args] is passed to [dartMainRunner].
//
// dartDeferredLibraryLoader(uri, successCallback, errorCallback, loadId, loadPriority):
//    if this function is defined, it will be called when a deferred library
//    is loaded. It should load and eval the javascript of `uri`, and call
//    successCallback. If it fails to do so, it should call errorCallback with
//    an error. The loadId argument is the deferred import that resulted in
//    this uri being loaded. The loadPriority argument is the priority the
//    library should be loaded with as specified in the code via the
//    load-priority annotation (0: normal, 1: high).
//
// dartCallInstrumentation(id, qualifiedName):
//    if this function is defined, it will be called at each entry of a
//    method or constructor. Used only when compiling programs with
//    --experiment-call-instrumentation.
(function dartProgram() {
  function copyProperties(from, to) {
    var keys = Object.keys(from);
    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      to[key] = from[key];
    }
  }
  function mixinPropertiesHard(from, to) {
    var keys = Object.keys(from);
    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      if (!to.hasOwnProperty(key))
        to[key] = from[key];
    }
  }
  function mixinPropertiesEasy(from, to) {
    Object.assign(to, from);
  }
  var supportsDirectProtoAccess = function() {
    var cls = function() {
    };
    cls.prototype = {p: {}};
    var object = new cls();
    if (!(Object.getPrototypeOf(object) && Object.getPrototypeOf(object).p === cls.prototype.p))
      return false;
    try {
      if (typeof navigator != "undefined" && typeof navigator.userAgent == "string" && navigator.userAgent.indexOf("Chrome/") >= 0)
        return true;
      if (typeof version == "function" && version.length == 0) {
        var v = version();
        if (/^\d+\.\d+\.\d+\.\d+$/.test(v))
          return true;
      }
    } catch (_) {
    }
    return false;
  }();
  function inherit(cls, sup) {
    cls.prototype.constructor = cls;
    cls.prototype["$is" + cls.name] = cls;
    if (sup != null) {
      if (supportsDirectProtoAccess) {
        Object.setPrototypeOf(cls.prototype, sup.prototype);
        return;
      }
      var clsPrototype = Object.create(sup.prototype);
      copyProperties(cls.prototype, clsPrototype);
      cls.prototype = clsPrototype;
    }
  }
  function inheritMany(sup, classes) {
    for (var i = 0; i < classes.length; i++)
      inherit(classes[i], sup);
  }
  function mixinEasy(cls, mixin) {
    mixinPropertiesEasy(mixin.prototype, cls.prototype);
    cls.prototype.constructor = cls;
  }
  function mixinHard(cls, mixin) {
    mixinPropertiesHard(mixin.prototype, cls.prototype);
    cls.prototype.constructor = cls;
  }
  function lazyOld(holder, name, getterName, initializer) {
    var uninitializedSentinel = holder;
    holder[name] = uninitializedSentinel;
    holder[getterName] = function() {
      holder[getterName] = function() {
        A.throwCyclicInit(name);
      };
      var result;
      var sentinelInProgress = initializer;
      try {
        if (holder[name] === uninitializedSentinel) {
          result = holder[name] = sentinelInProgress;
          result = holder[name] = initializer();
        } else
          result = holder[name];
      } finally {
        if (result === sentinelInProgress)
          holder[name] = null;
        holder[getterName] = function() {
          return this[name];
        };
      }
      return result;
    };
  }
  function lazy(holder, name, getterName, initializer) {
    var uninitializedSentinel = holder;
    holder[name] = uninitializedSentinel;
    holder[getterName] = function() {
      if (holder[name] === uninitializedSentinel)
        holder[name] = initializer();
      holder[getterName] = function() {
        return this[name];
      };
      return holder[name];
    };
  }
  function lazyFinal(holder, name, getterName, initializer) {
    var uninitializedSentinel = holder;
    holder[name] = uninitializedSentinel;
    holder[getterName] = function() {
      if (holder[name] === uninitializedSentinel) {
        var value = initializer();
        if (holder[name] !== uninitializedSentinel)
          A.throwLateFieldADI(name);
        holder[name] = value;
      }
      var finalValue = holder[name];
      holder[getterName] = function() {
        return finalValue;
      };
      return finalValue;
    };
  }
  function makeConstList(list) {
    list.immutable$list = Array;
    list.fixed$length = Array;
    return list;
  }
  function convertToFastObject(properties) {
    function t() {
    }
    t.prototype = properties;
    new t();
    return properties;
  }
  function convertAllToFastObject(arrayOfObjects) {
    for (var i = 0; i < arrayOfObjects.length; ++i)
      convertToFastObject(arrayOfObjects[i]);
  }
  var functionCounter = 0;
  function instanceTearOffGetter(isIntercepted, parameters) {
    var cache = null;
    return isIntercepted ? function(receiver) {
      if (cache === null)
        cache = A.closureFromTearOff(parameters);
      return new cache(receiver, this);
    } : function() {
      if (cache === null)
        cache = A.closureFromTearOff(parameters);
      return new cache(this, null);
    };
  }
  function staticTearOffGetter(parameters) {
    var cache = null;
    return function() {
      if (cache === null)
        cache = A.closureFromTearOff(parameters).prototype;
      return cache;
    };
  }
  var typesOffset = 0;
  function tearOffParameters(container, isStatic, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex, needsDirectAccess) {
    if (typeof funType == "number")
      funType += typesOffset;
    return {co: container, iS: isStatic, iI: isIntercepted, rC: requiredParameterCount, dV: optionalParameterDefaultValues, cs: callNames, fs: funsOrNames, fT: funType, aI: applyIndex || 0, nDA: needsDirectAccess};
  }
  function installStaticTearOff(holder, getterName, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex) {
    var parameters = tearOffParameters(holder, true, false, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex, false);
    var getterFunction = staticTearOffGetter(parameters);
    holder[getterName] = getterFunction;
  }
  function installInstanceTearOff(prototype, getterName, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex, needsDirectAccess) {
    isIntercepted = !!isIntercepted;
    var parameters = tearOffParameters(prototype, false, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex, !!needsDirectAccess);
    var getterFunction = instanceTearOffGetter(isIntercepted, parameters);
    prototype[getterName] = getterFunction;
  }
  function setOrUpdateInterceptorsByTag(newTags) {
    var tags = init.interceptorsByTag;
    if (!tags) {
      init.interceptorsByTag = newTags;
      return;
    }
    copyProperties(newTags, tags);
  }
  function setOrUpdateLeafTags(newTags) {
    var tags = init.leafTags;
    if (!tags) {
      init.leafTags = newTags;
      return;
    }
    copyProperties(newTags, tags);
  }
  function updateTypes(newTypes) {
    var types = init.types;
    var length = types.length;
    types.push.apply(types, newTypes);
    return length;
  }
  function updateHolder(holder, newHolder) {
    copyProperties(newHolder, holder);
    return holder;
  }
  var hunkHelpers = function() {
    var mkInstance = function(isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, applyIndex) {
        return function(container, getterName, name, funType) {
          return installInstanceTearOff(container, getterName, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, [name], funType, applyIndex, false);
        };
      },
      mkStatic = function(requiredParameterCount, optionalParameterDefaultValues, callNames, applyIndex) {
        return function(container, getterName, name, funType) {
          return installStaticTearOff(container, getterName, requiredParameterCount, optionalParameterDefaultValues, callNames, [name], funType, applyIndex);
        };
      };
    return {inherit: inherit, inheritMany: inheritMany, mixin: mixinEasy, mixinHard: mixinHard, installStaticTearOff: installStaticTearOff, installInstanceTearOff: installInstanceTearOff, _instance_0u: mkInstance(0, 0, null, ["call$0"], 0), _instance_1u: mkInstance(0, 1, null, ["call$1"], 0), _instance_2u: mkInstance(0, 2, null, ["call$2"], 0), _instance_0i: mkInstance(1, 0, null, ["call$0"], 0), _instance_1i: mkInstance(1, 1, null, ["call$1"], 0), _instance_2i: mkInstance(1, 2, null, ["call$2"], 0), _static_0: mkStatic(0, null, ["call$0"], 0), _static_1: mkStatic(1, null, ["call$1"], 0), _static_2: mkStatic(2, null, ["call$2"], 0), makeConstList: makeConstList, lazy: lazy, lazyFinal: lazyFinal, lazyOld: lazyOld, updateHolder: updateHolder, convertToFastObject: convertToFastObject, updateTypes: updateTypes, setOrUpdateInterceptorsByTag: setOrUpdateInterceptorsByTag, setOrUpdateLeafTags: setOrUpdateLeafTags};
  }();
  function initializeDeferredHunk(hunk) {
    typesOffset = init.types.length;
    hunk(hunkHelpers, init, holders, $);
  }
  var J = {
    makeDispatchRecord(interceptor, proto, extension, indexability) {
      return {i: interceptor, p: proto, e: extension, x: indexability};
    },
    getNativeInterceptor(object) {
      var proto, objectProto, $constructor, interceptor, t1,
        record = object[init.dispatchPropertyName];
      if (record == null)
        if ($.initNativeDispatchFlag == null) {
          A.initNativeDispatch();
          record = object[init.dispatchPropertyName];
        }
      if (record != null) {
        proto = record.p;
        if (false === proto)
          return record.i;
        if (true === proto)
          return object;
        objectProto = Object.getPrototypeOf(object);
        if (proto === objectProto)
          return record.i;
        if (record.e === objectProto)
          throw A.wrapException(A.UnimplementedError$("Return interceptor for " + A.S(proto(object, record))));
      }
      $constructor = object.constructor;
      if ($constructor == null)
        interceptor = null;
      else {
        t1 = $._JS_INTEROP_INTERCEPTOR_TAG;
        if (t1 == null)
          t1 = $._JS_INTEROP_INTERCEPTOR_TAG = init.getIsolateTag("_$dart_js");
        interceptor = $constructor[t1];
      }
      if (interceptor != null)
        return interceptor;
      interceptor = A.lookupAndCacheInterceptor(object);
      if (interceptor != null)
        return interceptor;
      if (typeof object == "function")
        return B.JavaScriptFunction_methods;
      proto = Object.getPrototypeOf(object);
      if (proto == null)
        return B.PlainJavaScriptObject_methods;
      if (proto === Object.prototype)
        return B.PlainJavaScriptObject_methods;
      if (typeof $constructor == "function") {
        t1 = $._JS_INTEROP_INTERCEPTOR_TAG;
        if (t1 == null)
          t1 = $._JS_INTEROP_INTERCEPTOR_TAG = init.getIsolateTag("_$dart_js");
        Object.defineProperty($constructor, t1, {value: B.UnknownJavaScriptObject_methods, enumerable: false, writable: true, configurable: true});
        return B.UnknownJavaScriptObject_methods;
      }
      return B.UnknownJavaScriptObject_methods;
    },
    JSArray_JSArray$fixed($length, $E) {
      if ($length < 0 || $length > 4294967295)
        throw A.wrapException(A.RangeError$range($length, 0, 4294967295, "length", null));
      return J.JSArray_JSArray$markFixed(new Array($length), $E);
    },
    JSArray_JSArray$growable($length, $E) {
      if ($length < 0)
        throw A.wrapException(A.ArgumentError$("Length must be a non-negative integer: " + $length, null));
      return A._setArrayType(new Array($length), $E._eval$1("JSArray<0>"));
    },
    JSArray_JSArray$allocateGrowable($length, $E) {
      if ($length < 0)
        throw A.wrapException(A.ArgumentError$("Length must be a non-negative integer: " + $length, null));
      return A._setArrayType(new Array($length), $E._eval$1("JSArray<0>"));
    },
    JSArray_JSArray$markFixed(allocation, $E) {
      return J.JSArray_markFixedList(A._setArrayType(allocation, $E._eval$1("JSArray<0>")));
    },
    JSArray_markFixedList(list) {
      list.fixed$length = Array;
      return list;
    },
    JSArray_markUnmodifiableList(list) {
      list.fixed$length = Array;
      list.immutable$list = Array;
      return list;
    },
    JSArray__compareAny(a, b) {
      return J.compareTo$1$ns(a, b);
    },
    JSString__isWhitespace(codeUnit) {
      if (codeUnit < 256)
        switch (codeUnit) {
          case 9:
          case 10:
          case 11:
          case 12:
          case 13:
          case 32:
          case 133:
          case 160:
            return true;
          default:
            return false;
        }
      switch (codeUnit) {
        case 5760:
        case 8192:
        case 8193:
        case 8194:
        case 8195:
        case 8196:
        case 8197:
        case 8198:
        case 8199:
        case 8200:
        case 8201:
        case 8202:
        case 8232:
        case 8233:
        case 8239:
        case 8287:
        case 12288:
        case 65279:
          return true;
        default:
          return false;
      }
    },
    JSString__skipLeadingWhitespace(string, index) {
      var t1, codeUnit;
      for (t1 = string.length; index < t1;) {
        codeUnit = string.charCodeAt(index);
        if (codeUnit !== 32 && codeUnit !== 13 && !J.JSString__isWhitespace(codeUnit))
          break;
        ++index;
      }
      return index;
    },
    JSString__skipTrailingWhitespace(string, index) {
      var index0, codeUnit;
      for (; index > 0; index = index0) {
        index0 = index - 1;
        codeUnit = string.charCodeAt(index0);
        if (codeUnit !== 32 && codeUnit !== 13 && !J.JSString__isWhitespace(codeUnit))
          break;
      }
      return index;
    },
    getInterceptor$(receiver) {
      if (typeof receiver == "number") {
        if (Math.floor(receiver) == receiver)
          return J.JSInt.prototype;
        return J.JSNumNotInt.prototype;
      }
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return J.JSNull.prototype;
      if (typeof receiver == "boolean")
        return J.JSBool.prototype;
      if (Array.isArray(receiver))
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        if (typeof receiver == "symbol")
          return J.JavaScriptSymbol.prototype;
        if (typeof receiver == "bigint")
          return J.JavaScriptBigInt.prototype;
        return receiver;
      }
      if (receiver instanceof A.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$asx(receiver) {
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return receiver;
      if (Array.isArray(receiver))
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        if (typeof receiver == "symbol")
          return J.JavaScriptSymbol.prototype;
        if (typeof receiver == "bigint")
          return J.JavaScriptBigInt.prototype;
        return receiver;
      }
      if (receiver instanceof A.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$ax(receiver) {
      if (receiver == null)
        return receiver;
      if (Array.isArray(receiver))
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        if (typeof receiver == "symbol")
          return J.JavaScriptSymbol.prototype;
        if (typeof receiver == "bigint")
          return J.JavaScriptBigInt.prototype;
        return receiver;
      }
      if (receiver instanceof A.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$n(receiver) {
      if (typeof receiver == "number")
        return J.JSNumber.prototype;
      if (receiver == null)
        return receiver;
      if (!(receiver instanceof A.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    getInterceptor$ns(receiver) {
      if (typeof receiver == "number")
        return J.JSNumber.prototype;
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return receiver;
      if (!(receiver instanceof A.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    getInterceptor$s(receiver) {
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return receiver;
      if (!(receiver instanceof A.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    getInterceptor$x(receiver) {
      if (receiver == null)
        return receiver;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        if (typeof receiver == "symbol")
          return J.JavaScriptSymbol.prototype;
        if (typeof receiver == "bigint")
          return J.JavaScriptBigInt.prototype;
        return receiver;
      }
      if (receiver instanceof A.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$z(receiver) {
      if (receiver == null)
        return receiver;
      if (!(receiver instanceof A.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    set$length$asx(receiver, value) {
      return J.getInterceptor$asx(receiver).set$length(receiver, value);
    },
    get$attributes$x(receiver) {
      return J.getInterceptor$x(receiver).get$attributes(receiver);
    },
    get$children$x(receiver) {
      return J.getInterceptor$x(receiver).get$children(receiver);
    },
    get$current$z(receiver) {
      return J.getInterceptor$z(receiver).get$current(receiver);
    },
    get$entries$x(receiver) {
      return J.getInterceptor$x(receiver).get$entries(receiver);
    },
    get$first$ax(receiver) {
      return J.getInterceptor$ax(receiver).get$first(receiver);
    },
    get$hashCode$(receiver) {
      return J.getInterceptor$(receiver).get$hashCode(receiver);
    },
    get$isEmpty$asx(receiver) {
      return J.getInterceptor$asx(receiver).get$isEmpty(receiver);
    },
    get$isNotEmpty$asx(receiver) {
      return J.getInterceptor$asx(receiver).get$isNotEmpty(receiver);
    },
    get$iterator$ax(receiver) {
      return J.getInterceptor$ax(receiver).get$iterator(receiver);
    },
    get$length$asx(receiver) {
      return J.getInterceptor$asx(receiver).get$length(receiver);
    },
    get$message$z(receiver) {
      return J.getInterceptor$z(receiver).get$message(receiver);
    },
    get$runtimeType$(receiver) {
      return J.getInterceptor$(receiver).get$runtimeType(receiver);
    },
    $eq$(receiver, a0) {
      if (receiver == null)
        return a0 == null;
      if (typeof receiver != "object")
        return a0 != null && receiver === a0;
      return J.getInterceptor$(receiver).$eq(receiver, a0);
    },
    $index$asx(receiver, a0) {
      if (typeof a0 === "number")
        if (Array.isArray(receiver) || typeof receiver == "string" || A.isJsIndexable(receiver, receiver[init.dispatchPropertyName]))
          if (a0 >>> 0 === a0 && a0 < receiver.length)
            return receiver[a0];
      return J.getInterceptor$asx(receiver).$index(receiver, a0);
    },
    $indexSet$ax(receiver, a0, a1) {
      if (typeof a0 === "number")
        if ((Array.isArray(receiver) || A.isJsIndexable(receiver, receiver[init.dispatchPropertyName])) && !receiver.immutable$list && a0 >>> 0 === a0 && a0 < receiver.length)
          return receiver[a0] = a1;
      return J.getInterceptor$ax(receiver).$indexSet(receiver, a0, a1);
    },
    _removeEventListener$3$x(receiver, a0, a1, a2) {
      return J.getInterceptor$x(receiver)._removeEventListener$3(receiver, a0, a1, a2);
    },
    _replaceChild$2$x(receiver, a0, a1) {
      return J.getInterceptor$x(receiver)._replaceChild$2(receiver, a0, a1);
    },
    add$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).add$1(receiver, a0);
    },
    addEventListener$3$x(receiver, a0, a1, a2) {
      return J.getInterceptor$x(receiver).addEventListener$3(receiver, a0, a1, a2);
    },
    cast$1$0$ax(receiver, $T1) {
      return J.getInterceptor$ax(receiver).cast$1$0(receiver, $T1);
    },
    codeUnitAt$1$s(receiver, a0) {
      return J.getInterceptor$s(receiver).codeUnitAt$1(receiver, a0);
    },
    compareTo$1$ns(receiver, a0) {
      return J.getInterceptor$ns(receiver).compareTo$1(receiver, a0);
    },
    complete$0$z(receiver) {
      return J.getInterceptor$z(receiver).complete$0(receiver);
    },
    contains$1$asx(receiver, a0) {
      return J.getInterceptor$asx(receiver).contains$1(receiver, a0);
    },
    elementAt$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).elementAt$1(receiver, a0);
    },
    forEach$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).forEach$1(receiver, a0);
    },
    join$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).join$1(receiver, a0);
    },
    map$1$1$ax(receiver, a0, $T1) {
      return J.getInterceptor$ax(receiver).map$1$1(receiver, a0, $T1);
    },
    noSuchMethod$1$(receiver, a0) {
      return J.getInterceptor$(receiver).noSuchMethod$1(receiver, a0);
    },
    remove$0$ax(receiver) {
      return J.getInterceptor$ax(receiver).remove$0(receiver);
    },
    replaceWith$1$x(receiver, a0) {
      return J.getInterceptor$x(receiver).replaceWith$1(receiver, a0);
    },
    skip$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).skip$1(receiver, a0);
    },
    split$1$s(receiver, a0) {
      return J.getInterceptor$s(receiver).split$1(receiver, a0);
    },
    take$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).take$1(receiver, a0);
    },
    toLowerCase$0$s(receiver) {
      return J.getInterceptor$s(receiver).toLowerCase$0(receiver);
    },
    toRadixString$1$n(receiver, a0) {
      return J.getInterceptor$n(receiver).toRadixString$1(receiver, a0);
    },
    toString$0$(receiver) {
      return J.getInterceptor$(receiver).toString$0(receiver);
    },
    trimLeft$0$s(receiver) {
      return J.getInterceptor$s(receiver).trimLeft$0(receiver);
    },
    Interceptor: function Interceptor() {
    },
    JSBool: function JSBool() {
    },
    JSNull: function JSNull() {
    },
    JavaScriptObject: function JavaScriptObject() {
    },
    LegacyJavaScriptObject: function LegacyJavaScriptObject() {
    },
    PlainJavaScriptObject: function PlainJavaScriptObject() {
    },
    UnknownJavaScriptObject: function UnknownJavaScriptObject() {
    },
    JavaScriptFunction: function JavaScriptFunction() {
    },
    JavaScriptBigInt: function JavaScriptBigInt() {
    },
    JavaScriptSymbol: function JavaScriptSymbol() {
    },
    JSArray: function JSArray(t0) {
      this.$ti = t0;
    },
    JSUnmodifiableArray: function JSUnmodifiableArray(t0) {
      this.$ti = t0;
    },
    ArrayIterator: function ArrayIterator(t0, t1) {
      var _ = this;
      _._iterable = t0;
      _.__interceptors$_length = t1;
      _._index = 0;
      _.__interceptors$_current = null;
    },
    JSNumber: function JSNumber() {
    },
    JSInt: function JSInt() {
    },
    JSNumNotInt: function JSNumNotInt() {
    },
    JSString: function JSString() {
    }
  },
  A = {
    detectBrowserEngineByVendorAgent(vendor, agent) {
      if (vendor === "Google Inc.")
        return B.BrowserEngine_0;
      else if (vendor === "Apple Computer, Inc.")
        return B.BrowserEngine_1;
      else if (B.JSString_methods.contains$1(agent, "Edg/"))
        return B.BrowserEngine_0;
      else if (vendor === "" && B.JSString_methods.contains$1(agent, "firefox"))
        return B.BrowserEngine_2;
      A.print("WARNING: failed to detect current browser engine. Assuming this is a Chromium-compatible browser.");
      return B.BrowserEngine_0;
    },
    detectOperatingSystem() {
      var platform, userAgent, maxTouchPoints, _null = null,
        t1 = self.window;
      t1 = t1.navigator.platform;
      if (t1 == null)
        t1 = _null;
      t1.toString;
      platform = t1;
      t1 = self.window;
      userAgent = t1.navigator.userAgent;
      if (B.JSString_methods.startsWith$1(platform, "Mac")) {
        t1 = self.window;
        t1 = t1.navigator.maxTouchPoints;
        if (t1 == null)
          t1 = _null;
        t1 = t1 == null ? _null : B.JSNumber_methods.toInt$0(t1);
        maxTouchPoints = t1;
        if ((maxTouchPoints == null ? 0 : maxTouchPoints) > 2)
          return B.OperatingSystem_0;
        return B.OperatingSystem_4;
      } else if (B.JSString_methods.contains$1(platform.toLowerCase(), "iphone") || B.JSString_methods.contains$1(platform.toLowerCase(), "ipad") || B.JSString_methods.contains$1(platform.toLowerCase(), "ipod"))
        return B.OperatingSystem_0;
      else if (B.JSString_methods.contains$1(userAgent, "Android"))
        return B.OperatingSystem_1;
      else if (B.JSString_methods.startsWith$1(platform, "Linux"))
        return B.OperatingSystem_2;
      else if (B.JSString_methods.startsWith$1(platform, "Win"))
        return B.OperatingSystem_3;
      else
        return B.OperatingSystem_5;
    },
    isDesktop() {
      var t1 = $.$get$_operatingSystem();
      return B.Set_uTMs5.contains$1(0, t1);
    },
    isIOS15() {
      var t1 = $.$get$_operatingSystem();
      return t1 === B.OperatingSystem_0 && B.JSString_methods.contains$1(self.window.navigator.userAgent, "OS 15_");
    },
    browserSupportsCanvaskitChromium() {
      return self.Intl.v8BreakIterator != null && self.Intl.Segmenter != null;
    },
    SkParagraphBuilderNamespaceExtension_RequiresClientICU(_this) {
      if (!("RequiresClientICU" in _this))
        return false;
      return A._asBool(_this.RequiresClientICU());
    },
    getCanvasKitJsFileNames(variant) {
      var t1,
        _s21_ = "chromium/canvaskit.js";
      switch (variant.index) {
        case 0:
          t1 = A._setArrayType([], type$.JSArray_String);
          if (A.browserSupportsCanvaskitChromium())
            t1.push(_s21_);
          t1.push("canvaskit.js");
          return t1;
        case 1:
          return A._setArrayType(["canvaskit.js"], type$.JSArray_String);
        case 2:
          return A._setArrayType([_s21_], type$.JSArray_String);
      }
    },
    _canvasKitJsUrls() {
      var variant,
        t1 = $._configuration;
      t1 = (t1 == null ? $._configuration = A.FlutterConfiguration$legacy(self.window.flutterConfiguration) : t1)._configuration;
      if (t1 == null)
        variant = null;
      else {
        t1 = t1.canvasKitVariant;
        if (t1 == null)
          t1 = null;
        variant = t1;
      }
      t1 = A.getCanvasKitJsFileNames(A.EnumByName_byName(B.List_66y, variant == null ? "auto" : variant));
      return new A.MappedListIterable(t1, new A._canvasKitJsUrls_closure(), A._arrayInstanceType(t1)._eval$1("MappedListIterable<1,String>"));
    },
    canvasKitWasmModuleUrl(file, canvasKitBase) {
      return canvasKitBase + file;
    },
    downloadCanvasKit() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.JavaScriptObject),
        $async$returnValue, t1, canvasKit;
      var $async$downloadCanvasKit = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return A._asyncAwait(A._downloadOneOf(A._canvasKitJsUrls()), $async$downloadCanvasKit);
            case 3:
              // returning from await.
              t1 = type$.JavaScriptObject;
              $async$goto = 4;
              return A._asyncAwait(A.promiseToFuture(self.window.CanvasKitInit(t1._as({locateFile: A.allowInterop(A._engine__canvasKitWasmModuleUrl$closure())})), t1), $async$downloadCanvasKit);
            case 4:
              // returning from await.
              canvasKit = $async$result;
              if (A.SkParagraphBuilderNamespaceExtension_RequiresClientICU(canvasKit.ParagraphBuilder) && !A.browserSupportsCanvaskitChromium())
                throw A.wrapException(A.Exception_Exception("The CanvasKit variant you are using only works on Chromium browsers. Please use a different CanvasKit variant, or use a Chromium browser."));
              $async$returnValue = canvasKit;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$downloadCanvasKit, $async$completer);
    },
    _downloadOneOf(urls) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, t1, t2, t3;
      var $async$_downloadOneOf = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = new A.ListIterator(urls, urls.get$length(urls)), t2 = A._instanceType(t1)._precomputed1;
            case 3:
              // for condition
              if (!t1.moveNext$0()) {
                // goto after for
                $async$goto = 4;
                break;
              }
              t3 = t1.__internal$_current;
              $async$goto = 5;
              return A._asyncAwait(A._downloadCanvasKitJs(t3 == null ? t2._as(t3) : t3), $async$_downloadOneOf);
            case 5:
              // returning from await.
              if ($async$result) {
                // goto return
                $async$goto = 1;
                break;
              }
              // goto for condition
              $async$goto = 3;
              break;
            case 4:
              // after for
              throw A.wrapException(A.Exception_Exception("Failed to download any of the following CanvasKit URLs: " + urls.toString$0(0)));
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$_downloadOneOf, $async$completer);
    },
    _downloadCanvasKitJs(url) {
      var script, canvasKitLoadCompleter, loadCallback, errorCallback, t2,
        t1 = $._configuration;
      t1 = (t1 == null ? $._configuration = A.FlutterConfiguration$legacy(self.window.flutterConfiguration) : t1)._configuration;
      t1 = t1 == null ? null : A.JsFlutterConfigurationExtension_get_nonce(t1);
      script = A.DomDocumentExtension_createElement(self.document, "script");
      if (t1 != null)
        script.nonce = t1;
      script.src = A.createTrustedScriptUrl(url);
      t1 = new A._Future($.Zone__current, type$._Future_bool);
      canvasKitLoadCompleter = new A._AsyncCompleter(t1, type$._AsyncCompleter_bool);
      loadCallback = A._Cell$named("loadCallback");
      errorCallback = A._Cell$named("errorCallback");
      t2 = type$.JavaScriptObject;
      loadCallback.set$finalLocalValue(t2._as(A.allowInterop(new A._downloadCanvasKitJs_loadEventHandler(script, canvasKitLoadCompleter))));
      errorCallback.set$finalLocalValue(t2._as(A.allowInterop(new A._downloadCanvasKitJs_errorEventHandler(script, canvasKitLoadCompleter))));
      A.DomEventTargetExtension_addEventListener(script, "load", loadCallback._readLocal$0(), null);
      A.DomEventTargetExtension_addEventListener(script, "error", errorCallback._readLocal$0(), null);
      self.document.head.appendChild(script);
      return t1;
    },
    RegisteredFont$(bytes, family, typeface) {
      var skFont = new self.window.flutterCanvasKit.Font(typeface),
        t1 = A._setArrayType([0], type$.JSArray_int);
      skFont.getGlyphBounds(t1, null, null);
      return new A.RegisteredFont(family, bytes, typeface);
    },
    CopyToClipboardStrategy_CopyToClipboardStrategy() {
      return self.window.navigator.clipboard != null ? new A.ClipboardAPICopyStrategy() : new A.ExecCommandCopyStrategy();
    },
    PasteFromClipboardStrategy_PasteFromClipboardStrategy() {
      var t1 = $.$get$_browserEngine();
      return t1 === B.BrowserEngine_2 || self.window.navigator.clipboard == null ? new A.ExecCommandPasteStrategy() : new A.ClipboardAPIPasteStrategy();
    },
    configuration() {
      var t1 = $._configuration;
      return t1 == null ? $._configuration = A.FlutterConfiguration$legacy(self.window.flutterConfiguration) : t1;
    },
    FlutterConfiguration$legacy(config) {
      var t1 = new A.FlutterConfiguration();
      if (config != null) {
        t1._usedLegacyConfigStyle = true;
        t1._configuration = config;
      }
      return t1;
    },
    JsFlutterConfigurationExtension_get_nonce(_this) {
      var t1 = _this.nonce;
      return t1 == null ? null : t1;
    },
    ScreenOrientation__deviceOrientationToLockType(deviceOrientation) {
      switch (deviceOrientation) {
        case "DeviceOrientation.portraitUp":
          return "portrait-primary";
        case "DeviceOrientation.portraitDown":
          return "portrait-secondary";
        case "DeviceOrientation.landscapeLeft":
          return "landscape-primary";
        case "DeviceOrientation.landscapeRight":
          return "landscape-secondary";
        default:
          return null;
      }
    },
    DomWindowExtension_get_innerHeight(_this) {
      var t1 = _this.innerHeight;
      return t1 == null ? null : t1;
    },
    DomWindowExtension_matchMedia(_this, query) {
      return _this.matchMedia(query);
    },
    DomWindowExtension_getComputedStyle(_this, elt) {
      return _this.getComputedStyle(elt);
    },
    DomConsoleExtension_get_warn(_this) {
      return new A.DomConsoleExtension_get_warn_closure(_this);
    },
    DomNavigatorExtension_get_userAgent(_this) {
      return _this.userAgent;
    },
    DomNavigatorExtension_get_languages(_this) {
      var t1 = _this.languages;
      if (t1 == null)
        t1 = null;
      else {
        t1 = J.map$1$1$ax(t1, new A.DomNavigatorExtension_get_languages_closure(), type$.String);
        t1 = A.List_List$of(t1, true, A._instanceType(t1)._eval$1("ListIterable.E"));
      }
      return t1;
    },
    DomDocumentExtension_createElement(_this, $name) {
      return _this.createElement($name);
    },
    DomEventTargetExtension_addEventListener(_this, type, listener, useCapture) {
      if (listener != null)
        if (useCapture == null)
          _this.addEventListener(type, listener);
        else
          _this.addEventListener(type, listener, useCapture);
    },
    DomEventTargetExtension_removeEventListener(_this, type, listener, useCapture) {
      if (listener != null)
        if (useCapture == null)
          _this.removeEventListener(type, listener);
        else
          _this.removeEventListener(type, listener, useCapture);
    },
    createDomEventListener(listener) {
      return type$.JavaScriptObject._as(A.allowInterop(listener));
    },
    DomEventExtension_get_timeStamp(_this) {
      var t1 = _this.timeStamp;
      return t1 == null ? null : t1;
    },
    DomElementExtension_clearChildren(_this) {
      var t1;
      for (; _this.firstChild != null;) {
        t1 = _this.firstChild;
        t1.toString;
        _this.removeChild(t1);
      }
    },
    DomCSSStyleDeclarationExtension_setProperty(_this, propertyName, value) {
      _this.setProperty(propertyName, value, "");
    },
    createDomHTMLStyleElement(nonce) {
      var style = A.DomDocumentExtension_createElement(self.document, "style");
      if (nonce != null)
        style.nonce = nonce;
      return style;
    },
    httpFetch(url) {
      return A.httpFetch$body(url);
    },
    httpFetch$body(url) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.HttpFetchResponse),
        $async$returnValue, $async$handler = 2, $async$currentError, domResponse, requestError, exception, $async$exception;
      var $async$httpFetch = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$handler = 4;
              $async$goto = 7;
              return A._asyncAwait(A.promiseToFuture(self.window.fetch(url), type$.JavaScriptObject), $async$httpFetch);
            case 7:
              // returning from await.
              domResponse = $async$result;
              $async$returnValue = new A.HttpFetchResponseImpl(url, domResponse);
              // goto return
              $async$goto = 1;
              break;
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              requestError = A.unwrapException($async$exception);
              throw A.wrapException(new A.HttpFetchError(url, requestError));
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return A._asyncStartSync($async$httpFetch, $async$completer);
    },
    createDomFontFace(family, source, descriptors) {
      var t1, t2;
      if (descriptors == null)
        return new self.FontFace(family, source);
      else {
        t1 = self.FontFace;
        t2 = A.jsify(descriptors);
        if (t2 == null)
          t2 = type$.Object._as(t2);
        return new t1(family, source, t2);
      }
    },
    DomVisualViewportExtension_get_height(_this) {
      var t1 = _this.height;
      return t1 == null ? null : t1;
    },
    DomHTMLTextAreaElementExtension_set_value(_this, value) {
      var t1 = value == null ? null : value;
      _this.value = t1;
      return t1;
    },
    DomHTMLTextAreaElementExtension_get_selectionStart(_this) {
      var t1 = _this.selectionStart;
      return t1 == null ? null : t1;
    },
    DomHTMLTextAreaElementExtension_get_selectionEnd(_this) {
      var t1 = _this.selectionEnd;
      return t1 == null ? null : t1;
    },
    DomHTMLTextAreaElementExtension_get_value(_this) {
      var t1 = _this.value;
      return t1 == null ? null : t1;
    },
    DomKeyboardEventExtension_get_code(_this) {
      var t1 = _this.code;
      return t1 == null ? null : t1;
    },
    DomKeyboardEventExtension_get_key(_this) {
      var t1 = _this.key;
      return t1 == null ? null : t1;
    },
    DomHistoryExtension_get_state(_this) {
      var t1 = _this.state;
      if (t1 == null)
        t1 = null;
      else {
        t1 = A.dartify(t1);
        t1.toString;
      }
      return t1;
    },
    DomMediaQueryListExtension_get_matches(_this) {
      return _this.matches;
    },
    DomMediaQueryListEventExtension_get_matches(_this) {
      var t1 = _this.matches;
      return t1 == null ? null : t1;
    },
    DomMouseEventExtension_get_buttons(_this) {
      var t1 = _this.buttons;
      return t1 == null ? null : t1;
    },
    DomPointerEventExtension_get_pointerId(_this) {
      var t1 = _this.pointerId;
      return t1 == null ? null : t1;
    },
    DomPointerEventExtension_get_pointerType(_this) {
      var t1 = _this.pointerType;
      return t1 == null ? null : t1;
    },
    DomPointerEventExtension_get_tiltX(_this) {
      var t1 = _this.tiltX;
      return t1 == null ? null : t1;
    },
    DomPointerEventExtension_get_tiltY(_this) {
      var t1 = _this.tiltY;
      return t1 == null ? null : t1;
    },
    DomWheelEventExtension_get_wheelDeltaX(_this) {
      var t1 = _this.wheelDeltaX;
      return t1 == null ? null : t1;
    },
    DomWheelEventExtension_get_wheelDeltaY(_this) {
      var t1 = _this.wheelDeltaY;
      return t1 == null ? null : t1;
    },
    DomTouchExtension_get_identifier(_this) {
      var t1 = _this.identifier;
      return t1 == null ? null : t1;
    },
    DomHTMLInputElementExtension_set_type(_this, value) {
      _this.type = value;
      return value;
    },
    DomHTMLInputElementExtension_get_value(_this) {
      var t1 = _this.value;
      return t1 == null ? null : t1;
    },
    DomHTMLInputElementExtension_get_selectionStart(_this) {
      var t1 = _this.selectionStart;
      return t1 == null ? null : t1;
    },
    DomHTMLInputElementExtension_get_selectionEnd(_this) {
      var t1 = _this.selectionEnd;
      return t1 == null ? null : t1;
    },
    DomCSSStyleSheetExtension_insertRule(_this, rule, index) {
      return _this.insertRule(rule, index);
    },
    DomSubscription$(target, typeString, dartListener) {
      var t1 = type$.JavaScriptObject._as(A.allowInterop(dartListener));
      target.addEventListener(typeString, t1);
      return new A.DomSubscription(typeString, target, t1);
    },
    createDomResizeObserver(fn) {
      return new self.ResizeObserver(A.allowInterop(new A.createDomResizeObserver_closure(fn)));
    },
    createTrustedScriptUrl(url) {
      if (self.window.trustedTypes != null)
        return $.$get$_ttPolicy().createScriptURL(url);
      return url;
    },
    fetchFontManifest(assetManager) {
      return A.fetchFontManifest$body(assetManager);
    },
    fetchFontManifest$body(assetManager) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.FontManifest),
        $async$returnValue, decoder, inputSink, t1, response, $async$temp1;
      var $async$fetchFontManifest = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = {};
              $async$temp1 = type$.HttpFetchResponse;
              $async$goto = 3;
              return A._asyncAwait(A.httpFetch(assetManager.getAssetUrl$1("FontManifest.json")), $async$fetchFontManifest);
            case 3:
              // returning from await.
              response = $async$temp1._as($async$result);
              if (!response.get$hasPayload()) {
                $.$get$printWarning().call$1("Font manifest does not exist at `" + response.url + "` - ignoring.");
                $async$returnValue = new A.FontManifest(A._setArrayType([], type$.JSArray_FontFamily));
                // goto return
                $async$goto = 1;
                break;
              }
              decoder = B.Utf8Decoder_false.super$Converter$fuse(B.JsonDecoder_null);
              t1.fontManifestJson = null;
              inputSink = decoder.startChunkedConversion$1(new A._SimpleCallbackSink(new A.fetchFontManifest_closure(t1), [], type$._SimpleCallbackSink_nullable_Object));
              $async$goto = 4;
              return A._asyncAwait(response.get$payload().read$1$1(0, new A.fetchFontManifest_closure0(inputSink), type$.Uint8List), $async$fetchFontManifest);
            case 4:
              // returning from await.
              inputSink.close$0(0);
              t1 = t1.fontManifestJson;
              if (t1 == null)
                throw A.wrapException(A.AssertionError$(string$.There_));
              t1 = J.map$1$1$ax(type$.List_dynamic._as(t1), new A.fetchFontManifest_closure1(), type$.FontFamily);
              $async$returnValue = new A.FontManifest(A.List_List$of(t1, true, A._instanceType(t1)._eval$1("ListIterable.E")));
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$fetchFontManifest, $async$completer);
    },
    FontDownloadError$(url, error) {
      return new A.FontDownloadError();
    },
    applyGlobalCssRulesToSheet(styleElement, cssSelectorPrefix, defaultCssFont) {
      var sheet, e, t2, t3, t4, t5, t6, exception,
        t1 = styleElement.sheet;
      t1.toString;
      sheet = t1;
      t1 = "    " + cssSelectorPrefix;
      t2 = type$.JavaScriptObject;
      t3 = type$._DomListWrapper_JavaScriptObject;
      t4 = t3._eval$1("Iterable.E");
      t5 = A.CastIterable_CastIterable(new A._DomListWrapper(sheet.cssRules, t3), t4, t2)._source;
      A.DomCSSStyleSheetExtension_insertRule(sheet, t1 + " flt-scene-host {\n      font: " + defaultCssFont + ";\n    }\n  ", t5.get$length(t5));
      t5 = $.$get$_browserEngine();
      if (t5 === B.BrowserEngine_1) {
        t6 = A.CastIterable_CastIterable(new A._DomListWrapper(sheet.cssRules, t3), t4, t2)._source;
        A.DomCSSStyleSheetExtension_insertRule(sheet, "      " + cssSelectorPrefix + " * {\n      -webkit-tap-highlight-color: transparent;\n    }\n    ", t6.get$length(t6));
      }
      if (t5 === B.BrowserEngine_2) {
        t6 = A.CastIterable_CastIterable(new A._DomListWrapper(sheet.cssRules, t3), t4, t2)._source;
        A.DomCSSStyleSheetExtension_insertRule(sheet, "      " + cssSelectorPrefix + " flt-paragraph,\n      " + cssSelectorPrefix + " flt-span {\n        line-height: 100%;\n      }\n    ", t6.get$length(t6));
      }
      t6 = A.CastIterable_CastIterable(new A._DomListWrapper(sheet.cssRules, t3), t4, t2)._source;
      A.DomCSSStyleSheetExtension_insertRule(sheet, t1 + " flt-semantics input[type=range] {\n      appearance: none;\n      -webkit-appearance: none;\n      width: 100%;\n      position: absolute;\n      border: none;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n    }\n  ", t6.get$length(t6));
      if (t5 === B.BrowserEngine_1) {
        t6 = A.CastIterable_CastIterable(new A._DomListWrapper(sheet.cssRules, t3), t4, t2)._source;
        A.DomCSSStyleSheetExtension_insertRule(sheet, "      " + cssSelectorPrefix + " flt-semantics input[type=range]::-webkit-slider-thumb {\n        -webkit-appearance: none;\n      }\n    ", t6.get$length(t6));
      }
      t6 = A.CastIterable_CastIterable(new A._DomListWrapper(sheet.cssRules, t3), t4, t2)._source;
      A.DomCSSStyleSheetExtension_insertRule(sheet, t1 + " input::selection {\n      background-color: transparent;\n    }\n  ", t6.get$length(t6));
      t6 = A.CastIterable_CastIterable(new A._DomListWrapper(sheet.cssRules, t3), t4, t2)._source;
      A.DomCSSStyleSheetExtension_insertRule(sheet, t1 + " textarea::selection {\n      background-color: transparent;\n    }\n  ", t6.get$length(t6));
      t6 = A.CastIterable_CastIterable(new A._DomListWrapper(sheet.cssRules, t3), t4, t2)._source;
      A.DomCSSStyleSheetExtension_insertRule(sheet, t1 + " flt-semantics input,\n    " + cssSelectorPrefix + " flt-semantics textarea,\n    " + cssSelectorPrefix + ' flt-semantics [contentEditable="true"] {\n      caret-color: transparent;\n    }\n    ', t6.get$length(t6));
      t6 = A.CastIterable_CastIterable(new A._DomListWrapper(sheet.cssRules, t3), t4, t2)._source;
      A.DomCSSStyleSheetExtension_insertRule(sheet, t1 + " .flt-text-editing::placeholder {\n      opacity: 0;\n    }\n  ", t6.get$length(t6));
      if (t5 !== B.BrowserEngine_0)
        t1 = t5 === B.BrowserEngine_1;
      else
        t1 = true;
      if (t1) {
        t1 = A.CastIterable_CastIterable(new A._DomListWrapper(sheet.cssRules, t3), t4, t2)._source;
        A.DomCSSStyleSheetExtension_insertRule(sheet, "      " + cssSelectorPrefix + " .transparentTextEditing:-webkit-autofill,\n      " + cssSelectorPrefix + " .transparentTextEditing:-webkit-autofill:hover,\n      " + cssSelectorPrefix + " .transparentTextEditing:-webkit-autofill:focus,\n      " + cssSelectorPrefix + " .transparentTextEditing:-webkit-autofill:active {\n        opacity: 0 !important;\n      }\n    ", t1.get$length(t1));
      }
      if (B.JSString_methods.contains$1(self.window.navigator.userAgent, "Edg/"))
        try {
          t1 = A.CastIterable_CastIterable(new A._DomListWrapper(sheet.cssRules, t3), t4, t2)._source;
          A.DomCSSStyleSheetExtension_insertRule(sheet, "        " + cssSelectorPrefix + " input::-ms-reveal {\n          display: none;\n        }\n        ", t1.get$length(t1));
        } catch (exception) {
          t1 = A.unwrapException(exception);
          if (t2._is(t1)) {
            e = t1;
            self.window.console.warn(J.toString$0$(e));
          } else
            throw exception;
        }
    },
    registerHotRestartListener(listener) {
      $._hotRestartListeners.push(listener);
    },
    initializeEngineServices(jsConfiguration) {
      return A.initializeEngineServices$body(jsConfiguration);
    },
    initializeEngineServices$body(jsConfiguration) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, t1, t2, assetManager;
      var $async$initializeEngineServices = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if ($._initializationState !== B.DebugEngineInitializationState_0) {
                // goto return
                $async$goto = 1;
                break;
              }
              $._initializationState = B.DebugEngineInitializationState_1;
              t1 = $._configuration;
              if (t1 == null)
                t1 = $._configuration = A.FlutterConfiguration$legacy(self.window.flutterConfiguration);
              if (jsConfiguration != null)
                t1._configuration = jsConfiguration;
              t1 = new A.initializeEngineServices_closure();
              t2 = type$.String;
              A.checkNotNullable("ext.flutter.disassemble", "method", t2);
              if (!B.JSString_methods.startsWith$1("ext.flutter.disassemble", "ext."))
                A.throwExpression(A.ArgumentError$value("ext.flutter.disassemble", "method", "Must begin with ext."));
              if ($._extensions.$index(0, "ext.flutter.disassemble") != null)
                A.throwExpression(A.ArgumentError$("Extension already registered: ext.flutter.disassemble", null));
              A.checkNotNullable(t1, "handler", type$.Future_ServiceExtensionResponse_Function_2_String_and_Map_String_String);
              $._extensions.$indexSet(0, "ext.flutter.disassemble", $.Zone__current.bindBinaryCallback$3$1(t1, type$.Future_ServiceExtensionResponse, t2, type$.Map_String_String));
              t1 = $._configuration;
              t1 = (t1 == null ? $._configuration = A.FlutterConfiguration$legacy(self.window.flutterConfiguration) : t1)._configuration;
              if (t1 == null)
                t1 = null;
              else {
                t1 = t1.assetBase;
                if (t1 == null)
                  t1 = null;
              }
              assetManager = new A.AssetManager(t1);
              A._setAssetManager(assetManager);
              $async$goto = 3;
              return A._asyncAwait(A.Future_wait(A._setArrayType([new A.initializeEngineServices_initializeRendererCallback().call$0(), A._downloadAssetFonts()], type$.JSArray_Future_void), type$.void), $async$initializeEngineServices);
            case 3:
              // returning from await.
              $._initializationState = B.DebugEngineInitializationState_2;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$initializeEngineServices, $async$completer);
    },
    initializeEngineUi() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, t1, t2, t3, t4, t5, t6, t7, t8, shadowRootStyleElement, domElement, styleElement, semanticsHostElement, accessibilityPlaceholder, announcementsElement, politeElement, assertiveElement;
      var $async$initializeEngineUi = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if ($._initializationState !== B.DebugEngineInitializationState_2) {
                // goto return
                $async$goto = 1;
                break;
              }
              $._initializationState = B.DebugEngineInitializationState_3;
              t1 = $.$get$_operatingSystem();
              if ($.RawKeyboard__instance == null)
                $.RawKeyboard__instance = A.RawKeyboard$_(t1 === B.OperatingSystem_4);
              if ($._flutterViewEmbedder == null) {
                t2 = $._configuration;
                t2 = (t2 == null ? $._configuration = A.FlutterConfiguration$legacy(self.window.flutterConfiguration) : t2)._configuration;
                t2 = t2 == null ? null : t2.hostElement;
                t3 = A.EmbeddingStrategy_EmbeddingStrategy$create(t2);
                t4 = new A.FlutterViewEmbedder(t3);
                t5 = $.$get$window();
                t5.__EngineFlutterWindow__dimensionsProvider_A = A.DimensionsProvider_DimensionsProvider$create(t2);
                t2 = $.$get$_renderer();
                t6 = type$.String;
                t3.initialize$1$hostElementAttributes(0, A.LinkedHashMap_LinkedHashMap$_literal(["flt-renderer", t2.get$rendererTag() + " (auto-selected)", "flt-build-mode", "profile", "spellcheck", "false"], t6, t6));
                t7 = t4.__FlutterViewEmbedder__flutterViewElement_A = A.DomDocumentExtension_createElement(self.document, "flutter-view");
                t8 = t4.__FlutterViewEmbedder__glassPaneElement_A = A.DomDocumentExtension_createElement(self.document, "flt-glass-pane");
                t3.attachGlassPane$1(t7);
                t7.appendChild(t8);
                if (t8.attachShadow == null)
                  A.throwExpression(A.UnsupportedError$("ShadowDOM is not supported in this browser."));
                t3 = A.jsify(A.LinkedHashMap_LinkedHashMap$_literal(["mode", "open", "delegatesFocus", false], t6, type$.dynamic));
                if (t3 == null)
                  t3 = type$.Object._as(t3);
                t3 = t4.__FlutterViewEmbedder__glassPaneShadow_A = t8.attachShadow(t3);
                t8 = $._configuration;
                t6 = (t8 == null ? $._configuration = A.FlutterConfiguration$legacy(self.window.flutterConfiguration) : t8)._configuration;
                shadowRootStyleElement = A.createDomHTMLStyleElement(t6 == null ? null : A.JsFlutterConfigurationExtension_get_nonce(t6));
                shadowRootStyleElement.id = "flt-internals-stylesheet";
                t3.appendChild(shadowRootStyleElement);
                A.applyGlobalCssRulesToSheet(shadowRootStyleElement, "", "normal normal 14px sans-serif");
                t6 = $._configuration;
                t6 = (t6 == null ? $._configuration = A.FlutterConfiguration$legacy(self.window.flutterConfiguration) : t6)._configuration;
                t6 = t6 == null ? null : A.JsFlutterConfigurationExtension_get_nonce(t6);
                domElement = A.DomDocumentExtension_createElement(self.document, "flt-text-editing-host");
                styleElement = A.createDomHTMLStyleElement(t6);
                styleElement.id = "flt-text-editing-stylesheet";
                t7.appendChild(styleElement);
                A.applyGlobalCssRulesToSheet(styleElement, "flutter-view", "normal normal 14px sans-serif");
                t7.appendChild(domElement);
                t4.__FlutterViewEmbedder__textEditingHostNode_A = domElement;
                t7 = A.DomDocumentExtension_createElement(self.document, "flt-scene-host");
                A.DomCSSStyleDeclarationExtension_setProperty(t7.style, "pointer-events", "none");
                t4._sceneHostElement = t7;
                t2.reset$1(0, t4);
                semanticsHostElement = A.DomDocumentExtension_createElement(self.document, "flt-semantics-host");
                t2 = semanticsHostElement.style;
                A.DomCSSStyleDeclarationExtension_setProperty(t2, "position", "absolute");
                A.DomCSSStyleDeclarationExtension_setProperty(t2, "transform-origin", "0 0 0");
                t4._semanticsHostElement = semanticsHostElement;
                t4.updateSemanticsScreenProperties$0();
                t2 = $.EngineSemanticsOwner__instance;
                accessibilityPlaceholder = (t2 == null ? $.EngineSemanticsOwner__instance = A.EngineSemanticsOwner$_() : t2).semanticsHelper._semanticsEnabler.prepareAccessibilityPlaceholder$0();
                announcementsElement = A.DomDocumentExtension_createElement(self.document, "flt-announcement-host");
                politeElement = A.AccessibilityAnnouncements__createElement(B.Assertiveness_0);
                assertiveElement = A.AccessibilityAnnouncements__createElement(B.Assertiveness_1);
                announcementsElement.append(politeElement);
                announcementsElement.append(assertiveElement);
                t4.__FlutterViewEmbedder__accessibilityAnnouncements_A = new A.AccessibilityAnnouncements(politeElement, assertiveElement);
                t3.append(accessibilityPlaceholder);
                t2 = t4._sceneHostElement;
                t2.toString;
                t3.append(t2);
                t3.append(announcementsElement);
                t4.__FlutterViewEmbedder__flutterViewElement_A.appendChild(semanticsHostElement);
                t2 = $._configuration;
                t2 = (t2 == null ? $._configuration = A.FlutterConfiguration$legacy(self.window.flutterConfiguration) : t2)._configuration;
                if (t2 == null)
                  t2 = null;
                else {
                  t2 = t2.debugShowSemanticsNodes;
                  if (t2 == null)
                    t2 = null;
                }
                if (t2 === true)
                  A.DomCSSStyleDeclarationExtension_setProperty(t4._sceneHostElement.style, "opacity", "0.3");
                t2 = $.KeyboardBinding__instance;
                if (t2 == null)
                  t2 = $.KeyboardBinding__instance = A.KeyboardBinding$_();
                t3 = t4.__FlutterViewEmbedder__flutterViewElement_A;
                t2 = t2.get$_converter();
                if ($.PointerBinding__instance == null) {
                  t2 = new A.PointerBinding(t3, new A.PointerDataConverter(A.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$._PointerState)), t2);
                  t3 = $.$get$_browserEngine();
                  if (t3 === B.BrowserEngine_1)
                    t1 = t1 === B.OperatingSystem_0;
                  else
                    t1 = false;
                  if (t1)
                    $.$get$SafariPointerEventWorkaround_instance().workAroundMissingPointerEvents$0();
                  t2.__PointerBinding__adapter_A = t2._createAdapter$0();
                  $.PointerBinding__instance = t2;
                }
                t1 = t5.__EngineFlutterWindow__dimensionsProvider_A;
                t1.get$onResize(t1).listen$1(t4.get$_metricsDidChange());
                $._flutterViewEmbedder = t4;
              }
              $._initializationState = B.DebugEngineInitializationState_4;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$initializeEngineUi, $async$completer);
    },
    _setAssetManager(assetManager) {
      if (assetManager === $._assetManager)
        return;
      $._assetManager = assetManager;
    },
    _downloadAssetFonts() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        t2, t1, $async$temp1;
      var $async$_downloadAssetFonts = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $.$get$_renderer();
              t1.get$fontCollection().clear$0(0);
              $async$goto = $._assetManager != null ? 2 : 3;
              break;
            case 2:
              // then
              t1 = t1.get$fontCollection();
              t2 = $._assetManager;
              t2.toString;
              $async$temp1 = t1;
              $async$goto = 5;
              return A._asyncAwait(A.fetchFontManifest(t2), $async$_downloadAssetFonts);
            case 5:
              // returning from await.
              $async$goto = 4;
              return A._asyncAwait($async$temp1.loadAssetFonts$1($async$result), $async$_downloadAssetFonts);
            case 4:
              // returning from await.
            case 3:
              // join
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$_downloadAssetFonts, $async$completer);
    },
    FlutterEngineInitializer__staticInteropFactoryStub(autoStart, initializeEngine) {
      return type$.JavaScriptObject._as({initializeEngine: A.allowInterop(new A.FlutterEngineInitializer__staticInteropFactoryStub_closure(initializeEngine)), autoStart: A.allowInterop(new A.FlutterEngineInitializer__staticInteropFactoryStub_closure0(autoStart))});
    },
    FlutterAppRunner__staticInteropFactoryStub(runApp) {
      return type$.JavaScriptObject._as({runApp: A.allowInterop(new A.FlutterAppRunner__staticInteropFactoryStub_closure(runApp))});
    },
    futureToPromise(future, $T) {
      var t1 = A.allowInterop(new A.futureToPromise_closure(future, $T));
      return new self.Promise(t1);
    },
    _eventTimeStampToDuration(milliseconds) {
      var ms = B.JSNumber_methods.toInt$0(milliseconds);
      return A.Duration$(B.JSNumber_methods.toInt$0((milliseconds - ms) * 1000), ms);
    },
    _cached(body, $T) {
      var t1 = {};
      t1.cache = null;
      return new A._cached_closure(t1, body, $T);
    },
    KeyboardBinding$_() {
      var t1 = new A.KeyboardBinding(A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.JavaScriptObject));
      t1.KeyboardBinding$_$0();
      return t1;
    },
    KeyboardConverter__mappingFromPlatform(platform) {
      switch (platform.index) {
        case 0:
        case 4:
          return new A.LocaleKeymap(A.unmarshallMappingData("M,2\u201ew\u2211wa2\u03a9q\u2021qb2\u02dbx\u2248xc3 c\xd4j\u2206jd2\xfee\xb4ef2\xfeu\xa8ug2\xfe\xff\u02c6ih3 h\xce\xff\u2202di3 i\xc7c\xe7cj2\xd3h\u02d9hk2\u02c7\xff\u2020tl5 l@l\xfe\xff|l\u02dcnm1~mn3 n\u0131\xff\u222bbo2\xaer\u2030rp2\xacl\xd2lq2\xc6a\xe6ar3 r\u03c0p\u220fps3 s\xd8o\xf8ot2\xa5y\xc1yu3 u\xa9g\u02ddgv2\u02dak\uf8ffkw2\xc2z\xc5zx2\u0152q\u0153qy5 y\xcff\u0192f\u02c7z\u03a9zz5 z\xa5y\u2021y\u2039\xff\u203aw.2\u221av\u25cav;4\xb5m\xcds\xd3m\xdfs/2\xb8z\u03a9z"));
        case 3:
          return new A.LocaleKeymap(A.unmarshallMappingData(';b1{bc1&cf1[fg1]gm2<m?mn1}nq3/q@q\\qv1@vw3"w?w|wx2#x)xz2(z>y'));
        case 1:
        case 2:
        case 5:
          return new A.LocaleKeymap(A.unmarshallMappingData("8a2@q\u03a9qk1&kq3@q\xc6a\xe6aw2<z\xabzx1>xy2\xa5\xff\u2190\xffz5<z\xbby\u0141w\u0142w\u203ay;2\xb5m\xbam"));
      }
    },
    KeyboardConverter__getPhysicalCode(code) {
      var t1;
      if (code.length === 0)
        return 98784247808;
      t1 = B.Map_PogD3.$index(0, code);
      return t1 == null ? B.JSString_methods.get$hashCode(code) + 98784247808 : t1;
    },
    createHistoryForExistingState(urlStrategy) {
      var state;
      if (urlStrategy != null) {
        state = urlStrategy.getState$0(0);
        if (A.SingleEntryBrowserHistory__isOriginEntry(state) || A.SingleEntryBrowserHistory__isFlutterEntry(state))
          return A.SingleEntryBrowserHistory$(urlStrategy);
      }
      return A.MultiEntriesBrowserHistory$(urlStrategy);
    },
    MultiEntriesBrowserHistory$(urlStrategy) {
      var t1 = new A.MultiEntriesBrowserHistory(urlStrategy);
      t1.MultiEntriesBrowserHistory$1$urlStrategy(urlStrategy);
      return t1;
    },
    SingleEntryBrowserHistory$(urlStrategy) {
      var t1 = new A.SingleEntryBrowserHistory(urlStrategy, A.LinkedHashMap_LinkedHashMap$_literal(["flutter", true], type$.String, type$.bool));
      t1.SingleEntryBrowserHistory$1$urlStrategy(urlStrategy);
      return t1;
    },
    SingleEntryBrowserHistory__isOriginEntry(state) {
      return type$.Map_dynamic_dynamic._is(state) && J.$eq$(J.$index$asx(state, "origin"), true);
    },
    SingleEntryBrowserHistory__isFlutterEntry(state) {
      return type$.Map_dynamic_dynamic._is(state) && J.$eq$(J.$index$asx(state, "flutter"), true);
    },
    EnginePlatformDispatcher__zonedPlatformMessageResponseCallback(callback) {
      return null;
    },
    EnginePlatformDispatcher_parseBrowserLanguages() {
      var locales, t1, _i, language, parts,
        languages = A.DomNavigatorExtension_get_languages(self.window.navigator);
      if (languages == null || languages.length === 0)
        return B.List_Locale_en_US;
      locales = A._setArrayType([], type$.JSArray_Locale);
      for (t1 = languages.length, _i = 0; _i < languages.length; languages.length === t1 || (0, A.throwConcurrentModificationError)(languages), ++_i) {
        language = languages[_i];
        parts = J.split$1$s(language, "-");
        if (parts.length > 1)
          locales.push(new A.Locale(B.JSArray_methods.get$first(parts), B.JSArray_methods.get$last(parts)));
        else
          locales.push(new A.Locale(language, null));
      }
      return locales;
    },
    _handleWebTestEnd2EndMessage(codec, data) {
      var decoded = codec.decodeMethodCall$1(data),
        ratio = A.double_parse(A._asString(decoded.$arguments));
      switch (decoded.method) {
        case "setDevicePixelRatio":
          $.$get$EngineFlutterDisplay__instance()._debugDevicePixelRatioOverride = ratio;
          $.$get$EnginePlatformDispatcher__instance();
          null.call$0();
          return true;
      }
      return false;
    },
    invoke(callback, zone) {
      if (callback == null)
        return;
      zone.runGuarded$1(callback);
    },
    invoke1(callback, zone, arg) {
      if (callback == null)
        return;
      if (zone === $.Zone__current)
        callback.call$1(arg);
      else
        zone.runUnaryGuarded$2(callback, arg);
    },
    findBrowserTextScaleFactor() {
      var computedStyleMap, fontSizeObject, fontSize,
        t1 = self.document.documentElement;
      t1.toString;
      if ("computedStyleMap" in t1) {
        computedStyleMap = t1.computedStyleMap();
        if (computedStyleMap != null) {
          fontSizeObject = computedStyleMap.get("font-size");
          fontSize = fontSizeObject != null ? fontSizeObject.value : null;
        } else
          fontSize = null;
      } else
        fontSize = null;
      if (fontSize == null)
        fontSize = A.parseFloat(A.DomWindowExtension_getComputedStyle(self.window, t1).getPropertyValue("font-size"));
      return (fontSize == null ? 16 : fontSize) / 16;
    },
    PlatformConfiguration$(accessibilityFeatures, alwaysUse24HourFormat, defaultRouteName, locales, platformBrightness, semanticsEnabled, systemFontFamily, textScaleFactor) {
      return new A.PlatformConfiguration(accessibilityFeatures, false, semanticsEnabled, platformBrightness, textScaleFactor, locales, defaultRouteName, systemFontFamily);
    },
    _defaultFactory(viewId, params) {
      params.toString;
      type$.Map_of_nullable_Object_and_nullable_Object._as(params);
      return A.DomDocumentExtension_createElement(self.document, A._asString(J.$index$asx(params, "tagName")));
    },
    convertButtonToButtons(button) {
      switch (button) {
        case 0:
          return 1;
        case 1:
          return 4;
        case 2:
          return 2;
        default:
          return B.JSInt_methods.$shl(1, button);
      }
    },
    _BaseAdapter__eventTimeStampToDuration(milliseconds) {
      var ms = B.JSNumber_methods.toInt$0(milliseconds);
      return A.Duration$(B.JSNumber_methods.toInt$0((milliseconds - ms) * 1000), ms);
    },
    computeEventOffsetToTarget($event, actualTarget) {
      var t2, inputGeometry, transformValues, t3, t4, t5, t6, t7, t8, t9, t10, w, origin,
        t1 = $.EngineSemanticsOwner__instance;
      if ((t1 == null ? $.EngineSemanticsOwner__instance = A.EngineSemanticsOwner$_() : t1)._semanticsEnabled && $event.offsetX === 0 && $event.offsetY === 0)
        return A._computeOffsetForTalkbackEvent($event, actualTarget);
      t1 = $._flutterViewEmbedder.__FlutterViewEmbedder__textEditingHostNode_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t2 = $event.target;
      t2.toString;
      if (t1.contains(t2)) {
        t1 = $.$get$textEditing();
        inputGeometry = t1.get$strategy().geometry;
        if (inputGeometry != null) {
          $event.target.toString;
          t1.get$strategy().domElement.toString;
          transformValues = inputGeometry.globalTransform;
          t1 = $event.offsetX;
          t2 = $event.offsetY;
          t3 = transformValues[0];
          t4 = transformValues[4];
          t5 = transformValues[8];
          t6 = transformValues[12];
          t7 = transformValues[1];
          t8 = transformValues[5];
          t9 = transformValues[9];
          t10 = transformValues[13];
          w = 1 / (transformValues[3] * t1 + transformValues[7] * t2 + transformValues[11] * 0 + transformValues[15]);
          return new A.Offset((t3 * t1 + t4 * t2 + t5 * 0 + t6) * w, (t7 * t1 + t8 * t2 + t9 * 0 + t10) * w);
        }
      }
      if (!J.$eq$($event.target, actualTarget)) {
        origin = actualTarget.getBoundingClientRect();
        return new A.Offset($event.clientX - origin.x, $event.clientY - origin.y);
      }
      return new A.Offset($event.offsetX, $event.offsetY);
    },
    _computeOffsetForTalkbackEvent($event, actualTarget) {
      var $parent, t1,
        offsetX = $event.clientX,
        offsetY = $event.clientY;
      for ($parent = actualTarget; $parent.offsetParent != null; $parent = t1) {
        offsetX -= $parent.offsetLeft - $parent.scrollLeft;
        offsetY -= $parent.offsetTop - $parent.scrollTop;
        t1 = $parent.offsetParent;
        t1.toString;
      }
      return new A.Offset(offsetX, offsetY);
    },
    RawKeyboard$_(_onMacOs) {
      var t1 = new A.RawKeyboard(A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.Timer), _onMacOs);
      t1.RawKeyboard$_$1(_onMacOs);
      return t1;
    },
    _noopCallback(data) {
    },
    parseFloat(source) {
      var result = self.window.parseFloat(source);
      if (result == null || isNaN(result))
        return null;
      return result;
    },
    parseFontSize(element) {
      var computedStyleMap, fontSizeObject, fontSize;
      if ("computedStyleMap" in element) {
        computedStyleMap = element.computedStyleMap();
        if (computedStyleMap != null) {
          fontSizeObject = computedStyleMap.get("font-size");
          fontSize = fontSizeObject != null ? fontSizeObject.value : null;
        } else
          fontSize = null;
      } else
        fontSize = null;
      return fontSize == null ? A.parseFloat(A.DomWindowExtension_getComputedStyle(self.window, element).getPropertyValue("font-size")) : fontSize;
    },
    AccessibilityAnnouncements__createElement(assertiveness) {
      var ariaLiveValue = assertiveness === B.Assertiveness_1 ? "assertive" : "polite",
        liveRegion = A.DomDocumentExtension_createElement(self.document, "flt-announcement-" + ariaLiveValue),
        t1 = liveRegion.style;
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "position", "fixed");
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "overflow", "hidden");
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "transform", "translate(-99999px, -99999px)");
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "width", "1px");
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "height", "1px");
      t1 = A.jsify(ariaLiveValue);
      if (t1 == null)
        t1 = type$.Object._as(t1);
      liveRegion.setAttribute("aria-live", t1);
      return liveRegion;
    },
    EngineAccessibilityFeaturesBuilder$(_index) {
      return new A.EngineAccessibilityFeaturesBuilder(_index);
    },
    EngineSemanticsOwner$_() {
      var t1 = type$.int,
        t2 = type$.SemanticsObject,
        t3 = A._setArrayType([], type$.JSArray_SemanticsObject),
        t4 = A._setArrayType([], type$.JSArray_of_void_Function),
        t5 = $.$get$_operatingSystem();
      t5 = B.Set_uTMs5.contains$1(0, t5) ? new A.DesktopSemanticsEnabler() : new A.MobileSemanticsEnabler();
      t5 = new A.EngineSemanticsOwner(A.LinkedHashMap_LinkedHashMap$_empty(t1, t2), A.LinkedHashMap_LinkedHashMap$_empty(t1, t2), t3, t4, new A.EngineSemanticsOwner__now_closure(), new A.SemanticsHelper(t5), B.GestureMode_1, A._setArrayType([], type$.JSArray_of_nullable_void_Function_GestureMode));
      t5.EngineSemanticsOwner$_$0();
      return t5;
    },
    SemanticsTextEditingStrategy_ensureInitialized(owner) {
      var t2,
        t1 = $.SemanticsTextEditingStrategy__instance;
      if (t1 != null)
        t2 = t1.owner === owner;
      else
        t2 = false;
      if (t2) {
        t1.toString;
        return t1;
      }
      return $.SemanticsTextEditingStrategy__instance = new A.SemanticsTextEditingStrategy(owner, A._setArrayType([], type$.JSArray_DomSubscription), $, $, $, null);
    },
    WriteBuffer_WriteBuffer() {
      var t1 = new Uint8Array(0),
        eightBytes = new DataView(new ArrayBuffer(8));
      return new A.WriteBuffer(new A.Uint8Buffer(t1, 0), eightBytes, A.NativeUint8List_NativeUint8List$view(eightBytes.buffer, 0, null));
    },
    fontWeightIndexToCss(fontWeightIndex) {
      switch (fontWeightIndex) {
        case 0:
          return "100";
        case 1:
          return "200";
        case 2:
          return "300";
        case 3:
          return "normal";
        case 4:
          return "500";
        case 5:
          return "600";
        case 6:
          return "bold";
        case 7:
          return "800";
        case 8:
          return "900";
      }
      return "";
    },
    textAlignToCssValue(align, textDirection) {
      switch (align) {
        case B.TextAlign_0:
          return "left";
        case B.TextAlign_1:
          return "right";
        case B.TextAlign_2:
          return "center";
        case B.TextAlign_3:
          return "justify";
        case B.TextAlign_5:
          switch (textDirection.index) {
            case 1:
              return "end";
            case 0:
              return "left";
          }
          break;
        case B.TextAlign_4:
          switch (textDirection.index) {
            case 1:
              return "";
            case 0:
              return "right";
          }
          break;
        case null:
        case void 0:
          return "";
      }
    },
    _unpackProperties(packedData, singleRangesCount, propertyEnumValues, $P) {
      var t1, i,
        ranges = A._setArrayType([], $P._eval$1("JSArray<UnicodeRange<0>>")),
        dataLength = packedData.length;
      for (t1 = $P._eval$1("UnicodeRange<0>"), i = 0; i < dataLength;) {
        A._consumeInt(packedData, i);
        i += 4;
        if (packedData.charCodeAt(i) === 33)
          ++i;
        else {
          A._consumeInt(packedData, i);
          i += 4;
        }
        A._getEnumIndexFromPackedValue(packedData.charCodeAt(i));
        ++i;
        ranges.push(new A.UnicodeRange(t1));
      }
      return ranges;
    },
    _getEnumIndexFromPackedValue(charCode) {
      if (charCode <= 90)
        return charCode - 65;
      return 26 + charCode - 97;
    },
    _consumeInt(packedData, index) {
      return A.getIntFromCharCode(packedData.charCodeAt(index + 3)) + A.getIntFromCharCode(packedData.charCodeAt(index + 2)) * 36 + A.getIntFromCharCode(packedData.charCodeAt(index + 1)) * 36 * 36 + A.getIntFromCharCode(packedData.charCodeAt(index)) * 36 * 36 * 36;
    },
    getIntFromCharCode(charCode) {
      if (charCode <= 57)
        return charCode - 48;
      return charCode - 97 + 10;
    },
    EngineInputAction_fromName($name) {
      switch ($name) {
        case "TextInputAction.continueAction":
        case "TextInputAction.next":
          return B.C_NextInputAction;
        case "TextInputAction.previous":
          return B.C_PreviousInputAction;
        case "TextInputAction.done":
          return B.C_DoneInputAction;
        case "TextInputAction.go":
          return B.C_GoInputAction;
        case "TextInputAction.newline":
          return B.C_EnterInputAction;
        case "TextInputAction.search":
          return B.C_SearchInputAction;
        case "TextInputAction.send":
          return B.C_SendInputAction;
        case "TextInputAction.emergencyCall":
        case "TextInputAction.join":
        case "TextInputAction.none":
        case "TextInputAction.route":
        case "TextInputAction.unspecified":
        default:
          return B.C_NoInputAction;
      }
    },
    EngineInputType_fromName($name, isDecimal) {
      switch ($name) {
        case "TextInputType.number":
          return isDecimal ? B.C_DecimalInputType : B.C_NumberInputType;
        case "TextInputType.phone":
          return B.C_PhoneInputType;
        case "TextInputType.emailAddress":
          return B.C_EmailInputType;
        case "TextInputType.url":
          return B.C_UrlInputType;
        case "TextInputType.multiline":
          return B.C_MultilineInputType;
        case "TextInputType.none":
          return B.C_NoTextInputType;
        case "TextInputType.text":
        default:
          return B.C_TextInputType;
      }
    },
    TextCapitalizationConfig$fromInputConfiguration(inputConfiguration) {
      var t1;
      if (inputConfiguration === "TextCapitalization.words")
        t1 = B.TextCapitalization_0;
      else if (inputConfiguration === "TextCapitalization.characters")
        t1 = B.TextCapitalization_2;
      else
        t1 = inputConfiguration === "TextCapitalization.sentences" ? B.TextCapitalization_1 : B.TextCapitalization_3;
      return new A.TextCapitalizationConfig(t1);
    },
    _emptyCallback(_) {
    },
    _styleAutofillElements(domElement, isOffScreen, shouldDisablePointerEvents, shouldHideElement) {
      var t1,
        _s11_ = "transparent",
        _s4_ = "none",
        elementStyle = domElement.style;
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "white-space", "pre-wrap");
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "align-content", "center");
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "padding", "0");
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "opacity", "1");
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "color", _s11_);
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "background-color", _s11_);
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "background", _s11_);
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "outline", _s4_);
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "border", _s4_);
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "resize", _s4_);
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "text-shadow", _s11_);
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "transform-origin", "0 0 0");
      if (isOffScreen) {
        A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "top", "-9999px");
        A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "left", "-9999px");
      }
      if (shouldHideElement) {
        A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "width", "0");
        A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "height", "0");
      }
      if (shouldDisablePointerEvents)
        A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "pointer-events", _s4_);
      t1 = $.$get$_browserEngine();
      if (t1 !== B.BrowserEngine_0)
        t1 = t1 === B.BrowserEngine_1;
      else
        t1 = true;
      if (t1)
        domElement.classList.add("transparentTextEditing");
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "caret-color", _s11_);
    },
    EngineAutofillForm_fromFrameworkMessage(focusedElementAutofill, fields) {
      var t1, elements, items, formElement, isSafariDesktopStrategy, ids, focusedElement, t2, t3, t4, t5, insertionReferenceNode, fieldIsFocusedElement, t6, t7, autofillInfo, t8, autofill, htmlElement, _i, id, formIdentifier, form, submitButton, _null = null;
      if (focusedElementAutofill == null)
        return _null;
      t1 = type$.String;
      elements = A.LinkedHashMap_LinkedHashMap$_empty(t1, type$.JavaScriptObject);
      items = A.LinkedHashMap_LinkedHashMap$_empty(t1, type$.AutofillInfo);
      formElement = A.DomDocumentExtension_createElement(self.document, "form");
      isSafariDesktopStrategy = $.$get$textEditing().get$strategy() instanceof A.SafariDesktopTextEditingStrategy;
      formElement.noValidate = true;
      formElement.method = "post";
      formElement.action = "#";
      A.DomEventTargetExtension_addEventListener(formElement, "submit", $.$get$preventDefaultListener(), _null);
      A._styleAutofillElements(formElement, false, isSafariDesktopStrategy, true);
      ids = J.JSArray_JSArray$growable(0, t1);
      focusedElement = A.AutofillInfo_AutofillInfo$fromFrameworkMessage(focusedElementAutofill, B.TextCapitalizationConfig_TextCapitalization_3);
      if (fields != null)
        for (t1 = type$.Map_String_dynamic, t2 = J.cast$1$0$ax(fields, t1), t2 = new A.ListIterator(t2, t2.get$length(t2)), t3 = focusedElement.uniqueIdentifier, t4 = A._instanceType(t2)._precomputed1, t5 = !isSafariDesktopStrategy, insertionReferenceNode = _null, fieldIsFocusedElement = false; t2.moveNext$0();) {
          t6 = t2.__internal$_current;
          if (t6 == null)
            t6 = t4._as(t6);
          t7 = J.getInterceptor$asx(t6);
          autofillInfo = t1._as(t7.$index(t6, "autofill"));
          t8 = A._asString(t7.$index(t6, "textCapitalization"));
          if (t8 === "TextCapitalization.words")
            t8 = B.TextCapitalization_0;
          else if (t8 === "TextCapitalization.characters")
            t8 = B.TextCapitalization_2;
          else
            t8 = t8 === "TextCapitalization.sentences" ? B.TextCapitalization_1 : B.TextCapitalization_3;
          autofill = A.AutofillInfo_AutofillInfo$fromFrameworkMessage(autofillInfo, new A.TextCapitalizationConfig(t8));
          t8 = autofill.uniqueIdentifier;
          ids.push(t8);
          if (t8 !== t3) {
            htmlElement = A.EngineInputType_fromName(A._asString(J.$index$asx(t1._as(t7.$index(t6, "inputType")), "name")), false).createDomElement$0();
            autofill.editingState.applyToDomElement$1(htmlElement);
            autofill.applyToDomElement$1(htmlElement);
            A._styleAutofillElements(htmlElement, false, isSafariDesktopStrategy, t5);
            items.$indexSet(0, t8, autofill);
            elements.$indexSet(0, t8, htmlElement);
            formElement.append(htmlElement);
            if (fieldIsFocusedElement) {
              insertionReferenceNode = htmlElement;
              fieldIsFocusedElement = false;
            }
          } else
            fieldIsFocusedElement = true;
        }
      else {
        ids.push(focusedElement.uniqueIdentifier);
        insertionReferenceNode = _null;
      }
      B.JSArray_methods.sort$0(ids);
      for (t1 = ids.length, _i = 0, t2 = ""; _i < t1; ++_i) {
        id = ids[_i];
        t2 = (t2.length > 0 ? t2 + "*" : t2) + id;
      }
      formIdentifier = t2.charCodeAt(0) == 0 ? t2 : t2;
      form = $.formsOnTheDom.$index(0, formIdentifier);
      if (form != null)
        form.remove();
      submitButton = A.DomDocumentExtension_createElement(self.document, "input");
      A._styleAutofillElements(submitButton, true, false, true);
      submitButton.className = "submitBtn";
      A.DomHTMLInputElementExtension_set_type(submitButton, "submit");
      formElement.append(submitButton);
      return new A.EngineAutofillForm(formElement, elements, items, insertionReferenceNode == null ? submitButton : insertionReferenceNode, formIdentifier);
    },
    AutofillInfo_AutofillInfo$fromFrameworkMessage(autofill, textCapitalization) {
      var t2,
        t1 = J.getInterceptor$asx(autofill),
        uniqueIdentifier = A._asString(t1.$index(autofill, "uniqueIdentifier")),
        hintsList = type$.nullable_List_dynamic._as(t1.$index(autofill, "hints")),
        firstHint = hintsList == null || J.get$isEmpty$asx(hintsList) ? null : A._asString(J.get$first$ax(hintsList)),
        editingState = A.EditingState_EditingState$fromFrameworkMessage(type$.Map_String_dynamic._as(t1.$index(autofill, "editingValue")));
      if (firstHint != null) {
        t2 = $.$get$BrowserAutofillHints__singletonInstance()._flutterToEngineMap.$index(0, firstHint);
        if (t2 == null)
          t2 = firstHint;
      } else
        t2 = null;
      return new A.AutofillInfo(editingState, uniqueIdentifier, t2, A._asStringQ(t1.$index(autofill, "hintText")));
    },
    _replace(originalText, replacementText, replacedRange) {
      var t1 = replacedRange.start,
        t2 = replacedRange.end,
        t3 = Math.min(t1, t2);
      t2 = Math.max(t1, t2);
      return B.JSString_methods.substring$2(originalText, 0, t3) + replacementText + B.JSString_methods.substring$1(originalText, t2);
    },
    TextEditingDeltaState_inferDeltaState(newEditingState, lastEditingState, lastTextEditingDeltaState) {
      var previousSelectionWasCollapsed, t9, isTextBeingRemoved, isTextBeingChangedAtActiveSelection, deletedLength, isCurrentlyComposing, textAfterDelta, isPeriodInsertion, deltaTextPattern, match, actualEnd, textAfterMatch,
        t1 = lastTextEditingDeltaState.oldText,
        t2 = lastTextEditingDeltaState.deltaText,
        t3 = lastTextEditingDeltaState.deltaStart,
        t4 = lastTextEditingDeltaState.deltaEnd,
        t5 = lastTextEditingDeltaState.baseOffset,
        t6 = lastTextEditingDeltaState.extentOffset,
        t7 = lastTextEditingDeltaState.composingOffset,
        t8 = lastTextEditingDeltaState.composingExtent,
        newTextEditingDeltaState = new A.TextEditingDeltaState(t1, t2, t3, t4, t5, t6, t7, t8);
      t5 = lastEditingState == null;
      t6 = t5 ? null : lastEditingState.baseOffset;
      previousSelectionWasCollapsed = t6 == (t5 ? null : lastEditingState.extentOffset);
      t6 = t2.length;
      t9 = t6 === 0;
      isTextBeingRemoved = t9 && t4 !== -1;
      t9 = !t9;
      isTextBeingChangedAtActiveSelection = t9 && !previousSelectionWasCollapsed;
      if (isTextBeingRemoved) {
        deletedLength = t1.length - newEditingState.text.length;
        t3 = newEditingState.baseOffset;
        if (t3 !== (t5 ? null : lastEditingState.baseOffset)) {
          t3 = t4 - deletedLength;
          newTextEditingDeltaState.deltaStart = t3;
        } else {
          newTextEditingDeltaState.deltaStart = t3;
          t4 = t3 + deletedLength;
          newTextEditingDeltaState.deltaEnd = t4;
        }
      } else if (isTextBeingChangedAtActiveSelection) {
        t3 = lastEditingState.baseOffset;
        t5 = lastEditingState.extentOffset;
        if (t3 > t5)
          t3 = t5;
        newTextEditingDeltaState.deltaStart = t3;
      }
      isCurrentlyComposing = t7 != null && t7 !== t8;
      if (t9 && previousSelectionWasCollapsed && isCurrentlyComposing) {
        t7.toString;
        t3 = newTextEditingDeltaState.deltaStart = t7;
      }
      if (!(t3 === -1 && t3 === t4)) {
        textAfterDelta = A._replace(t1, t2, new A.TextRange(t3, t4));
        t3 = newEditingState.text;
        t3.toString;
        if (textAfterDelta !== t3) {
          isPeriodInsertion = B.JSString_methods.contains$1(t2, ".");
          deltaTextPattern = A.RegExp_RegExp(A.quoteStringForRegExp(t2), true);
          t4 = new A._AllMatchesIterator(deltaTextPattern, t3, 0);
          t5 = type$.RegExpMatch;
          t7 = t1.length;
          for (; t4.moveNext$0();) {
            match = t4.__js_helper$_current;
            t8 = (match == null ? t5._as(match) : match)._match;
            t9 = t8.index;
            if (!(t9 >= 0 && t9 + t8[0].length <= t7)) {
              actualEnd = t9 + t6 - 1;
              textAfterMatch = A._replace(t1, t2, new A.TextRange(t9, actualEnd));
            } else {
              actualEnd = isPeriodInsertion ? t9 + t8[0].length - 1 : t9 + t8[0].length;
              textAfterMatch = A._replace(t1, t2, new A.TextRange(t9, actualEnd));
            }
            if (textAfterMatch === t3) {
              newTextEditingDeltaState.deltaStart = t9;
              newTextEditingDeltaState.deltaEnd = actualEnd;
              break;
            }
          }
        }
      }
      newTextEditingDeltaState.baseOffset = newEditingState.baseOffset;
      newTextEditingDeltaState.extentOffset = newEditingState.extentOffset;
      return newTextEditingDeltaState;
    },
    EditingState$(baseOffset, composingBaseOffset, composingExtentOffset, extentOffset, text) {
      var t2,
        t1 = baseOffset == null ? 0 : baseOffset;
      t1 = Math.max(0, t1);
      t2 = extentOffset == null ? 0 : extentOffset;
      return new A.EditingState(text, t1, Math.max(0, t2), composingBaseOffset, composingExtentOffset);
    },
    EditingState_EditingState$fromFrameworkMessage(flutterEditingState) {
      var t1 = J.getInterceptor$asx(flutterEditingState),
        text = A._asStringQ(t1.$index(flutterEditingState, "text")),
        selectionBase = B.JSNumber_methods.toInt$0(A._asNum(t1.$index(flutterEditingState, "selectionBase"))),
        selectionExtent = B.JSNumber_methods.toInt$0(A._asNum(t1.$index(flutterEditingState, "selectionExtent"))),
        composingBase = A.JsonExtensions_tryInt(flutterEditingState, "composingBase"),
        composingExtent = A.JsonExtensions_tryInt(flutterEditingState, "composingExtent");
      t1 = composingBase == null ? -1 : composingBase;
      return A.EditingState$(selectionBase, t1, composingExtent == null ? -1 : composingExtent, selectionExtent, text);
    },
    EditingState_EditingState$fromDomElement(domElement) {
      var t1, t2, t3, _null = null,
        $constructor = globalThis.HTMLInputElement;
      if ($constructor != null && domElement instanceof $constructor) {
        t1 = domElement.selectionDirection;
        if ((t1 == null ? _null : t1) === "backward") {
          t1 = A.DomHTMLInputElementExtension_get_value(domElement);
          t2 = A.DomHTMLInputElementExtension_get_selectionEnd(domElement);
          t2 = t2 == null ? _null : B.JSNumber_methods.toInt$0(t2);
          t3 = A.DomHTMLInputElementExtension_get_selectionStart(domElement);
          return A.EditingState$(t2, -1, -1, t3 == null ? _null : B.JSNumber_methods.toInt$0(t3), t1);
        } else {
          t1 = A.DomHTMLInputElementExtension_get_value(domElement);
          t2 = A.DomHTMLInputElementExtension_get_selectionStart(domElement);
          t2 = t2 == null ? _null : B.JSNumber_methods.toInt$0(t2);
          t3 = A.DomHTMLInputElementExtension_get_selectionEnd(domElement);
          return A.EditingState$(t2, -1, -1, t3 == null ? _null : B.JSNumber_methods.toInt$0(t3), t1);
        }
      } else {
        $constructor = globalThis.HTMLTextAreaElement;
        if ($constructor != null && domElement instanceof $constructor) {
          t1 = domElement.selectionDirection;
          if ((t1 == null ? _null : t1) === "backward") {
            t1 = A.DomHTMLTextAreaElementExtension_get_value(domElement);
            t2 = A.DomHTMLTextAreaElementExtension_get_selectionEnd(domElement);
            t2 = t2 == null ? _null : B.JSNumber_methods.toInt$0(t2);
            t3 = A.DomHTMLTextAreaElementExtension_get_selectionStart(domElement);
            return A.EditingState$(t2, -1, -1, t3 == null ? _null : B.JSNumber_methods.toInt$0(t3), t1);
          } else {
            t1 = A.DomHTMLTextAreaElementExtension_get_value(domElement);
            t2 = A.DomHTMLTextAreaElementExtension_get_selectionStart(domElement);
            t2 = t2 == null ? _null : B.JSNumber_methods.toInt$0(t2);
            t3 = A.DomHTMLTextAreaElementExtension_get_selectionEnd(domElement);
            return A.EditingState$(t2, -1, -1, t3 == null ? _null : B.JSNumber_methods.toInt$0(t3), t1);
          }
        } else
          throw A.wrapException(A.UnsupportedError$("Initialized with unsupported input type"));
      }
    },
    InputConfiguration$fromFrameworkMessage(flutterInputConfiguration) {
      var t5, t6, t7, t8, t9,
        _s9_ = "inputType",
        _s8_ = "autofill",
        t1 = J.getInterceptor$asx(flutterInputConfiguration),
        t2 = type$.Map_String_dynamic,
        t3 = A._asString(J.$index$asx(t2._as(t1.$index(flutterInputConfiguration, _s9_)), "name")),
        t4 = A._asBoolQ(J.$index$asx(t2._as(t1.$index(flutterInputConfiguration, _s9_)), "decimal"));
      t3 = A.EngineInputType_fromName(t3, t4 === true);
      t4 = A._asStringQ(t1.$index(flutterInputConfiguration, "inputAction"));
      if (t4 == null)
        t4 = "TextInputAction.done";
      t5 = A._asBoolQ(t1.$index(flutterInputConfiguration, "obscureText"));
      t6 = A._asBoolQ(t1.$index(flutterInputConfiguration, "readOnly"));
      t7 = A._asBoolQ(t1.$index(flutterInputConfiguration, "autocorrect"));
      t8 = A.TextCapitalizationConfig$fromInputConfiguration(A._asString(t1.$index(flutterInputConfiguration, "textCapitalization")));
      t2 = t1.containsKey$1(flutterInputConfiguration, _s8_) ? A.AutofillInfo_AutofillInfo$fromFrameworkMessage(t2._as(t1.$index(flutterInputConfiguration, _s8_)), B.TextCapitalizationConfig_TextCapitalization_3) : null;
      t9 = A.EngineAutofillForm_fromFrameworkMessage(type$.nullable_Map_String_dynamic._as(t1.$index(flutterInputConfiguration, _s8_)), type$.nullable_List_dynamic._as(t1.$index(flutterInputConfiguration, "fields")));
      t1 = A._asBoolQ(t1.$index(flutterInputConfiguration, "enableDeltaModel"));
      return new A.InputConfiguration(t3, t4, t6 === true, t5 === true, t7 !== false, t1 === true, t2, t9, t8);
    },
    GloballyPositionedTextEditingStrategy$(owner) {
      return new A.GloballyPositionedTextEditingStrategy(owner, A._setArrayType([], type$.JSArray_DomSubscription), $, $, $, null);
    },
    saveForms() {
      $.formsOnTheDom.forEach$1(0, new A.saveForms_closure());
    },
    cleanForms() {
      var t1, t2, t3;
      for (t1 = $.formsOnTheDom.get$values($.formsOnTheDom), t1 = new A.MappedIterator(J.get$iterator$ax(t1.__internal$_iterable), t1._f), t2 = A._instanceType(t1)._rest[1]; t1.moveNext$0();) {
        t3 = t1.__internal$_current;
        if (t3 == null)
          t3 = t2._as(t3);
        t3.remove();
      }
      $.formsOnTheDom.clear$0(0);
    },
    EditableTextGeometry_EditableTextGeometry$fromFrameworkMessage(encodedGeometry) {
      var t1 = J.getInterceptor$asx(encodedGeometry),
        transformList = A.List_List$from(J.map$1$1$ax(type$.List_dynamic._as(t1.$index(encodedGeometry, "transform")), new A.EditableTextGeometry_EditableTextGeometry$fromFrameworkMessage_closure(), type$.dynamic), true, type$.double);
      return new A.EditableTextGeometry(A._asNum(t1.$index(encodedGeometry, "width")), A._asNum(t1.$index(encodedGeometry, "height")), new Float32Array(A._ensureNativeList(transformList)));
    },
    float64ListToCssTransform(matrix) {
      var transformKind = A.transformKindOf(matrix);
      if (transformKind === B.TransformKind_1)
        return "matrix(" + A.S(matrix[0]) + "," + A.S(matrix[1]) + "," + A.S(matrix[4]) + "," + A.S(matrix[5]) + "," + A.S(matrix[12]) + "," + A.S(matrix[13]) + ")";
      else if (transformKind === B.TransformKind_2)
        return A.float64ListToCssTransform3d(matrix);
      else
        return "none";
    },
    transformKindOf(matrix) {
      if (!(matrix[15] === 1 && matrix[14] === 0 && matrix[11] === 0 && matrix[10] === 1 && matrix[9] === 0 && matrix[8] === 0 && matrix[7] === 0 && matrix[6] === 0 && matrix[3] === 0 && matrix[2] === 0))
        return B.TransformKind_2;
      if (matrix[0] === 1 && matrix[1] === 0 && matrix[4] === 0 && matrix[5] === 1 && matrix[12] === 0 && matrix[13] === 0)
        return B.TransformKind_0;
      else
        return B.TransformKind_1;
    },
    float64ListToCssTransform3d(matrix) {
      var t1 = matrix[0];
      if (t1 === 1 && matrix[1] === 0 && matrix[2] === 0 && matrix[3] === 0 && matrix[4] === 0 && matrix[5] === 1 && matrix[6] === 0 && matrix[7] === 0 && matrix[8] === 0 && matrix[9] === 0 && matrix[10] === 1 && matrix[11] === 0 && matrix[14] === 0 && matrix[15] === 1)
        return "translate3d(" + A.S(matrix[12]) + "px, " + A.S(matrix[13]) + "px, 0px)";
      else
        return "matrix3d(" + A.S(t1) + "," + A.S(matrix[1]) + "," + A.S(matrix[2]) + "," + A.S(matrix[3]) + "," + A.S(matrix[4]) + "," + A.S(matrix[5]) + "," + A.S(matrix[6]) + "," + A.S(matrix[7]) + "," + A.S(matrix[8]) + "," + A.S(matrix[9]) + "," + A.S(matrix[10]) + "," + A.S(matrix[11]) + "," + A.S(matrix[12]) + "," + A.S(matrix[13]) + "," + A.S(matrix[14]) + "," + A.S(matrix[15]) + ")";
    },
    colorValueToCssString(value) {
      var hexValue, t1;
      if (value === 4278190080)
        return "#000000";
      if ((value & 4278190080) >>> 0 === 4278190080) {
        hexValue = B.JSInt_methods.toRadixString$1(value & 16777215, 16);
        switch (hexValue.length) {
          case 1:
            return "#00000" + hexValue;
          case 2:
            return "#0000" + hexValue;
          case 3:
            return "#000" + hexValue;
          case 4:
            return "#00" + hexValue;
          case 5:
            return "#0" + hexValue;
          default:
            return "#" + hexValue;
        }
      } else {
        t1 = "" + "rgba(" + B.JSInt_methods.toString$0(value >>> 16 & 255) + "," + B.JSInt_methods.toString$0(value >>> 8 & 255) + "," + B.JSInt_methods.toString$0(value & 255) + "," + B.JSNumber_methods.toString$0((value >>> 24 & 255) / 255) + ")";
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      }
    },
    _fallbackFontFamily() {
      if (A.isIOS15())
        return "BlinkMacSystemFont";
      var t1 = $.$get$_operatingSystem();
      if (t1 !== B.OperatingSystem_0)
        t1 = t1 === B.OperatingSystem_4;
      else
        t1 = true;
      if (t1)
        return "-apple-system, BlinkMacSystemFont";
      return "Arial";
    },
    canonicalizeFontFamily(fontFamily) {
      var t1;
      if (B.Set_qbjuj.contains$1(0, fontFamily))
        return fontFamily;
      t1 = $.$get$_operatingSystem();
      if (t1 !== B.OperatingSystem_0)
        t1 = t1 === B.OperatingSystem_4;
      else
        t1 = true;
      if (t1)
        if (fontFamily === ".SF Pro Text" || fontFamily === ".SF Pro Display" || fontFamily === ".SF UI Text" || fontFamily === ".SF UI Display")
          return A._fallbackFontFamily();
      return '"' + A.S(fontFamily) + '", ' + A._fallbackFontFamily() + ", sans-serif";
    },
    JsonExtensions_tryInt(_this, propertyName) {
      var t1 = A._asNumQ(J.$index$asx(_this, propertyName));
      return t1 == null ? null : B.JSNumber_methods.toInt$0(t1);
    },
    setElementStyle(element, $name, value) {
      A.DomCSSStyleDeclarationExtension_setProperty(element.style, $name, value);
    },
    setThemeColor(color) {
      var theme = self.document.querySelector("#flutterweb-theme");
      if (color != null) {
        if (theme == null) {
          theme = A.DomDocumentExtension_createElement(self.document, "meta");
          theme.id = "flutterweb-theme";
          theme.name = "theme-color";
          self.document.head.append(theme);
        }
        theme.content = A.colorValueToCssString(color.value);
      } else if (theme != null)
        theme.remove();
    },
    CustomElementDimensionsProvider$(_hostElement) {
      var t1 = new A.CustomElementDimensionsProvider(_hostElement, A.StreamController_StreamController$broadcast(type$.Size));
      t1.CustomElementDimensionsProvider$1(_hostElement);
      return t1;
    },
    DimensionsProvider_DimensionsProvider$create(hostElement) {
      var t1, resizeEventTarget;
      if (hostElement != null)
        return A.CustomElementDimensionsProvider$(hostElement);
      else {
        t1 = new A.FullPageDimensionsProvider(A.StreamController_StreamController$broadcast(type$.nullable_Size));
        resizeEventTarget = self.window.visualViewport;
        if (resizeEventTarget == null)
          resizeEventTarget = self.window;
        t1.__FullPageDimensionsProvider__domResizeSubscription_A = A.DomSubscription$(resizeEventTarget, "resize", t1.get$_onVisualViewportResize());
        return t1;
      }
    },
    EmbeddingStrategy_EmbeddingStrategy$create(hostElement) {
      if (hostElement != null) {
        A.DomElementExtension_clearChildren(hostElement);
        return new A.CustomElementEmbeddingStrategy(hostElement);
      } else
        return new A.FullPageEmbeddingStrategy();
    },
    EngineFlutterWindow$(viewId, platformDispatcher) {
      var t1 = new A.EngineFlutterWindow(viewId, platformDispatcher, A.Future_Future$value(null, type$.void));
      t1.EngineFlutterWindow$2(viewId, platformDispatcher);
      return t1;
    },
    AlarmClock: function AlarmClock(t0) {
      var _ = this;
      _._timestampFunction = t0;
      _.callback = _._datetime = _._timer = null;
    },
    AppBootstrap: function AppBootstrap(t0, t1) {
      this._initializeEngine = t0;
      this._runApp = t1;
    },
    AppBootstrap_prepareEngineInitializer_closure: function AppBootstrap_prepareEngineInitializer_closure(t0) {
      this.$this = t0;
    },
    AppBootstrap_prepareEngineInitializer_closure0: function AppBootstrap_prepareEngineInitializer_closure0(t0) {
      this.$this = t0;
    },
    AppBootstrap__prepareAppRunner_closure: function AppBootstrap__prepareAppRunner_closure(t0) {
      this.$this = t0;
    },
    BrowserEngine: function BrowserEngine(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    OperatingSystem: function OperatingSystem(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    _canvasKitJsUrls_closure: function _canvasKitJsUrls_closure() {
    },
    _downloadCanvasKitJs_loadEventHandler: function _downloadCanvasKitJs_loadEventHandler(t0, t1) {
      this.canvasKitScript = t0;
      this.canvasKitLoadCompleter = t1;
    },
    _downloadCanvasKitJs_errorEventHandler: function _downloadCanvasKitJs_errorEventHandler(t0, t1) {
      this.canvasKitScript = t0;
      this.canvasKitLoadCompleter = t1;
    },
    SkiaFontCollection: function SkiaFontCollection(t0, t1, t2, t3, t4) {
      var _ = this;
      _._downloadedFontFamilies = t0;
      _._unregisteredFonts = t1;
      _._registeredFonts = t2;
      _.registeredFallbackFonts = t3;
      _.familyToFontMap = t4;
      _.skFontCollection = _._fontProvider = null;
    },
    SkiaFontCollection__registerWithFontProvider_closure: function SkiaFontCollection__registerWithFontProvider_closure() {
    },
    SkiaFontCollection__registerWithFontProvider_closure0: function SkiaFontCollection__registerWithFontProvider_closure0() {
    },
    SkiaFontCollection_loadAssetFonts_closure: function SkiaFontCollection_loadAssetFonts_closure(t0) {
      this._0_0 = t0;
    },
    SkiaFontCollection_loadAssetFonts_closure0: function SkiaFontCollection_loadAssetFonts_closure0(t0) {
      this._0_0 = t0;
    },
    SkiaFontCollection_registerDownloadedFonts_makeRegisterFont: function SkiaFontCollection_registerDownloadedFonts_makeRegisterFont() {
    },
    RegisteredFont: function RegisteredFont(t0, t1, t2) {
      this.family = t0;
      this.bytes = t1;
      this.typeface = t2;
    },
    UnregisteredFont: function UnregisteredFont(t0, t1, t2) {
      this.bytes = t0;
      this.url = t1;
      this.family = t2;
    },
    FontDownloadResult: function FontDownloadResult(t0, t1, t2) {
      this.assetName = t0;
      this.font = t1;
      this.error = t2;
    },
    CompositorContext: function CompositorContext() {
    },
    Rasterizer: function Rasterizer(t0, t1) {
      this.context = t0;
      this._postFrameCallbacks = t1;
    },
    CanvasKitVariant: function CanvasKitVariant(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    CanvasKitRenderer: function CanvasKitRenderer() {
      var _ = this;
      _._initialized = null;
      _.__CanvasKitRenderer__fontCollection_FI = $;
      _._sceneHost = null;
      _.__CanvasKitRenderer_rasterizer_AI = $;
    },
    CanvasKitRenderer_initialize_closure: function CanvasKitRenderer_initialize_closure(t0) {
      this.$this = t0;
    },
    Surface: function Surface(t0) {
      var _ = this;
      _._skiaCacheBytes = _._cachedContextRestoredListener = _._cachedContextLostListener = null;
      _.htmlElement = t0;
    },
    SurfaceFactory: function SurfaceFactory(t0, t1, t2) {
      this.baseSurface = t0;
      this._liveSurfaces = t1;
      this._cache = t2;
    },
    ClipboardMessageHandler: function ClipboardMessageHandler(t0, t1) {
      this._copyToClipboardStrategy = t0;
      this._pasteFromClipboardStrategy = t1;
    },
    ClipboardMessageHandler_setDataMethodCall_closure: function ClipboardMessageHandler_setDataMethodCall_closure(t0, t1) {
      this._box_0 = t0;
      this.callback = t1;
    },
    ClipboardMessageHandler_setDataMethodCall_closure0: function ClipboardMessageHandler_setDataMethodCall_closure0(t0, t1) {
      this._box_0 = t0;
      this.callback = t1;
    },
    ClipboardMessageHandler_getDataMethodCall_closure: function ClipboardMessageHandler_getDataMethodCall_closure(t0) {
      this.callback = t0;
    },
    ClipboardMessageHandler_getDataMethodCall_closure0: function ClipboardMessageHandler_getDataMethodCall_closure0(t0, t1) {
      this.$this = t0;
      this.callback = t1;
    },
    ClipboardMessageHandler_getDataMethodCall__closure: function ClipboardMessageHandler_getDataMethodCall__closure(t0) {
      this.callback = t0;
    },
    ClipboardMessageHandler_hasStringsMethodCall_closure: function ClipboardMessageHandler_hasStringsMethodCall_closure(t0) {
      this.callback = t0;
    },
    ClipboardMessageHandler_hasStringsMethodCall_closure0: function ClipboardMessageHandler_hasStringsMethodCall_closure0(t0) {
      this.callback = t0;
    },
    ClipboardMessageHandler_hasStringsMethodCall__closure: function ClipboardMessageHandler_hasStringsMethodCall__closure(t0) {
      this.callback = t0;
    },
    ClipboardAPICopyStrategy: function ClipboardAPICopyStrategy() {
    },
    ClipboardAPIPasteStrategy: function ClipboardAPIPasteStrategy() {
    },
    ExecCommandCopyStrategy: function ExecCommandCopyStrategy() {
    },
    ExecCommandPasteStrategy: function ExecCommandPasteStrategy() {
    },
    FlutterConfiguration: function FlutterConfiguration() {
      this._usedLegacyConfigStyle = false;
      this._configuration = null;
    },
    EngineFlutterDisplay: function EngineFlutterDisplay() {
      this._debugDevicePixelRatioOverride = null;
    },
    ScreenOrientation: function ScreenOrientation() {
    },
    DomConsoleExtension_get_warn_closure: function DomConsoleExtension_get_warn_closure(t0) {
      this._this = t0;
    },
    DomNavigatorExtension_get_languages_closure: function DomNavigatorExtension_get_languages_closure() {
    },
    HttpFetchResponseImpl: function HttpFetchResponseImpl(t0, t1) {
      this.url = t0;
      this._domResponse = t1;
    },
    HttpFetchPayloadImpl: function HttpFetchPayloadImpl(t0) {
      this._domResponse = t0;
    },
    HttpFetchNoPayloadError: function HttpFetchNoPayloadError(t0, t1) {
      this.url = t0;
      this.status = t1;
    },
    HttpFetchError: function HttpFetchError(t0, t1) {
      this.url = t0;
      this.requestError = t1;
    },
    DomSubscription: function DomSubscription(t0, t1, t2) {
      this.type = t0;
      this.target = t1;
      this.listener = t2;
    },
    DomPoint: function DomPoint(t0, t1) {
      this.x = t0;
      this.y = t1;
    },
    createDomResizeObserver_closure: function createDomResizeObserver_closure(t0) {
      this.fn = t0;
    },
    _ttPolicy_closure: function _ttPolicy_closure() {
    },
    _DomListIterator: function _DomListIterator(t0, t1) {
      this.list = t0;
      this.index = -1;
      this.$ti = t1;
    },
    _DomListWrapper: function _DomListWrapper(t0, t1) {
      this.list = t0;
      this.$ti = t1;
    },
    _DomTouchListIterator: function _DomTouchListIterator(t0, t1) {
      this.list = t0;
      this.index = -1;
      this.$ti = t1;
    },
    _DomTouchListWrapper: function _DomTouchListWrapper(t0, t1) {
      this.list = t0;
      this.$ti = t1;
    },
    FlutterViewEmbedder: function FlutterViewEmbedder(t0) {
      var _ = this;
      _._embeddingStrategy = t0;
      _._sceneElement = _._semanticsHostElement = _._sceneHostElement = null;
      _.__FlutterViewEmbedder__accessibilityAnnouncements_A = _.__FlutterViewEmbedder__textEditingHostNode_A = _.__FlutterViewEmbedder__glassPaneShadow_A = _.__FlutterViewEmbedder__glassPaneElement_A = _.__FlutterViewEmbedder__flutterViewElement_A = $;
    },
    FontAsset: function FontAsset(t0, t1) {
      this.asset = t0;
      this.descriptors = t1;
    },
    FontFamily: function FontFamily(t0, t1) {
      this.name = t0;
      this.fontAssets = t1;
    },
    FontManifest: function FontManifest(t0) {
      this.families = t0;
    },
    fetchFontManifest_closure: function fetchFontManifest_closure(t0) {
      this._box_0 = t0;
    },
    fetchFontManifest_closure0: function fetchFontManifest_closure0(t0) {
      this.inputSink = t0;
    },
    fetchFontManifest_closure1: function fetchFontManifest_closure1() {
    },
    fetchFontManifest__closure: function fetchFontManifest__closure() {
    },
    FontLoadError: function FontLoadError() {
    },
    FontNotFoundError: function FontNotFoundError() {
    },
    FontDownloadError: function FontDownloadError() {
    },
    FontInvalidDataError: function FontInvalidDataError() {
    },
    AssetFontsResult: function AssetFontsResult() {
    },
    HtmlRenderer: function HtmlRenderer() {
      this.__HtmlRenderer__fontCollection_FI = $;
    },
    HtmlRenderer_initialize_closure: function HtmlRenderer_initialize_closure() {
    },
    DebugEngineInitializationState: function DebugEngineInitializationState(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    initializeEngineServices_closure: function initializeEngineServices_closure() {
    },
    initializeEngineServices_initializeRendererCallback: function initializeEngineServices_initializeRendererCallback() {
    },
    FlutterEngineInitializer__staticInteropFactoryStub_closure: function FlutterEngineInitializer__staticInteropFactoryStub_closure(t0) {
      this.initializeEngine = t0;
    },
    FlutterEngineInitializer__staticInteropFactoryStub_closure0: function FlutterEngineInitializer__staticInteropFactoryStub_closure0(t0) {
      this.autoStart = t0;
    },
    FlutterAppRunner__staticInteropFactoryStub_closure: function FlutterAppRunner__staticInteropFactoryStub_closure(t0) {
      this.runApp = t0;
    },
    futureToPromise_closure: function futureToPromise_closure(t0, t1) {
      this.future = t0;
      this.T = t1;
    },
    futureToPromise__closure: function futureToPromise__closure(t0, t1) {
      this.resolver = t0;
      this.T = t1;
    },
    futureToPromise__closure0: function futureToPromise__closure0(t0) {
      this.rejecter = t0;
    },
    _kLogicalKeyToModifierGetter_closure: function _kLogicalKeyToModifierGetter_closure() {
    },
    _kLogicalKeyToModifierGetter_closure0: function _kLogicalKeyToModifierGetter_closure0() {
    },
    _kLogicalKeyToModifierGetter_closure1: function _kLogicalKeyToModifierGetter_closure1() {
    },
    _kLogicalKeyToModifierGetter_closure2: function _kLogicalKeyToModifierGetter_closure2() {
    },
    _kLogicalKeyToModifierGetter_closure3: function _kLogicalKeyToModifierGetter_closure3() {
    },
    _kLogicalKeyToModifierGetter_closure4: function _kLogicalKeyToModifierGetter_closure4() {
    },
    _kLogicalKeyToModifierGetter_closure5: function _kLogicalKeyToModifierGetter_closure5() {
    },
    _kLogicalKeyToModifierGetter_closure6: function _kLogicalKeyToModifierGetter_closure6() {
    },
    _cached_closure: function _cached_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.body = t1;
      this.T = t2;
    },
    KeyboardBinding: function KeyboardBinding(t0) {
      this.__KeyboardBinding__converter_FI = $;
      this._listeners = t0;
    },
    KeyboardBinding$__closure: function KeyboardBinding$__closure(t0) {
      this.$this = t0;
    },
    KeyboardBinding$__closure0: function KeyboardBinding$__closure0(t0) {
      this.$this = t0;
    },
    KeyboardBinding__addEventListener_loggedHandler: function KeyboardBinding__addEventListener_loggedHandler(t0) {
      this.handler = t0;
    },
    KeyboardBinding__onKeyData_closure: function KeyboardBinding__onKeyData_closure(t0) {
      this._box_0 = t0;
    },
    FlutterHtmlKeyboardEvent: function FlutterHtmlKeyboardEvent(t0) {
      this._event = t0;
    },
    KeyboardConverter: function KeyboardConverter(t0, t1, t2, t3, t4) {
      var _ = this;
      _.performDispatchKeyData = t0;
      _.onDarwin = t1;
      _._mapping = t2;
      _._dispatchKeyData = null;
      _._disposed = false;
      _._pressingRecords = t3;
      _._keyGuards = t4;
    },
    KeyboardConverter__scheduleAsyncEvent_closure: function KeyboardConverter__scheduleAsyncEvent_closure(t0, t1, t2, t3) {
      var _ = this;
      _._box_0 = t0;
      _.$this = t1;
      _.callback = t2;
      _.getData = t3;
    },
    KeyboardConverter__scheduleAsyncEvent_closure0: function KeyboardConverter__scheduleAsyncEvent_closure0(t0) {
      this._box_0 = t0;
    },
    KeyboardConverter__startGuardingKey_closure: function KeyboardConverter__startGuardingKey_closure(t0, t1, t2) {
      this.currentTimeStamp = t0;
      this.physicalKey = t1;
      this.logicalKey = t2;
    },
    KeyboardConverter__startGuardingKey_closure0: function KeyboardConverter__startGuardingKey_closure0(t0, t1) {
      this.$this = t0;
      this.physicalKey = t1;
    },
    KeyboardConverter__handleEvent_closure: function KeyboardConverter__handleEvent_closure(t0, t1, t2, t3, t4) {
      var _ = this;
      _.$this = t0;
      _.eventKey = t1;
      _.event = t2;
      _.logicalKeyIsCharacter = t3;
      _.physicalKey = t4;
    },
    KeyboardConverter__handleEvent_closure0: function KeyboardConverter__handleEvent_closure0(t0, t1, t2) {
      this.timeStamp = t0;
      this.physicalKey = t1;
      this.logicalKey = t2;
    },
    KeyboardConverter__handleEvent_closure1: function KeyboardConverter__handleEvent_closure1(t0, t1) {
      this.$this = t0;
      this.physicalKey = t1;
    },
    KeyboardConverter__handleEvent_closure2: function KeyboardConverter__handleEvent_closure2(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.logicalKey = t1;
      _.event = t2;
      _.timeStamp = t3;
    },
    KeyboardConverter__handleEvent__closure: function KeyboardConverter__handleEvent__closure(t0, t1, t2) {
      this.$this = t0;
      this.testeeLogicalKey = t1;
      this.timeStamp = t2;
    },
    KeyboardConverter_handleEvent_closure: function KeyboardConverter_handleEvent_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    ContextMenu: function ContextMenu(t0) {
      this.element = t0;
      this._enabled = true;
    },
    MouseCursor: function MouseCursor(t0) {
      this.element = t0;
    },
    preventDefaultListener_closure: function preventDefaultListener_closure() {
    },
    BrowserHistory: function BrowserHistory() {
    },
    MultiEntriesBrowserHistory: function MultiEntriesBrowserHistory(t0) {
      var _ = this;
      _.urlStrategy = t0;
      _.__BrowserHistory__unsubscribe_A = _.__MultiEntriesBrowserHistory__lastSeenSerialCount_A = $;
      _._isDisposed = _._isTornDown = false;
    },
    MultiEntriesBrowserHistory_onPopState_closure: function MultiEntriesBrowserHistory_onPopState_closure() {
    },
    SingleEntryBrowserHistory: function SingleEntryBrowserHistory(t0, t1) {
      var _ = this;
      _.urlStrategy = t0;
      _._flutterState = t1;
      _._userProvidedRouteName = null;
      _.__BrowserHistory__unsubscribe_A = $;
      _._isDisposed = _._isTornDown = false;
    },
    SingleEntryBrowserHistory_onPopState_closure: function SingleEntryBrowserHistory_onPopState_closure() {
    },
    SingleEntryBrowserHistory_onPopState_closure0: function SingleEntryBrowserHistory_onPopState_closure0() {
    },
    HighContrastSupport: function HighContrastSupport(t0, t1) {
      this._listeners = t0;
      this._highContrastMediaQuery = t1;
      this.__HighContrastSupport__onHighContrastChangeListener_FI = $;
    },
    EnginePlatformDispatcher: function EnginePlatformDispatcher(t0, t1, t2, t3, t4) {
      var _ = this;
      _.configuration = t0;
      _.displays = t1;
      _.viewData = t2;
      _._windowConfigurations = t3;
      _._fontSizeObserver = _._onLocaleChangedSubscription = _._platformViewMessageHandler = null;
      _._brightnessMediaQuery = t4;
      _._brightnessMediaQueryListener = null;
    },
    EnginePlatformDispatcher__sendPlatformMessage_closure: function EnginePlatformDispatcher__sendPlatformMessage_closure(t0, t1) {
      this.$this = t0;
      this.callback = t1;
    },
    EnginePlatformDispatcher__sendPlatformMessage_closure0: function EnginePlatformDispatcher__sendPlatformMessage_closure0(t0, t1) {
      this.$this = t0;
      this.callback = t1;
    },
    EnginePlatformDispatcher__sendPlatformMessage_closure1: function EnginePlatformDispatcher__sendPlatformMessage_closure1() {
    },
    EnginePlatformDispatcher__sendPlatformMessage_closure2: function EnginePlatformDispatcher__sendPlatformMessage_closure2(t0, t1) {
      this.$this = t0;
      this.callback = t1;
    },
    EnginePlatformDispatcher__addLocaleChangedListener_closure: function EnginePlatformDispatcher__addLocaleChangedListener_closure(t0) {
      this.$this = t0;
    },
    EnginePlatformDispatcher__addFontSizeObserver_closure: function EnginePlatformDispatcher__addFontSizeObserver_closure(t0) {
      this.$this = t0;
    },
    EnginePlatformDispatcher__addBrightnessMediaQueryListener_closure: function EnginePlatformDispatcher__addBrightnessMediaQueryListener_closure(t0) {
      this.$this = t0;
    },
    EnginePlatformDispatcher_replyToPlatformMessage_closure: function EnginePlatformDispatcher_replyToPlatformMessage_closure(t0, t1) {
      this.callback = t0;
      this.data = t1;
    },
    ViewConfiguration: function ViewConfiguration() {
    },
    PlatformConfiguration: function PlatformConfiguration(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.accessibilityFeatures = t0;
      _.alwaysUse24HourFormat = t1;
      _.semanticsEnabled = t2;
      _.platformBrightness = t3;
      _.textScaleFactor = t4;
      _.locales = t5;
      _.defaultRouteName = t6;
      _.systemFontFamily = t7;
    },
    PlatformViewManager: function PlatformViewManager(t0, t1, t2, t3) {
      var _ = this;
      _._factories = t0;
      _.__engine$_contents = t1;
      _._invisibleViews = t2;
      _._viewIdToType = t3;
    },
    PlatformViewManager_renderContent_closure: function PlatformViewManager_renderContent_closure(t0, t1, t2, t3, t4) {
      var _ = this;
      _.$this = t0;
      _.viewId = t1;
      _.slotName = t2;
      _.viewType = t3;
      _.params = t4;
    },
    PlatformViewMessageHandler: function PlatformViewMessageHandler(t0, t1) {
      this._contentManager = t0;
      this._contentHandler = t1;
    },
    SafariPointerEventWorkaround: function SafariPointerEventWorkaround() {
    },
    SafariPointerEventWorkaround_workAroundMissingPointerEvents_closure: function SafariPointerEventWorkaround_workAroundMissingPointerEvents_closure() {
    },
    PointerBinding: function PointerBinding(t0, t1, t2) {
      var _ = this;
      _.flutterViewElement = t0;
      _._pointerDataConverter = t1;
      _._keyboardConverter = t2;
      _.__PointerBinding__adapter_A = $;
    },
    PointerSupportDetector: function PointerSupportDetector() {
    },
    _Listener: function _Listener(t0, t1, t2, t3, t4) {
      var _ = this;
      _.event = t0;
      _.target = t1;
      _.handler = t2;
      _.useCapture = t3;
      _.isNative = t4;
    },
    _BaseAdapter: function _BaseAdapter() {
    },
    _BaseAdapter_addEventListener_loggedHandler: function _BaseAdapter_addEventListener_loggedHandler(t0) {
      this.handler = t0;
    },
    _WheelEventListenerMixin: function _WheelEventListenerMixin() {
    },
    _SanitizedDetails: function _SanitizedDetails(t0, t1) {
      this.change = t0;
      this.buttons = t1;
    },
    _ButtonSanitizer: function _ButtonSanitizer() {
      this._pressedButtons = 0;
    },
    _PointerAdapter: function _PointerAdapter(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._sanitizers = t0;
      _._listeners = t1;
      _.flutterViewElement = t2;
      _.__engine$_callback = t3;
      _._pointerDataConverter = t4;
      _._keyboardConverter = t5;
      _._lastWheelEvent = null;
      _._lastWheelEventWasTrackpad = false;
    },
    _PointerAdapter__ensureSanitizer_closure: function _PointerAdapter__ensureSanitizer_closure() {
    },
    _PointerAdapter__addPointerEventListener_closure: function _PointerAdapter__addPointerEventListener_closure(t0, t1, t2) {
      this.$this = t0;
      this.checkModifiers = t1;
      this.handler = t2;
    },
    _PointerAdapter_setup_closure: function _PointerAdapter_setup_closure(t0) {
      this.$this = t0;
    },
    _PointerAdapter_setup_closure0: function _PointerAdapter_setup_closure0(t0) {
      this.$this = t0;
    },
    _PointerAdapter_setup_closure1: function _PointerAdapter_setup_closure1(t0) {
      this.$this = t0;
    },
    _PointerAdapter_setup_closure2: function _PointerAdapter_setup_closure2(t0) {
      this.$this = t0;
    },
    _PointerAdapter_setup_closure3: function _PointerAdapter_setup_closure3(t0) {
      this.$this = t0;
    },
    _PointerAdapter_setup_closure4: function _PointerAdapter_setup_closure4(t0) {
      this.$this = t0;
    },
    _TouchAdapter: function _TouchAdapter(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._pressedTouches = t0;
      _._listeners = t1;
      _.flutterViewElement = t2;
      _.__engine$_callback = t3;
      _._pointerDataConverter = t4;
      _._keyboardConverter = t5;
      _._lastWheelEvent = null;
      _._lastWheelEventWasTrackpad = false;
    },
    _TouchAdapter__addTouchEventListener_closure: function _TouchAdapter__addTouchEventListener_closure(t0, t1, t2) {
      this.$this = t0;
      this.checkModifiers = t1;
      this.handler = t2;
    },
    _TouchAdapter_setup_closure: function _TouchAdapter_setup_closure(t0) {
      this.$this = t0;
    },
    _TouchAdapter_setup_closure0: function _TouchAdapter_setup_closure0(t0) {
      this.$this = t0;
    },
    _TouchAdapter_setup_closure1: function _TouchAdapter_setup_closure1(t0) {
      this.$this = t0;
    },
    _TouchAdapter_setup_closure2: function _TouchAdapter_setup_closure2(t0) {
      this.$this = t0;
    },
    _MouseAdapter: function _MouseAdapter(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._sanitizer = t0;
      _._listeners = t1;
      _.flutterViewElement = t2;
      _.__engine$_callback = t3;
      _._pointerDataConverter = t4;
      _._keyboardConverter = t5;
      _._lastWheelEvent = null;
      _._lastWheelEventWasTrackpad = false;
    },
    _MouseAdapter__addMouseEventListener_closure: function _MouseAdapter__addMouseEventListener_closure(t0, t1, t2) {
      this.$this = t0;
      this.checkModifiers = t1;
      this.handler = t2;
    },
    _MouseAdapter_setup_closure: function _MouseAdapter_setup_closure(t0) {
      this.$this = t0;
    },
    _MouseAdapter_setup_closure0: function _MouseAdapter_setup_closure0(t0) {
      this.$this = t0;
    },
    _MouseAdapter_setup_closure1: function _MouseAdapter_setup_closure1(t0) {
      this.$this = t0;
    },
    _MouseAdapter_setup_closure2: function _MouseAdapter_setup_closure2(t0) {
      this.$this = t0;
    },
    _MouseAdapter_setup_closure3: function _MouseAdapter_setup_closure3(t0) {
      this.$this = t0;
    },
    _PointerState: function _PointerState(t0, t1) {
      this._pointer = null;
      this.x = t0;
      this.y = t1;
    },
    PointerDataConverter: function PointerDataConverter(t0) {
      this._pointers = t0;
      this._activeButtons = 0;
    },
    PointerDataConverter__ensureStateForPointer_closure: function PointerDataConverter__ensureStateForPointer_closure(t0, t1) {
      this.x = t0;
      this.y = t1;
    },
    Profiler: function Profiler() {
    },
    RawKeyboard: function RawKeyboard(t0, t1) {
      var _ = this;
      _._keydownTimers = t0;
      _._keyupListener = _._keydownListener = null;
      _._lastMetaState = 0;
      _._onMacOs = t1;
    },
    RawKeyboard$__closure: function RawKeyboard$__closure(t0) {
      this.$this = t0;
    },
    RawKeyboard$__closure0: function RawKeyboard$__closure0(t0) {
      this.$this = t0;
    },
    RawKeyboard$__closure1: function RawKeyboard$__closure1(t0) {
      this.$this = t0;
    },
    RawKeyboard__handleHtmlEvent_closure: function RawKeyboard__handleHtmlEvent_closure(t0, t1, t2) {
      this.$this = t0;
      this.timerKey = t1;
      this.event = t2;
    },
    RawKeyboard__handleHtmlEvent_closure0: function RawKeyboard__handleHtmlEvent_closure0(t0) {
      this.event = t0;
    },
    Assertiveness: function Assertiveness(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    AccessibilityAnnouncements: function AccessibilityAnnouncements(t0, t1) {
      this._politeElement = t0;
      this._assertiveElement = t1;
    },
    AccessibilityAnnouncements_announce_closure: function AccessibilityAnnouncements_announce_closure(t0) {
      this.messageElement = t0;
    },
    EngineAccessibilityFeatures: function EngineAccessibilityFeatures(t0) {
      this.__engine$_index = t0;
    },
    EngineAccessibilityFeaturesBuilder: function EngineAccessibilityFeaturesBuilder(t0) {
      this.__engine$_index = t0;
    },
    GestureMode: function GestureMode(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    EngineSemanticsOwner: function EngineSemanticsOwner(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._semanticsTree = t0;
      _._attachments = t1;
      _._detachments = t2;
      _._oneTimePostUpdateCallbacks = t3;
      _._rootSemanticsElement = null;
      _._now = t4;
      _.semanticsHelper = t5;
      _._semanticsEnabled = false;
      _._gestureMode = t6;
      _._gestureModeClock = null;
      _._gestureModeListeners = t7;
    },
    EngineSemanticsOwner$__closure: function EngineSemanticsOwner$__closure(t0) {
      this.$this = t0;
    },
    EngineSemanticsOwner__now_closure: function EngineSemanticsOwner__now_closure() {
    },
    EngineSemanticsOwner__getGestureModeClock_closure: function EngineSemanticsOwner__getGestureModeClock_closure(t0) {
      this.$this = t0;
    },
    SemanticsHelper: function SemanticsHelper(t0) {
      this._semanticsEnabler = t0;
    },
    SemanticsEnabler: function SemanticsEnabler() {
    },
    DesktopSemanticsEnabler: function DesktopSemanticsEnabler() {
      this._semanticsPlaceholder = null;
    },
    DesktopSemanticsEnabler_prepareAccessibilityPlaceholder_closure: function DesktopSemanticsEnabler_prepareAccessibilityPlaceholder_closure(t0) {
      this.$this = t0;
    },
    MobileSemanticsEnabler: function MobileSemanticsEnabler() {
      var _ = this;
      _._semanticsPlaceholder = _.semanticsActivationTimer = null;
      _.semanticsActivationAttempts = 0;
      _._schedulePlaceholderRemoval = false;
    },
    MobileSemanticsEnabler_tryEnableSemantics_closure: function MobileSemanticsEnabler_tryEnableSemantics_closure(t0) {
      this.$this = t0;
    },
    MobileSemanticsEnabler_prepareAccessibilityPlaceholder_closure: function MobileSemanticsEnabler_prepareAccessibilityPlaceholder_closure(t0) {
      this.$this = t0;
    },
    SemanticsTextEditingStrategy: function SemanticsTextEditingStrategy(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._queuedStyle = null;
      _.owner = t0;
      _.isEnabled = false;
      _.domElement = null;
      _.__DefaultTextEditingStrategy_inputConfiguration_A = $;
      _.onAction = _.onChange = _.geometry = _.style = _._editingDeltaState = _.lastEditingState = null;
      _.subscriptions = t1;
      _._appendedToForm = false;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionStartListener_FI = t2;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionUpdateListener_FI = t3;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionEndListener_FI = t4;
      _.CompositionAwareMixin_composingText = t5;
    },
    _TypedDataBuffer: function _TypedDataBuffer() {
    },
    _IntBuffer: function _IntBuffer() {
    },
    Uint8Buffer: function Uint8Buffer(t0, t1) {
      this._buffer = t0;
      this.__engine$_length = t1;
    },
    MethodCall: function MethodCall(t0, t1) {
      this.method = t0;
      this.$arguments = t1;
    },
    JSONMessageCodec: function JSONMessageCodec() {
    },
    JSONMethodCodec: function JSONMethodCodec() {
    },
    StandardMessageCodec: function StandardMessageCodec() {
    },
    StandardMessageCodec_writeValue_closure: function StandardMessageCodec_writeValue_closure(t0, t1) {
      this.$this = t0;
      this.buffer = t1;
    },
    StandardMethodCodec: function StandardMethodCodec() {
    },
    WriteBuffer: function WriteBuffer(t0, t1, t2) {
      var _ = this;
      _._debugFinalized = false;
      _._buffer = t0;
      _._eightBytes = t1;
      _._eightBytesAsList = t2;
    },
    ReadBuffer: function ReadBuffer(t0) {
      this.data = t0;
      this.__engine$_position = 0;
    },
    HtmlFontCollection: function HtmlFontCollection() {
    },
    HtmlFontCollection_loadAssetFonts_closure: function HtmlFontCollection_loadAssetFonts_closure(t0, t1, t2) {
      this.$this = t0;
      this.fontAsset = t1;
      this.family = t2;
    },
    HtmlFontCollection_loadAssetFonts_closure0: function HtmlFontCollection_loadAssetFonts_closure0(t0) {
      this._0_0 = t0;
    },
    HtmlFontCollection_loadAssetFonts_closure1: function HtmlFontCollection_loadAssetFonts_closure1(t0) {
      this._0_0 = t0;
    },
    UnicodeRange: function UnicodeRange(t0) {
      this.$ti = t0;
    },
    UnicodePropertyLookup: function UnicodePropertyLookup(t0, t1) {
      this._cache = t0;
      this.$ti = t1;
    },
    BrowserAutofillHints: function BrowserAutofillHints(t0) {
      this._flutterToEngineMap = t0;
    },
    CompositionAwareMixin: function CompositionAwareMixin() {
    },
    EngineInputAction: function EngineInputAction() {
    },
    NoInputAction: function NoInputAction() {
    },
    EnterInputAction: function EnterInputAction() {
    },
    DoneInputAction: function DoneInputAction() {
    },
    GoInputAction: function GoInputAction() {
    },
    NextInputAction: function NextInputAction() {
    },
    PreviousInputAction: function PreviousInputAction() {
    },
    SearchInputAction: function SearchInputAction() {
    },
    SendInputAction: function SendInputAction() {
    },
    EngineInputType: function EngineInputType() {
    },
    NoTextInputType: function NoTextInputType() {
    },
    TextInputType: function TextInputType() {
    },
    NumberInputType: function NumberInputType() {
    },
    DecimalInputType: function DecimalInputType() {
    },
    PhoneInputType: function PhoneInputType() {
    },
    EmailInputType: function EmailInputType() {
    },
    UrlInputType: function UrlInputType() {
    },
    MultilineInputType: function MultilineInputType() {
    },
    TextCapitalization: function TextCapitalization(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    TextCapitalizationConfig: function TextCapitalizationConfig(t0) {
      this.textCapitalization = t0;
    },
    EngineAutofillForm: function EngineAutofillForm(t0, t1, t2, t3, t4) {
      var _ = this;
      _.formElement = t0;
      _.elements = t1;
      _.items = t2;
      _.insertionReferenceNode = t3;
      _.formIdentifier = t4;
    },
    EngineAutofillForm_addInputEventListeners_addSubscriptionForKey: function EngineAutofillForm_addInputEventListeners_addSubscriptionForKey(t0, t1) {
      this.$this = t0;
      this.subscriptions = t1;
    },
    EngineAutofillForm_addInputEventListeners_addSubscriptionForKey_closure: function EngineAutofillForm_addInputEventListeners_addSubscriptionForKey_closure(t0, t1, t2) {
      this.$this = t0;
      this.key = t1;
      this.element = t2;
    },
    AutofillInfo: function AutofillInfo(t0, t1, t2, t3) {
      var _ = this;
      _.editingState = t0;
      _.uniqueIdentifier = t1;
      _.autofillHint = t2;
      _.placeholder = t3;
    },
    TextEditingDeltaState: function TextEditingDeltaState(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.oldText = t0;
      _.deltaText = t1;
      _.deltaStart = t2;
      _.deltaEnd = t3;
      _.baseOffset = t4;
      _.extentOffset = t5;
      _.composingOffset = t6;
      _.composingExtent = t7;
    },
    EditingState: function EditingState(t0, t1, t2, t3, t4) {
      var _ = this;
      _.text = t0;
      _.baseOffset = t1;
      _.extentOffset = t2;
      _.composingBaseOffset = t3;
      _.composingExtentOffset = t4;
    },
    InputConfiguration: function InputConfiguration(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.inputType = t0;
      _.inputAction = t1;
      _.readOnly = t2;
      _.obscureText = t3;
      _.autocorrect = t4;
      _.enableDeltaModel = t5;
      _.autofill = t6;
      _.autofillGroup = t7;
      _.textCapitalization = t8;
    },
    GloballyPositionedTextEditingStrategy: function GloballyPositionedTextEditingStrategy(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.owner = t0;
      _.isEnabled = false;
      _.domElement = null;
      _.__DefaultTextEditingStrategy_inputConfiguration_A = $;
      _.onAction = _.onChange = _.geometry = _.style = _._editingDeltaState = _.lastEditingState = null;
      _.subscriptions = t1;
      _._appendedToForm = false;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionStartListener_FI = t2;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionUpdateListener_FI = t3;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionEndListener_FI = t4;
      _.CompositionAwareMixin_composingText = t5;
    },
    SafariDesktopTextEditingStrategy: function SafariDesktopTextEditingStrategy(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.owner = t0;
      _.isEnabled = false;
      _.domElement = null;
      _.__DefaultTextEditingStrategy_inputConfiguration_A = $;
      _.onAction = _.onChange = _.geometry = _.style = _._editingDeltaState = _.lastEditingState = null;
      _.subscriptions = t1;
      _._appendedToForm = false;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionStartListener_FI = t2;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionUpdateListener_FI = t3;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionEndListener_FI = t4;
      _.CompositionAwareMixin_composingText = t5;
    },
    SafariDesktopTextEditingStrategy_placeElement_closure: function SafariDesktopTextEditingStrategy_placeElement_closure(t0) {
      this.$this = t0;
    },
    DefaultTextEditingStrategy: function DefaultTextEditingStrategy() {
    },
    DefaultTextEditingStrategy_addEventHandlers_closure: function DefaultTextEditingStrategy_addEventHandlers_closure(t0) {
      this.$this = t0;
    },
    DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure: function DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure() {
    },
    DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure0: function DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure0() {
    },
    DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure1: function DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure1() {
    },
    IOSTextEditingStrategy: function IOSTextEditingStrategy(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._positionInputElementTimer = null;
      _._canPosition = true;
      _.owner = t0;
      _.isEnabled = false;
      _.domElement = null;
      _.__DefaultTextEditingStrategy_inputConfiguration_A = $;
      _.onAction = _.onChange = _.geometry = _.style = _._editingDeltaState = _.lastEditingState = null;
      _.subscriptions = t1;
      _._appendedToForm = false;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionStartListener_FI = t2;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionUpdateListener_FI = t3;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionEndListener_FI = t4;
      _.CompositionAwareMixin_composingText = t5;
    },
    IOSTextEditingStrategy_addEventHandlers_closure: function IOSTextEditingStrategy_addEventHandlers_closure(t0) {
      this.$this = t0;
    },
    IOSTextEditingStrategy_addEventHandlers_closure0: function IOSTextEditingStrategy_addEventHandlers_closure0(t0, t1) {
      this.$this = t0;
      this.blurWatch = t1;
    },
    IOSTextEditingStrategy__addTapListener_closure: function IOSTextEditingStrategy__addTapListener_closure(t0) {
      this.$this = t0;
    },
    IOSTextEditingStrategy__schedulePlacement_closure: function IOSTextEditingStrategy__schedulePlacement_closure(t0) {
      this.$this = t0;
    },
    AndroidTextEditingStrategy: function AndroidTextEditingStrategy(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.owner = t0;
      _.isEnabled = false;
      _.domElement = null;
      _.__DefaultTextEditingStrategy_inputConfiguration_A = $;
      _.onAction = _.onChange = _.geometry = _.style = _._editingDeltaState = _.lastEditingState = null;
      _.subscriptions = t1;
      _._appendedToForm = false;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionStartListener_FI = t2;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionUpdateListener_FI = t3;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionEndListener_FI = t4;
      _.CompositionAwareMixin_composingText = t5;
    },
    AndroidTextEditingStrategy_addEventHandlers_closure: function AndroidTextEditingStrategy_addEventHandlers_closure(t0) {
      this.$this = t0;
    },
    FirefoxTextEditingStrategy: function FirefoxTextEditingStrategy(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.owner = t0;
      _.isEnabled = false;
      _.domElement = null;
      _.__DefaultTextEditingStrategy_inputConfiguration_A = $;
      _.onAction = _.onChange = _.geometry = _.style = _._editingDeltaState = _.lastEditingState = null;
      _.subscriptions = t1;
      _._appendedToForm = false;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionStartListener_FI = t2;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionUpdateListener_FI = t3;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionEndListener_FI = t4;
      _.CompositionAwareMixin_composingText = t5;
    },
    FirefoxTextEditingStrategy_addEventHandlers_closure: function FirefoxTextEditingStrategy_addEventHandlers_closure(t0) {
      this.$this = t0;
    },
    FirefoxTextEditingStrategy_addEventHandlers_closure0: function FirefoxTextEditingStrategy_addEventHandlers_closure0(t0) {
      this.$this = t0;
    },
    FirefoxTextEditingStrategy__postponeFocus_closure: function FirefoxTextEditingStrategy__postponeFocus_closure(t0) {
      this.$this = t0;
    },
    TextInputCommand: function TextInputCommand() {
    },
    TextInputSetClient: function TextInputSetClient(t0, t1) {
      this.clientId = t0;
      this.configuration = t1;
    },
    TextInputUpdateConfig: function TextInputUpdateConfig() {
    },
    TextInputSetEditingState: function TextInputSetEditingState(t0) {
      this.state = t0;
    },
    TextInputShow: function TextInputShow() {
    },
    TextInputSetEditableSizeAndTransform: function TextInputSetEditableSizeAndTransform(t0) {
      this.geometry = t0;
    },
    TextInputSetStyle: function TextInputSetStyle(t0) {
      this.style = t0;
    },
    TextInputClearClient: function TextInputClearClient() {
    },
    TextInputHide: function TextInputHide() {
    },
    TextInputSetMarkedTextRect: function TextInputSetMarkedTextRect() {
    },
    TextInputSetCaretRect: function TextInputSetCaretRect() {
    },
    TextInputRequestAutofill: function TextInputRequestAutofill() {
    },
    TextInputFinishAutofillContext: function TextInputFinishAutofillContext(t0) {
      this.saveForm = t0;
    },
    saveForms_closure: function saveForms_closure() {
    },
    TextEditingChannel: function TextEditingChannel(t0) {
      this.implementation = t0;
    },
    TextEditingChannel_handleTextInput_closure: function TextEditingChannel_handleTextInput_closure(t0) {
      this.callback = t0;
    },
    HybridTextEditing: function HybridTextEditing() {
      var _ = this;
      _.__HybridTextEditing_channel_FI = $;
      _._clientId = null;
      _.isEditing = false;
      _.configuration = null;
      _.__HybridTextEditing_strategy_FI = $;
    },
    HybridTextEditing__startEditing_closure0: function HybridTextEditing__startEditing_closure0(t0) {
      this.$this = t0;
    },
    HybridTextEditing__startEditing_closure: function HybridTextEditing__startEditing_closure(t0) {
      this.$this = t0;
    },
    EditableTextStyle: function EditableTextStyle(t0, t1, t2, t3, t4) {
      var _ = this;
      _.fontSize = t0;
      _.fontWeight = t1;
      _.fontFamily = t2;
      _.textAlign = t3;
      _.textDirection = t4;
    },
    EditableTextGeometry: function EditableTextGeometry(t0, t1, t2) {
      this.width = t0;
      this.height = t1;
      this.globalTransform = t2;
    },
    EditableTextGeometry_EditableTextGeometry$fromFrameworkMessage_closure: function EditableTextGeometry_EditableTextGeometry$fromFrameworkMessage_closure() {
    },
    TransformKind: function TransformKind(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    CustomElementDimensionsProvider: function CustomElementDimensionsProvider(t0, t1) {
      this._hostElement = t0;
      this.__CustomElementDimensionsProvider__hostElementResizeObserver_A = $;
      this._onResizeStreamController = t1;
    },
    CustomElementDimensionsProvider_closure: function CustomElementDimensionsProvider_closure(t0) {
      this.$this = t0;
    },
    CustomElementDimensionsProvider__closure: function CustomElementDimensionsProvider__closure() {
    },
    DimensionsProvider: function DimensionsProvider() {
    },
    FullPageDimensionsProvider: function FullPageDimensionsProvider(t0) {
      this.__FullPageDimensionsProvider__domResizeSubscription_A = $;
      this._onResizeStreamController = t0;
    },
    CustomElementEmbeddingStrategy: function CustomElementEmbeddingStrategy(t0) {
      this._hostElement = t0;
      this._hotRestartCache = null;
    },
    CustomElementEmbeddingStrategy_initialize_closure: function CustomElementEmbeddingStrategy_initialize_closure(t0) {
      this.$this = t0;
    },
    EmbeddingStrategy: function EmbeddingStrategy() {
    },
    FullPageEmbeddingStrategy: function FullPageEmbeddingStrategy() {
      this._hotRestartCache = null;
    },
    FullPageEmbeddingStrategy_initialize_closure: function FullPageEmbeddingStrategy_initialize_closure(t0) {
      this.$this = t0;
    },
    EngineFlutterWindow: function EngineFlutterWindow(t0, t1, t2) {
      var _ = this;
      _.viewId = t0;
      _.platformDispatcher = t1;
      _.__EngineFlutterWindow_contextMenu_FI = _.__EngineFlutterWindow_mouseCursor_FI = $;
      _._browserHistory = null;
      _._endOfTheLine = t2;
      _.__EngineFlutterWindow__dimensionsProvider_A = $;
      _._physicalSize = null;
    },
    EngineFlutterWindow_closure: function EngineFlutterWindow_closure(t0) {
      this.$this = t0;
    },
    EngineFlutterWindow_handleNavigationMessage_closure: function EngineFlutterWindow_handleNavigationMessage_closure(t0, t1) {
      this.$this = t0;
      this.data = t1;
    },
    ViewPadding: function ViewPadding() {
    },
    _DefaultTextEditingStrategy_Object_CompositionAwareMixin: function _DefaultTextEditingStrategy_Object_CompositionAwareMixin() {
    },
    __MouseAdapter__BaseAdapter__WheelEventListenerMixin: function __MouseAdapter__BaseAdapter__WheelEventListenerMixin() {
    },
    __PointerAdapter__BaseAdapter__WheelEventListenerMixin: function __PointerAdapter__BaseAdapter__WheelEventListenerMixin() {
    },
    JS_CONST: function JS_CONST() {
    },
    createSentinel() {
      return $;
    },
    CastIterable_CastIterable(source, $S, $T) {
      if ($S._eval$1("EfficientLengthIterable<0>")._is(source))
        return new A._EfficientLengthCastIterable(source, $S._eval$1("@<0>")._bind$1($T)._eval$1("_EfficientLengthCastIterable<1,2>"));
      return new A.CastIterable(source, $S._eval$1("@<0>")._bind$1($T)._eval$1("CastIterable<1,2>"));
    },
    LateError$fieldNI(fieldName) {
      return new A.LateError("Field '" + fieldName + "' has not been initialized.");
    },
    hexDigitValue(char) {
      var letter,
        digit = char ^ 48;
      if (digit <= 9)
        return digit;
      letter = char | 32;
      if (97 <= letter && letter <= 102)
        return letter - 87;
      return -1;
    },
    SystemHash_combine(hash, value) {
      hash = hash + value & 536870911;
      hash = hash + ((hash & 524287) << 10) & 536870911;
      return hash ^ hash >>> 6;
    },
    SystemHash_finish(hash) {
      hash = hash + ((hash & 67108863) << 3) & 536870911;
      hash ^= hash >>> 11;
      return hash + ((hash & 16383) << 15) & 536870911;
    },
    checkNotNullable(value, $name, $T) {
      return value;
    },
    isToStringVisiting(object) {
      var t1, i;
      for (t1 = $.toStringVisiting.length, i = 0; i < t1; ++i)
        if (object === $.toStringVisiting[i])
          return true;
      return false;
    },
    SubListIterable$(_iterable, _start, _endOrLength, $E) {
      A.RangeError_checkNotNegative(_start, "start");
      if (_endOrLength != null) {
        A.RangeError_checkNotNegative(_endOrLength, "end");
        if (_start > _endOrLength)
          A.throwExpression(A.RangeError$range(_start, 0, _endOrLength, "start", null));
      }
      return new A.SubListIterable(_iterable, _start, _endOrLength, $E._eval$1("SubListIterable<0>"));
    },
    MappedIterable_MappedIterable(iterable, $function, $S, $T) {
      if (type$.EfficientLengthIterable_dynamic._is(iterable))
        return new A.EfficientLengthMappedIterable(iterable, $function, $S._eval$1("@<0>")._bind$1($T)._eval$1("EfficientLengthMappedIterable<1,2>"));
      return new A.MappedIterable(iterable, $function, $S._eval$1("@<0>")._bind$1($T)._eval$1("MappedIterable<1,2>"));
    },
    TakeIterable_TakeIterable(iterable, takeCount, $E) {
      var _s9_ = "takeCount";
      A.ArgumentError_checkNotNull(takeCount, _s9_);
      A.RangeError_checkNotNegative(takeCount, _s9_);
      if (type$.EfficientLengthIterable_dynamic._is(iterable))
        return new A.EfficientLengthTakeIterable(iterable, takeCount, $E._eval$1("EfficientLengthTakeIterable<0>"));
      return new A.TakeIterable(iterable, takeCount, $E._eval$1("TakeIterable<0>"));
    },
    SkipIterable_SkipIterable(iterable, count, $E) {
      var _s5_ = "count";
      if (type$.EfficientLengthIterable_dynamic._is(iterable)) {
        A.ArgumentError_checkNotNull(count, _s5_);
        A.RangeError_checkNotNegative(count, _s5_);
        return new A.EfficientLengthSkipIterable(iterable, count, $E._eval$1("EfficientLengthSkipIterable<0>"));
      }
      A.ArgumentError_checkNotNull(count, _s5_);
      A.RangeError_checkNotNegative(count, _s5_);
      return new A.SkipIterable(iterable, count, $E._eval$1("SkipIterable<0>"));
    },
    IterableElementError_noElement() {
      return new A.StateError("No element");
    },
    IterableElementError_tooMany() {
      return new A.StateError("Too many elements");
    },
    IterableElementError_tooFew() {
      return new A.StateError("Too few elements");
    },
    _CastIterableBase: function _CastIterableBase() {
    },
    CastIterator: function CastIterator(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    CastIterable: function CastIterable(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    _EfficientLengthCastIterable: function _EfficientLengthCastIterable(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    _CastListBase: function _CastListBase() {
    },
    CastList: function CastList(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    LateError: function LateError(t0) {
      this._message = t0;
    },
    CodeUnits: function CodeUnits(t0) {
      this._string = t0;
    },
    nullFuture_closure: function nullFuture_closure() {
    },
    SentinelValue: function SentinelValue() {
    },
    EfficientLengthIterable: function EfficientLengthIterable() {
    },
    ListIterable: function ListIterable() {
    },
    SubListIterable: function SubListIterable(t0, t1, t2, t3) {
      var _ = this;
      _.__internal$_iterable = t0;
      _._start = t1;
      _._endOrLength = t2;
      _.$ti = t3;
    },
    ListIterator: function ListIterator(t0, t1) {
      var _ = this;
      _.__internal$_iterable = t0;
      _.__internal$_length = t1;
      _.__internal$_index = 0;
      _.__internal$_current = null;
    },
    MappedIterable: function MappedIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    EfficientLengthMappedIterable: function EfficientLengthMappedIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    MappedIterator: function MappedIterator(t0, t1) {
      this.__internal$_current = null;
      this._iterator = t0;
      this._f = t1;
    },
    MappedListIterable: function MappedListIterable(t0, t1, t2) {
      this._source = t0;
      this._f = t1;
      this.$ti = t2;
    },
    WhereIterable: function WhereIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    WhereIterator: function WhereIterator(t0, t1) {
      this._iterator = t0;
      this._f = t1;
    },
    TakeIterable: function TakeIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._takeCount = t1;
      this.$ti = t2;
    },
    EfficientLengthTakeIterable: function EfficientLengthTakeIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._takeCount = t1;
      this.$ti = t2;
    },
    TakeIterator: function TakeIterator(t0, t1) {
      this._iterator = t0;
      this._remaining = t1;
    },
    SkipIterable: function SkipIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._skipCount = t1;
      this.$ti = t2;
    },
    EfficientLengthSkipIterable: function EfficientLengthSkipIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._skipCount = t1;
      this.$ti = t2;
    },
    SkipIterator: function SkipIterator(t0, t1) {
      this._iterator = t0;
      this._skipCount = t1;
    },
    SkipWhileIterable: function SkipWhileIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    SkipWhileIterator: function SkipWhileIterator(t0, t1) {
      this._iterator = t0;
      this._f = t1;
      this._hasSkipped = false;
    },
    EmptyIterable: function EmptyIterable(t0) {
      this.$ti = t0;
    },
    EmptyIterator: function EmptyIterator() {
    },
    WhereTypeIterable: function WhereTypeIterable(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    WhereTypeIterator: function WhereTypeIterator(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    FixedLengthListMixin: function FixedLengthListMixin() {
    },
    UnmodifiableListMixin: function UnmodifiableListMixin() {
    },
    UnmodifiableListBase: function UnmodifiableListBase() {
    },
    Symbol: function Symbol(t0) {
      this._name = t0;
    },
    __CastListBase__CastIterableBase_ListMixin: function __CastListBase__CastIterableBase_ListMixin() {
    },
    ConstantMap_ConstantMap$from(other, $K, $V) {
      var allStrings, k, object, index, index0, map,
        keys = A.List_List$from(new A.LinkedHashMapKeyIterable(other, A._instanceType(other)._eval$1("LinkedHashMapKeyIterable<1>")), true, $K),
        t1 = keys.length,
        _i = 0;
      while (true) {
        if (!(_i < t1)) {
          allStrings = true;
          break;
        }
        k = keys[_i];
        if (typeof k != "string" || "__proto__" === k) {
          allStrings = false;
          break;
        }
        ++_i;
      }
      if (allStrings) {
        object = {};
        for (index = 0, _i = 0; _i < keys.length; keys.length === t1 || (0, A.throwConcurrentModificationError)(keys), ++_i, index = index0) {
          k = keys[_i];
          other.$index(0, k);
          index0 = index + 1;
          object[k] = index;
        }
        map = new A.ConstantStringMap(object, A.List_List$from(other.get$values(other), true, $V), $K._eval$1("@<0>")._bind$1($V)._eval$1("ConstantStringMap<1,2>"));
        map.$keys = keys;
        return map;
      }
      return new A.ConstantMapView(A.LinkedHashMap_LinkedHashMap$from(other, $K, $V), $K._eval$1("@<0>")._bind$1($V)._eval$1("ConstantMapView<1,2>"));
    },
    ConstantSet__throwUnmodifiable() {
      throw A.wrapException(A.UnsupportedError$("Cannot modify constant Set"));
    },
    unminifyOrTag(rawClassName) {
      var preserved = init.mangledGlobalNames[rawClassName];
      if (preserved != null)
        return preserved;
      return rawClassName;
    },
    isJsIndexable(object, record) {
      var result;
      if (record != null) {
        result = record.x;
        if (result != null)
          return result;
      }
      return type$.JavaScriptIndexingBehavior_dynamic._is(object);
    },
    S(value) {
      var result;
      if (typeof value == "string")
        return value;
      if (typeof value == "number") {
        if (value !== 0)
          return "" + value;
      } else if (true === value)
        return "true";
      else if (false === value)
        return "false";
      else if (value == null)
        return "null";
      result = J.toString$0$(value);
      return result;
    },
    Primitives_objectHashCode(object) {
      var hash,
        property = $.Primitives__identityHashCodeProperty;
      if (property == null)
        property = $.Primitives__identityHashCodeProperty = Symbol("identityHashCode");
      hash = object[property];
      if (hash == null) {
        hash = Math.random() * 0x3fffffff | 0;
        object[property] = hash;
      }
      return hash;
    },
    Primitives_parseInt(source, radix) {
      var decimalMatch, maxCharCode, digitsPart, t1, i, _null = null,
        match = /^\s*[+-]?((0x[a-f0-9]+)|(\d+)|([a-z0-9]+))\s*$/i.exec(source);
      if (match == null)
        return _null;
      decimalMatch = match[3];
      if (radix == null) {
        if (decimalMatch != null)
          return parseInt(source, 10);
        if (match[2] != null)
          return parseInt(source, 16);
        return _null;
      }
      if (radix < 2 || radix > 36)
        throw A.wrapException(A.RangeError$range(radix, 2, 36, "radix", _null));
      if (radix === 10 && decimalMatch != null)
        return parseInt(source, 10);
      if (radix < 10 || decimalMatch == null) {
        maxCharCode = radix <= 10 ? 47 + radix : 86 + radix;
        digitsPart = match[1];
        for (t1 = digitsPart.length, i = 0; i < t1; ++i)
          if ((digitsPart.charCodeAt(i) | 32) > maxCharCode)
            return _null;
      }
      return parseInt(source, radix);
    },
    Primitives_parseDouble(source) {
      var result, trimmed;
      if (!/^\s*[+-]?(?:Infinity|NaN|(?:\.\d+|\d+(?:\.\d*)?)(?:[eE][+-]?\d+)?)\s*$/.test(source))
        return null;
      result = parseFloat(source);
      if (isNaN(result)) {
        trimmed = B.JSString_methods.trim$0(source);
        if (trimmed === "NaN" || trimmed === "+NaN" || trimmed === "-NaN")
          return result;
        return null;
      }
      return result;
    },
    Primitives_objectTypeName(object) {
      return A.Primitives__objectTypeNameNewRti(object);
    },
    Primitives__objectTypeNameNewRti(object) {
      var interceptor, dispatchName, $constructor, constructorName;
      if (object instanceof A.Object)
        return A._rtiToString(A.instanceType(object), null);
      interceptor = J.getInterceptor$(object);
      if (interceptor === B.Interceptor_methods || interceptor === B.JavaScriptObject_methods || type$.UnknownJavaScriptObject._is(object)) {
        dispatchName = B.C_JS_CONST(object);
        if (dispatchName !== "Object" && dispatchName !== "")
          return dispatchName;
        $constructor = object.constructor;
        if (typeof $constructor == "function") {
          constructorName = $constructor.name;
          if (typeof constructorName == "string" && constructorName !== "Object" && constructorName !== "")
            return constructorName;
        }
      }
      return A._rtiToString(A.instanceType(object), null);
    },
    Primitives_safeToString(object) {
      if (object == null || typeof object == "number" || A._isBool(object))
        return J.toString$0$(object);
      if (typeof object == "string")
        return JSON.stringify(object);
      if (object instanceof A.Closure)
        return object.toString$0(0);
      if (object instanceof A._Record)
        return object._toString$1(true);
      return "Instance of '" + A.Primitives_objectTypeName(object) + "'";
    },
    Primitives_dateNow() {
      return Date.now();
    },
    Primitives_initTicker() {
      var $window, performance;
      if ($.Primitives_timerFrequency !== 0)
        return;
      $.Primitives_timerFrequency = 1000;
      if (typeof window == "undefined")
        return;
      $window = window;
      if ($window == null)
        return;
      if (!!$window.dartUseDateNowForTicks)
        return;
      performance = $window.performance;
      if (performance == null)
        return;
      if (typeof performance.now != "function")
        return;
      $.Primitives_timerFrequency = 1000000;
      $.Primitives_timerTicks = new A.Primitives_initTicker_closure(performance);
    },
    Primitives__fromCharCodeApply(array) {
      var result, i, i0, chunkEnd,
        end = array.length;
      if (end <= 500)
        return String.fromCharCode.apply(null, array);
      for (result = "", i = 0; i < end; i = i0) {
        i0 = i + 500;
        chunkEnd = i0 < end ? i0 : end;
        result += String.fromCharCode.apply(null, array.slice(i, chunkEnd));
      }
      return result;
    },
    Primitives_stringFromCodePoints(codePoints) {
      var t1, _i, i,
        a = A._setArrayType([], type$.JSArray_int);
      for (t1 = codePoints.length, _i = 0; _i < codePoints.length; codePoints.length === t1 || (0, A.throwConcurrentModificationError)(codePoints), ++_i) {
        i = codePoints[_i];
        if (!A._isInt(i))
          throw A.wrapException(A.argumentErrorValue(i));
        if (i <= 65535)
          a.push(i);
        else if (i <= 1114111) {
          a.push(55296 + (B.JSInt_methods._shrOtherPositive$1(i - 65536, 10) & 1023));
          a.push(56320 + (i & 1023));
        } else
          throw A.wrapException(A.argumentErrorValue(i));
      }
      return A.Primitives__fromCharCodeApply(a);
    },
    Primitives_stringFromCharCodes(charCodes) {
      var t1, _i, i;
      for (t1 = charCodes.length, _i = 0; _i < t1; ++_i) {
        i = charCodes[_i];
        if (!A._isInt(i))
          throw A.wrapException(A.argumentErrorValue(i));
        if (i < 0)
          throw A.wrapException(A.argumentErrorValue(i));
        if (i > 65535)
          return A.Primitives_stringFromCodePoints(charCodes);
      }
      return A.Primitives__fromCharCodeApply(charCodes);
    },
    Primitives_stringFromNativeUint8List(charCodes, start, end) {
      var i, result, i0, chunkEnd;
      if (end <= 500 && start === 0 && end === charCodes.length)
        return String.fromCharCode.apply(null, charCodes);
      for (i = start, result = ""; i < end; i = i0) {
        i0 = i + 500;
        chunkEnd = i0 < end ? i0 : end;
        result += String.fromCharCode.apply(null, charCodes.subarray(i, chunkEnd));
      }
      return result;
    },
    Primitives_stringFromCharCode(charCode) {
      var bits;
      if (0 <= charCode) {
        if (charCode <= 65535)
          return String.fromCharCode(charCode);
        if (charCode <= 1114111) {
          bits = charCode - 65536;
          return String.fromCharCode((B.JSInt_methods._shrOtherPositive$1(bits, 10) | 55296) >>> 0, bits & 1023 | 56320);
        }
      }
      throw A.wrapException(A.RangeError$range(charCode, 0, 1114111, null, null));
    },
    Primitives_lazyAsJsDate(receiver) {
      if (receiver.date === void 0)
        receiver.date = new Date(receiver._value);
      return receiver.date;
    },
    Primitives_getYear(receiver) {
      return receiver.isUtc ? A.Primitives_lazyAsJsDate(receiver).getUTCFullYear() + 0 : A.Primitives_lazyAsJsDate(receiver).getFullYear() + 0;
    },
    Primitives_getMonth(receiver) {
      return receiver.isUtc ? A.Primitives_lazyAsJsDate(receiver).getUTCMonth() + 1 : A.Primitives_lazyAsJsDate(receiver).getMonth() + 1;
    },
    Primitives_getDay(receiver) {
      return receiver.isUtc ? A.Primitives_lazyAsJsDate(receiver).getUTCDate() + 0 : A.Primitives_lazyAsJsDate(receiver).getDate() + 0;
    },
    Primitives_getHours(receiver) {
      return receiver.isUtc ? A.Primitives_lazyAsJsDate(receiver).getUTCHours() + 0 : A.Primitives_lazyAsJsDate(receiver).getHours() + 0;
    },
    Primitives_getMinutes(receiver) {
      return receiver.isUtc ? A.Primitives_lazyAsJsDate(receiver).getUTCMinutes() + 0 : A.Primitives_lazyAsJsDate(receiver).getMinutes() + 0;
    },
    Primitives_getSeconds(receiver) {
      return receiver.isUtc ? A.Primitives_lazyAsJsDate(receiver).getUTCSeconds() + 0 : A.Primitives_lazyAsJsDate(receiver).getSeconds() + 0;
    },
    Primitives_getMilliseconds(receiver) {
      return receiver.isUtc ? A.Primitives_lazyAsJsDate(receiver).getUTCMilliseconds() + 0 : A.Primitives_lazyAsJsDate(receiver).getMilliseconds() + 0;
    },
    Primitives_functionNoSuchMethod($function, positionalArguments, namedArguments) {
      var $arguments, namedArgumentList, t1 = {};
      t1.argumentCount = 0;
      $arguments = [];
      namedArgumentList = [];
      t1.argumentCount = positionalArguments.length;
      B.JSArray_methods.addAll$1($arguments, positionalArguments);
      t1.names = "";
      if (namedArguments != null && namedArguments.__js_helper$_length !== 0)
        namedArguments.forEach$1(0, new A.Primitives_functionNoSuchMethod_closure(t1, namedArgumentList, $arguments));
      return J.noSuchMethod$1$($function, new A.JSInvocationMirror(B.Symbol_call, 0, $arguments, namedArgumentList, 0));
    },
    Primitives_applyFunction($function, positionalArguments, namedArguments) {
      var t1, argumentCount, jsStub;
      if (Array.isArray(positionalArguments))
        t1 = namedArguments == null || namedArguments.__js_helper$_length === 0;
      else
        t1 = false;
      if (t1) {
        argumentCount = positionalArguments.length;
        if (argumentCount === 0) {
          if (!!$function.call$0)
            return $function.call$0();
        } else if (argumentCount === 1) {
          if (!!$function.call$1)
            return $function.call$1(positionalArguments[0]);
        } else if (argumentCount === 2) {
          if (!!$function.call$2)
            return $function.call$2(positionalArguments[0], positionalArguments[1]);
        } else if (argumentCount === 3) {
          if (!!$function.call$3)
            return $function.call$3(positionalArguments[0], positionalArguments[1], positionalArguments[2]);
        } else if (argumentCount === 4) {
          if (!!$function.call$4)
            return $function.call$4(positionalArguments[0], positionalArguments[1], positionalArguments[2], positionalArguments[3]);
        } else if (argumentCount === 5)
          if (!!$function.call$5)
            return $function.call$5(positionalArguments[0], positionalArguments[1], positionalArguments[2], positionalArguments[3], positionalArguments[4]);
        jsStub = $function["call" + "$" + argumentCount];
        if (jsStub != null)
          return jsStub.apply($function, positionalArguments);
      }
      return A.Primitives__generalApplyFunction($function, positionalArguments, namedArguments);
    },
    Primitives__generalApplyFunction($function, positionalArguments, namedArguments) {
      var defaultValuesClosure, t1, defaultValues, interceptor, jsFunction, maxArguments, missingDefaults, keys, _i, defaultValue, used, t2,
        $arguments = Array.isArray(positionalArguments) ? positionalArguments : A.List_List$of(positionalArguments, true, type$.dynamic),
        argumentCount = $arguments.length,
        requiredParameterCount = $function.$requiredArgCount;
      if (argumentCount < requiredParameterCount)
        return A.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
      defaultValuesClosure = $function.$defaultValues;
      t1 = defaultValuesClosure == null;
      defaultValues = !t1 ? defaultValuesClosure() : null;
      interceptor = J.getInterceptor$($function);
      jsFunction = interceptor["call*"];
      if (typeof jsFunction == "string")
        jsFunction = interceptor[jsFunction];
      if (t1) {
        if (namedArguments != null && namedArguments.__js_helper$_length !== 0)
          return A.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
        if (argumentCount === requiredParameterCount)
          return jsFunction.apply($function, $arguments);
        return A.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
      }
      if (Array.isArray(defaultValues)) {
        if (namedArguments != null && namedArguments.__js_helper$_length !== 0)
          return A.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
        maxArguments = requiredParameterCount + defaultValues.length;
        if (argumentCount > maxArguments)
          return A.Primitives_functionNoSuchMethod($function, $arguments, null);
        if (argumentCount < maxArguments) {
          missingDefaults = defaultValues.slice(argumentCount - requiredParameterCount);
          if ($arguments === positionalArguments)
            $arguments = A.List_List$of($arguments, true, type$.dynamic);
          B.JSArray_methods.addAll$1($arguments, missingDefaults);
        }
        return jsFunction.apply($function, $arguments);
      } else {
        if (argumentCount > requiredParameterCount)
          return A.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
        if ($arguments === positionalArguments)
          $arguments = A.List_List$of($arguments, true, type$.dynamic);
        keys = Object.keys(defaultValues);
        if (namedArguments == null)
          for (t1 = keys.length, _i = 0; _i < keys.length; keys.length === t1 || (0, A.throwConcurrentModificationError)(keys), ++_i) {
            defaultValue = defaultValues[keys[_i]];
            if (B.C__Required === defaultValue)
              return A.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
            B.JSArray_methods.add$1($arguments, defaultValue);
          }
        else {
          for (t1 = keys.length, used = 0, _i = 0; _i < keys.length; keys.length === t1 || (0, A.throwConcurrentModificationError)(keys), ++_i) {
            t2 = keys[_i];
            if (namedArguments.containsKey$1(0, t2)) {
              ++used;
              B.JSArray_methods.add$1($arguments, namedArguments.$index(0, t2));
            } else {
              defaultValue = defaultValues[t2];
              if (B.C__Required === defaultValue)
                return A.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
              B.JSArray_methods.add$1($arguments, defaultValue);
            }
          }
          if (used !== namedArguments.__js_helper$_length)
            return A.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
        }
        return jsFunction.apply($function, $arguments);
      }
    },
    diagnoseIndexError(indexable, index) {
      var $length, _s5_ = "index";
      if (!A._isInt(index))
        return new A.ArgumentError(true, index, _s5_, null);
      $length = J.get$length$asx(indexable);
      if (index < 0 || index >= $length)
        return A.IndexError$withLength(index, $length, indexable, null, _s5_);
      return A.RangeError$value(index, _s5_);
    },
    diagnoseRangeError(start, end, $length) {
      if (start > $length)
        return A.RangeError$range(start, 0, $length, "start", null);
      if (end != null)
        if (end < start || end > $length)
          return A.RangeError$range(end, start, $length, "end", null);
      return new A.ArgumentError(true, end, "end", null);
    },
    argumentErrorValue(object) {
      return new A.ArgumentError(true, object, null, null);
    },
    wrapException(ex) {
      return A.initializeExceptionWrapper(new Error(), ex);
    },
    initializeExceptionWrapper(wrapper, ex) {
      var t1;
      if (ex == null)
        ex = new A.TypeError();
      wrapper.dartException = ex;
      t1 = A.toStringWrapper;
      if ("defineProperty" in Object) {
        Object.defineProperty(wrapper, "message", {get: t1});
        wrapper.name = "";
      } else
        wrapper.toString = t1;
      return wrapper;
    },
    toStringWrapper() {
      return J.toString$0$(this.dartException);
    },
    throwExpression(ex) {
      throw A.wrapException(ex);
    },
    throwExpressionWithWrapper(ex, wrapper) {
      throw A.initializeExceptionWrapper(wrapper, ex);
    },
    throwConcurrentModificationError(collection) {
      throw A.wrapException(A.ConcurrentModificationError$(collection));
    },
    TypeErrorDecoder_extractPattern(message) {
      var match, $arguments, argumentsExpr, expr, method, receiver;
      message = A.quoteStringForRegExp(message.replace(String({}), "$receiver$"));
      match = message.match(/\\\$[a-zA-Z]+\\\$/g);
      if (match == null)
        match = A._setArrayType([], type$.JSArray_String);
      $arguments = match.indexOf("\\$arguments\\$");
      argumentsExpr = match.indexOf("\\$argumentsExpr\\$");
      expr = match.indexOf("\\$expr\\$");
      method = match.indexOf("\\$method\\$");
      receiver = match.indexOf("\\$receiver\\$");
      return new A.TypeErrorDecoder(message.replace(new RegExp("\\\\\\$arguments\\\\\\$", "g"), "((?:x|[^x])*)").replace(new RegExp("\\\\\\$argumentsExpr\\\\\\$", "g"), "((?:x|[^x])*)").replace(new RegExp("\\\\\\$expr\\\\\\$", "g"), "((?:x|[^x])*)").replace(new RegExp("\\\\\\$method\\\\\\$", "g"), "((?:x|[^x])*)").replace(new RegExp("\\\\\\$receiver\\\\\\$", "g"), "((?:x|[^x])*)"), $arguments, argumentsExpr, expr, method, receiver);
    },
    TypeErrorDecoder_provokeCallErrorOn(expression) {
      return function($expr$) {
        var $argumentsExpr$ = "$arguments$";
        try {
          $expr$.$method$($argumentsExpr$);
        } catch (e) {
          return e.message;
        }
      }(expression);
    },
    TypeErrorDecoder_provokePropertyErrorOn(expression) {
      return function($expr$) {
        try {
          $expr$.$method$;
        } catch (e) {
          return e.message;
        }
      }(expression);
    },
    JsNoSuchMethodError$(_message, match) {
      var t1 = match == null,
        t2 = t1 ? null : match.method;
      return new A.JsNoSuchMethodError(_message, t2, t1 ? null : match.receiver);
    },
    unwrapException(ex) {
      if (ex == null)
        return new A.NullThrownFromJavaScriptException(ex);
      if (ex instanceof A.ExceptionAndStackTrace)
        return A.saveStackTrace(ex, ex.dartException);
      if (typeof ex !== "object")
        return ex;
      if ("dartException" in ex)
        return A.saveStackTrace(ex, ex.dartException);
      return A._unwrapNonDartException(ex);
    },
    saveStackTrace(ex, error) {
      if (type$.Error._is(error))
        if (error.$thrownJsError == null)
          error.$thrownJsError = ex;
      return error;
    },
    _unwrapNonDartException(ex) {
      var message, number, ieErrorCode, nsme, notClosure, nullCall, nullLiteralCall, undefCall, undefLiteralCall, nullProperty, undefProperty, undefLiteralProperty, match;
      if (!("message" in ex))
        return ex;
      message = ex.message;
      if ("number" in ex && typeof ex.number == "number") {
        number = ex.number;
        ieErrorCode = number & 65535;
        if ((B.JSInt_methods._shrOtherPositive$1(number, 16) & 8191) === 10)
          switch (ieErrorCode) {
            case 438:
              return A.saveStackTrace(ex, A.JsNoSuchMethodError$(A.S(message) + " (Error " + ieErrorCode + ")", null));
            case 445:
            case 5007:
              A.S(message);
              return A.saveStackTrace(ex, new A.NullError());
          }
      }
      if (ex instanceof TypeError) {
        nsme = $.$get$TypeErrorDecoder_noSuchMethodPattern();
        notClosure = $.$get$TypeErrorDecoder_notClosurePattern();
        nullCall = $.$get$TypeErrorDecoder_nullCallPattern();
        nullLiteralCall = $.$get$TypeErrorDecoder_nullLiteralCallPattern();
        undefCall = $.$get$TypeErrorDecoder_undefinedCallPattern();
        undefLiteralCall = $.$get$TypeErrorDecoder_undefinedLiteralCallPattern();
        nullProperty = $.$get$TypeErrorDecoder_nullPropertyPattern();
        $.$get$TypeErrorDecoder_nullLiteralPropertyPattern();
        undefProperty = $.$get$TypeErrorDecoder_undefinedPropertyPattern();
        undefLiteralProperty = $.$get$TypeErrorDecoder_undefinedLiteralPropertyPattern();
        match = nsme.matchTypeError$1(message);
        if (match != null)
          return A.saveStackTrace(ex, A.JsNoSuchMethodError$(message, match));
        else {
          match = notClosure.matchTypeError$1(message);
          if (match != null) {
            match.method = "call";
            return A.saveStackTrace(ex, A.JsNoSuchMethodError$(message, match));
          } else if (nullCall.matchTypeError$1(message) != null || nullLiteralCall.matchTypeError$1(message) != null || undefCall.matchTypeError$1(message) != null || undefLiteralCall.matchTypeError$1(message) != null || nullProperty.matchTypeError$1(message) != null || nullLiteralCall.matchTypeError$1(message) != null || undefProperty.matchTypeError$1(message) != null || undefLiteralProperty.matchTypeError$1(message) != null)
            return A.saveStackTrace(ex, new A.NullError());
        }
        return A.saveStackTrace(ex, new A.UnknownJsTypeError(typeof message == "string" ? message : ""));
      }
      if (ex instanceof RangeError) {
        if (typeof message == "string" && message.indexOf("call stack") !== -1)
          return new A.StackOverflowError();
        message = function(ex) {
          try {
            return String(ex);
          } catch (e) {
          }
          return null;
        }(ex);
        return A.saveStackTrace(ex, new A.ArgumentError(false, null, null, typeof message == "string" ? message.replace(/^RangeError:\s*/, "") : message));
      }
      if (typeof InternalError == "function" && ex instanceof InternalError)
        if (typeof message == "string" && message === "too much recursion")
          return new A.StackOverflowError();
      return ex;
    },
    getTraceFromException(exception) {
      var trace;
      if (exception instanceof A.ExceptionAndStackTrace)
        return exception.stackTrace;
      if (exception == null)
        return new A._StackTrace(exception);
      trace = exception.$cachedTrace;
      if (trace != null)
        return trace;
      trace = new A._StackTrace(exception);
      if (typeof exception === "object")
        exception.$cachedTrace = trace;
      return trace;
    },
    objectHashCode(object) {
      if (object == null)
        return J.get$hashCode$(object);
      if (typeof object == "object")
        return A.Primitives_objectHashCode(object);
      return J.get$hashCode$(object);
    },
    constantHashCode(key) {
      if (typeof key == "number")
        return B.JSNumber_methods.get$hashCode(key);
      if (key instanceof A._Type)
        return A.Primitives_objectHashCode(key);
      if (key instanceof A._Record)
        return key.get$hashCode(key);
      if (key instanceof A.Symbol)
        return key.get$hashCode(key);
      return A.objectHashCode(key);
    },
    fillLiteralMap(keyValuePairs, result) {
      var index, index0, index1,
        $length = keyValuePairs.length;
      for (index = 0; index < $length; index = index1) {
        index0 = index + 1;
        index1 = index0 + 1;
        result.$indexSet(0, keyValuePairs[index], keyValuePairs[index0]);
      }
      return result;
    },
    _invokeClosure(closure, numberOfArguments, arg1, arg2, arg3, arg4) {
      switch (numberOfArguments) {
        case 0:
          return closure.call$0();
        case 1:
          return closure.call$1(arg1);
        case 2:
          return closure.call$2(arg1, arg2);
        case 3:
          return closure.call$3(arg1, arg2, arg3);
        case 4:
          return closure.call$4(arg1, arg2, arg3, arg4);
      }
      throw A.wrapException(A.Exception_Exception("Unsupported number of arguments for wrapped closure"));
    },
    convertDartClosureToJS(closure, arity) {
      var $function;
      if (closure == null)
        return null;
      $function = closure.$identity;
      if (!!$function)
        return $function;
      $function = A.convertDartClosureToJSUncached(closure, arity);
      closure.$identity = $function;
      return $function;
    },
    convertDartClosureToJSUncached(closure, arity) {
      var entry;
      switch (arity) {
        case 0:
          entry = closure.call$0;
          break;
        case 1:
          entry = closure.call$1;
          break;
        case 2:
          entry = closure.call$2;
          break;
        case 3:
          entry = closure.call$3;
          break;
        case 4:
          entry = closure.call$4;
          break;
        default:
          entry = null;
      }
      if (entry != null)
        return entry.bind(closure);
      return function(closure, arity, invoke) {
        return function(a1, a2, a3, a4) {
          return invoke(closure, arity, a1, a2, a3, a4);
        };
      }(closure, arity, A._invokeClosure);
    },
    Closure_fromTearOff(parameters) {
      var $prototype, $constructor, t2, trampoline, applyTrampoline, i, stub, stub0, stubName, stubCallName,
        container = parameters.co,
        isStatic = parameters.iS,
        isIntercepted = parameters.iI,
        needsDirectAccess = parameters.nDA,
        applyTrampolineIndex = parameters.aI,
        funsOrNames = parameters.fs,
        callNames = parameters.cs,
        $name = funsOrNames[0],
        callName = callNames[0],
        $function = container[$name],
        t1 = parameters.fT;
      t1.toString;
      $prototype = isStatic ? Object.create(new A.StaticClosure().constructor.prototype) : Object.create(new A.BoundClosure(null, null).constructor.prototype);
      $prototype.$initialize = $prototype.constructor;
      if (isStatic)
        $constructor = function static_tear_off() {
          this.$initialize();
        };
      else
        $constructor = function tear_off(a, b) {
          this.$initialize(a, b);
        };
      $prototype.constructor = $constructor;
      $constructor.prototype = $prototype;
      $prototype.$_name = $name;
      $prototype.$_target = $function;
      t2 = !isStatic;
      if (t2)
        trampoline = A.Closure_forwardCallTo($name, $function, isIntercepted, needsDirectAccess);
      else {
        $prototype.$static_name = $name;
        trampoline = $function;
      }
      $prototype.$signature = A.Closure__computeSignatureFunctionNewRti(t1, isStatic, isIntercepted);
      $prototype[callName] = trampoline;
      for (applyTrampoline = trampoline, i = 1; i < funsOrNames.length; ++i) {
        stub = funsOrNames[i];
        if (typeof stub == "string") {
          stub0 = container[stub];
          stubName = stub;
          stub = stub0;
        } else
          stubName = "";
        stubCallName = callNames[i];
        if (stubCallName != null) {
          if (t2)
            stub = A.Closure_forwardCallTo(stubName, stub, isIntercepted, needsDirectAccess);
          $prototype[stubCallName] = stub;
        }
        if (i === applyTrampolineIndex)
          applyTrampoline = stub;
      }
      $prototype["call*"] = applyTrampoline;
      $prototype.$requiredArgCount = parameters.rC;
      $prototype.$defaultValues = parameters.dV;
      return $constructor;
    },
    Closure__computeSignatureFunctionNewRti(functionType, isStatic, isIntercepted) {
      if (typeof functionType == "number")
        return functionType;
      if (typeof functionType == "string") {
        if (isStatic)
          throw A.wrapException("Cannot compute signature for static tearoff.");
        return function(recipe, evalOnReceiver) {
          return function() {
            return evalOnReceiver(this, recipe);
          };
        }(functionType, A.BoundClosure_evalRecipe);
      }
      throw A.wrapException("Error in functionType of tearoff");
    },
    Closure_cspForwardCall(arity, needsDirectAccess, stubName, $function) {
      var getReceiver = A.BoundClosure_receiverOf;
      switch (needsDirectAccess ? -1 : arity) {
        case 0:
          return function(entry, receiverOf) {
            return function() {
              return receiverOf(this)[entry]();
            };
          }(stubName, getReceiver);
        case 1:
          return function(entry, receiverOf) {
            return function(a) {
              return receiverOf(this)[entry](a);
            };
          }(stubName, getReceiver);
        case 2:
          return function(entry, receiverOf) {
            return function(a, b) {
              return receiverOf(this)[entry](a, b);
            };
          }(stubName, getReceiver);
        case 3:
          return function(entry, receiverOf) {
            return function(a, b, c) {
              return receiverOf(this)[entry](a, b, c);
            };
          }(stubName, getReceiver);
        case 4:
          return function(entry, receiverOf) {
            return function(a, b, c, d) {
              return receiverOf(this)[entry](a, b, c, d);
            };
          }(stubName, getReceiver);
        case 5:
          return function(entry, receiverOf) {
            return function(a, b, c, d, e) {
              return receiverOf(this)[entry](a, b, c, d, e);
            };
          }(stubName, getReceiver);
        default:
          return function(f, receiverOf) {
            return function() {
              return f.apply(receiverOf(this), arguments);
            };
          }($function, getReceiver);
      }
    },
    Closure_forwardCallTo(stubName, $function, isIntercepted, needsDirectAccess) {
      var arity, t1;
      if (isIntercepted)
        return A.Closure_forwardInterceptedCallTo(stubName, $function, needsDirectAccess);
      arity = $function.length;
      t1 = A.Closure_cspForwardCall(arity, needsDirectAccess, stubName, $function);
      return t1;
    },
    Closure_cspForwardInterceptedCall(arity, needsDirectAccess, stubName, $function) {
      var getReceiver = A.BoundClosure_receiverOf,
        getInterceptor = A.BoundClosure_interceptorOf;
      switch (needsDirectAccess ? -1 : arity) {
        case 0:
          throw A.wrapException(new A.RuntimeError("Intercepted function with no arguments."));
        case 1:
          return function(entry, interceptorOf, receiverOf) {
            return function() {
              return interceptorOf(this)[entry](receiverOf(this));
            };
          }(stubName, getInterceptor, getReceiver);
        case 2:
          return function(entry, interceptorOf, receiverOf) {
            return function(a) {
              return interceptorOf(this)[entry](receiverOf(this), a);
            };
          }(stubName, getInterceptor, getReceiver);
        case 3:
          return function(entry, interceptorOf, receiverOf) {
            return function(a, b) {
              return interceptorOf(this)[entry](receiverOf(this), a, b);
            };
          }(stubName, getInterceptor, getReceiver);
        case 4:
          return function(entry, interceptorOf, receiverOf) {
            return function(a, b, c) {
              return interceptorOf(this)[entry](receiverOf(this), a, b, c);
            };
          }(stubName, getInterceptor, getReceiver);
        case 5:
          return function(entry, interceptorOf, receiverOf) {
            return function(a, b, c, d) {
              return interceptorOf(this)[entry](receiverOf(this), a, b, c, d);
            };
          }(stubName, getInterceptor, getReceiver);
        case 6:
          return function(entry, interceptorOf, receiverOf) {
            return function(a, b, c, d, e) {
              return interceptorOf(this)[entry](receiverOf(this), a, b, c, d, e);
            };
          }(stubName, getInterceptor, getReceiver);
        default:
          return function(f, interceptorOf, receiverOf) {
            return function() {
              var a = [receiverOf(this)];
              Array.prototype.push.apply(a, arguments);
              return f.apply(interceptorOf(this), a);
            };
          }($function, getInterceptor, getReceiver);
      }
    },
    Closure_forwardInterceptedCallTo(stubName, $function, needsDirectAccess) {
      var arity, t1;
      if ($.BoundClosure__interceptorFieldNameCache == null)
        $.BoundClosure__interceptorFieldNameCache = A.BoundClosure__computeFieldNamed("interceptor");
      if ($.BoundClosure__receiverFieldNameCache == null)
        $.BoundClosure__receiverFieldNameCache = A.BoundClosure__computeFieldNamed("receiver");
      arity = $function.length;
      t1 = A.Closure_cspForwardInterceptedCall(arity, needsDirectAccess, stubName, $function);
      return t1;
    },
    closureFromTearOff(parameters) {
      return A.Closure_fromTearOff(parameters);
    },
    BoundClosure_evalRecipe(closure, recipe) {
      return A._Universe_evalInEnvironment(init.typeUniverse, A.instanceType(closure._receiver), recipe);
    },
    BoundClosure_receiverOf(closure) {
      return closure._receiver;
    },
    BoundClosure_interceptorOf(closure) {
      return closure._interceptor;
    },
    BoundClosure__computeFieldNamed(fieldName) {
      var t1, i, $name,
        template = new A.BoundClosure("receiver", "interceptor"),
        names = J.JSArray_markFixedList(Object.getOwnPropertyNames(template));
      for (t1 = names.length, i = 0; i < t1; ++i) {
        $name = names[i];
        if (template[$name] === fieldName)
          return $name;
      }
      throw A.wrapException(A.ArgumentError$("Field name " + fieldName + " not found.", null));
    },
    throwCyclicInit(staticName) {
      throw A.wrapException(new A._CyclicInitializationError(staticName));
    },
    getIsolateAffinityTag($name) {
      return init.getIsolateTag($name);
    },
    LinkedHashMapKeyIterator$(_map, _modifications) {
      var t1 = new A.LinkedHashMapKeyIterator(_map, _modifications);
      t1._cell = _map._first;
      return t1;
    },
    defineProperty(obj, property, value) {
      Object.defineProperty(obj, property, {value: value, enumerable: false, writable: true, configurable: true});
    },
    lookupAndCacheInterceptor(obj) {
      var interceptor, interceptorClass, altTag, mark, t1,
        tag = $.getTagFunction.call$1(obj),
        record = $.dispatchRecordsForInstanceTags[tag];
      if (record != null) {
        Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
        return record.i;
      }
      interceptor = $.interceptorsForUncacheableTags[tag];
      if (interceptor != null)
        return interceptor;
      interceptorClass = init.interceptorsByTag[tag];
      if (interceptorClass == null) {
        altTag = $.alternateTagFunction.call$2(obj, tag);
        if (altTag != null) {
          record = $.dispatchRecordsForInstanceTags[altTag];
          if (record != null) {
            Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
            return record.i;
          }
          interceptor = $.interceptorsForUncacheableTags[altTag];
          if (interceptor != null)
            return interceptor;
          interceptorClass = init.interceptorsByTag[altTag];
          tag = altTag;
        }
      }
      if (interceptorClass == null)
        return null;
      interceptor = interceptorClass.prototype;
      mark = tag[0];
      if (mark === "!") {
        record = A.makeLeafDispatchRecord(interceptor);
        $.dispatchRecordsForInstanceTags[tag] = record;
        Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
        return record.i;
      }
      if (mark === "~") {
        $.interceptorsForUncacheableTags[tag] = interceptor;
        return interceptor;
      }
      if (mark === "-") {
        t1 = A.makeLeafDispatchRecord(interceptor);
        Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});
        return t1.i;
      }
      if (mark === "+")
        return A.patchInteriorProto(obj, interceptor);
      if (mark === "*")
        throw A.wrapException(A.UnimplementedError$(tag));
      if (init.leafTags[tag] === true) {
        t1 = A.makeLeafDispatchRecord(interceptor);
        Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});
        return t1.i;
      } else
        return A.patchInteriorProto(obj, interceptor);
    },
    patchInteriorProto(obj, interceptor) {
      var proto = Object.getPrototypeOf(obj);
      Object.defineProperty(proto, init.dispatchPropertyName, {value: J.makeDispatchRecord(interceptor, proto, null, null), enumerable: false, writable: true, configurable: true});
      return interceptor;
    },
    makeLeafDispatchRecord(interceptor) {
      return J.makeDispatchRecord(interceptor, false, null, !!interceptor.$isJavaScriptIndexingBehavior);
    },
    makeDefaultDispatchRecord(tag, interceptorClass, proto) {
      var interceptor = interceptorClass.prototype;
      if (init.leafTags[tag] === true)
        return A.makeLeafDispatchRecord(interceptor);
      else
        return J.makeDispatchRecord(interceptor, proto, null, null);
    },
    initNativeDispatch() {
      if (true === $.initNativeDispatchFlag)
        return;
      $.initNativeDispatchFlag = true;
      A.initNativeDispatchContinue();
    },
    initNativeDispatchContinue() {
      var map, tags, fun, i, tag, proto, record, interceptorClass;
      $.dispatchRecordsForInstanceTags = Object.create(null);
      $.interceptorsForUncacheableTags = Object.create(null);
      A.initHooks();
      map = init.interceptorsByTag;
      tags = Object.getOwnPropertyNames(map);
      if (typeof window != "undefined") {
        window;
        fun = function() {
        };
        for (i = 0; i < tags.length; ++i) {
          tag = tags[i];
          proto = $.prototypeForTagFunction.call$1(tag);
          if (proto != null) {
            record = A.makeDefaultDispatchRecord(tag, map[tag], proto);
            if (record != null) {
              Object.defineProperty(proto, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
              fun.prototype = proto;
            }
          }
        }
      }
      for (i = 0; i < tags.length; ++i) {
        tag = tags[i];
        if (/^[A-Za-z_]/.test(tag)) {
          interceptorClass = map[tag];
          map["!" + tag] = interceptorClass;
          map["~" + tag] = interceptorClass;
          map["-" + tag] = interceptorClass;
          map["+" + tag] = interceptorClass;
          map["*" + tag] = interceptorClass;
        }
      }
    },
    initHooks() {
      var transformers, i, transformer, getTag, getUnknownTag, prototypeForTag,
        hooks = B.C_JS_CONST0();
      hooks = A.applyHooksTransformer(B.C_JS_CONST1, A.applyHooksTransformer(B.C_JS_CONST2, A.applyHooksTransformer(B.C_JS_CONST3, A.applyHooksTransformer(B.C_JS_CONST3, A.applyHooksTransformer(B.C_JS_CONST4, A.applyHooksTransformer(B.C_JS_CONST5, A.applyHooksTransformer(B.C_JS_CONST6(B.C_JS_CONST), hooks)))))));
      if (typeof dartNativeDispatchHooksTransformer != "undefined") {
        transformers = dartNativeDispatchHooksTransformer;
        if (typeof transformers == "function")
          transformers = [transformers];
        if (Array.isArray(transformers))
          for (i = 0; i < transformers.length; ++i) {
            transformer = transformers[i];
            if (typeof transformer == "function")
              hooks = transformer(hooks) || hooks;
          }
      }
      getTag = hooks.getTag;
      getUnknownTag = hooks.getUnknownTag;
      prototypeForTag = hooks.prototypeForTag;
      $.getTagFunction = new A.initHooks_closure(getTag);
      $.alternateTagFunction = new A.initHooks_closure0(getUnknownTag);
      $.prototypeForTagFunction = new A.initHooks_closure1(prototypeForTag);
    },
    applyHooksTransformer(transformer, hooks) {
      return transformer(hooks) || hooks;
    },
    createRecordTypePredicate(shape, fieldRtis) {
      var $length = fieldRtis.length,
        $function = init.rttc["" + $length + ";" + shape];
      if ($function == null)
        return null;
      if ($length === 0)
        return $function;
      if ($length === $function.length)
        return $function.apply(null, fieldRtis);
      return $function(fieldRtis);
    },
    JSSyntaxRegExp_makeNative(source, multiLine, caseSensitive, unicode, dotAll, global) {
      var m = multiLine ? "m" : "",
        i = caseSensitive ? "" : "i",
        u = unicode ? "u" : "",
        s = dotAll ? "s" : "",
        g = global ? "g" : "",
        regexp = function(source, modifiers) {
          try {
            return new RegExp(source, modifiers);
          } catch (e) {
            return e;
          }
        }(source, m + i + u + s + g);
      if (regexp instanceof RegExp)
        return regexp;
      throw A.wrapException(A.FormatException$("Illegal RegExp pattern (" + String(regexp) + ")", source, null));
    },
    stringContainsUnchecked(receiver, other, startIndex) {
      var t1 = receiver.indexOf(other, startIndex);
      return t1 >= 0;
    },
    escapeReplacement(replacement) {
      if (replacement.indexOf("$", 0) >= 0)
        return replacement.replace(/\$/g, "$$$$");
      return replacement;
    },
    quoteStringForRegExp(string) {
      if (/[[\]{}()*+?.\\^$|]/.test(string))
        return string.replace(/[[\]{}()*+?.\\^$|]/g, "\\$&");
      return string;
    },
    stringReplaceAllUnchecked(receiver, pattern, replacement) {
      var t1 = A.stringReplaceAllUncheckedString(receiver, pattern, replacement);
      return t1;
    },
    stringReplaceAllUncheckedString(receiver, pattern, replacement) {
      var $length, t1, i;
      if (pattern === "") {
        if (receiver === "")
          return replacement;
        $length = receiver.length;
        t1 = "" + replacement;
        for (i = 0; i < $length; ++i)
          t1 = t1 + receiver[i] + replacement;
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      }
      if (receiver.indexOf(pattern, 0) < 0)
        return receiver;
      if (receiver.length < 500 || replacement.indexOf("$", 0) >= 0)
        return receiver.split(pattern).join(replacement);
      return receiver.replace(new RegExp(A.quoteStringForRegExp(pattern), "g"), A.escapeReplacement(replacement));
    },
    stringReplaceFirstUnchecked(receiver, pattern, replacement, startIndex) {
      var index = receiver.indexOf(pattern, startIndex);
      if (index < 0)
        return receiver;
      return A.stringReplaceRangeUnchecked(receiver, index, index + pattern.length, replacement);
    },
    stringReplaceRangeUnchecked(receiver, start, end, replacement) {
      return receiver.substring(0, start) + replacement + receiver.substring(end);
    },
    _Record_2: function _Record_2(t0, t1) {
      this._0 = t0;
      this._1 = t1;
    },
    ConstantMapView: function ConstantMapView(t0, t1) {
      this._collection$_map = t0;
      this.$ti = t1;
    },
    ConstantMap: function ConstantMap() {
    },
    ConstantStringMap: function ConstantStringMap(t0, t1, t2) {
      this._jsIndex = t0;
      this._values = t1;
      this.$ti = t2;
    },
    _KeysOrValues: function _KeysOrValues(t0, t1) {
      this._elements = t0;
      this.$ti = t1;
    },
    _KeysOrValuesOrElementsIterator: function _KeysOrValuesOrElementsIterator(t0, t1) {
      var _ = this;
      _._elements = t0;
      _.__js_helper$_length = t1;
      _.__js_helper$_index = 0;
      _.__js_helper$_current = null;
    },
    GeneralConstantMap: function GeneralConstantMap(t0, t1) {
      this._jsData = t0;
      this.$ti = t1;
    },
    ConstantSet: function ConstantSet() {
    },
    ConstantStringSet: function ConstantStringSet(t0, t1, t2) {
      this._jsIndex = t0;
      this.__js_helper$_length = t1;
      this.$ti = t2;
    },
    GeneralConstantSet: function GeneralConstantSet(t0, t1) {
      this._elements = t0;
      this.$ti = t1;
    },
    JSInvocationMirror: function JSInvocationMirror(t0, t1, t2, t3, t4) {
      var _ = this;
      _.__js_helper$_memberName = t0;
      _.__js_helper$_kind = t1;
      _._arguments = t2;
      _._namedArgumentNames = t3;
      _._typeArgumentCount = t4;
    },
    Primitives_initTicker_closure: function Primitives_initTicker_closure(t0) {
      this.performance = t0;
    },
    Primitives_functionNoSuchMethod_closure: function Primitives_functionNoSuchMethod_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.namedArgumentList = t1;
      this.$arguments = t2;
    },
    TypeErrorDecoder: function TypeErrorDecoder(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._pattern = t0;
      _._arguments = t1;
      _._argumentsExpr = t2;
      _._expr = t3;
      _._method = t4;
      _._receiver = t5;
    },
    NullError: function NullError() {
    },
    JsNoSuchMethodError: function JsNoSuchMethodError(t0, t1, t2) {
      this.__js_helper$_message = t0;
      this._method = t1;
      this._receiver = t2;
    },
    UnknownJsTypeError: function UnknownJsTypeError(t0) {
      this.__js_helper$_message = t0;
    },
    NullThrownFromJavaScriptException: function NullThrownFromJavaScriptException(t0) {
      this._irritant = t0;
    },
    ExceptionAndStackTrace: function ExceptionAndStackTrace(t0, t1) {
      this.dartException = t0;
      this.stackTrace = t1;
    },
    _StackTrace: function _StackTrace(t0) {
      this._exception = t0;
      this._trace = null;
    },
    Closure: function Closure() {
    },
    Closure0Args: function Closure0Args() {
    },
    Closure2Args: function Closure2Args() {
    },
    TearOffClosure: function TearOffClosure() {
    },
    StaticClosure: function StaticClosure() {
    },
    BoundClosure: function BoundClosure(t0, t1) {
      this._receiver = t0;
      this._interceptor = t1;
    },
    _CyclicInitializationError: function _CyclicInitializationError(t0) {
      this.variableName = t0;
    },
    RuntimeError: function RuntimeError(t0) {
      this.message = t0;
    },
    _Required: function _Required() {
    },
    JsLinkedHashMap: function JsLinkedHashMap(t0) {
      var _ = this;
      _.__js_helper$_length = 0;
      _._last = _._first = _.__js_helper$_rest = _._nums = _._strings = null;
      _._modifications = 0;
      _.$ti = t0;
    },
    JsLinkedHashMap_values_closure: function JsLinkedHashMap_values_closure(t0) {
      this.$this = t0;
    },
    JsLinkedHashMap_containsValue_closure: function JsLinkedHashMap_containsValue_closure(t0, t1) {
      this.$this = t0;
      this.value = t1;
    },
    LinkedHashMapCell: function LinkedHashMapCell(t0, t1) {
      var _ = this;
      _.hashMapCellKey = t0;
      _.hashMapCellValue = t1;
      _._previous = _._next = null;
    },
    LinkedHashMapKeyIterable: function LinkedHashMapKeyIterable(t0, t1) {
      this._map = t0;
      this.$ti = t1;
    },
    LinkedHashMapKeyIterator: function LinkedHashMapKeyIterator(t0, t1) {
      var _ = this;
      _._map = t0;
      _._modifications = t1;
      _.__js_helper$_current = _._cell = null;
    },
    JsConstantLinkedHashMap: function JsConstantLinkedHashMap(t0) {
      var _ = this;
      _.__js_helper$_length = 0;
      _._last = _._first = _.__js_helper$_rest = _._nums = _._strings = null;
      _._modifications = 0;
      _.$ti = t0;
    },
    initHooks_closure: function initHooks_closure(t0) {
      this.getTag = t0;
    },
    initHooks_closure0: function initHooks_closure0(t0) {
      this.getUnknownTag = t0;
    },
    initHooks_closure1: function initHooks_closure1(t0) {
      this.prototypeForTag = t0;
    },
    _Record: function _Record() {
    },
    _EmptyRecord: function _EmptyRecord() {
    },
    _Record2: function _Record2() {
    },
    JSSyntaxRegExp: function JSSyntaxRegExp(t0, t1) {
      var _ = this;
      _.pattern = t0;
      _._nativeRegExp = t1;
      _._nativeAnchoredRegExp = _._nativeGlobalRegExp = null;
    },
    _MatchImplementation: function _MatchImplementation(t0) {
      this._match = t0;
    },
    _AllMatchesIterator: function _AllMatchesIterator(t0, t1, t2) {
      var _ = this;
      _._regExp = t0;
      _.__js_helper$_string = t1;
      _._nextIndex = t2;
      _.__js_helper$_current = null;
    },
    StringMatch: function StringMatch(t0, t1) {
      this.start = t0;
      this.pattern = t1;
    },
    _StringAllMatchesIterator: function _StringAllMatchesIterator(t0, t1, t2) {
      var _ = this;
      _._input = t0;
      _._pattern = t1;
      _.__js_helper$_index = t2;
      _.__js_helper$_current = null;
    },
    throwLateFieldADI(fieldName) {
      A.throwExpressionWithWrapper(new A.LateError("Field '" + fieldName + string$.__has_), new Error());
    },
    throwUnnamedLateFieldNI() {
      A.throwExpressionWithWrapper(new A.LateError("Field '' has not been initialized."), new Error());
    },
    throwUnnamedLateFieldADI() {
      A.throwExpressionWithWrapper(new A.LateError("Field '' has been assigned during initialization."), new Error());
    },
    _Cell$named(_name) {
      var t1 = new A._Cell(_name);
      return t1.__late_helper$_value = t1;
    },
    _InitializedCell$named(_name, _initializer) {
      var t1 = new A._InitializedCell(_name, _initializer);
      return t1.__late_helper$_value = t1;
    },
    _Cell: function _Cell(t0) {
      this.__late_helper$_name = t0;
      this.__late_helper$_value = null;
    },
    _InitializedCell: function _InitializedCell(t0, t1) {
      this.__late_helper$_name = t0;
      this.__late_helper$_value = null;
      this._initializer = t1;
    },
    _checkViewArguments(buffer, offsetInBytes, $length) {
    },
    _ensureNativeList(list) {
      return list;
    },
    NativeByteData_NativeByteData$view(buffer, offsetInBytes, $length) {
      A._checkViewArguments(buffer, offsetInBytes, $length);
      return $length == null ? new DataView(buffer, offsetInBytes) : new DataView(buffer, offsetInBytes, $length);
    },
    NativeFloat64List_NativeFloat64List$view(buffer, offsetInBytes, $length) {
      A._checkViewArguments(buffer, offsetInBytes, $length);
      return new Float64Array(buffer, offsetInBytes, $length);
    },
    NativeInt32List_NativeInt32List$view(buffer, offsetInBytes, $length) {
      A._checkViewArguments(buffer, offsetInBytes, $length);
      return new Int32Array(buffer, offsetInBytes, $length);
    },
    NativeInt8List__create1(arg) {
      return new Int8Array(arg);
    },
    NativeUint16List__create1(arg) {
      return new Uint16Array(arg);
    },
    NativeUint8List_NativeUint8List($length) {
      return new Uint8Array($length);
    },
    NativeUint8List_NativeUint8List$view(buffer, offsetInBytes, $length) {
      A._checkViewArguments(buffer, offsetInBytes, $length);
      return $length == null ? new Uint8Array(buffer, offsetInBytes) : new Uint8Array(buffer, offsetInBytes, $length);
    },
    _checkValidIndex(index, list, $length) {
      if (index >>> 0 !== index || index >= $length)
        throw A.wrapException(A.diagnoseIndexError(list, index));
    },
    _checkValidRange(start, end, $length) {
      var t1;
      if (!(start >>> 0 !== start))
        t1 = end >>> 0 !== end || start > end || end > $length;
      else
        t1 = true;
      if (t1)
        throw A.wrapException(A.diagnoseRangeError(start, end, $length));
      return end;
    },
    NativeByteBuffer: function NativeByteBuffer() {
    },
    NativeTypedData: function NativeTypedData() {
    },
    NativeByteData: function NativeByteData() {
    },
    NativeTypedArray: function NativeTypedArray() {
    },
    NativeTypedArrayOfDouble: function NativeTypedArrayOfDouble() {
    },
    NativeTypedArrayOfInt: function NativeTypedArrayOfInt() {
    },
    NativeFloat32List: function NativeFloat32List() {
    },
    NativeFloat64List: function NativeFloat64List() {
    },
    NativeInt16List: function NativeInt16List() {
    },
    NativeInt32List: function NativeInt32List() {
    },
    NativeInt8List: function NativeInt8List() {
    },
    NativeUint16List: function NativeUint16List() {
    },
    NativeUint32List: function NativeUint32List() {
    },
    NativeUint8ClampedList: function NativeUint8ClampedList() {
    },
    NativeUint8List: function NativeUint8List() {
    },
    _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin: function _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin() {
    },
    _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin: function _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin() {
    },
    _NativeTypedArrayOfInt_NativeTypedArray_ListMixin: function _NativeTypedArrayOfInt_NativeTypedArray_ListMixin() {
    },
    _NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin: function _NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin() {
    },
    Rti__getQuestionFromStar(universe, rti) {
      var question = rti._precomputed1;
      return question == null ? rti._precomputed1 = A._Universe__lookupQuestionRti(universe, rti._primary, true) : question;
    },
    Rti__getFutureFromFutureOr(universe, rti) {
      var future = rti._precomputed1;
      return future == null ? rti._precomputed1 = A._Universe__lookupInterfaceRti(universe, "Future", [rti._primary]) : future;
    },
    Rti__getIsSubtypeCache(rti) {
      var probe = rti._isSubtypeCache;
      if (probe != null)
        return probe;
      return rti._isSubtypeCache = new Map();
    },
    Rti__isUnionOfFunctionType(rti) {
      var kind = rti._kind;
      if (kind === 6 || kind === 7 || kind === 8)
        return A.Rti__isUnionOfFunctionType(rti._primary);
      return kind === 12 || kind === 13;
    },
    Rti__getCanonicalRecipe(rti) {
      return rti._canonicalRecipe;
    },
    findType(recipe) {
      return A._Universe_eval(init.typeUniverse, recipe, false);
    },
    _substitute(universe, rti, typeArguments, depth) {
      var baseType, substitutedBaseType, interfaceTypeArguments, substitutedInterfaceTypeArguments, base, substitutedBase, $arguments, substitutedArguments, returnType, substitutedReturnType, functionParameters, substitutedFunctionParameters, bounds, substitutedBounds, index, argument,
        kind = rti._kind;
      switch (kind) {
        case 5:
        case 1:
        case 2:
        case 3:
        case 4:
          return rti;
        case 6:
          baseType = rti._primary;
          substitutedBaseType = A._substitute(universe, baseType, typeArguments, depth);
          if (substitutedBaseType === baseType)
            return rti;
          return A._Universe__lookupStarRti(universe, substitutedBaseType, true);
        case 7:
          baseType = rti._primary;
          substitutedBaseType = A._substitute(universe, baseType, typeArguments, depth);
          if (substitutedBaseType === baseType)
            return rti;
          return A._Universe__lookupQuestionRti(universe, substitutedBaseType, true);
        case 8:
          baseType = rti._primary;
          substitutedBaseType = A._substitute(universe, baseType, typeArguments, depth);
          if (substitutedBaseType === baseType)
            return rti;
          return A._Universe__lookupFutureOrRti(universe, substitutedBaseType, true);
        case 9:
          interfaceTypeArguments = rti._rest;
          substitutedInterfaceTypeArguments = A._substituteArray(universe, interfaceTypeArguments, typeArguments, depth);
          if (substitutedInterfaceTypeArguments === interfaceTypeArguments)
            return rti;
          return A._Universe__lookupInterfaceRti(universe, rti._primary, substitutedInterfaceTypeArguments);
        case 10:
          base = rti._primary;
          substitutedBase = A._substitute(universe, base, typeArguments, depth);
          $arguments = rti._rest;
          substitutedArguments = A._substituteArray(universe, $arguments, typeArguments, depth);
          if (substitutedBase === base && substitutedArguments === $arguments)
            return rti;
          return A._Universe__lookupBindingRti(universe, substitutedBase, substitutedArguments);
        case 12:
          returnType = rti._primary;
          substitutedReturnType = A._substitute(universe, returnType, typeArguments, depth);
          functionParameters = rti._rest;
          substitutedFunctionParameters = A._substituteFunctionParameters(universe, functionParameters, typeArguments, depth);
          if (substitutedReturnType === returnType && substitutedFunctionParameters === functionParameters)
            return rti;
          return A._Universe__lookupFunctionRti(universe, substitutedReturnType, substitutedFunctionParameters);
        case 13:
          bounds = rti._rest;
          depth += bounds.length;
          substitutedBounds = A._substituteArray(universe, bounds, typeArguments, depth);
          base = rti._primary;
          substitutedBase = A._substitute(universe, base, typeArguments, depth);
          if (substitutedBounds === bounds && substitutedBase === base)
            return rti;
          return A._Universe__lookupGenericFunctionRti(universe, substitutedBase, substitutedBounds, true);
        case 14:
          index = rti._primary;
          if (index < depth)
            return rti;
          argument = typeArguments[index - depth];
          if (argument == null)
            return rti;
          return argument;
        default:
          throw A.wrapException(A.AssertionError$("Attempted to substitute unexpected RTI kind " + kind));
      }
    },
    _substituteArray(universe, rtiArray, typeArguments, depth) {
      var changed, i, rti, substitutedRti,
        $length = rtiArray.length,
        result = A._Utils_newArrayOrEmpty($length);
      for (changed = false, i = 0; i < $length; ++i) {
        rti = rtiArray[i];
        substitutedRti = A._substitute(universe, rti, typeArguments, depth);
        if (substitutedRti !== rti)
          changed = true;
        result[i] = substitutedRti;
      }
      return changed ? result : rtiArray;
    },
    _substituteNamed(universe, namedArray, typeArguments, depth) {
      var changed, i, t1, t2, rti, substitutedRti,
        $length = namedArray.length,
        result = A._Utils_newArrayOrEmpty($length);
      for (changed = false, i = 0; i < $length; i += 3) {
        t1 = namedArray[i];
        t2 = namedArray[i + 1];
        rti = namedArray[i + 2];
        substitutedRti = A._substitute(universe, rti, typeArguments, depth);
        if (substitutedRti !== rti)
          changed = true;
        result.splice(i, 3, t1, t2, substitutedRti);
      }
      return changed ? result : namedArray;
    },
    _substituteFunctionParameters(universe, functionParameters, typeArguments, depth) {
      var result,
        requiredPositional = functionParameters._requiredPositional,
        substitutedRequiredPositional = A._substituteArray(universe, requiredPositional, typeArguments, depth),
        optionalPositional = functionParameters._optionalPositional,
        substitutedOptionalPositional = A._substituteArray(universe, optionalPositional, typeArguments, depth),
        named = functionParameters._named,
        substitutedNamed = A._substituteNamed(universe, named, typeArguments, depth);
      if (substitutedRequiredPositional === requiredPositional && substitutedOptionalPositional === optionalPositional && substitutedNamed === named)
        return functionParameters;
      result = new A._FunctionParameters();
      result._requiredPositional = substitutedRequiredPositional;
      result._optionalPositional = substitutedOptionalPositional;
      result._named = substitutedNamed;
      return result;
    },
    _setArrayType(target, rti) {
      target[init.arrayRti] = rti;
      return target;
    },
    closureFunctionType(closure) {
      var t1,
        signature = closure.$signature;
      if (signature != null) {
        if (typeof signature == "number")
          return A.getTypeFromTypesTable(signature);
        t1 = closure.$signature();
        return t1;
      }
      return null;
    },
    instanceOrFunctionType(object, testRti) {
      var rti;
      if (A.Rti__isUnionOfFunctionType(testRti))
        if (object instanceof A.Closure) {
          rti = A.closureFunctionType(object);
          if (rti != null)
            return rti;
        }
      return A.instanceType(object);
    },
    instanceType(object) {
      if (object instanceof A.Object)
        return A._instanceType(object);
      if (Array.isArray(object))
        return A._arrayInstanceType(object);
      return A._instanceTypeFromConstructor(J.getInterceptor$(object));
    },
    _arrayInstanceType(object) {
      var rti = object[init.arrayRti],
        defaultRti = type$.JSArray_dynamic;
      if (rti == null)
        return defaultRti;
      if (rti.constructor !== defaultRti.constructor)
        return defaultRti;
      return rti;
    },
    _instanceType(object) {
      var rti = object.$ti;
      return rti != null ? rti : A._instanceTypeFromConstructor(object);
    },
    _instanceTypeFromConstructor(instance) {
      var $constructor = instance.constructor,
        probe = $constructor.$ccache;
      if (probe != null)
        return probe;
      return A._instanceTypeFromConstructorMiss(instance, $constructor);
    },
    _instanceTypeFromConstructorMiss(instance, $constructor) {
      var effectiveConstructor = instance instanceof A.Closure ? Object.getPrototypeOf(Object.getPrototypeOf(instance)).constructor : $constructor,
        rti = A._Universe_findErasedType(init.typeUniverse, effectiveConstructor.name);
      $constructor.$ccache = rti;
      return rti;
    },
    getTypeFromTypesTable(index) {
      var rti,
        table = init.types,
        type = table[index];
      if (typeof type == "string") {
        rti = A._Universe_eval(init.typeUniverse, type, false);
        table[index] = rti;
        return rti;
      }
      return type;
    },
    getRuntimeTypeOfDartObject(object) {
      return A.createRuntimeType(A._instanceType(object));
    },
    _structuralTypeOf(object) {
      var functionRti;
      if (object instanceof A._Record)
        return object._getRti$0();
      functionRti = object instanceof A.Closure ? A.closureFunctionType(object) : null;
      if (functionRti != null)
        return functionRti;
      if (type$.TrustedGetRuntimeType._is(object))
        return J.get$runtimeType$(object)._rti;
      if (Array.isArray(object))
        return A._arrayInstanceType(object);
      return A.instanceType(object);
    },
    createRuntimeType(rti) {
      var t1 = rti._cachedRuntimeType;
      return t1 == null ? rti._cachedRuntimeType = A._createRuntimeType(rti) : t1;
    },
    _createRuntimeType(rti) {
      var starErasedRti, t1,
        s = rti._canonicalRecipe,
        starErasedRecipe = s.replace(/\*/g, "");
      if (starErasedRecipe === s)
        return rti._cachedRuntimeType = new A._Type(rti);
      starErasedRti = A._Universe_eval(init.typeUniverse, starErasedRecipe, true);
      t1 = starErasedRti._cachedRuntimeType;
      return t1 == null ? starErasedRti._cachedRuntimeType = A._createRuntimeType(starErasedRti) : t1;
    },
    evaluateRtiForRecord(recordRecipe, valuesList) {
      var bindings, i,
        values = valuesList,
        $length = values.length;
      if ($length === 0)
        return type$.Record_0;
      bindings = A._Universe_evalInEnvironment(init.typeUniverse, A._structuralTypeOf(values[0]), "@<0>");
      for (i = 1; i < $length; ++i)
        bindings = A._Universe_bind(init.typeUniverse, bindings, A._structuralTypeOf(values[i]));
      return A._Universe_evalInEnvironment(init.typeUniverse, bindings, recordRecipe);
    },
    typeLiteral(recipe) {
      return A.createRuntimeType(A._Universe_eval(init.typeUniverse, recipe, false));
    },
    _installSpecializedIsTest(object) {
      var t1, unstarred, unstarredKind, isFn, $name, predicate, testRti = this;
      if (testRti === type$.Object)
        return A._finishIsFn(testRti, object, A._isObject);
      if (!A.isStrongTopType(testRti))
        if (!(testRti === type$.legacy_Object))
          t1 = false;
        else
          t1 = true;
      else
        t1 = true;
      if (t1)
        return A._finishIsFn(testRti, object, A._isTop);
      t1 = testRti._kind;
      if (t1 === 7)
        return A._finishIsFn(testRti, object, A._generalNullableIsTestImplementation);
      if (t1 === 1)
        return A._finishIsFn(testRti, object, A._isNever);
      unstarred = t1 === 6 ? testRti._primary : testRti;
      unstarredKind = unstarred._kind;
      if (unstarredKind === 8)
        return A._finishIsFn(testRti, object, A._isFutureOr);
      if (unstarred === type$.int)
        isFn = A._isInt;
      else if (unstarred === type$.double || unstarred === type$.num)
        isFn = A._isNum;
      else if (unstarred === type$.String)
        isFn = A._isString;
      else
        isFn = unstarred === type$.bool ? A._isBool : null;
      if (isFn != null)
        return A._finishIsFn(testRti, object, isFn);
      if (unstarredKind === 9) {
        $name = unstarred._primary;
        if (unstarred._rest.every(A.isTopType)) {
          testRti._specializedTestResource = "$is" + $name;
          if ($name === "List")
            return A._finishIsFn(testRti, object, A._isListTestViaProperty);
          return A._finishIsFn(testRti, object, A._isTestViaProperty);
        }
      } else if (unstarredKind === 11) {
        predicate = A.createRecordTypePredicate(unstarred._primary, unstarred._rest);
        return A._finishIsFn(testRti, object, predicate == null ? A._isNever : predicate);
      }
      return A._finishIsFn(testRti, object, A._generalIsTestImplementation);
    },
    _finishIsFn(testRti, object, isFn) {
      testRti._is = isFn;
      return testRti._is(object);
    },
    _installSpecializedAsCheck(object) {
      var t1, testRti = this,
        asFn = A._generalAsCheckImplementation;
      if (!A.isStrongTopType(testRti))
        if (!(testRti === type$.legacy_Object))
          t1 = false;
        else
          t1 = true;
      else
        t1 = true;
      if (t1)
        asFn = A._asTop;
      else if (testRti === type$.Object)
        asFn = A._asObject;
      else {
        t1 = A.isNullable(testRti);
        if (t1)
          asFn = A._generalNullableAsCheckImplementation;
      }
      testRti._as = asFn;
      return testRti._as(object);
    },
    _nullIs(testRti) {
      var t1,
        kind = testRti._kind;
      if (!A.isStrongTopType(testRti))
        if (!(testRti === type$.legacy_Object))
          if (!(testRti === type$.legacy_Never))
            if (kind !== 7)
              if (!(kind === 6 && A._nullIs(testRti._primary)))
                t1 = kind === 8 && A._nullIs(testRti._primary) || testRti === type$.Null || testRti === type$.JSNull;
              else
                t1 = true;
            else
              t1 = true;
          else
            t1 = true;
        else
          t1 = true;
      else
        t1 = true;
      return t1;
    },
    _generalIsTestImplementation(object) {
      var testRti = this;
      if (object == null)
        return A._nullIs(testRti);
      return A.isSubtype(init.typeUniverse, A.instanceOrFunctionType(object, testRti), testRti);
    },
    _generalNullableIsTestImplementation(object) {
      if (object == null)
        return true;
      return this._primary._is(object);
    },
    _isTestViaProperty(object) {
      var tag, testRti = this;
      if (object == null)
        return A._nullIs(testRti);
      tag = testRti._specializedTestResource;
      if (object instanceof A.Object)
        return !!object[tag];
      return !!J.getInterceptor$(object)[tag];
    },
    _isListTestViaProperty(object) {
      var tag, testRti = this;
      if (object == null)
        return A._nullIs(testRti);
      if (typeof object != "object")
        return false;
      if (Array.isArray(object))
        return true;
      tag = testRti._specializedTestResource;
      if (object instanceof A.Object)
        return !!object[tag];
      return !!J.getInterceptor$(object)[tag];
    },
    _generalAsCheckImplementation(object) {
      var t1, testRti = this;
      if (object == null) {
        t1 = A.isNullable(testRti);
        if (t1)
          return object;
      } else if (testRti._is(object))
        return object;
      A._failedAsCheck(object, testRti);
    },
    _generalNullableAsCheckImplementation(object) {
      var testRti = this;
      if (object == null)
        return object;
      else if (testRti._is(object))
        return object;
      A._failedAsCheck(object, testRti);
    },
    _failedAsCheck(object, testRti) {
      throw A.wrapException(A._TypeError$fromMessage(A._Error_compose(object, A._rtiToString(testRti, null))));
    },
    _Error_compose(object, checkedTypeDescription) {
      return A.Error_safeToString(object) + ": type '" + A._rtiToString(A._structuralTypeOf(object), null) + "' is not a subtype of type '" + checkedTypeDescription + "'";
    },
    _TypeError$fromMessage(message) {
      return new A._TypeError("TypeError: " + message);
    },
    _TypeError__TypeError$forType(object, type) {
      return new A._TypeError("TypeError: " + A._Error_compose(object, type));
    },
    _isFutureOr(object) {
      var testRti = this,
        unstarred = testRti._kind === 6 ? testRti._primary : testRti;
      return unstarred._primary._is(object) || A.Rti__getFutureFromFutureOr(init.typeUniverse, unstarred)._is(object);
    },
    _isObject(object) {
      return object != null;
    },
    _asObject(object) {
      if (object != null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "Object"));
    },
    _isTop(object) {
      return true;
    },
    _asTop(object) {
      return object;
    },
    _isNever(object) {
      return false;
    },
    _isBool(object) {
      return true === object || false === object;
    },
    _asBool(object) {
      if (true === object)
        return true;
      if (false === object)
        return false;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "bool"));
    },
    _asBoolS(object) {
      if (true === object)
        return true;
      if (false === object)
        return false;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "bool"));
    },
    _asBoolQ(object) {
      if (true === object)
        return true;
      if (false === object)
        return false;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "bool?"));
    },
    _asDouble(object) {
      if (typeof object == "number")
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "double"));
    },
    _asDoubleS(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "double"));
    },
    _asDoubleQ(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "double?"));
    },
    _isInt(object) {
      return typeof object == "number" && Math.floor(object) === object;
    },
    _asInt(object) {
      if (typeof object == "number" && Math.floor(object) === object)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "int"));
    },
    _asIntS(object) {
      if (typeof object == "number" && Math.floor(object) === object)
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "int"));
    },
    _asIntQ(object) {
      if (typeof object == "number" && Math.floor(object) === object)
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "int?"));
    },
    _isNum(object) {
      return typeof object == "number";
    },
    _asNum(object) {
      if (typeof object == "number")
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "num"));
    },
    _asNumS(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "num"));
    },
    _asNumQ(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "num?"));
    },
    _isString(object) {
      return typeof object == "string";
    },
    _asString(object) {
      if (typeof object == "string")
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "String"));
    },
    _asStringS(object) {
      if (typeof object == "string")
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "String"));
    },
    _asStringQ(object) {
      if (typeof object == "string")
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "String?"));
    },
    _rtiArrayToString(array, genericContext) {
      var s, sep, i;
      for (s = "", sep = "", i = 0; i < array.length; ++i, sep = ", ")
        s += sep + A._rtiToString(array[i], genericContext);
      return s;
    },
    _recordRtiToString(recordType, genericContext) {
      var fieldCount, names, namesIndex, s, comma, i,
        partialShape = recordType._primary,
        fields = recordType._rest;
      if ("" === partialShape)
        return "(" + A._rtiArrayToString(fields, genericContext) + ")";
      fieldCount = fields.length;
      names = partialShape.split(",");
      namesIndex = names.length - fieldCount;
      for (s = "(", comma = "", i = 0; i < fieldCount; ++i, comma = ", ") {
        s += comma;
        if (namesIndex === 0)
          s += "{";
        s += A._rtiToString(fields[i], genericContext);
        if (namesIndex >= 0)
          s += " " + names[namesIndex];
        ++namesIndex;
      }
      return s + "})";
    },
    _functionRtiToString(functionType, genericContext, bounds) {
      var boundsLength, outerContextLength, offset, i, t1, t2, typeParametersText, typeSep, boundRti, kind, t3, parameters, requiredPositional, requiredPositionalLength, optionalPositional, optionalPositionalLength, named, namedLength, returnTypeText, argumentsText, sep, _s2_ = ", ";
      if (bounds != null) {
        boundsLength = bounds.length;
        if (genericContext == null) {
          genericContext = A._setArrayType([], type$.JSArray_String);
          outerContextLength = null;
        } else
          outerContextLength = genericContext.length;
        offset = genericContext.length;
        for (i = boundsLength; i > 0; --i)
          genericContext.push("T" + (offset + i));
        for (t1 = type$.nullable_Object, t2 = type$.legacy_Object, typeParametersText = "<", typeSep = "", i = 0; i < boundsLength; ++i, typeSep = _s2_) {
          typeParametersText = B.JSString_methods.$add(typeParametersText + typeSep, genericContext[genericContext.length - 1 - i]);
          boundRti = bounds[i];
          kind = boundRti._kind;
          if (!(kind === 2 || kind === 3 || kind === 4 || kind === 5 || boundRti === t1))
            if (!(boundRti === t2))
              t3 = false;
            else
              t3 = true;
          else
            t3 = true;
          if (!t3)
            typeParametersText += " extends " + A._rtiToString(boundRti, genericContext);
        }
        typeParametersText += ">";
      } else {
        typeParametersText = "";
        outerContextLength = null;
      }
      t1 = functionType._primary;
      parameters = functionType._rest;
      requiredPositional = parameters._requiredPositional;
      requiredPositionalLength = requiredPositional.length;
      optionalPositional = parameters._optionalPositional;
      optionalPositionalLength = optionalPositional.length;
      named = parameters._named;
      namedLength = named.length;
      returnTypeText = A._rtiToString(t1, genericContext);
      for (argumentsText = "", sep = "", i = 0; i < requiredPositionalLength; ++i, sep = _s2_)
        argumentsText += sep + A._rtiToString(requiredPositional[i], genericContext);
      if (optionalPositionalLength > 0) {
        argumentsText += sep + "[";
        for (sep = "", i = 0; i < optionalPositionalLength; ++i, sep = _s2_)
          argumentsText += sep + A._rtiToString(optionalPositional[i], genericContext);
        argumentsText += "]";
      }
      if (namedLength > 0) {
        argumentsText += sep + "{";
        for (sep = "", i = 0; i < namedLength; i += 3, sep = _s2_) {
          argumentsText += sep;
          if (named[i + 1])
            argumentsText += "required ";
          argumentsText += A._rtiToString(named[i + 2], genericContext) + " " + named[i];
        }
        argumentsText += "}";
      }
      if (outerContextLength != null) {
        genericContext.toString;
        genericContext.length = outerContextLength;
      }
      return typeParametersText + "(" + argumentsText + ") => " + returnTypeText;
    },
    _rtiToString(rti, genericContext) {
      var s, questionArgument, argumentKind, $name, $arguments, t1,
        kind = rti._kind;
      if (kind === 5)
        return "erased";
      if (kind === 2)
        return "dynamic";
      if (kind === 3)
        return "void";
      if (kind === 1)
        return "Never";
      if (kind === 4)
        return "any";
      if (kind === 6) {
        s = A._rtiToString(rti._primary, genericContext);
        return s;
      }
      if (kind === 7) {
        questionArgument = rti._primary;
        s = A._rtiToString(questionArgument, genericContext);
        argumentKind = questionArgument._kind;
        return (argumentKind === 12 || argumentKind === 13 ? "(" + s + ")" : s) + "?";
      }
      if (kind === 8)
        return "FutureOr<" + A._rtiToString(rti._primary, genericContext) + ">";
      if (kind === 9) {
        $name = A._unminifyOrTag(rti._primary);
        $arguments = rti._rest;
        return $arguments.length > 0 ? $name + ("<" + A._rtiArrayToString($arguments, genericContext) + ">") : $name;
      }
      if (kind === 11)
        return A._recordRtiToString(rti, genericContext);
      if (kind === 12)
        return A._functionRtiToString(rti, genericContext, null);
      if (kind === 13)
        return A._functionRtiToString(rti._primary, genericContext, rti._rest);
      if (kind === 14) {
        t1 = rti._primary;
        return genericContext[genericContext.length - 1 - t1];
      }
      return "?";
    },
    _unminifyOrTag(rawClassName) {
      var preserved = init.mangledGlobalNames[rawClassName];
      if (preserved != null)
        return preserved;
      return rawClassName;
    },
    _Universe_findRule(universe, targetType) {
      var rule = universe.tR[targetType];
      for (; typeof rule == "string";)
        rule = universe.tR[rule];
      return rule;
    },
    _Universe_findErasedType(universe, cls) {
      var $length, erased, $arguments, i, $interface,
        t1 = universe.eT,
        probe = t1[cls];
      if (probe == null)
        return A._Universe_eval(universe, cls, false);
      else if (typeof probe == "number") {
        $length = probe;
        erased = A._Universe__lookupTerminalRti(universe, 5, "#");
        $arguments = A._Utils_newArrayOrEmpty($length);
        for (i = 0; i < $length; ++i)
          $arguments[i] = erased;
        $interface = A._Universe__lookupInterfaceRti(universe, cls, $arguments);
        t1[cls] = $interface;
        return $interface;
      } else
        return probe;
    },
    _Universe_addRules(universe, rules) {
      return A._Utils_objectAssign(universe.tR, rules);
    },
    _Universe_addErasedTypes(universe, types) {
      return A._Utils_objectAssign(universe.eT, types);
    },
    _Universe_eval(universe, recipe, normalize) {
      var rti,
        t1 = universe.eC,
        probe = t1.get(recipe);
      if (probe != null)
        return probe;
      rti = A._Parser_parse(A._Parser_create(universe, null, recipe, normalize));
      t1.set(recipe, rti);
      return rti;
    },
    _Universe_evalInEnvironment(universe, environment, recipe) {
      var probe, rti,
        cache = environment._evalCache;
      if (cache == null)
        cache = environment._evalCache = new Map();
      probe = cache.get(recipe);
      if (probe != null)
        return probe;
      rti = A._Parser_parse(A._Parser_create(universe, environment, recipe, true));
      cache.set(recipe, rti);
      return rti;
    },
    _Universe_bind(universe, environment, argumentsRti) {
      var argumentsRecipe, probe, rti,
        cache = environment._bindCache;
      if (cache == null)
        cache = environment._bindCache = new Map();
      argumentsRecipe = argumentsRti._canonicalRecipe;
      probe = cache.get(argumentsRecipe);
      if (probe != null)
        return probe;
      rti = A._Universe__lookupBindingRti(universe, environment, argumentsRti._kind === 10 ? argumentsRti._rest : [argumentsRti]);
      cache.set(argumentsRecipe, rti);
      return rti;
    },
    _Universe__installTypeTests(universe, rti) {
      rti._as = A._installSpecializedAsCheck;
      rti._is = A._installSpecializedIsTest;
      return rti;
    },
    _Universe__lookupTerminalRti(universe, kind, key) {
      var rti, t1,
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = kind;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__lookupStarRti(universe, baseType, normalize) {
      var t1,
        key = baseType._canonicalRecipe + "*",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = A._Universe__createStarRti(universe, baseType, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createStarRti(universe, baseType, key, normalize) {
      var baseKind, t1, rti;
      if (normalize) {
        baseKind = baseType._kind;
        if (!A.isStrongTopType(baseType))
          t1 = baseType === type$.Null || baseType === type$.JSNull || baseKind === 7 || baseKind === 6;
        else
          t1 = true;
        if (t1)
          return baseType;
      }
      rti = new A.Rti(null, null);
      rti._kind = 6;
      rti._primary = baseType;
      rti._canonicalRecipe = key;
      return A._Universe__installTypeTests(universe, rti);
    },
    _Universe__lookupQuestionRti(universe, baseType, normalize) {
      var t1,
        key = baseType._canonicalRecipe + "?",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = A._Universe__createQuestionRti(universe, baseType, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createQuestionRti(universe, baseType, key, normalize) {
      var baseKind, t1, starArgument, rti;
      if (normalize) {
        baseKind = baseType._kind;
        if (!A.isStrongTopType(baseType))
          if (!(baseType === type$.Null || baseType === type$.JSNull))
            if (baseKind !== 7)
              t1 = baseKind === 8 && A.isNullable(baseType._primary);
            else
              t1 = true;
          else
            t1 = true;
        else
          t1 = true;
        if (t1)
          return baseType;
        else if (baseKind === 1 || baseType === type$.legacy_Never)
          return type$.Null;
        else if (baseKind === 6) {
          starArgument = baseType._primary;
          if (starArgument._kind === 8 && A.isNullable(starArgument._primary))
            return starArgument;
          else
            return A.Rti__getQuestionFromStar(universe, baseType);
        }
      }
      rti = new A.Rti(null, null);
      rti._kind = 7;
      rti._primary = baseType;
      rti._canonicalRecipe = key;
      return A._Universe__installTypeTests(universe, rti);
    },
    _Universe__lookupFutureOrRti(universe, baseType, normalize) {
      var t1,
        key = baseType._canonicalRecipe + "/",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = A._Universe__createFutureOrRti(universe, baseType, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createFutureOrRti(universe, baseType, key, normalize) {
      var t1, t2, rti;
      if (normalize) {
        t1 = baseType._kind;
        if (!A.isStrongTopType(baseType))
          if (!(baseType === type$.legacy_Object))
            t2 = false;
          else
            t2 = true;
        else
          t2 = true;
        if (t2 || baseType === type$.Object)
          return baseType;
        else if (t1 === 1)
          return A._Universe__lookupInterfaceRti(universe, "Future", [baseType]);
        else if (baseType === type$.Null || baseType === type$.JSNull)
          return type$.nullable_Future_Null;
      }
      rti = new A.Rti(null, null);
      rti._kind = 8;
      rti._primary = baseType;
      rti._canonicalRecipe = key;
      return A._Universe__installTypeTests(universe, rti);
    },
    _Universe__lookupGenericFunctionParameterRti(universe, index) {
      var rti, t1,
        key = "" + index + "^",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 14;
      rti._primary = index;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__canonicalRecipeJoin($arguments) {
      var s, sep, i,
        $length = $arguments.length;
      for (s = "", sep = "", i = 0; i < $length; ++i, sep = ",")
        s += sep + $arguments[i]._canonicalRecipe;
      return s;
    },
    _Universe__canonicalRecipeJoinNamed($arguments) {
      var s, sep, i, t1, nameSep,
        $length = $arguments.length;
      for (s = "", sep = "", i = 0; i < $length; i += 3, sep = ",") {
        t1 = $arguments[i];
        nameSep = $arguments[i + 1] ? "!" : ":";
        s += sep + t1 + nameSep + $arguments[i + 2]._canonicalRecipe;
      }
      return s;
    },
    _Universe__lookupInterfaceRti(universe, $name, $arguments) {
      var probe, rti, t1,
        s = $name;
      if ($arguments.length > 0)
        s += "<" + A._Universe__canonicalRecipeJoin($arguments) + ">";
      probe = universe.eC.get(s);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 9;
      rti._primary = $name;
      rti._rest = $arguments;
      if ($arguments.length > 0)
        rti._precomputed1 = $arguments[0];
      rti._canonicalRecipe = s;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(s, t1);
      return t1;
    },
    _Universe__lookupBindingRti(universe, base, $arguments) {
      var newBase, newArguments, key, probe, rti, t1;
      if (base._kind === 10) {
        newBase = base._primary;
        newArguments = base._rest.concat($arguments);
      } else {
        newArguments = $arguments;
        newBase = base;
      }
      key = newBase._canonicalRecipe + (";<" + A._Universe__canonicalRecipeJoin(newArguments) + ">");
      probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 10;
      rti._primary = newBase;
      rti._rest = newArguments;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__lookupRecordRti(universe, partialShapeTag, fields) {
      var rti, t1,
        key = "+" + (partialShapeTag + "(" + A._Universe__canonicalRecipeJoin(fields) + ")"),
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 11;
      rti._primary = partialShapeTag;
      rti._rest = fields;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__lookupFunctionRti(universe, returnType, parameters) {
      var sep, key, probe, rti, t1,
        s = returnType._canonicalRecipe,
        requiredPositional = parameters._requiredPositional,
        requiredPositionalLength = requiredPositional.length,
        optionalPositional = parameters._optionalPositional,
        optionalPositionalLength = optionalPositional.length,
        named = parameters._named,
        namedLength = named.length,
        recipe = "(" + A._Universe__canonicalRecipeJoin(requiredPositional);
      if (optionalPositionalLength > 0) {
        sep = requiredPositionalLength > 0 ? "," : "";
        recipe += sep + "[" + A._Universe__canonicalRecipeJoin(optionalPositional) + "]";
      }
      if (namedLength > 0) {
        sep = requiredPositionalLength > 0 ? "," : "";
        recipe += sep + "{" + A._Universe__canonicalRecipeJoinNamed(named) + "}";
      }
      key = s + (recipe + ")");
      probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 12;
      rti._primary = returnType;
      rti._rest = parameters;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__lookupGenericFunctionRti(universe, baseFunctionType, bounds, normalize) {
      var t1,
        key = baseFunctionType._canonicalRecipe + ("<" + A._Universe__canonicalRecipeJoin(bounds) + ">"),
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = A._Universe__createGenericFunctionRti(universe, baseFunctionType, bounds, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createGenericFunctionRti(universe, baseFunctionType, bounds, key, normalize) {
      var $length, typeArguments, count, i, bound, substitutedBase, substitutedBounds, rti;
      if (normalize) {
        $length = bounds.length;
        typeArguments = A._Utils_newArrayOrEmpty($length);
        for (count = 0, i = 0; i < $length; ++i) {
          bound = bounds[i];
          if (bound._kind === 1) {
            typeArguments[i] = bound;
            ++count;
          }
        }
        if (count > 0) {
          substitutedBase = A._substitute(universe, baseFunctionType, typeArguments, 0);
          substitutedBounds = A._substituteArray(universe, bounds, typeArguments, 0);
          return A._Universe__lookupGenericFunctionRti(universe, substitutedBase, substitutedBounds, bounds !== substitutedBounds);
        }
      }
      rti = new A.Rti(null, null);
      rti._kind = 13;
      rti._primary = baseFunctionType;
      rti._rest = bounds;
      rti._canonicalRecipe = key;
      return A._Universe__installTypeTests(universe, rti);
    },
    _Parser_create(universe, environment, recipe, normalize) {
      return {u: universe, e: environment, r: recipe, s: [], p: 0, n: normalize};
    },
    _Parser_parse(parser) {
      var t2, i, ch, t3, array, end, item,
        source = parser.r,
        t1 = parser.s;
      for (t2 = source.length, i = 0; i < t2;) {
        ch = source.charCodeAt(i);
        if (ch >= 48 && ch <= 57)
          i = A._Parser_handleDigit(i + 1, ch, source, t1);
        else if ((((ch | 32) >>> 0) - 97 & 65535) < 26 || ch === 95 || ch === 36 || ch === 124)
          i = A._Parser_handleIdentifier(parser, i, source, t1, false);
        else if (ch === 46)
          i = A._Parser_handleIdentifier(parser, i, source, t1, true);
        else {
          ++i;
          switch (ch) {
            case 44:
              break;
            case 58:
              t1.push(false);
              break;
            case 33:
              t1.push(true);
              break;
            case 59:
              t1.push(A._Parser_toType(parser.u, parser.e, t1.pop()));
              break;
            case 94:
              t1.push(A._Universe__lookupGenericFunctionParameterRti(parser.u, t1.pop()));
              break;
            case 35:
              t1.push(A._Universe__lookupTerminalRti(parser.u, 5, "#"));
              break;
            case 64:
              t1.push(A._Universe__lookupTerminalRti(parser.u, 2, "@"));
              break;
            case 126:
              t1.push(A._Universe__lookupTerminalRti(parser.u, 3, "~"));
              break;
            case 60:
              t1.push(parser.p);
              parser.p = t1.length;
              break;
            case 62:
              A._Parser_handleTypeArguments(parser, t1);
              break;
            case 38:
              A._Parser_handleExtendedOperations(parser, t1);
              break;
            case 42:
              t3 = parser.u;
              t1.push(A._Universe__lookupStarRti(t3, A._Parser_toType(t3, parser.e, t1.pop()), parser.n));
              break;
            case 63:
              t3 = parser.u;
              t1.push(A._Universe__lookupQuestionRti(t3, A._Parser_toType(t3, parser.e, t1.pop()), parser.n));
              break;
            case 47:
              t3 = parser.u;
              t1.push(A._Universe__lookupFutureOrRti(t3, A._Parser_toType(t3, parser.e, t1.pop()), parser.n));
              break;
            case 40:
              t1.push(-3);
              t1.push(parser.p);
              parser.p = t1.length;
              break;
            case 41:
              A._Parser_handleArguments(parser, t1);
              break;
            case 91:
              t1.push(parser.p);
              parser.p = t1.length;
              break;
            case 93:
              array = t1.splice(parser.p);
              A._Parser_toTypes(parser.u, parser.e, array);
              parser.p = t1.pop();
              t1.push(array);
              t1.push(-1);
              break;
            case 123:
              t1.push(parser.p);
              parser.p = t1.length;
              break;
            case 125:
              array = t1.splice(parser.p);
              A._Parser_toTypesNamed(parser.u, parser.e, array);
              parser.p = t1.pop();
              t1.push(array);
              t1.push(-2);
              break;
            case 43:
              end = source.indexOf("(", i);
              t1.push(source.substring(i, end));
              t1.push(-4);
              t1.push(parser.p);
              parser.p = t1.length;
              i = end + 1;
              break;
            default:
              throw "Bad character " + ch;
          }
        }
      }
      item = t1.pop();
      return A._Parser_toType(parser.u, parser.e, item);
    },
    _Parser_handleDigit(i, digit, source, stack) {
      var t1, ch,
        value = digit - 48;
      for (t1 = source.length; i < t1; ++i) {
        ch = source.charCodeAt(i);
        if (!(ch >= 48 && ch <= 57))
          break;
        value = value * 10 + (ch - 48);
      }
      stack.push(value);
      return i;
    },
    _Parser_handleIdentifier(parser, start, source, stack, hasPeriod) {
      var t1, ch, t2, string, environment, recipe,
        i = start + 1;
      for (t1 = source.length; i < t1; ++i) {
        ch = source.charCodeAt(i);
        if (ch === 46) {
          if (hasPeriod)
            break;
          hasPeriod = true;
        } else {
          if (!((((ch | 32) >>> 0) - 97 & 65535) < 26 || ch === 95 || ch === 36 || ch === 124))
            t2 = ch >= 48 && ch <= 57;
          else
            t2 = true;
          if (!t2)
            break;
        }
      }
      string = source.substring(start, i);
      if (hasPeriod) {
        t1 = parser.u;
        environment = parser.e;
        if (environment._kind === 10)
          environment = environment._primary;
        recipe = A._Universe_findRule(t1, environment._primary)[string];
        if (recipe == null)
          A.throwExpression('No "' + string + '" in "' + A.Rti__getCanonicalRecipe(environment) + '"');
        stack.push(A._Universe_evalInEnvironment(t1, environment, recipe));
      } else
        stack.push(string);
      return i;
    },
    _Parser_handleTypeArguments(parser, stack) {
      var base,
        t1 = parser.u,
        $arguments = A._Parser_collectArray(parser, stack),
        head = stack.pop();
      if (typeof head == "string")
        stack.push(A._Universe__lookupInterfaceRti(t1, head, $arguments));
      else {
        base = A._Parser_toType(t1, parser.e, head);
        switch (base._kind) {
          case 12:
            stack.push(A._Universe__lookupGenericFunctionRti(t1, base, $arguments, parser.n));
            break;
          default:
            stack.push(A._Universe__lookupBindingRti(t1, base, $arguments));
            break;
        }
      }
    },
    _Parser_handleArguments(parser, stack) {
      var optionalPositional, named, requiredPositional, returnType, parameters, _null = null,
        t1 = parser.u,
        head = stack.pop();
      if (typeof head == "number")
        switch (head) {
          case -1:
            optionalPositional = stack.pop();
            named = _null;
            break;
          case -2:
            named = stack.pop();
            optionalPositional = _null;
            break;
          default:
            stack.push(head);
            named = _null;
            optionalPositional = named;
            break;
        }
      else {
        stack.push(head);
        named = _null;
        optionalPositional = named;
      }
      requiredPositional = A._Parser_collectArray(parser, stack);
      head = stack.pop();
      switch (head) {
        case -3:
          head = stack.pop();
          if (optionalPositional == null)
            optionalPositional = t1.sEA;
          if (named == null)
            named = t1.sEA;
          returnType = A._Parser_toType(t1, parser.e, head);
          parameters = new A._FunctionParameters();
          parameters._requiredPositional = requiredPositional;
          parameters._optionalPositional = optionalPositional;
          parameters._named = named;
          stack.push(A._Universe__lookupFunctionRti(t1, returnType, parameters));
          return;
        case -4:
          stack.push(A._Universe__lookupRecordRti(t1, stack.pop(), requiredPositional));
          return;
        default:
          throw A.wrapException(A.AssertionError$("Unexpected state under `()`: " + A.S(head)));
      }
    },
    _Parser_handleExtendedOperations(parser, stack) {
      var $top = stack.pop();
      if (0 === $top) {
        stack.push(A._Universe__lookupTerminalRti(parser.u, 1, "0&"));
        return;
      }
      if (1 === $top) {
        stack.push(A._Universe__lookupTerminalRti(parser.u, 4, "1&"));
        return;
      }
      throw A.wrapException(A.AssertionError$("Unexpected extended operation " + A.S($top)));
    },
    _Parser_collectArray(parser, stack) {
      var array = stack.splice(parser.p);
      A._Parser_toTypes(parser.u, parser.e, array);
      parser.p = stack.pop();
      return array;
    },
    _Parser_toType(universe, environment, item) {
      if (typeof item == "string")
        return A._Universe__lookupInterfaceRti(universe, item, universe.sEA);
      else if (typeof item == "number") {
        environment.toString;
        return A._Parser_indexToType(universe, environment, item);
      } else
        return item;
    },
    _Parser_toTypes(universe, environment, items) {
      var i,
        $length = items.length;
      for (i = 0; i < $length; ++i)
        items[i] = A._Parser_toType(universe, environment, items[i]);
    },
    _Parser_toTypesNamed(universe, environment, items) {
      var i,
        $length = items.length;
      for (i = 2; i < $length; i += 3)
        items[i] = A._Parser_toType(universe, environment, items[i]);
    },
    _Parser_indexToType(universe, environment, index) {
      var typeArguments, len,
        kind = environment._kind;
      if (kind === 10) {
        if (index === 0)
          return environment._primary;
        typeArguments = environment._rest;
        len = typeArguments.length;
        if (index <= len)
          return typeArguments[index - 1];
        index -= len;
        environment = environment._primary;
        kind = environment._kind;
      } else if (index === 0)
        return environment;
      if (kind !== 9)
        throw A.wrapException(A.AssertionError$("Indexed base must be an interface type"));
      typeArguments = environment._rest;
      if (index <= typeArguments.length)
        return typeArguments[index - 1];
      throw A.wrapException(A.AssertionError$("Bad index " + index + " for " + environment.toString$0(0)));
    },
    isSubtype(universe, s, t) {
      var result,
        sCache = A.Rti__getIsSubtypeCache(s),
        probe = sCache.get(t);
      if (probe != null)
        return probe;
      result = A._isSubtype(universe, s, null, t, null);
      sCache.set(t, result);
      return result;
    },
    _isSubtype(universe, s, sEnv, t, tEnv) {
      var t1, sKind, leftTypeVariable, tKind, t2, sBounds, tBounds, sLength, i, sBound, tBound;
      if (s === t)
        return true;
      if (!A.isStrongTopType(t))
        if (!(t === type$.legacy_Object))
          t1 = false;
        else
          t1 = true;
      else
        t1 = true;
      if (t1)
        return true;
      sKind = s._kind;
      if (sKind === 4)
        return true;
      if (A.isStrongTopType(s))
        return false;
      if (s._kind !== 1)
        t1 = false;
      else
        t1 = true;
      if (t1)
        return true;
      leftTypeVariable = sKind === 14;
      if (leftTypeVariable)
        if (A._isSubtype(universe, sEnv[s._primary], sEnv, t, tEnv))
          return true;
      tKind = t._kind;
      t1 = s === type$.Null || s === type$.JSNull;
      if (t1) {
        if (tKind === 8)
          return A._isSubtype(universe, s, sEnv, t._primary, tEnv);
        return t === type$.Null || t === type$.JSNull || tKind === 7 || tKind === 6;
      }
      if (t === type$.Object) {
        if (sKind === 8)
          return A._isSubtype(universe, s._primary, sEnv, t, tEnv);
        if (sKind === 6)
          return A._isSubtype(universe, s._primary, sEnv, t, tEnv);
        return sKind !== 7;
      }
      if (sKind === 6)
        return A._isSubtype(universe, s._primary, sEnv, t, tEnv);
      if (tKind === 6) {
        t1 = A.Rti__getQuestionFromStar(universe, t);
        return A._isSubtype(universe, s, sEnv, t1, tEnv);
      }
      if (sKind === 8) {
        if (!A._isSubtype(universe, s._primary, sEnv, t, tEnv))
          return false;
        return A._isSubtype(universe, A.Rti__getFutureFromFutureOr(universe, s), sEnv, t, tEnv);
      }
      if (sKind === 7) {
        t1 = A._isSubtype(universe, type$.Null, sEnv, t, tEnv);
        return t1 && A._isSubtype(universe, s._primary, sEnv, t, tEnv);
      }
      if (tKind === 8) {
        if (A._isSubtype(universe, s, sEnv, t._primary, tEnv))
          return true;
        return A._isSubtype(universe, s, sEnv, A.Rti__getFutureFromFutureOr(universe, t), tEnv);
      }
      if (tKind === 7) {
        t1 = A._isSubtype(universe, s, sEnv, type$.Null, tEnv);
        return t1 || A._isSubtype(universe, s, sEnv, t._primary, tEnv);
      }
      if (leftTypeVariable)
        return false;
      t1 = sKind !== 12;
      if ((!t1 || sKind === 13) && t === type$.Function)
        return true;
      t2 = sKind === 11;
      if (t2 && t === type$.Record)
        return true;
      if (tKind === 13) {
        if (s === type$.JavaScriptFunction)
          return true;
        if (sKind !== 13)
          return false;
        sBounds = s._rest;
        tBounds = t._rest;
        sLength = sBounds.length;
        if (sLength !== tBounds.length)
          return false;
        sEnv = sEnv == null ? sBounds : sBounds.concat(sEnv);
        tEnv = tEnv == null ? tBounds : tBounds.concat(tEnv);
        for (i = 0; i < sLength; ++i) {
          sBound = sBounds[i];
          tBound = tBounds[i];
          if (!A._isSubtype(universe, sBound, sEnv, tBound, tEnv) || !A._isSubtype(universe, tBound, tEnv, sBound, sEnv))
            return false;
        }
        return A._isFunctionSubtype(universe, s._primary, sEnv, t._primary, tEnv);
      }
      if (tKind === 12) {
        if (s === type$.JavaScriptFunction)
          return true;
        if (t1)
          return false;
        return A._isFunctionSubtype(universe, s, sEnv, t, tEnv);
      }
      if (sKind === 9) {
        if (tKind !== 9)
          return false;
        return A._isInterfaceSubtype(universe, s, sEnv, t, tEnv);
      }
      if (t2 && tKind === 11)
        return A._isRecordSubtype(universe, s, sEnv, t, tEnv);
      return false;
    },
    _isFunctionSubtype(universe, s, sEnv, t, tEnv) {
      var sParameters, tParameters, sRequiredPositional, tRequiredPositional, sRequiredPositionalLength, tRequiredPositionalLength, requiredPositionalDelta, sOptionalPositional, tOptionalPositional, sOptionalPositionalLength, tOptionalPositionalLength, i, t1, sNamed, tNamed, sNamedLength, tNamedLength, sIndex, tIndex, tName, sName, sIsRequired;
      if (!A._isSubtype(universe, s._primary, sEnv, t._primary, tEnv))
        return false;
      sParameters = s._rest;
      tParameters = t._rest;
      sRequiredPositional = sParameters._requiredPositional;
      tRequiredPositional = tParameters._requiredPositional;
      sRequiredPositionalLength = sRequiredPositional.length;
      tRequiredPositionalLength = tRequiredPositional.length;
      if (sRequiredPositionalLength > tRequiredPositionalLength)
        return false;
      requiredPositionalDelta = tRequiredPositionalLength - sRequiredPositionalLength;
      sOptionalPositional = sParameters._optionalPositional;
      tOptionalPositional = tParameters._optionalPositional;
      sOptionalPositionalLength = sOptionalPositional.length;
      tOptionalPositionalLength = tOptionalPositional.length;
      if (sRequiredPositionalLength + sOptionalPositionalLength < tRequiredPositionalLength + tOptionalPositionalLength)
        return false;
      for (i = 0; i < sRequiredPositionalLength; ++i) {
        t1 = sRequiredPositional[i];
        if (!A._isSubtype(universe, tRequiredPositional[i], tEnv, t1, sEnv))
          return false;
      }
      for (i = 0; i < requiredPositionalDelta; ++i) {
        t1 = sOptionalPositional[i];
        if (!A._isSubtype(universe, tRequiredPositional[sRequiredPositionalLength + i], tEnv, t1, sEnv))
          return false;
      }
      for (i = 0; i < tOptionalPositionalLength; ++i) {
        t1 = sOptionalPositional[requiredPositionalDelta + i];
        if (!A._isSubtype(universe, tOptionalPositional[i], tEnv, t1, sEnv))
          return false;
      }
      sNamed = sParameters._named;
      tNamed = tParameters._named;
      sNamedLength = sNamed.length;
      tNamedLength = tNamed.length;
      for (sIndex = 0, tIndex = 0; tIndex < tNamedLength; tIndex += 3) {
        tName = tNamed[tIndex];
        for (; true;) {
          if (sIndex >= sNamedLength)
            return false;
          sName = sNamed[sIndex];
          sIndex += 3;
          if (tName < sName)
            return false;
          sIsRequired = sNamed[sIndex - 2];
          if (sName < tName) {
            if (sIsRequired)
              return false;
            continue;
          }
          t1 = tNamed[tIndex + 1];
          if (sIsRequired && !t1)
            return false;
          t1 = sNamed[sIndex - 1];
          if (!A._isSubtype(universe, tNamed[tIndex + 2], tEnv, t1, sEnv))
            return false;
          break;
        }
      }
      for (; sIndex < sNamedLength;) {
        if (sNamed[sIndex + 1])
          return false;
        sIndex += 3;
      }
      return true;
    },
    _isInterfaceSubtype(universe, s, sEnv, t, tEnv) {
      var rule, recipes, $length, supertypeArgs, i, t1, t2,
        sName = s._primary,
        tName = t._primary;
      for (; sName !== tName;) {
        rule = universe.tR[sName];
        if (rule == null)
          return false;
        if (typeof rule == "string") {
          sName = rule;
          continue;
        }
        recipes = rule[tName];
        if (recipes == null)
          return false;
        $length = recipes.length;
        supertypeArgs = $length > 0 ? new Array($length) : init.typeUniverse.sEA;
        for (i = 0; i < $length; ++i)
          supertypeArgs[i] = A._Universe_evalInEnvironment(universe, s, recipes[i]);
        return A._areArgumentsSubtypes(universe, supertypeArgs, null, sEnv, t._rest, tEnv);
      }
      t1 = s._rest;
      t2 = t._rest;
      return A._areArgumentsSubtypes(universe, t1, null, sEnv, t2, tEnv);
    },
    _areArgumentsSubtypes(universe, sArgs, sVariances, sEnv, tArgs, tEnv) {
      var i, t1, t2,
        $length = sArgs.length;
      for (i = 0; i < $length; ++i) {
        t1 = sArgs[i];
        t2 = tArgs[i];
        if (!A._isSubtype(universe, t1, sEnv, t2, tEnv))
          return false;
      }
      return true;
    },
    _isRecordSubtype(universe, s, sEnv, t, tEnv) {
      var i,
        sFields = s._rest,
        tFields = t._rest,
        sCount = sFields.length;
      if (sCount !== tFields.length)
        return false;
      if (s._primary !== t._primary)
        return false;
      for (i = 0; i < sCount; ++i)
        if (!A._isSubtype(universe, sFields[i], sEnv, tFields[i], tEnv))
          return false;
      return true;
    },
    isNullable(t) {
      var t1,
        kind = t._kind;
      if (!(t === type$.Null || t === type$.JSNull))
        if (!A.isStrongTopType(t))
          if (kind !== 7)
            if (!(kind === 6 && A.isNullable(t._primary)))
              t1 = kind === 8 && A.isNullable(t._primary);
            else
              t1 = true;
          else
            t1 = true;
        else
          t1 = true;
      else
        t1 = true;
      return t1;
    },
    isTopType(t) {
      var t1;
      if (!A.isStrongTopType(t))
        if (!(t === type$.legacy_Object))
          t1 = false;
        else
          t1 = true;
      else
        t1 = true;
      return t1;
    },
    isStrongTopType(t) {
      var kind = t._kind;
      return kind === 2 || kind === 3 || kind === 4 || kind === 5 || t === type$.nullable_Object;
    },
    _Utils_objectAssign(o, other) {
      var i, key,
        keys = Object.keys(other),
        $length = keys.length;
      for (i = 0; i < $length; ++i) {
        key = keys[i];
        o[key] = other[key];
      }
    },
    _Utils_newArrayOrEmpty($length) {
      return $length > 0 ? new Array($length) : init.typeUniverse.sEA;
    },
    Rti: function Rti(t0, t1) {
      var _ = this;
      _._as = t0;
      _._is = t1;
      _._cachedRuntimeType = _._specializedTestResource = _._unsoundIsSubtypeCache = _._isSubtypeCache = _._precomputed1 = null;
      _._kind = 0;
      _._canonicalRecipe = _._bindCache = _._evalCache = _._rest = _._primary = null;
    },
    _FunctionParameters: function _FunctionParameters() {
      this._named = this._optionalPositional = this._requiredPositional = null;
    },
    _Type: function _Type(t0) {
      this._rti = t0;
    },
    _Error: function _Error() {
    },
    _TypeError: function _TypeError(t0) {
      this.__rti$_message = t0;
    },
    heuristicMapper(code, key) {
      var charCode, t1;
      if (B.JSString_methods.startsWith$1(code, "Digit"))
        return code.charCodeAt(5);
      charCode = key.charCodeAt(0);
      if (key.length <= 1)
        t1 = !(charCode >= 32 && charCode <= 127);
      else
        t1 = true;
      if (t1) {
        t1 = B.Map_skkUy.$index(0, code);
        return t1 == null ? null : t1.charCodeAt(0);
      }
      if (!(charCode >= $.$get$_kLowerA() && charCode <= $.$get$_kLowerZ()))
        t1 = charCode >= $.$get$_kUpperA() && charCode <= $.$get$_kUpperZ();
      else
        t1 = true;
      if (t1)
        return key.toLowerCase().charCodeAt(0);
      return null;
    },
    _StringStream$(_data) {
      var t1 = A.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.String);
      t1.addEntries$1(t1, B.Map_skkUy.get$entries(B.Map_skkUy).map$1$1(0, new A._StringStream__goalToEventCode_closure(), type$.MapEntry_int_String));
      return new A._StringStream(_data, t1);
    },
    _unmarshallCodeMap(stream) {
      var t2, i, t3, t4,
        entryNum = stream.readIntAsVerbatim$0(),
        t1 = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.int);
      for (t2 = stream.__web_locale_keymap$_data, i = 0; i < entryNum; ++i) {
        t3 = stream.readEventKey$0();
        t4 = stream.__web_locale_keymap$_offset;
        stream.__web_locale_keymap$_offset = t4 + 1;
        t1.$indexSet(0, t3, t2.charCodeAt(t4));
      }
      return t1;
    },
    unmarshallMappingData(compressed) {
      var t2, t3, i, t4,
        stream = A._StringStream$(compressed),
        eventCodeNum = stream.readIntAsVerbatim$0(),
        t1 = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.Map_String_int);
      for (t2 = stream.__web_locale_keymap$_data, t3 = stream._goalToEventCode, i = 0; i < eventCodeNum; ++i) {
        t4 = stream.__web_locale_keymap$_offset;
        stream.__web_locale_keymap$_offset = t4 + 1;
        t4 = t3.$index(0, t2.charCodeAt(t4));
        t4.toString;
        t1.$indexSet(0, t4, A._unmarshallCodeMap(stream));
      }
      return t1;
    },
    _characterToLogicalKey(key) {
      if (key == null || key.length >= 2)
        return null;
      return key.toLowerCase().charCodeAt(0);
    },
    _StringStream: function _StringStream(t0, t1) {
      this.__web_locale_keymap$_data = t0;
      this._goalToEventCode = t1;
      this.__web_locale_keymap$_offset = 0;
    },
    _StringStream__goalToEventCode_closure: function _StringStream__goalToEventCode_closure() {
    },
    LocaleKeymap: function LocaleKeymap(t0) {
      this.__web_locale_keymap$_mapping = t0;
    },
    LineCharProperty: function LineCharProperty(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    _AsyncRun__initializeScheduleImmediate() {
      var div, span, t1 = {};
      if (self.scheduleImmediate != null)
        return A.async__AsyncRun__scheduleImmediateJsOverride$closure();
      if (self.MutationObserver != null && self.document != null) {
        div = self.document.createElement("div");
        span = self.document.createElement("span");
        t1.storedCallback = null;
        new self.MutationObserver(A.convertDartClosureToJS(new A._AsyncRun__initializeScheduleImmediate_internalCallback(t1), 1)).observe(div, {childList: true});
        return new A._AsyncRun__initializeScheduleImmediate_closure(t1, div, span);
      } else if (self.setImmediate != null)
        return A.async__AsyncRun__scheduleImmediateWithSetImmediate$closure();
      return A.async__AsyncRun__scheduleImmediateWithTimer$closure();
    },
    _AsyncRun__scheduleImmediateJsOverride(callback) {
      self.scheduleImmediate(A.convertDartClosureToJS(new A._AsyncRun__scheduleImmediateJsOverride_internalCallback(callback), 0));
    },
    _AsyncRun__scheduleImmediateWithSetImmediate(callback) {
      self.setImmediate(A.convertDartClosureToJS(new A._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback(callback), 0));
    },
    _AsyncRun__scheduleImmediateWithTimer(callback) {
      A.Timer__createTimer(B.Duration_0, callback);
    },
    Timer__createTimer(duration, callback) {
      var milliseconds = B.JSInt_methods._tdivFast$1(duration._duration, 1000);
      return A._TimerImpl$(milliseconds < 0 ? 0 : milliseconds, callback);
    },
    _TimerImpl$(milliseconds, callback) {
      var t1 = new A._TimerImpl();
      t1._TimerImpl$2(milliseconds, callback);
      return t1;
    },
    _makeAsyncAwaitCompleter($T) {
      return new A._AsyncAwaitCompleter(new A._Future($.Zone__current, $T._eval$1("_Future<0>")), $T._eval$1("_AsyncAwaitCompleter<0>"));
    },
    _asyncStartSync(bodyFunction, completer) {
      bodyFunction.call$2(0, null);
      completer.isSync = true;
      return completer._future;
    },
    _asyncAwait(object, bodyFunction) {
      A._awaitOnObject(object, bodyFunction);
    },
    _asyncReturn(object, completer) {
      completer.complete$1(0, object);
    },
    _asyncRethrow(object, completer) {
      completer.completeError$2(A.unwrapException(object), A.getTraceFromException(object));
    },
    _awaitOnObject(object, bodyFunction) {
      var t1, future,
        thenCallback = new A._awaitOnObject_closure(bodyFunction),
        errorCallback = new A._awaitOnObject_closure0(bodyFunction);
      if (object instanceof A._Future)
        object._thenAwait$1$2(thenCallback, errorCallback, type$.dynamic);
      else {
        t1 = type$.dynamic;
        if (object instanceof A._Future)
          object.then$1$2$onError(thenCallback, errorCallback, t1);
        else {
          future = new A._Future($.Zone__current, type$._Future_dynamic);
          future._state = 8;
          future._resultOrListeners = object;
          future._thenAwait$1$2(thenCallback, errorCallback, t1);
        }
      }
    },
    _wrapJsFunctionForAsync($function) {
      var $protected = function(fn, ERROR) {
        return function(errorCode, result) {
          while (true)
            try {
              fn(errorCode, result);
              break;
            } catch (error) {
              result = error;
              errorCode = ERROR;
            }
        };
      }($function, 1);
      return $.Zone__current.registerBinaryCallback$1(new A._wrapJsFunctionForAsync_closure($protected));
    },
    _SyncStarIterator__terminatedBody(_1, _2, _3) {
      return 0;
    },
    AsyncError$(error, stackTrace) {
      var t1 = A.checkNotNullable(error, "error", type$.Object);
      return new A.AsyncError(t1, stackTrace == null ? A.AsyncError_defaultStackTrace(error) : stackTrace);
    },
    AsyncError_defaultStackTrace(error) {
      var stackTrace;
      if (type$.Error._is(error)) {
        stackTrace = error.get$stackTrace();
        if (stackTrace != null)
          return stackTrace;
      }
      return B.C__StringStackTrace;
    },
    Future_Future$value(value, $T) {
      var t1 = value == null ? $T._as(value) : value,
        t2 = new A._Future($.Zone__current, $T._eval$1("_Future<0>"));
      t2._asyncComplete$1(t1);
      return t2;
    },
    Future_Future$error(error, stackTrace, $T) {
      var t1;
      A.checkNotNullable(error, "error", type$.Object);
      $.Zone__current !== B.C__RootZone;
      if (stackTrace == null)
        stackTrace = A.AsyncError_defaultStackTrace(error);
      t1 = new A._Future($.Zone__current, $T._eval$1("_Future<0>"));
      t1._asyncCompleteError$2(error, stackTrace);
      return t1;
    },
    Future_Future$delayed(duration, $T) {
      var result,
        t1 = !$T._is(null);
      if (t1)
        throw A.wrapException(A.ArgumentError$value(null, "computation", "The type parameter is not nullable"));
      result = new A._Future($.Zone__current, $T._eval$1("_Future<0>"));
      A.Timer_Timer(duration, new A.Future_Future$delayed_closure(null, result, $T));
      return result;
    },
    Future_wait(futures, $T) {
      var error, stackTrace, handleError, future, pos, e, st, t1, t2, _i, t3, exception, _box_0 = {}, cleanUp = null,
        eagerError = false,
        _future = new A._Future($.Zone__current, $T._eval$1("_Future<List<0>>"));
      _box_0.values = null;
      _box_0.remaining = 0;
      error = A._Cell$named("error");
      stackTrace = A._Cell$named("stackTrace");
      handleError = new A.Future_wait_handleError(_box_0, cleanUp, eagerError, _future, error, stackTrace);
      try {
        for (t1 = futures.length, t2 = type$.Null, _i = 0, t3 = 0; _i < futures.length; futures.length === t1 || (0, A.throwConcurrentModificationError)(futures), ++_i) {
          future = futures[_i];
          pos = t3;
          future.then$1$2$onError(new A.Future_wait_closure(_box_0, pos, _future, cleanUp, eagerError, error, stackTrace, $T), handleError, t2);
          t3 = ++_box_0.remaining;
        }
        if (t3 === 0) {
          t1 = _future;
          t1._completeWithValue$1(A._setArrayType([], $T._eval$1("JSArray<0>")));
          return t1;
        }
        _box_0.values = A.List_List$filled(t3, null, false, $T._eval$1("0?"));
      } catch (exception) {
        e = A.unwrapException(exception);
        st = A.getTraceFromException(exception);
        if (_box_0.remaining === 0 || eagerError)
          return A.Future_Future$error(e, st, $T._eval$1("List<0>"));
        else {
          error.__late_helper$_value = e;
          stackTrace.__late_helper$_value = st;
        }
      }
      return _future;
    },
    _completeWithErrorCallback(result, error, stackTrace) {
      if (stackTrace == null)
        stackTrace = A.AsyncError_defaultStackTrace(error);
      result._completeError$2(error, stackTrace);
    },
    _Future$value(value, $T) {
      var t1 = new A._Future($.Zone__current, $T._eval$1("_Future<0>"));
      t1._state = 8;
      t1._resultOrListeners = value;
      return t1;
    },
    _Future__chainCoreFutureSync(source, target) {
      var t1, listeners;
      for (; t1 = source._state, (t1 & 4) !== 0;)
        source = source._resultOrListeners;
      if ((t1 & 24) !== 0) {
        listeners = target._removeListeners$0();
        target._cloneResult$1(source);
        A._Future__propagateToListeners(target, listeners);
      } else {
        listeners = target._resultOrListeners;
        target._setChained$1(source);
        source._prependListeners$1(listeners);
      }
    },
    _Future__chainCoreFutureAsync(source, target) {
      var t2, listeners, _box_0 = {},
        t1 = _box_0.source = source;
      for (; t2 = t1._state, (t2 & 4) !== 0;) {
        t1 = t1._resultOrListeners;
        _box_0.source = t1;
      }
      if ((t2 & 24) === 0) {
        listeners = target._resultOrListeners;
        target._setChained$1(t1);
        _box_0.source._prependListeners$1(listeners);
        return;
      }
      if ((t2 & 16) === 0 && target._resultOrListeners == null) {
        target._cloneResult$1(t1);
        return;
      }
      target._state ^= 2;
      A._rootScheduleMicrotask(null, null, target._zone, new A._Future__chainCoreFutureAsync_closure(_box_0, target));
    },
    _Future__propagateToListeners(source, listeners) {
      var _box_0, t2, t3, hasError, nextListener, nextListener0, sourceResult, t4, zone, oldZone, result, current, _box_1 = {},
        t1 = _box_1.source = source;
      for (; true;) {
        _box_0 = {};
        t2 = t1._state;
        t3 = (t2 & 16) === 0;
        hasError = !t3;
        if (listeners == null) {
          if (hasError && (t2 & 1) === 0) {
            t1 = t1._resultOrListeners;
            A._rootHandleError(t1.error, t1.stackTrace);
          }
          return;
        }
        _box_0.listener = listeners;
        nextListener = listeners._nextListener;
        for (t1 = listeners; nextListener != null; t1 = nextListener, nextListener = nextListener0) {
          t1._nextListener = null;
          A._Future__propagateToListeners(_box_1.source, t1);
          _box_0.listener = nextListener;
          nextListener0 = nextListener._nextListener;
        }
        t2 = _box_1.source;
        sourceResult = t2._resultOrListeners;
        _box_0.listenerHasError = hasError;
        _box_0.listenerValueOrError = sourceResult;
        if (t3) {
          t4 = t1.state;
          t4 = (t4 & 1) !== 0 || (t4 & 15) === 8;
        } else
          t4 = true;
        if (t4) {
          zone = t1.result._zone;
          if (hasError) {
            t2 = t2._zone === zone;
            t2 = !(t2 || t2);
          } else
            t2 = false;
          if (t2) {
            A._rootHandleError(sourceResult.error, sourceResult.stackTrace);
            return;
          }
          oldZone = $.Zone__current;
          if (oldZone !== zone)
            $.Zone__current = zone;
          else
            oldZone = null;
          t1 = t1.state;
          if ((t1 & 15) === 8)
            new A._Future__propagateToListeners_handleWhenCompleteCallback(_box_0, _box_1, hasError).call$0();
          else if (t3) {
            if ((t1 & 1) !== 0)
              new A._Future__propagateToListeners_handleValueCallback(_box_0, sourceResult).call$0();
          } else if ((t1 & 2) !== 0)
            new A._Future__propagateToListeners_handleError(_box_1, _box_0).call$0();
          if (oldZone != null)
            $.Zone__current = oldZone;
          t1 = _box_0.listenerValueOrError;
          if (t1 instanceof A._Future) {
            t2 = _box_0.listener.$ti;
            t2 = t2._eval$1("Future<2>")._is(t1) || !t2._rest[1]._is(t1);
          } else
            t2 = false;
          if (t2) {
            result = _box_0.listener.result;
            if ((t1._state & 24) !== 0) {
              current = result._resultOrListeners;
              result._resultOrListeners = null;
              listeners = result._reverseListeners$1(current);
              result._state = t1._state & 30 | result._state & 1;
              result._resultOrListeners = t1._resultOrListeners;
              _box_1.source = t1;
              continue;
            } else
              A._Future__chainCoreFutureSync(t1, result);
            return;
          }
        }
        result = _box_0.listener.result;
        current = result._resultOrListeners;
        result._resultOrListeners = null;
        listeners = result._reverseListeners$1(current);
        t1 = _box_0.listenerHasError;
        t2 = _box_0.listenerValueOrError;
        if (!t1) {
          result._state = 8;
          result._resultOrListeners = t2;
        } else {
          result._state = result._state & 1 | 16;
          result._resultOrListeners = t2;
        }
        _box_1.source = result;
        t1 = result;
      }
    },
    _registerErrorHandler(errorHandler, zone) {
      if (type$.dynamic_Function_Object_StackTrace._is(errorHandler))
        return zone.registerBinaryCallback$1(errorHandler);
      if (type$.dynamic_Function_Object._is(errorHandler))
        return errorHandler;
      throw A.wrapException(A.ArgumentError$value(errorHandler, "onError", string$.Error_));
    },
    _microtaskLoop() {
      var entry, next;
      for (entry = $._nextCallback; entry != null; entry = $._nextCallback) {
        $._lastPriorityCallback = null;
        next = entry.next;
        $._nextCallback = next;
        if (next == null)
          $._lastCallback = null;
        entry.callback.call$0();
      }
    },
    _startMicrotaskLoop() {
      $._isInCallbackLoop = true;
      try {
        A._microtaskLoop();
      } finally {
        $._lastPriorityCallback = null;
        $._isInCallbackLoop = false;
        if ($._nextCallback != null)
          $.$get$_AsyncRun__scheduleImmediateClosure().call$1(A.async___startMicrotaskLoop$closure());
      }
    },
    _scheduleAsyncCallback(callback) {
      var newEntry = new A._AsyncCallbackEntry(callback),
        lastCallback = $._lastCallback;
      if (lastCallback == null) {
        $._nextCallback = $._lastCallback = newEntry;
        if (!$._isInCallbackLoop)
          $.$get$_AsyncRun__scheduleImmediateClosure().call$1(A.async___startMicrotaskLoop$closure());
      } else
        $._lastCallback = lastCallback.next = newEntry;
    },
    _schedulePriorityAsyncCallback(callback) {
      var entry, lastPriorityCallback, next,
        t1 = $._nextCallback;
      if (t1 == null) {
        A._scheduleAsyncCallback(callback);
        $._lastPriorityCallback = $._lastCallback;
        return;
      }
      entry = new A._AsyncCallbackEntry(callback);
      lastPriorityCallback = $._lastPriorityCallback;
      if (lastPriorityCallback == null) {
        entry.next = t1;
        $._nextCallback = $._lastPriorityCallback = entry;
      } else {
        next = lastPriorityCallback.next;
        entry.next = next;
        $._lastPriorityCallback = lastPriorityCallback.next = entry;
        if (next == null)
          $._lastCallback = entry;
      }
    },
    scheduleMicrotask(callback) {
      var t1, _null = null,
        currentZone = $.Zone__current;
      if (B.C__RootZone === currentZone) {
        A._rootScheduleMicrotask(_null, _null, B.C__RootZone, callback);
        return;
      }
      t1 = false;
      if (t1) {
        A._rootScheduleMicrotask(_null, _null, currentZone, callback);
        return;
      }
      A._rootScheduleMicrotask(_null, _null, currentZone, currentZone.bindCallbackGuarded$1(callback));
    },
    StreamIterator_StreamIterator(stream) {
      A.checkNotNullable(stream, "stream", type$.Object);
      return new A._StreamIterator();
    },
    StreamController_StreamController$broadcast($T) {
      return new A._AsyncBroadcastStreamController(null, null, $T._eval$1("_AsyncBroadcastStreamController<0>"));
    },
    _runGuarded(notificationHandler) {
      return;
    },
    _BufferingStreamSubscription__registerDataHandler(zone, handleData) {
      return handleData == null ? A.async___nullDataHandler$closure() : handleData;
    },
    _BufferingStreamSubscription__registerErrorHandler(zone, handleError) {
      if (handleError == null)
        handleError = A.async___nullErrorHandler$closure();
      if (type$.void_Function_Object_StackTrace._is(handleError))
        return zone.registerBinaryCallback$1(handleError);
      if (type$.void_Function_Object._is(handleError))
        return handleError;
      throw A.wrapException(A.ArgumentError$("handleError callback must take either an Object (the error), or both an Object (the error) and a StackTrace.", null));
    },
    _nullDataHandler(value) {
    },
    _nullErrorHandler(error, stackTrace) {
      A._rootHandleError(error, stackTrace);
    },
    _nullDoneHandler() {
    },
    _cancelAndValue(subscription, future, value) {
      var t2,
        cancelFuture = subscription.cancel$0(0),
        t1 = $.$get$Future__nullFuture();
      if (cancelFuture !== t1) {
        t1 = cancelFuture.$ti;
        t2 = $.Zone__current;
        cancelFuture._addListener$1(new A._FutureListener(new A._Future(t2, t1), 8, new A._cancelAndValue_closure(future, value), null, t1._eval$1("@<1>")._bind$1(t1._precomputed1)._eval$1("_FutureListener<1,2>")));
      } else
        future._complete$1(value);
    },
    Timer_Timer(duration, callback) {
      var t1 = $.Zone__current;
      if (t1 === B.C__RootZone)
        return A.Timer__createTimer(duration, callback);
      return A.Timer__createTimer(duration, t1.bindCallbackGuarded$1(callback));
    },
    _rootHandleError(error, stackTrace) {
      A._schedulePriorityAsyncCallback(new A._rootHandleError_closure(error, stackTrace));
    },
    _rootRun($self, $parent, zone, f) {
      var old,
        t1 = $.Zone__current;
      if (t1 === zone)
        return f.call$0();
      $.Zone__current = zone;
      old = t1;
      try {
        t1 = f.call$0();
        return t1;
      } finally {
        $.Zone__current = old;
      }
    },
    _rootRunUnary($self, $parent, zone, f, arg) {
      var old,
        t1 = $.Zone__current;
      if (t1 === zone)
        return f.call$1(arg);
      $.Zone__current = zone;
      old = t1;
      try {
        t1 = f.call$1(arg);
        return t1;
      } finally {
        $.Zone__current = old;
      }
    },
    _rootRunBinary($self, $parent, zone, f, arg1, arg2) {
      var old,
        t1 = $.Zone__current;
      if (t1 === zone)
        return f.call$2(arg1, arg2);
      $.Zone__current = zone;
      old = t1;
      try {
        t1 = f.call$2(arg1, arg2);
        return t1;
      } finally {
        $.Zone__current = old;
      }
    },
    _rootScheduleMicrotask($self, $parent, zone, f) {
      if (B.C__RootZone !== zone)
        f = zone.bindCallbackGuarded$1(f);
      A._scheduleAsyncCallback(f);
    },
    _AsyncRun__initializeScheduleImmediate_internalCallback: function _AsyncRun__initializeScheduleImmediate_internalCallback(t0) {
      this._box_0 = t0;
    },
    _AsyncRun__initializeScheduleImmediate_closure: function _AsyncRun__initializeScheduleImmediate_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.div = t1;
      this.span = t2;
    },
    _AsyncRun__scheduleImmediateJsOverride_internalCallback: function _AsyncRun__scheduleImmediateJsOverride_internalCallback(t0) {
      this.callback = t0;
    },
    _AsyncRun__scheduleImmediateWithSetImmediate_internalCallback: function _AsyncRun__scheduleImmediateWithSetImmediate_internalCallback(t0) {
      this.callback = t0;
    },
    _TimerImpl: function _TimerImpl() {
      this._handle = null;
    },
    _TimerImpl_internalCallback: function _TimerImpl_internalCallback(t0, t1) {
      this.$this = t0;
      this.callback = t1;
    },
    _AsyncAwaitCompleter: function _AsyncAwaitCompleter(t0, t1) {
      this._future = t0;
      this.isSync = false;
      this.$ti = t1;
    },
    _awaitOnObject_closure: function _awaitOnObject_closure(t0) {
      this.bodyFunction = t0;
    },
    _awaitOnObject_closure0: function _awaitOnObject_closure0(t0) {
      this.bodyFunction = t0;
    },
    _wrapJsFunctionForAsync_closure: function _wrapJsFunctionForAsync_closure(t0) {
      this.$protected = t0;
    },
    _SyncStarIterator: function _SyncStarIterator(t0) {
      var _ = this;
      _._body = t0;
      _._suspendedBodies = _._nestedIterator = _._datum = _._async$_current = null;
    },
    _SyncStarIterable: function _SyncStarIterable(t0, t1) {
      this._outerHelper = t0;
      this.$ti = t1;
    },
    AsyncError: function AsyncError(t0, t1) {
      this.error = t0;
      this.stackTrace = t1;
    },
    _BroadcastStream: function _BroadcastStream(t0, t1) {
      this._controller = t0;
      this.$ti = t1;
    },
    _BroadcastSubscription: function _BroadcastSubscription(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._eventState = 0;
      _._async$_previous = _._async$_next = null;
      _._controller = t0;
      _._onData = t1;
      _._onDone = t2;
      _._zone = t3;
      _._state = t4;
      _._pending = _._cancelFuture = null;
      _.$ti = t5;
    },
    _BroadcastStreamController: function _BroadcastStreamController() {
    },
    _AsyncBroadcastStreamController: function _AsyncBroadcastStreamController(t0, t1, t2) {
      var _ = this;
      _.onListen = t0;
      _.onCancel = t1;
      _._state = 0;
      _._doneFuture = _._lastSubscription = _._firstSubscription = null;
      _.$ti = t2;
    },
    Future_Future$delayed_closure: function Future_Future$delayed_closure(t0, t1, t2) {
      this.computation = t0;
      this.result = t1;
      this.T = t2;
    },
    Future_wait_handleError: function Future_wait_handleError(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._box_0 = t0;
      _.cleanUp = t1;
      _.eagerError = t2;
      _._future = t3;
      _.error = t4;
      _.stackTrace = t5;
    },
    Future_wait_closure: function Future_wait_closure(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._box_0 = t0;
      _.pos = t1;
      _._future = t2;
      _.cleanUp = t3;
      _.eagerError = t4;
      _.error = t5;
      _.stackTrace = t6;
      _.T = t7;
    },
    _Completer: function _Completer() {
    },
    _AsyncCompleter: function _AsyncCompleter(t0, t1) {
      this.future = t0;
      this.$ti = t1;
    },
    _FutureListener: function _FutureListener(t0, t1, t2, t3, t4) {
      var _ = this;
      _._nextListener = null;
      _.result = t0;
      _.state = t1;
      _.callback = t2;
      _.errorCallback = t3;
      _.$ti = t4;
    },
    _Future: function _Future(t0, t1) {
      var _ = this;
      _._state = 0;
      _._zone = t0;
      _._resultOrListeners = null;
      _.$ti = t1;
    },
    _Future__addListener_closure: function _Future__addListener_closure(t0, t1) {
      this.$this = t0;
      this.listener = t1;
    },
    _Future__prependListeners_closure: function _Future__prependListeners_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    _Future__chainForeignFuture_closure: function _Future__chainForeignFuture_closure(t0) {
      this.$this = t0;
    },
    _Future__chainForeignFuture_closure0: function _Future__chainForeignFuture_closure0(t0) {
      this.$this = t0;
    },
    _Future__chainForeignFuture_closure1: function _Future__chainForeignFuture_closure1(t0, t1, t2) {
      this.$this = t0;
      this.e = t1;
      this.s = t2;
    },
    _Future__chainCoreFutureAsync_closure: function _Future__chainCoreFutureAsync_closure(t0, t1) {
      this._box_0 = t0;
      this.target = t1;
    },
    _Future__asyncCompleteWithValue_closure: function _Future__asyncCompleteWithValue_closure(t0, t1) {
      this.$this = t0;
      this.value = t1;
    },
    _Future__asyncCompleteError_closure: function _Future__asyncCompleteError_closure(t0, t1, t2) {
      this.$this = t0;
      this.error = t1;
      this.stackTrace = t2;
    },
    _Future__propagateToListeners_handleWhenCompleteCallback: function _Future__propagateToListeners_handleWhenCompleteCallback(t0, t1, t2) {
      this._box_0 = t0;
      this._box_1 = t1;
      this.hasError = t2;
    },
    _Future__propagateToListeners_handleWhenCompleteCallback_closure: function _Future__propagateToListeners_handleWhenCompleteCallback_closure(t0) {
      this.originalSource = t0;
    },
    _Future__propagateToListeners_handleValueCallback: function _Future__propagateToListeners_handleValueCallback(t0, t1) {
      this._box_0 = t0;
      this.sourceResult = t1;
    },
    _Future__propagateToListeners_handleError: function _Future__propagateToListeners_handleError(t0, t1) {
      this._box_1 = t0;
      this._box_0 = t1;
    },
    _AsyncCallbackEntry: function _AsyncCallbackEntry(t0) {
      this.callback = t0;
      this.next = null;
    },
    Stream: function Stream() {
    },
    Stream_length_closure: function Stream_length_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    Stream_length_closure0: function Stream_length_closure0(t0, t1) {
      this._box_0 = t0;
      this.future = t1;
    },
    Stream_first_closure: function Stream_first_closure(t0) {
      this.future = t0;
    },
    Stream_first_closure0: function Stream_first_closure0(t0, t1, t2) {
      this.$this = t0;
      this.subscription = t1;
      this.future = t2;
    },
    _ControllerStream: function _ControllerStream() {
    },
    _ControllerSubscription: function _ControllerSubscription() {
    },
    _BufferingStreamSubscription: function _BufferingStreamSubscription() {
    },
    _BufferingStreamSubscription__sendDone_sendDone: function _BufferingStreamSubscription__sendDone_sendDone(t0) {
      this.$this = t0;
    },
    _StreamImpl: function _StreamImpl() {
    },
    _DelayedEvent: function _DelayedEvent() {
    },
    _DelayedData: function _DelayedData(t0) {
      this.value = t0;
      this.next = null;
    },
    _DelayedDone: function _DelayedDone() {
    },
    _PendingEvents: function _PendingEvents() {
      this._state = 0;
      this.lastPendingEvent = this.firstPendingEvent = null;
    },
    _PendingEvents_schedule_closure: function _PendingEvents_schedule_closure(t0, t1) {
      this.$this = t0;
      this.dispatch = t1;
    },
    _DoneStreamSubscription: function _DoneStreamSubscription(t0) {
      this._state = 1;
      this._zone = t0;
      this._onDone = null;
    },
    _StreamIterator: function _StreamIterator() {
    },
    _cancelAndValue_closure: function _cancelAndValue_closure(t0, t1) {
      this.future = t0;
      this.value = t1;
    },
    _Zone: function _Zone() {
    },
    _rootHandleError_closure: function _rootHandleError_closure(t0, t1) {
      this.error = t0;
      this.stackTrace = t1;
    },
    _RootZone: function _RootZone() {
    },
    _RootZone_bindBinaryCallback_closure: function _RootZone_bindBinaryCallback_closure(t0, t1, t2, t3, t4) {
      var _ = this;
      _.$this = t0;
      _.f = t1;
      _.T1 = t2;
      _.T2 = t3;
      _.R = t4;
    },
    _RootZone_bindCallbackGuarded_closure: function _RootZone_bindCallbackGuarded_closure(t0, t1) {
      this.$this = t0;
      this.f = t1;
    },
    _RootZone_bindUnaryCallbackGuarded_closure: function _RootZone_bindUnaryCallbackGuarded_closure(t0, t1, t2) {
      this.$this = t0;
      this.f = t1;
      this.T = t2;
    },
    _HashMap__getTableEntry(table, key) {
      var entry = table[key];
      return entry === table ? null : entry;
    },
    _HashMap__setTableEntry(table, key, value) {
      if (value == null)
        table[key] = table;
      else
        table[key] = value;
    },
    _HashMap__newHashTable() {
      var table = Object.create(null);
      A._HashMap__setTableEntry(table, "<non-identifier-key>", table);
      delete table["<non-identifier-key>"];
      return table;
    },
    LinkedHashMap_LinkedHashMap($K, $V) {
      return new A.JsLinkedHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("JsLinkedHashMap<1,2>"));
    },
    LinkedHashMap_LinkedHashMap$_literal(keyValuePairs, $K, $V) {
      return A.fillLiteralMap(keyValuePairs, new A.JsLinkedHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("JsLinkedHashMap<1,2>")));
    },
    LinkedHashMap_LinkedHashMap$_empty($K, $V) {
      return new A.JsLinkedHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("JsLinkedHashMap<1,2>"));
    },
    LinkedHashSet_LinkedHashSet($E) {
      return new A._LinkedHashSet($E._eval$1("_LinkedHashSet<0>"));
    },
    LinkedHashSet_LinkedHashSet$_empty($E) {
      return new A._LinkedHashSet($E._eval$1("_LinkedHashSet<0>"));
    },
    _LinkedHashSet__newHashTable() {
      var table = Object.create(null);
      table["<non-identifier-key>"] = table;
      delete table["<non-identifier-key>"];
      return table;
    },
    LinkedHashMap_LinkedHashMap$from(other, $K, $V) {
      var result = A.LinkedHashMap_LinkedHashMap($K, $V);
      other.forEach$1(0, new A.LinkedHashMap_LinkedHashMap$from_closure(result, $K, $V));
      return result;
    },
    LinkedHashSet_LinkedHashSet$from(elements, $E) {
      var t1, _i,
        result = A.LinkedHashSet_LinkedHashSet($E);
      for (t1 = elements.length, _i = 0; _i < elements.length; elements.length === t1 || (0, A.throwConcurrentModificationError)(elements), ++_i)
        result.add$1(0, $E._as(elements[_i]));
      return result;
    },
    MapBase_mapToString(m) {
      var result, t1 = {};
      if (A.isToStringVisiting(m))
        return "{...}";
      result = new A.StringBuffer("");
      try {
        $.toStringVisiting.push(m);
        result._contents += "{";
        t1.first = true;
        J.forEach$1$ax(m, new A.MapBase_mapToString_closure(t1, result));
        result._contents += "}";
      } finally {
        $.toStringVisiting.pop();
      }
      t1 = result._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    ListQueue$(initialCapacity, $E) {
      return new A.ListQueue(A.List_List$filled(A.ListQueue__calculateCapacity(initialCapacity), null, false, $E._eval$1("0?")), $E._eval$1("ListQueue<0>"));
    },
    ListQueue__calculateCapacity(initialCapacity) {
      if (initialCapacity == null || initialCapacity < 8)
        return 8;
      else if ((initialCapacity & initialCapacity - 1) >>> 0 !== 0)
        return A.ListQueue__nextPowerOf2(initialCapacity);
      return initialCapacity;
    },
    ListQueue__nextPowerOf2(number) {
      var nextNumber;
      number = (number << 1 >>> 0) - 1;
      for (; true; number = nextNumber) {
        nextNumber = (number & number - 1) >>> 0;
        if (nextNumber === 0)
          return number;
      }
    },
    _HashMap: function _HashMap() {
    },
    _IdentityHashMap: function _IdentityHashMap(t0) {
      var _ = this;
      _._collection$_length = 0;
      _._collection$_keys = _._collection$_rest = _._collection$_nums = _._collection$_strings = null;
      _.$ti = t0;
    },
    _HashMapKeyIterable: function _HashMapKeyIterable(t0, t1) {
      this._collection$_map = t0;
      this.$ti = t1;
    },
    _HashMapKeyIterator: function _HashMapKeyIterator(t0, t1) {
      var _ = this;
      _._collection$_map = t0;
      _._collection$_keys = t1;
      _._offset = 0;
      _._collection$_current = null;
    },
    _LinkedHashSet: function _LinkedHashSet(t0) {
      var _ = this;
      _._collection$_length = 0;
      _._collection$_last = _._collection$_first = _._collection$_rest = _._collection$_nums = _._collection$_strings = null;
      _._collection$_modifications = 0;
      _.$ti = t0;
    },
    _LinkedHashSetCell: function _LinkedHashSetCell(t0) {
      this._element = t0;
      this._collection$_previous = this._collection$_next = null;
    },
    _LinkedHashSetIterator: function _LinkedHashSetIterator(t0, t1) {
      var _ = this;
      _._set = t0;
      _._collection$_modifications = t1;
      _._collection$_current = _._collection$_cell = null;
    },
    LinkedHashMap_LinkedHashMap$from_closure: function LinkedHashMap_LinkedHashMap$from_closure(t0, t1, t2) {
      this.result = t0;
      this.K = t1;
      this.V = t2;
    },
    ListBase: function ListBase() {
    },
    MapBase: function MapBase() {
    },
    MapBase_entries_closure: function MapBase_entries_closure(t0) {
      this.$this = t0;
    },
    MapBase_mapToString_closure: function MapBase_mapToString_closure(t0, t1) {
      this._box_0 = t0;
      this.result = t1;
    },
    _UnmodifiableMapMixin: function _UnmodifiableMapMixin() {
    },
    MapView: function MapView() {
    },
    UnmodifiableMapView: function UnmodifiableMapView() {
    },
    ListQueue: function ListQueue(t0, t1) {
      var _ = this;
      _._table = t0;
      _._modificationCount = _._tail = _._head = 0;
      _.$ti = t1;
    },
    _ListQueueIterator: function _ListQueueIterator(t0, t1, t2, t3) {
      var _ = this;
      _._collection$_queue = t0;
      _._end = t1;
      _._modificationCount = t2;
      _._collection$_position = t3;
      _._collection$_current = null;
    },
    SetBase: function SetBase() {
    },
    _SetBase: function _SetBase() {
    },
    _UnmodifiableMapView_MapView__UnmodifiableMapMixin: function _UnmodifiableMapView_MapView__UnmodifiableMapMixin() {
    },
    _parseJson(source, reviver) {
      var e, exception, t1, parsed = null;
      try {
        parsed = JSON.parse(source);
      } catch (exception) {
        e = A.unwrapException(exception);
        t1 = A.FormatException$(String(e), null, null);
        throw A.wrapException(t1);
      }
      t1 = A._convertJsonToDartLazy(parsed);
      return t1;
    },
    _convertJsonToDartLazy(object) {
      var i;
      if (object == null)
        return null;
      if (typeof object != "object")
        return object;
      if (Object.getPrototypeOf(object) !== Array.prototype)
        return new A._JsonMap(object, Object.create(null));
      for (i = 0; i < object.length; ++i)
        object[i] = A._convertJsonToDartLazy(object[i]);
      return object;
    },
    Utf8Decoder__convertIntercepted(allowMalformed, codeUnits, start, end) {
      var casted, result;
      if (codeUnits instanceof Uint8Array) {
        casted = codeUnits;
        end = casted.length;
        if (end - start < 15)
          return null;
        result = A.Utf8Decoder__convertInterceptedUint8List(allowMalformed, casted, start, end);
        if (result != null && allowMalformed)
          if (result.indexOf("\ufffd") >= 0)
            return null;
        return result;
      }
      return null;
    },
    Utf8Decoder__convertInterceptedUint8List(allowMalformed, codeUnits, start, end) {
      var decoder = allowMalformed ? $.$get$Utf8Decoder__decoderNonfatal() : $.$get$Utf8Decoder__decoder();
      if (decoder == null)
        return null;
      if (0 === start && end === codeUnits.length)
        return A.Utf8Decoder__useTextDecoder(decoder, codeUnits);
      return A.Utf8Decoder__useTextDecoder(decoder, codeUnits.subarray(start, A.RangeError_checkValidRange(start, end, codeUnits.length)));
    },
    Utf8Decoder__useTextDecoder(decoder, codeUnits) {
      var t1, exception;
      try {
        t1 = decoder.decode(codeUnits);
        return t1;
      } catch (exception) {
      }
      return null;
    },
    Base64Codec__checkPadding(source, sourceIndex, sourceEnd, firstPadding, paddingCount, $length) {
      if (B.JSInt_methods.$mod($length, 4) !== 0)
        throw A.wrapException(A.FormatException$("Invalid base64 padding, padded length must be multiple of four, is " + $length, source, sourceEnd));
      if (firstPadding + paddingCount !== $length)
        throw A.wrapException(A.FormatException$("Invalid base64 padding, '=' not at the end", source, sourceIndex));
      if (paddingCount > 2)
        throw A.wrapException(A.FormatException$("Invalid base64 padding, more than two '=' characters", source, sourceIndex));
    },
    _Base64Encoder_encodeChunk(alphabet, bytes, start, end, isLast, output, outputIndex, state) {
      var i, byteOr, byte, outputIndex0, outputIndex1,
        bits = state >>> 2,
        expectedChars = 3 - (state & 3);
      for (i = start, byteOr = 0; i < end; ++i) {
        byte = bytes[i];
        byteOr = (byteOr | byte) >>> 0;
        bits = (bits << 8 | byte) & 16777215;
        --expectedChars;
        if (expectedChars === 0) {
          outputIndex0 = outputIndex + 1;
          output[outputIndex] = alphabet.charCodeAt(bits >>> 18 & 63);
          outputIndex = outputIndex0 + 1;
          output[outputIndex0] = alphabet.charCodeAt(bits >>> 12 & 63);
          outputIndex0 = outputIndex + 1;
          output[outputIndex] = alphabet.charCodeAt(bits >>> 6 & 63);
          outputIndex = outputIndex0 + 1;
          output[outputIndex0] = alphabet.charCodeAt(bits & 63);
          bits = 0;
          expectedChars = 3;
        }
      }
      if (byteOr >= 0 && byteOr <= 255) {
        if (isLast && expectedChars < 3) {
          outputIndex0 = outputIndex + 1;
          outputIndex1 = outputIndex0 + 1;
          if (3 - expectedChars === 1) {
            output[outputIndex] = alphabet.charCodeAt(bits >>> 2 & 63);
            output[outputIndex0] = alphabet.charCodeAt(bits << 4 & 63);
            output[outputIndex1] = 61;
            output[outputIndex1 + 1] = 61;
          } else {
            output[outputIndex] = alphabet.charCodeAt(bits >>> 10 & 63);
            output[outputIndex0] = alphabet.charCodeAt(bits >>> 4 & 63);
            output[outputIndex1] = alphabet.charCodeAt(bits << 2 & 63);
            output[outputIndex1 + 1] = 61;
          }
          return 0;
        }
        return (bits << 2 | 3 - expectedChars) >>> 0;
      }
      for (i = start; i < end;) {
        byte = bytes[i];
        if (byte < 0 || byte > 255)
          break;
        ++i;
      }
      throw A.wrapException(A.ArgumentError$value(bytes, "Not a byte value at index " + i + ": 0x" + J.toRadixString$1$n(bytes[i], 16), null));
    },
    JsonUnsupportedObjectError$(unsupportedObject, cause, partialResult) {
      return new A.JsonUnsupportedObjectError(unsupportedObject, cause);
    },
    _defaultToEncodable(object) {
      return object.toJson$0();
    },
    _JsonStringStringifier$(_sink, _toEncodable) {
      return new A._JsonStringStringifier(_sink, [], A.convert___defaultToEncodable$closure());
    },
    _JsonStringStringifier_stringify(object, toEncodable, indent) {
      var t1,
        output = new A.StringBuffer("");
      A._JsonStringStringifier_printOn(object, output, toEncodable, indent);
      t1 = output._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _JsonStringStringifier_printOn(object, output, toEncodable, indent) {
      var stringifier = A._JsonStringStringifier$(output, toEncodable);
      stringifier.writeObject$1(object);
    },
    _Utf8Decoder_errorDescription(state) {
      switch (state) {
        case 65:
          return "Missing extension byte";
        case 67:
          return "Unexpected extension byte";
        case 69:
          return "Invalid UTF-8 byte";
        case 71:
          return "Overlong encoding";
        case 73:
          return "Out of unicode range";
        case 75:
          return "Encoded surrogate";
        case 77:
          return "Unfinished UTF-8 octet sequence";
        default:
          return "";
      }
    },
    _Utf8Decoder__makeUint8List(codeUnits, start, end) {
      var t1, i, b,
        $length = end - start,
        bytes = new Uint8Array($length);
      for (t1 = J.getInterceptor$asx(codeUnits), i = 0; i < $length; ++i) {
        b = t1.$index(codeUnits, start + i);
        bytes[i] = (b & 4294967040) >>> 0 !== 0 ? 255 : b;
      }
      return bytes;
    },
    _JsonMap: function _JsonMap(t0, t1) {
      this._original = t0;
      this._processed = t1;
      this._data = null;
    },
    _JsonMapKeyIterable: function _JsonMapKeyIterable(t0) {
      this._parent = t0;
    },
    _JsonDecoderSink: function _JsonDecoderSink(t0, t1, t2) {
      this._reviver = t0;
      this._sink = t1;
      this._stringSink = t2;
    },
    Utf8Decoder__decoder_closure: function Utf8Decoder__decoder_closure() {
    },
    Utf8Decoder__decoderNonfatal_closure: function Utf8Decoder__decoderNonfatal_closure() {
    },
    Base64Codec: function Base64Codec() {
    },
    Base64Encoder: function Base64Encoder() {
    },
    _Base64Encoder: function _Base64Encoder(t0) {
      this._convert$_state = 0;
      this._alphabet = t0;
    },
    _Base64EncoderSink: function _Base64EncoderSink() {
    },
    _Utf8Base64EncoderSink: function _Utf8Base64EncoderSink(t0, t1) {
      this._sink = t0;
      this._encoder = t1;
    },
    ByteConversionSink: function ByteConversionSink() {
    },
    _ByteAdapterSink: function _ByteAdapterSink(t0) {
      this._sink = t0;
    },
    ChunkedConversionSink: function ChunkedConversionSink() {
    },
    _SimpleCallbackSink: function _SimpleCallbackSink(t0, t1, t2) {
      this._convert$_callback = t0;
      this._accumulated = t1;
      this.$ti = t2;
    },
    Codec: function Codec() {
    },
    Converter: function Converter() {
    },
    _FusedConverter: function _FusedConverter(t0, t1) {
      this._convert$_first = t0;
      this._second = t1;
    },
    Encoding: function Encoding() {
    },
    JsonUnsupportedObjectError: function JsonUnsupportedObjectError(t0, t1) {
      this.unsupportedObject = t0;
      this.cause = t1;
    },
    JsonCyclicError: function JsonCyclicError(t0, t1) {
      this.unsupportedObject = t0;
      this.cause = t1;
    },
    JsonCodec: function JsonCodec() {
    },
    JsonEncoder: function JsonEncoder(t0) {
      this._toEncodable = t0;
    },
    _JsonEncoderSink: function _JsonEncoderSink(t0, t1, t2) {
      var _ = this;
      _._indent = t0;
      _._toEncodable = t1;
      _._sink = t2;
      _._isDone = false;
    },
    JsonDecoder: function JsonDecoder(t0) {
      this._reviver = t0;
    },
    _JsonStringifier: function _JsonStringifier() {
    },
    _JsonStringifier_writeMap_closure: function _JsonStringifier_writeMap_closure(t0, t1) {
      this._box_0 = t0;
      this.keyValueList = t1;
    },
    _JsonStringStringifier: function _JsonStringStringifier(t0, t1, t2) {
      this._sink = t0;
      this._seen = t1;
      this._toEncodable = t2;
    },
    StringConversionSink: function StringConversionSink() {
    },
    _ClosableStringSink: function _ClosableStringSink(t0, t1) {
      this._convert$_callback = t0;
      this._sink = t1;
    },
    _StringConversionSinkAsStringSinkAdapter: function _StringConversionSinkAsStringSinkAdapter(t0, t1) {
      this._convert$_buffer = t0;
      this._chunkedSink = t1;
    },
    _StringSinkConversionSink: function _StringSinkConversionSink() {
    },
    _Utf8StringSinkAdapter: function _Utf8StringSinkAdapter(t0, t1, t2) {
      this._decoder = t0;
      this._sink = t1;
      this._stringSink = t2;
    },
    Utf8Codec: function Utf8Codec() {
    },
    Utf8Encoder: function Utf8Encoder() {
    },
    _Utf8Encoder: function _Utf8Encoder(t0) {
      this._bufferIndex = this._carry = 0;
      this._convert$_buffer = t0;
    },
    _Utf8EncoderSink: function _Utf8EncoderSink(t0, t1) {
      var _ = this;
      _._sink = t0;
      _._bufferIndex = _._carry = 0;
      _._convert$_buffer = t1;
    },
    Utf8Decoder: function Utf8Decoder(t0) {
      this._allowMalformed = t0;
    },
    _Utf8Decoder: function _Utf8Decoder(t0) {
      this.allowMalformed = t0;
      this._convert$_state = 16;
      this._charOrIndex = 0;
    },
    __Utf8EncoderSink__Utf8Encoder_StringConversionSink: function __Utf8EncoderSink__Utf8Encoder_StringConversionSink() {
    },
    Expando__checkType(object) {
      if (typeof object == "number" || typeof object == "string" || false)
        A.Expando__badExpandoKey(object);
    },
    Expando__badExpandoKey(object) {
      throw A.wrapException(A.ArgumentError$value(object, "object", "Expandos are not allowed on strings, numbers, bools, records or null"));
    },
    int_parse(source, radix) {
      var value = A.Primitives_parseInt(source, radix);
      if (value != null)
        return value;
      throw A.wrapException(A.FormatException$(source, null, null));
    },
    double_parse(source) {
      var value = A.Primitives_parseDouble(source);
      if (value != null)
        return value;
      throw A.wrapException(A.FormatException$("Invalid double", source, null));
    },
    Error__throw(error, stackTrace) {
      error = A.wrapException(error);
      error.stack = stackTrace.toString$0(0);
      throw error;
      throw A.wrapException("unreachable");
    },
    DateTime$fromMillisecondsSinceEpoch(millisecondsSinceEpoch, isUtc) {
      var t1;
      if (Math.abs(millisecondsSinceEpoch) <= 864e13)
        t1 = false;
      else
        t1 = true;
      if (t1)
        A.throwExpression(A.ArgumentError$("DateTime is outside valid range: " + millisecondsSinceEpoch, null));
      A.checkNotNullable(true, "isUtc", type$.bool);
      return new A.DateTime(millisecondsSinceEpoch, true);
    },
    List_List$filled($length, fill, growable, $E) {
      var i,
        result = growable ? J.JSArray_JSArray$growable($length, $E) : J.JSArray_JSArray$fixed($length, $E);
      if ($length !== 0 && fill != null)
        for (i = 0; i < result.length; ++i)
          result[i] = fill;
      return result;
    },
    List_List$from(elements, growable, $E) {
      var t1,
        list = A._setArrayType([], $E._eval$1("JSArray<0>"));
      for (t1 = J.get$iterator$ax(elements); t1.moveNext$0();)
        list.push(t1.get$current(t1));
      if (growable)
        return list;
      return J.JSArray_markFixedList(list);
    },
    List_List$of(elements, growable, $E) {
      var t1;
      if (growable)
        return A.List_List$_of(elements, $E);
      t1 = J.JSArray_markFixedList(A.List_List$_of(elements, $E));
      return t1;
    },
    List_List$_of(elements, $E) {
      var list, t1;
      if (Array.isArray(elements))
        return A._setArrayType(elements.slice(0), $E._eval$1("JSArray<0>"));
      list = A._setArrayType([], $E._eval$1("JSArray<0>"));
      for (t1 = J.get$iterator$ax(elements); t1.moveNext$0();)
        list.push(t1.get$current(t1));
      return list;
    },
    List_List$unmodifiable(elements, $E) {
      return J.JSArray_markUnmodifiableList(A.List_List$from(elements, false, $E));
    },
    String_String$fromCharCodes(charCodes, start, end) {
      var array, len;
      if (Array.isArray(charCodes)) {
        array = charCodes;
        len = array.length;
        end = A.RangeError_checkValidRange(start, end, len);
        return A.Primitives_stringFromCharCodes(start > 0 || end < len ? array.slice(start, end) : array);
      }
      if (type$.NativeUint8List._is(charCodes))
        return A.Primitives_stringFromNativeUint8List(charCodes, start, A.RangeError_checkValidRange(start, end, charCodes.length));
      return A.String__stringFromIterable(charCodes, start, end);
    },
    String_String$fromCharCode(charCode) {
      return A.Primitives_stringFromCharCode(charCode);
    },
    String__stringFromIterable(charCodes, start, end) {
      var t1, it, i, list, _null = null;
      if (start < 0)
        throw A.wrapException(A.RangeError$range(start, 0, charCodes.length, _null, _null));
      t1 = end == null;
      if (!t1 && end < start)
        throw A.wrapException(A.RangeError$range(end, start, charCodes.length, _null, _null));
      it = J.get$iterator$ax(charCodes);
      for (i = 0; i < start; ++i)
        if (!it.moveNext$0())
          throw A.wrapException(A.RangeError$range(start, 0, i, _null, _null));
      list = [];
      if (t1)
        for (; it.moveNext$0();)
          list.push(it.get$current(it));
      else
        for (i = start; i < end; ++i) {
          if (!it.moveNext$0())
            throw A.wrapException(A.RangeError$range(end, start, i, _null, _null));
          list.push(it.get$current(it));
        }
      return A.Primitives_stringFromCharCodes(list);
    },
    RegExp_RegExp(source, caseSensitive) {
      return new A.JSSyntaxRegExp(source, A.JSSyntaxRegExp_makeNative(source, false, caseSensitive, false, false, false));
    },
    StringBuffer__writeAll(string, objects, separator) {
      var iterator = J.get$iterator$ax(objects);
      if (!iterator.moveNext$0())
        return string;
      if (separator.length === 0) {
        do
          string += A.S(iterator.get$current(iterator));
        while (iterator.moveNext$0());
      } else {
        string += A.S(iterator.get$current(iterator));
        for (; iterator.moveNext$0();)
          string = string + separator + A.S(iterator.get$current(iterator));
      }
      return string;
    },
    NoSuchMethodError_NoSuchMethodError$withInvocation(receiver, invocation) {
      return new A.NoSuchMethodError(receiver, invocation.get$memberName(), invocation.get$positionalArguments(), invocation.get$namedArguments());
    },
    _Uri__uriEncode(canonicalTable, text, encoding, spaceToPlus) {
      var t1, bytes, i, t2, byte,
        _s16_ = "0123456789ABCDEF";
      if (encoding === B.C_Utf8Codec) {
        t1 = $.$get$_Uri__needsNoEncoding();
        t1 = t1._nativeRegExp.test(text);
      } else
        t1 = false;
      if (t1)
        return text;
      bytes = B.C_Utf8Encoder.convert$1(text);
      for (t1 = bytes.length, i = 0, t2 = ""; i < t1; ++i) {
        byte = bytes[i];
        if (byte < 128 && (canonicalTable[byte >>> 4] & 1 << (byte & 15)) !== 0)
          t2 += A.Primitives_stringFromCharCode(byte);
        else
          t2 = spaceToPlus && byte === 32 ? t2 + "+" : t2 + "%" + _s16_[byte >>> 4 & 15] + _s16_[byte & 15];
      }
      return t2.charCodeAt(0) == 0 ? t2 : t2;
    },
    StackTrace_current() {
      return A.getTraceFromException(new Error());
    },
    DateTime$_withValue(_value, isUtc) {
      var t1;
      if (Math.abs(_value) <= 864e13)
        t1 = false;
      else
        t1 = true;
      if (t1)
        A.throwExpression(A.ArgumentError$("DateTime is outside valid range: " + _value, null));
      A.checkNotNullable(isUtc, "isUtc", type$.bool);
      return new A.DateTime(_value, isUtc);
    },
    DateTime__fourDigits(n) {
      var absN = Math.abs(n),
        sign = n < 0 ? "-" : "";
      if (absN >= 1000)
        return "" + n;
      if (absN >= 100)
        return sign + "0" + absN;
      if (absN >= 10)
        return sign + "00" + absN;
      return sign + "000" + absN;
    },
    DateTime__threeDigits(n) {
      if (n >= 100)
        return "" + n;
      if (n >= 10)
        return "0" + n;
      return "00" + n;
    },
    DateTime__twoDigits(n) {
      if (n >= 10)
        return "" + n;
      return "0" + n;
    },
    Duration$(microseconds, milliseconds) {
      return new A.Duration(microseconds + 1000 * milliseconds);
    },
    EnumByName_byName(_this, $name) {
      var _i, value;
      for (_i = 0; _i < 3; ++_i) {
        value = _this[_i];
        if (value._core$_name === $name)
          return value;
      }
      throw A.wrapException(A.ArgumentError$value($name, "name", "No enum value with that name"));
    },
    Error_safeToString(object) {
      if (typeof object == "number" || A._isBool(object) || object == null)
        return J.toString$0$(object);
      if (typeof object == "string")
        return JSON.stringify(object);
      return A.Primitives_safeToString(object);
    },
    Error_throwWithStackTrace(error, stackTrace) {
      A.checkNotNullable(error, "error", type$.Object);
      A.checkNotNullable(stackTrace, "stackTrace", type$.StackTrace);
      A.Error__throw(error, stackTrace);
    },
    AssertionError$(message) {
      return new A.AssertionError(message);
    },
    ArgumentError$(message, $name) {
      return new A.ArgumentError(false, null, $name, message);
    },
    ArgumentError$value(value, $name, message) {
      return new A.ArgumentError(true, value, $name, message);
    },
    ArgumentError_checkNotNull(argument, $name) {
      return argument;
    },
    RangeError$value(value, $name) {
      return new A.RangeError(null, null, true, value, $name, "Value not in range");
    },
    RangeError$range(invalidValue, minValue, maxValue, $name, message) {
      return new A.RangeError(minValue, maxValue, true, invalidValue, $name, "Invalid value");
    },
    RangeError_checkValidRange(start, end, $length) {
      if (0 > start || start > $length)
        throw A.wrapException(A.RangeError$range(start, 0, $length, "start", null));
      if (end != null) {
        if (start > end || end > $length)
          throw A.wrapException(A.RangeError$range(end, start, $length, "end", null));
        return end;
      }
      return $length;
    },
    RangeError_checkNotNegative(value, $name) {
      if (value < 0)
        throw A.wrapException(A.RangeError$range(value, 0, null, $name, null));
      return value;
    },
    IndexError$(invalidValue, indexable) {
      var t1 = indexable.__engine$_length;
      return new A.IndexError(t1, true, invalidValue, null, "Index out of range");
    },
    IndexError$withLength(invalidValue, $length, indexable, message, $name) {
      return new A.IndexError($length, true, invalidValue, $name, "Index out of range");
    },
    UnsupportedError$(message) {
      return new A.UnsupportedError(message);
    },
    UnimplementedError$(message) {
      return new A.UnimplementedError(message);
    },
    StateError$(message) {
      return new A.StateError(message);
    },
    ConcurrentModificationError$(modifiedObject) {
      return new A.ConcurrentModificationError(modifiedObject);
    },
    Exception_Exception(message) {
      return new A._Exception(message);
    },
    FormatException$(message, source, offset) {
      return new A.FormatException(message, source, offset);
    },
    Iterable_iterableToShortString(iterable, leftDelimiter, rightDelimiter) {
      var parts, t1;
      if (A.isToStringVisiting(iterable)) {
        if (leftDelimiter === "(" && rightDelimiter === ")")
          return "(...)";
        return leftDelimiter + "..." + rightDelimiter;
      }
      parts = A._setArrayType([], type$.JSArray_String);
      $.toStringVisiting.push(iterable);
      try {
        A._iterablePartsToStrings(iterable, parts);
      } finally {
        $.toStringVisiting.pop();
      }
      t1 = A.StringBuffer__writeAll(leftDelimiter, parts, ", ") + rightDelimiter;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    Iterable_iterableToFullString(iterable, leftDelimiter, rightDelimiter) {
      var buffer, t1;
      if (A.isToStringVisiting(iterable))
        return leftDelimiter + "..." + rightDelimiter;
      buffer = new A.StringBuffer(leftDelimiter);
      $.toStringVisiting.push(iterable);
      try {
        t1 = buffer;
        t1._contents = A.StringBuffer__writeAll(t1._contents, iterable, ", ");
      } finally {
        $.toStringVisiting.pop();
      }
      buffer._contents += rightDelimiter;
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _iterablePartsToStrings(iterable, parts) {
      var next, ultimateString, penultimateString, penultimate, ultimate, ultimate0, elision,
        it = iterable.get$iterator(iterable),
        $length = 0, count = 0;
      while (true) {
        if (!($length < 80 || count < 3))
          break;
        if (!it.moveNext$0())
          return;
        next = A.S(it.get$current(it));
        parts.push(next);
        $length += next.length + 2;
        ++count;
      }
      if (!it.moveNext$0()) {
        if (count <= 5)
          return;
        ultimateString = parts.pop();
        penultimateString = parts.pop();
      } else {
        penultimate = it.get$current(it);
        ++count;
        if (!it.moveNext$0()) {
          if (count <= 4) {
            parts.push(A.S(penultimate));
            return;
          }
          ultimateString = A.S(penultimate);
          penultimateString = parts.pop();
          $length += ultimateString.length + 2;
        } else {
          ultimate = it.get$current(it);
          ++count;
          for (; it.moveNext$0(); penultimate = ultimate, ultimate = ultimate0) {
            ultimate0 = it.get$current(it);
            ++count;
            if (count > 100) {
              while (true) {
                if (!($length > 75 && count > 3))
                  break;
                $length -= parts.pop().length + 2;
                --count;
              }
              parts.push("...");
              return;
            }
          }
          penultimateString = A.S(penultimate);
          ultimateString = A.S(ultimate);
          $length += ultimateString.length + penultimateString.length + 4;
        }
      }
      if (count > parts.length + 2) {
        $length += 5;
        elision = "...";
      } else
        elision = null;
      while (true) {
        if (!($length > 80 && parts.length > 3))
          break;
        $length -= parts.pop().length + 2;
        if (elision == null) {
          $length += 5;
          elision = "...";
        }
      }
      if (elision != null)
        parts.push(elision);
      parts.push(penultimateString);
      parts.push(ultimateString);
    },
    Object_hash(object1, object2, object3, object4, object5, object6, object7) {
      var t1;
      if (B.C_SentinelValue === object3) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2));
      }
      if (B.C_SentinelValue === object4) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3));
      }
      if (B.C_SentinelValue === object5) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        object4 = J.get$hashCode$(object4);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3), object4));
      }
      if (B.C_SentinelValue === object6) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        object4 = J.get$hashCode$(object4);
        object5 = J.get$hashCode$(object5);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3), object4), object5));
      }
      if (B.C_SentinelValue === object7) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        object4 = J.get$hashCode$(object4);
        object5 = J.get$hashCode$(object5);
        object6 = J.get$hashCode$(object6);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3), object4), object5), object6));
      }
      t1 = J.get$hashCode$(object1);
      object2 = J.get$hashCode$(object2);
      object3 = J.get$hashCode$(object3);
      object4 = J.get$hashCode$(object4);
      object5 = J.get$hashCode$(object5);
      object6 = J.get$hashCode$(object6);
      object7 = J.get$hashCode$(object7);
      object7 = A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3), object4), object5), object6), object7));
      return object7;
    },
    print(object) {
      A.printString(object);
    },
    Stopwatch$() {
      $.$get$Stopwatch__frequency();
      return new A.Stopwatch();
    },
    Uri_parse(uri) {
      var delta, indices, schemeEnd, hostStart, portStart, pathStart, queryStart, fragmentStart, isSimple, scheme, t1, t2, schemeAuth, queryStart0, pathStart0, userInfoStart, userInfo, host, portNumber, port, path, query, _null = null,
        end = uri.length;
      if (end >= 5) {
        delta = ((uri.charCodeAt(4) ^ 58) * 3 | uri.charCodeAt(0) ^ 100 | uri.charCodeAt(1) ^ 97 | uri.charCodeAt(2) ^ 116 | uri.charCodeAt(3) ^ 97) >>> 0;
        if (delta === 0)
          return A.UriData__parse(end < end ? B.JSString_methods.substring$2(uri, 0, end) : uri, 5, _null).get$uri();
        else if (delta === 32)
          return A.UriData__parse(B.JSString_methods.substring$2(uri, 5, end), 0, _null).get$uri();
      }
      indices = A.List_List$filled(8, 0, false, type$.int);
      indices[0] = 0;
      indices[1] = -1;
      indices[2] = -1;
      indices[7] = -1;
      indices[3] = 0;
      indices[4] = 0;
      indices[5] = end;
      indices[6] = end;
      if (A._scan(uri, 0, end, 0, indices) >= 14)
        indices[7] = end;
      schemeEnd = indices[1];
      if (schemeEnd >= 0)
        if (A._scan(uri, 0, schemeEnd, 20, indices) === 20)
          indices[7] = schemeEnd;
      hostStart = indices[2] + 1;
      portStart = indices[3];
      pathStart = indices[4];
      queryStart = indices[5];
      fragmentStart = indices[6];
      if (fragmentStart < queryStart)
        queryStart = fragmentStart;
      if (pathStart < hostStart)
        pathStart = queryStart;
      else if (pathStart <= schemeEnd)
        pathStart = schemeEnd + 1;
      if (portStart < hostStart)
        portStart = pathStart;
      isSimple = indices[7] < 0;
      if (isSimple)
        if (hostStart > schemeEnd + 3) {
          scheme = _null;
          isSimple = false;
        } else {
          t1 = portStart > 0;
          if (t1 && portStart + 1 === pathStart) {
            scheme = _null;
            isSimple = false;
          } else {
            if (!B.JSString_methods.startsWith$2(uri, "\\", pathStart))
              if (hostStart > 0)
                t2 = B.JSString_methods.startsWith$2(uri, "\\", hostStart - 1) || B.JSString_methods.startsWith$2(uri, "\\", hostStart - 2);
              else
                t2 = false;
            else
              t2 = true;
            if (t2) {
              scheme = _null;
              isSimple = false;
            } else {
              if (!(queryStart < end && queryStart === pathStart + 2 && B.JSString_methods.startsWith$2(uri, "..", pathStart)))
                t2 = queryStart > pathStart + 2 && B.JSString_methods.startsWith$2(uri, "/..", queryStart - 3);
              else
                t2 = true;
              if (t2) {
                scheme = _null;
                isSimple = false;
              } else {
                if (schemeEnd === 4)
                  if (B.JSString_methods.startsWith$2(uri, "file", 0)) {
                    if (hostStart <= 0) {
                      if (!B.JSString_methods.startsWith$2(uri, "/", pathStart)) {
                        schemeAuth = "file:///";
                        delta = 3;
                      } else {
                        schemeAuth = "file://";
                        delta = 2;
                      }
                      uri = schemeAuth + B.JSString_methods.substring$2(uri, pathStart, end);
                      schemeEnd -= 0;
                      t1 = delta - 0;
                      queryStart += t1;
                      fragmentStart += t1;
                      end = uri.length;
                      hostStart = 7;
                      portStart = 7;
                      pathStart = 7;
                    } else if (pathStart === queryStart) {
                      ++fragmentStart;
                      queryStart0 = queryStart + 1;
                      uri = B.JSString_methods.replaceRange$3(uri, pathStart, queryStart, "/");
                      ++end;
                      queryStart = queryStart0;
                    }
                    scheme = "file";
                  } else if (B.JSString_methods.startsWith$2(uri, "http", 0)) {
                    if (t1 && portStart + 3 === pathStart && B.JSString_methods.startsWith$2(uri, "80", portStart + 1)) {
                      fragmentStart -= 3;
                      pathStart0 = pathStart - 3;
                      queryStart -= 3;
                      uri = B.JSString_methods.replaceRange$3(uri, portStart, pathStart, "");
                      end -= 3;
                      pathStart = pathStart0;
                    }
                    scheme = "http";
                  } else
                    scheme = _null;
                else if (schemeEnd === 5 && B.JSString_methods.startsWith$2(uri, "https", 0)) {
                  if (t1 && portStart + 4 === pathStart && B.JSString_methods.startsWith$2(uri, "443", portStart + 1)) {
                    fragmentStart -= 4;
                    pathStart0 = pathStart - 4;
                    queryStart -= 4;
                    uri = B.JSString_methods.replaceRange$3(uri, portStart, pathStart, "");
                    end -= 3;
                    pathStart = pathStart0;
                  }
                  scheme = "https";
                } else
                  scheme = _null;
                isSimple = true;
              }
            }
          }
        }
      else
        scheme = _null;
      if (isSimple) {
        if (end < uri.length) {
          uri = B.JSString_methods.substring$2(uri, 0, end);
          schemeEnd -= 0;
          hostStart -= 0;
          portStart -= 0;
          pathStart -= 0;
          queryStart -= 0;
          fragmentStart -= 0;
        }
        return new A._SimpleUri(uri, schemeEnd, hostStart, portStart, pathStart, queryStart, fragmentStart, scheme);
      }
      if (scheme == null)
        if (schemeEnd > 0)
          scheme = A._Uri__makeScheme(uri, 0, schemeEnd);
        else {
          if (schemeEnd === 0)
            A._Uri__fail(uri, 0, "Invalid empty scheme");
          scheme = "";
        }
      if (hostStart > 0) {
        userInfoStart = schemeEnd + 3;
        userInfo = userInfoStart < hostStart ? A._Uri__makeUserInfo(uri, userInfoStart, hostStart - 1) : "";
        host = A._Uri__makeHost(uri, hostStart, portStart, false);
        t1 = portStart + 1;
        if (t1 < pathStart) {
          portNumber = A.Primitives_parseInt(B.JSString_methods.substring$2(uri, t1, pathStart), _null);
          port = A._Uri__makePort(portNumber == null ? A.throwExpression(A.FormatException$("Invalid port", uri, t1)) : portNumber, scheme);
        } else
          port = _null;
      } else {
        port = _null;
        host = port;
        userInfo = "";
      }
      path = A._Uri__makePath(uri, pathStart, queryStart, _null, scheme, host != null);
      query = queryStart < fragmentStart ? A._Uri__makeQuery(uri, queryStart + 1, fragmentStart, _null) : _null;
      return A._Uri$_internal(scheme, userInfo, host, port, path, query, fragmentStart < end ? A._Uri__makeFragment(uri, fragmentStart + 1, end) : _null);
    },
    Uri_decodeComponent(encodedComponent) {
      return A._Uri__uriDecode(encodedComponent, 0, encodedComponent.length, B.C_Utf8Codec, false);
    },
    Uri__parseIPv4Address(host, start, end) {
      var i, partStart, partIndex, char, part, partIndex0,
        _s43_ = "IPv4 address should contain exactly 4 parts",
        _s37_ = "each part must be in the range 0..255",
        error = new A.Uri__parseIPv4Address_error(host),
        result = new Uint8Array(4);
      for (i = start, partStart = i, partIndex = 0; i < end; ++i) {
        char = host.charCodeAt(i);
        if (char !== 46) {
          if ((char ^ 48) > 9)
            error.call$2("invalid character", i);
        } else {
          if (partIndex === 3)
            error.call$2(_s43_, i);
          part = A.int_parse(B.JSString_methods.substring$2(host, partStart, i), null);
          if (part > 255)
            error.call$2(_s37_, partStart);
          partIndex0 = partIndex + 1;
          result[partIndex] = part;
          partStart = i + 1;
          partIndex = partIndex0;
        }
      }
      if (partIndex !== 3)
        error.call$2(_s43_, end);
      part = A.int_parse(B.JSString_methods.substring$2(host, partStart, end), null);
      if (part > 255)
        error.call$2(_s37_, partStart);
      result[partIndex] = part;
      return result;
    },
    Uri_parseIPv6Address(host, start, end) {
      var parts, i, partStart, wildcardSeen, seenDot, char, atEnd, t1, last, bytes, wildCardLength, index, value, j, _null = null,
        error = new A.Uri_parseIPv6Address_error(host),
        parseHex = new A.Uri_parseIPv6Address_parseHex(error, host);
      if (host.length < 2)
        error.call$2("address is too short", _null);
      parts = A._setArrayType([], type$.JSArray_int);
      for (i = start, partStart = i, wildcardSeen = false, seenDot = false; i < end; ++i) {
        char = host.charCodeAt(i);
        if (char === 58) {
          if (i === start) {
            ++i;
            if (host.charCodeAt(i) !== 58)
              error.call$2("invalid start colon.", i);
            partStart = i;
          }
          if (i === partStart) {
            if (wildcardSeen)
              error.call$2("only one wildcard `::` is allowed", i);
            parts.push(-1);
            wildcardSeen = true;
          } else
            parts.push(parseHex.call$2(partStart, i));
          partStart = i + 1;
        } else if (char === 46)
          seenDot = true;
      }
      if (parts.length === 0)
        error.call$2("too few parts", _null);
      atEnd = partStart === end;
      t1 = B.JSArray_methods.get$last(parts);
      if (atEnd && t1 !== -1)
        error.call$2("expected a part after last `:`", end);
      if (!atEnd)
        if (!seenDot)
          parts.push(parseHex.call$2(partStart, end));
        else {
          last = A.Uri__parseIPv4Address(host, partStart, end);
          parts.push((last[0] << 8 | last[1]) >>> 0);
          parts.push((last[2] << 8 | last[3]) >>> 0);
        }
      if (wildcardSeen) {
        if (parts.length > 7)
          error.call$2("an address with a wildcard must have less than 7 parts", _null);
      } else if (parts.length !== 8)
        error.call$2("an address without a wildcard must contain exactly 8 parts", _null);
      bytes = new Uint8Array(16);
      for (t1 = parts.length, wildCardLength = 9 - t1, i = 0, index = 0; i < t1; ++i) {
        value = parts[i];
        if (value === -1)
          for (j = 0; j < wildCardLength; ++j) {
            bytes[index] = 0;
            bytes[index + 1] = 0;
            index += 2;
          }
        else {
          bytes[index] = B.JSInt_methods._shrOtherPositive$1(value, 8);
          bytes[index + 1] = value & 255;
          index += 2;
        }
      }
      return bytes;
    },
    _Uri$_internal(scheme, _userInfo, _host, _port, path, _query, _fragment) {
      return new A._Uri(scheme, _userInfo, _host, _port, path, _query, _fragment);
    },
    _Uri__defaultPort(scheme) {
      if (scheme === "http")
        return 80;
      if (scheme === "https")
        return 443;
      return 0;
    },
    _Uri__fail(uri, index, message) {
      throw A.wrapException(A.FormatException$(message, uri, index));
    },
    _Uri__computeQueryParametersAll(query) {
      var queryParameterLists;
      if (query.length === 0)
        return B.Map_empty0;
      queryParameterLists = A._Uri__splitQueryStringAll(query);
      queryParameterLists.updateAll$1(queryParameterLists, A.core___toUnmodifiableStringList$closure());
      return A.ConstantMap_ConstantMap$from(queryParameterLists, type$.String, type$.List_String);
    },
    _Uri__makePort(port, scheme) {
      if (port != null && port === A._Uri__defaultPort(scheme))
        return null;
      return port;
    },
    _Uri__makeHost(host, start, end, strictIPv6) {
      var t1, t2, index, zoneIDstart, zoneID, i;
      if (host == null)
        return null;
      if (start === end)
        return "";
      if (host.charCodeAt(start) === 91) {
        t1 = end - 1;
        if (host.charCodeAt(t1) !== 93)
          A._Uri__fail(host, start, "Missing end `]` to match `[` in host");
        t2 = start + 1;
        index = A._Uri__checkZoneID(host, t2, t1);
        if (index < t1) {
          zoneIDstart = index + 1;
          zoneID = A._Uri__normalizeZoneID(host, B.JSString_methods.startsWith$2(host, "25", zoneIDstart) ? index + 3 : zoneIDstart, t1, "%25");
        } else
          zoneID = "";
        A.Uri_parseIPv6Address(host, t2, index);
        return B.JSString_methods.substring$2(host, start, index).toLowerCase() + zoneID + "]";
      }
      for (i = start; i < end; ++i)
        if (host.charCodeAt(i) === 58) {
          index = B.JSString_methods.indexOf$2(host, "%", start);
          index = index >= start && index < end ? index : end;
          if (index < end) {
            zoneIDstart = index + 1;
            zoneID = A._Uri__normalizeZoneID(host, B.JSString_methods.startsWith$2(host, "25", zoneIDstart) ? index + 3 : zoneIDstart, end, "%25");
          } else
            zoneID = "";
          A.Uri_parseIPv6Address(host, start, index);
          return "[" + B.JSString_methods.substring$2(host, start, index) + zoneID + "]";
        }
      return A._Uri__normalizeRegName(host, start, end);
    },
    _Uri__checkZoneID(host, start, end) {
      var index = B.JSString_methods.indexOf$2(host, "%", start);
      return index >= start && index < end ? index : end;
    },
    _Uri__normalizeZoneID(host, start, end, prefix) {
      var index, sectionStart, isNormalized, char, replacement, t1, t2, tail, sourceLength, slice,
        buffer = prefix !== "" ? new A.StringBuffer(prefix) : null;
      for (index = start, sectionStart = index, isNormalized = true; index < end;) {
        char = host.charCodeAt(index);
        if (char === 37) {
          replacement = A._Uri__normalizeEscape(host, index, true);
          t1 = replacement == null;
          if (t1 && isNormalized) {
            index += 3;
            continue;
          }
          if (buffer == null)
            buffer = new A.StringBuffer("");
          t2 = buffer._contents += B.JSString_methods.substring$2(host, sectionStart, index);
          if (t1)
            replacement = B.JSString_methods.substring$2(host, index, index + 3);
          else if (replacement === "%")
            A._Uri__fail(host, index, "ZoneID should not contain % anymore");
          buffer._contents = t2 + replacement;
          index += 3;
          sectionStart = index;
          isNormalized = true;
        } else if (char < 127 && (B.List_M1A[char >>> 4] & 1 << (char & 15)) !== 0) {
          if (isNormalized && 65 <= char && 90 >= char) {
            if (buffer == null)
              buffer = new A.StringBuffer("");
            if (sectionStart < index) {
              buffer._contents += B.JSString_methods.substring$2(host, sectionStart, index);
              sectionStart = index;
            }
            isNormalized = false;
          }
          ++index;
        } else {
          if ((char & 64512) === 55296 && index + 1 < end) {
            tail = host.charCodeAt(index + 1);
            if ((tail & 64512) === 56320) {
              char = (char & 1023) << 10 | tail & 1023 | 65536;
              sourceLength = 2;
            } else
              sourceLength = 1;
          } else
            sourceLength = 1;
          slice = B.JSString_methods.substring$2(host, sectionStart, index);
          if (buffer == null) {
            buffer = new A.StringBuffer("");
            t1 = buffer;
          } else
            t1 = buffer;
          t1._contents += slice;
          t1._contents += A._Uri__escapeChar(char);
          index += sourceLength;
          sectionStart = index;
        }
      }
      if (buffer == null)
        return B.JSString_methods.substring$2(host, start, end);
      if (sectionStart < end)
        buffer._contents += B.JSString_methods.substring$2(host, sectionStart, end);
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _Uri__normalizeRegName(host, start, end) {
      var index, sectionStart, buffer, isNormalized, char, replacement, t1, slice, t2, sourceLength, tail;
      for (index = start, sectionStart = index, buffer = null, isNormalized = true; index < end;) {
        char = host.charCodeAt(index);
        if (char === 37) {
          replacement = A._Uri__normalizeEscape(host, index, true);
          t1 = replacement == null;
          if (t1 && isNormalized) {
            index += 3;
            continue;
          }
          if (buffer == null)
            buffer = new A.StringBuffer("");
          slice = B.JSString_methods.substring$2(host, sectionStart, index);
          t2 = buffer._contents += !isNormalized ? slice.toLowerCase() : slice;
          if (t1) {
            replacement = B.JSString_methods.substring$2(host, index, index + 3);
            sourceLength = 3;
          } else if (replacement === "%") {
            replacement = "%25";
            sourceLength = 1;
          } else
            sourceLength = 3;
          buffer._contents = t2 + replacement;
          index += sourceLength;
          sectionStart = index;
          isNormalized = true;
        } else if (char < 127 && (B.List_ejq[char >>> 4] & 1 << (char & 15)) !== 0) {
          if (isNormalized && 65 <= char && 90 >= char) {
            if (buffer == null)
              buffer = new A.StringBuffer("");
            if (sectionStart < index) {
              buffer._contents += B.JSString_methods.substring$2(host, sectionStart, index);
              sectionStart = index;
            }
            isNormalized = false;
          }
          ++index;
        } else if (char <= 93 && (B.List_YmH[char >>> 4] & 1 << (char & 15)) !== 0)
          A._Uri__fail(host, index, "Invalid character");
        else {
          if ((char & 64512) === 55296 && index + 1 < end) {
            tail = host.charCodeAt(index + 1);
            if ((tail & 64512) === 56320) {
              char = (char & 1023) << 10 | tail & 1023 | 65536;
              sourceLength = 2;
            } else
              sourceLength = 1;
          } else
            sourceLength = 1;
          slice = B.JSString_methods.substring$2(host, sectionStart, index);
          if (!isNormalized)
            slice = slice.toLowerCase();
          if (buffer == null) {
            buffer = new A.StringBuffer("");
            t1 = buffer;
          } else
            t1 = buffer;
          t1._contents += slice;
          t1._contents += A._Uri__escapeChar(char);
          index += sourceLength;
          sectionStart = index;
        }
      }
      if (buffer == null)
        return B.JSString_methods.substring$2(host, start, end);
      if (sectionStart < end) {
        slice = B.JSString_methods.substring$2(host, sectionStart, end);
        buffer._contents += !isNormalized ? slice.toLowerCase() : slice;
      }
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _Uri__makeScheme(scheme, start, end) {
      var i, containsUpperCase, codeUnit;
      if (start === end)
        return "";
      if (!A._Uri__isAlphabeticCharacter(scheme.charCodeAt(start)))
        A._Uri__fail(scheme, start, "Scheme not starting with alphabetic character");
      for (i = start, containsUpperCase = false; i < end; ++i) {
        codeUnit = scheme.charCodeAt(i);
        if (!(codeUnit < 128 && (B.List_MMm[codeUnit >>> 4] & 1 << (codeUnit & 15)) !== 0))
          A._Uri__fail(scheme, i, "Illegal scheme character");
        if (65 <= codeUnit && codeUnit <= 90)
          containsUpperCase = true;
      }
      scheme = B.JSString_methods.substring$2(scheme, start, end);
      return A._Uri__canonicalizeScheme(containsUpperCase ? scheme.toLowerCase() : scheme);
    },
    _Uri__canonicalizeScheme(scheme) {
      if (scheme === "http")
        return "http";
      if (scheme === "file")
        return "file";
      if (scheme === "https")
        return "https";
      if (scheme === "package")
        return "package";
      return scheme;
    },
    _Uri__makeUserInfo(userInfo, start, end) {
      if (userInfo == null)
        return "";
      return A._Uri__normalizeOrSubstring(userInfo, start, end, B.List_OL3, false, false);
    },
    _Uri__makePath(path, start, end, pathSegments, scheme, hasAuthority) {
      var isFile = scheme === "file",
        ensureLeadingSlash = isFile || hasAuthority,
        result = A._Uri__normalizeOrSubstring(path, start, end, B.List_XRg, true, true);
      if (result.length === 0) {
        if (isFile)
          return "/";
      } else if (ensureLeadingSlash && !B.JSString_methods.startsWith$1(result, "/"))
        result = "/" + result;
      return A._Uri__normalizePath(result, scheme, hasAuthority);
    },
    _Uri__normalizePath(path, scheme, hasAuthority) {
      var t1 = scheme.length === 0;
      if (t1 && !hasAuthority && !B.JSString_methods.startsWith$1(path, "/") && !B.JSString_methods.startsWith$1(path, "\\"))
        return A._Uri__normalizeRelativePath(path, !t1 || hasAuthority);
      return A._Uri__removeDotSegments(path);
    },
    _Uri__makeQuery(query, start, end, queryParameters) {
      var result, t1 = {};
      if (query != null) {
        if (queryParameters != null)
          throw A.wrapException(A.ArgumentError$("Both query and queryParameters specified", null));
        return A._Uri__normalizeOrSubstring(query, start, end, B.List_oFp, true, false);
      }
      if (queryParameters == null)
        return null;
      result = new A.StringBuffer("");
      t1.separator = "";
      queryParameters.forEach$1(0, new A._Uri__makeQuery_closure(new A._Uri__makeQuery_writeParameter(t1, result)));
      t1 = result._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _Uri__makeFragment(fragment, start, end) {
      if (fragment == null)
        return null;
      return A._Uri__normalizeOrSubstring(fragment, start, end, B.List_oFp, true, false);
    },
    _Uri__normalizeEscape(source, index, lowerCase) {
      var firstDigit, secondDigit, firstDigitValue, secondDigitValue, value,
        t1 = index + 2;
      if (t1 >= source.length)
        return "%";
      firstDigit = source.charCodeAt(index + 1);
      secondDigit = source.charCodeAt(t1);
      firstDigitValue = A.hexDigitValue(firstDigit);
      secondDigitValue = A.hexDigitValue(secondDigit);
      if (firstDigitValue < 0 || secondDigitValue < 0)
        return "%";
      value = firstDigitValue * 16 + secondDigitValue;
      if (value < 127 && (B.List_M1A[B.JSInt_methods._shrOtherPositive$1(value, 4)] & 1 << (value & 15)) !== 0)
        return A.Primitives_stringFromCharCode(lowerCase && 65 <= value && 90 >= value ? (value | 32) >>> 0 : value);
      if (firstDigit >= 97 || secondDigit >= 97)
        return B.JSString_methods.substring$2(source, index, index + 3).toUpperCase();
      return null;
    },
    _Uri__escapeChar(char) {
      var codeUnits, flag, encodedBytes, index, byte,
        _s16_ = "0123456789ABCDEF";
      if (char < 128) {
        codeUnits = new Uint8Array(3);
        codeUnits[0] = 37;
        codeUnits[1] = _s16_.charCodeAt(char >>> 4);
        codeUnits[2] = _s16_.charCodeAt(char & 15);
      } else {
        if (char > 2047)
          if (char > 65535) {
            flag = 240;
            encodedBytes = 4;
          } else {
            flag = 224;
            encodedBytes = 3;
          }
        else {
          flag = 192;
          encodedBytes = 2;
        }
        codeUnits = new Uint8Array(3 * encodedBytes);
        for (index = 0; --encodedBytes, encodedBytes >= 0; flag = 128) {
          byte = B.JSInt_methods._shrReceiverPositive$1(char, 6 * encodedBytes) & 63 | flag;
          codeUnits[index] = 37;
          codeUnits[index + 1] = _s16_.charCodeAt(byte >>> 4);
          codeUnits[index + 2] = _s16_.charCodeAt(byte & 15);
          index += 3;
        }
      }
      return A.String_String$fromCharCodes(codeUnits, 0, null);
    },
    _Uri__normalizeOrSubstring(component, start, end, charTable, escapeDelimiters, replaceBackslash) {
      var t1 = A._Uri__normalize(component, start, end, charTable, escapeDelimiters, replaceBackslash);
      return t1 == null ? B.JSString_methods.substring$2(component, start, end) : t1;
    },
    _Uri__normalize(component, start, end, charTable, escapeDelimiters, replaceBackslash) {
      var t1, index, sectionStart, buffer, char, replacement, sourceLength, t2, tail, t3, _null = null;
      for (t1 = !escapeDelimiters, index = start, sectionStart = index, buffer = _null; index < end;) {
        char = component.charCodeAt(index);
        if (char < 127 && (charTable[char >>> 4] & 1 << (char & 15)) !== 0)
          ++index;
        else {
          if (char === 37) {
            replacement = A._Uri__normalizeEscape(component, index, false);
            if (replacement == null) {
              index += 3;
              continue;
            }
            if ("%" === replacement) {
              replacement = "%25";
              sourceLength = 1;
            } else
              sourceLength = 3;
          } else if (char === 92 && replaceBackslash) {
            replacement = "/";
            sourceLength = 1;
          } else if (t1 && char <= 93 && (B.List_YmH[char >>> 4] & 1 << (char & 15)) !== 0) {
            A._Uri__fail(component, index, "Invalid character");
            sourceLength = _null;
            replacement = sourceLength;
          } else {
            if ((char & 64512) === 55296) {
              t2 = index + 1;
              if (t2 < end) {
                tail = component.charCodeAt(t2);
                if ((tail & 64512) === 56320) {
                  char = (char & 1023) << 10 | tail & 1023 | 65536;
                  sourceLength = 2;
                } else
                  sourceLength = 1;
              } else
                sourceLength = 1;
            } else
              sourceLength = 1;
            replacement = A._Uri__escapeChar(char);
          }
          if (buffer == null) {
            buffer = new A.StringBuffer("");
            t2 = buffer;
          } else
            t2 = buffer;
          t3 = t2._contents += B.JSString_methods.substring$2(component, sectionStart, index);
          t2._contents = t3 + A.S(replacement);
          index += sourceLength;
          sectionStart = index;
        }
      }
      if (buffer == null)
        return _null;
      if (sectionStart < end)
        buffer._contents += B.JSString_methods.substring$2(component, sectionStart, end);
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _Uri__mayContainDotSegments(path) {
      if (B.JSString_methods.startsWith$1(path, "."))
        return true;
      return B.JSString_methods.indexOf$1(path, "/.") !== -1;
    },
    _Uri__removeDotSegments(path) {
      var output, t1, t2, appendSlash, _i, segment;
      if (!A._Uri__mayContainDotSegments(path))
        return path;
      output = A._setArrayType([], type$.JSArray_String);
      for (t1 = path.split("/"), t2 = t1.length, appendSlash = false, _i = 0; _i < t2; ++_i) {
        segment = t1[_i];
        if (J.$eq$(segment, "..")) {
          if (output.length !== 0) {
            output.pop();
            if (output.length === 0)
              output.push("");
          }
          appendSlash = true;
        } else if ("." === segment)
          appendSlash = true;
        else {
          output.push(segment);
          appendSlash = false;
        }
      }
      if (appendSlash)
        output.push("");
      return B.JSArray_methods.join$1(output, "/");
    },
    _Uri__normalizeRelativePath(path, allowScheme) {
      var output, t1, t2, appendSlash, _i, segment;
      if (!A._Uri__mayContainDotSegments(path))
        return !allowScheme ? A._Uri__escapeScheme(path) : path;
      output = A._setArrayType([], type$.JSArray_String);
      for (t1 = path.split("/"), t2 = t1.length, appendSlash = false, _i = 0; _i < t2; ++_i) {
        segment = t1[_i];
        if (".." === segment)
          if (output.length !== 0 && B.JSArray_methods.get$last(output) !== "..") {
            output.pop();
            appendSlash = true;
          } else {
            output.push("..");
            appendSlash = false;
          }
        else if ("." === segment)
          appendSlash = true;
        else {
          output.push(segment);
          appendSlash = false;
        }
      }
      t1 = output.length;
      if (t1 !== 0)
        t1 = t1 === 1 && output[0].length === 0;
      else
        t1 = true;
      if (t1)
        return "./";
      if (appendSlash || B.JSArray_methods.get$last(output) === "..")
        output.push("");
      if (!allowScheme)
        output[0] = A._Uri__escapeScheme(output[0]);
      return B.JSArray_methods.join$1(output, "/");
    },
    _Uri__escapeScheme(path) {
      var i, char,
        t1 = path.length;
      if (t1 >= 2 && A._Uri__isAlphabeticCharacter(path.charCodeAt(0)))
        for (i = 1; i < t1; ++i) {
          char = path.charCodeAt(i);
          if (char === 58)
            return B.JSString_methods.substring$2(path, 0, i) + "%3A" + B.JSString_methods.substring$1(path, i + 1);
          if (char > 127 || (B.List_MMm[char >>> 4] & 1 << (char & 15)) === 0)
            break;
        }
      return path;
    },
    _Uri__createList() {
      return A._setArrayType([], type$.JSArray_String);
    },
    _Uri__splitQueryStringAll(query) {
      var t1, i, start, equalsIndex, char,
        result = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.List_String),
        parsePair = new A._Uri__splitQueryStringAll_parsePair(query, B.C_Utf8Codec, result);
      for (t1 = query.length, i = 0, start = 0, equalsIndex = -1; i < t1;) {
        char = query.charCodeAt(i);
        if (char === 61) {
          if (equalsIndex < 0)
            equalsIndex = i;
        } else if (char === 38) {
          parsePair.call$3(start, equalsIndex, i);
          start = i + 1;
          equalsIndex = -1;
        }
        ++i;
      }
      parsePair.call$3(start, equalsIndex, i);
      return result;
    },
    _Uri__hexCharPairToByte(s, pos) {
      var byte, i, charCode;
      for (byte = 0, i = 0; i < 2; ++i) {
        charCode = s.charCodeAt(pos + i);
        if (48 <= charCode && charCode <= 57)
          byte = byte * 16 + charCode - 48;
        else {
          charCode |= 32;
          if (97 <= charCode && charCode <= 102)
            byte = byte * 16 + charCode - 87;
          else
            throw A.wrapException(A.ArgumentError$("Invalid URL encoding", null));
        }
      }
      return byte;
    },
    _Uri__uriDecode(text, start, end, encoding, plusToSpace) {
      var simple, codeUnit, t1, bytes,
        i = start;
      while (true) {
        if (!(i < end)) {
          simple = true;
          break;
        }
        codeUnit = text.charCodeAt(i);
        if (codeUnit <= 127)
          if (codeUnit !== 37)
            t1 = plusToSpace && codeUnit === 43;
          else
            t1 = true;
        else
          t1 = true;
        if (t1) {
          simple = false;
          break;
        }
        ++i;
      }
      if (simple) {
        if (B.C_Utf8Codec !== encoding)
          t1 = false;
        else
          t1 = true;
        if (t1)
          return B.JSString_methods.substring$2(text, start, end);
        else
          bytes = new A.CodeUnits(B.JSString_methods.substring$2(text, start, end));
      } else {
        bytes = A._setArrayType([], type$.JSArray_int);
        for (t1 = text.length, i = start; i < end; ++i) {
          codeUnit = text.charCodeAt(i);
          if (codeUnit > 127)
            throw A.wrapException(A.ArgumentError$("Illegal percent encoding in URI", null));
          if (codeUnit === 37) {
            if (i + 3 > t1)
              throw A.wrapException(A.ArgumentError$("Truncated URI", null));
            bytes.push(A._Uri__hexCharPairToByte(text, i + 1));
            i += 2;
          } else if (plusToSpace && codeUnit === 43)
            bytes.push(32);
          else
            bytes.push(codeUnit);
        }
      }
      return encoding.decode$1(0, bytes);
    },
    _Uri__isAlphabeticCharacter(codeUnit) {
      var lowerCase = codeUnit | 32;
      return 97 <= lowerCase && lowerCase <= 122;
    },
    UriData__parse(text, start, sourceUri) {
      var t1, i, slashIndex, char, equalsIndex, lastSeparator, t2, data,
        _s17_ = "Invalid MIME type",
        indices = A._setArrayType([start - 1], type$.JSArray_int);
      for (t1 = text.length, i = start, slashIndex = -1, char = null; i < t1; ++i) {
        char = text.charCodeAt(i);
        if (char === 44 || char === 59)
          break;
        if (char === 47) {
          if (slashIndex < 0) {
            slashIndex = i;
            continue;
          }
          throw A.wrapException(A.FormatException$(_s17_, text, i));
        }
      }
      if (slashIndex < 0 && i > start)
        throw A.wrapException(A.FormatException$(_s17_, text, i));
      for (; char !== 44;) {
        indices.push(i);
        ++i;
        for (equalsIndex = -1; i < t1; ++i) {
          char = text.charCodeAt(i);
          if (char === 61) {
            if (equalsIndex < 0)
              equalsIndex = i;
          } else if (char === 59 || char === 44)
            break;
        }
        if (equalsIndex >= 0)
          indices.push(equalsIndex);
        else {
          lastSeparator = B.JSArray_methods.get$last(indices);
          if (char !== 44 || i !== lastSeparator + 7 || !B.JSString_methods.startsWith$2(text, "base64", lastSeparator + 1))
            throw A.wrapException(A.FormatException$("Expecting '='", text, i));
          break;
        }
      }
      indices.push(i);
      t2 = i + 1;
      if ((indices.length & 1) === 1)
        text = B.C_Base64Codec.normalize$3(0, text, t2, t1);
      else {
        data = A._Uri__normalize(text, t2, t1, B.List_oFp, true, false);
        if (data != null)
          text = B.JSString_methods.replaceRange$3(text, t2, t1, data);
      }
      return new A.UriData(text, indices, sourceUri);
    },
    _createTables() {
      var _i, t1, t2, t3, b,
        _s77_ = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-._~!$&'()*+,;=",
        _s1_ = ".", _s1_0 = ":", _s1_1 = "/", _s1_2 = "\\", _s1_3 = "?", _s1_4 = "#", _s2_ = "/\\",
        tables = J.JSArray_JSArray$allocateGrowable(22, type$.Uint8List);
      for (_i = 0; _i < 22; ++_i)
        tables[_i] = new Uint8Array(96);
      t1 = new A._createTables_build(tables);
      t2 = new A._createTables_setChars();
      t3 = new A._createTables_setRange();
      b = t1.call$2(0, 225);
      t2.call$3(b, _s77_, 1);
      t2.call$3(b, _s1_, 14);
      t2.call$3(b, _s1_0, 34);
      t2.call$3(b, _s1_1, 3);
      t2.call$3(b, _s1_2, 227);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(14, 225);
      t2.call$3(b, _s77_, 1);
      t2.call$3(b, _s1_, 15);
      t2.call$3(b, _s1_0, 34);
      t2.call$3(b, _s2_, 234);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(15, 225);
      t2.call$3(b, _s77_, 1);
      t2.call$3(b, "%", 225);
      t2.call$3(b, _s1_0, 34);
      t2.call$3(b, _s1_1, 9);
      t2.call$3(b, _s1_2, 233);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(1, 225);
      t2.call$3(b, _s77_, 1);
      t2.call$3(b, _s1_0, 34);
      t2.call$3(b, _s1_1, 10);
      t2.call$3(b, _s1_2, 234);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(2, 235);
      t2.call$3(b, _s77_, 139);
      t2.call$3(b, _s1_1, 131);
      t2.call$3(b, _s1_2, 131);
      t2.call$3(b, _s1_, 146);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(3, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s1_1, 68);
      t2.call$3(b, _s1_2, 68);
      t2.call$3(b, _s1_, 18);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(4, 229);
      t2.call$3(b, _s77_, 5);
      t3.call$3(b, "AZ", 229);
      t2.call$3(b, _s1_0, 102);
      t2.call$3(b, "@", 68);
      t2.call$3(b, "[", 232);
      t2.call$3(b, _s1_1, 138);
      t2.call$3(b, _s1_2, 138);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(5, 229);
      t2.call$3(b, _s77_, 5);
      t3.call$3(b, "AZ", 229);
      t2.call$3(b, _s1_0, 102);
      t2.call$3(b, "@", 68);
      t2.call$3(b, _s1_1, 138);
      t2.call$3(b, _s1_2, 138);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(6, 231);
      t3.call$3(b, "19", 7);
      t2.call$3(b, "@", 68);
      t2.call$3(b, _s1_1, 138);
      t2.call$3(b, _s1_2, 138);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(7, 231);
      t3.call$3(b, "09", 7);
      t2.call$3(b, "@", 68);
      t2.call$3(b, _s1_1, 138);
      t2.call$3(b, _s1_2, 138);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      t2.call$3(t1.call$2(8, 8), "]", 5);
      b = t1.call$2(9, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s1_, 16);
      t2.call$3(b, _s2_, 234);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(16, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s1_, 17);
      t2.call$3(b, _s2_, 234);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(17, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s1_1, 9);
      t2.call$3(b, _s1_2, 233);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(10, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s1_, 18);
      t2.call$3(b, _s1_1, 10);
      t2.call$3(b, _s1_2, 234);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(18, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s1_, 19);
      t2.call$3(b, _s2_, 234);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(19, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s2_, 234);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(11, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s1_1, 10);
      t2.call$3(b, _s1_2, 234);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(12, 236);
      t2.call$3(b, _s77_, 12);
      t2.call$3(b, _s1_3, 12);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(13, 237);
      t2.call$3(b, _s77_, 13);
      t2.call$3(b, _s1_3, 13);
      t3.call$3(t1.call$2(20, 245), "az", 21);
      b = t1.call$2(21, 245);
      t3.call$3(b, "az", 21);
      t3.call$3(b, "09", 21);
      t2.call$3(b, "+-.", 21);
      return tables;
    },
    _scan(uri, start, end, state, indices) {
      var i, table, char, transition,
        tables = $.$get$_scannerTables();
      for (i = start; i < end; ++i) {
        table = tables[state];
        char = uri.charCodeAt(i) ^ 96;
        transition = table[char > 95 ? 31 : char];
        state = transition & 31;
        indices[transition >>> 5] = i;
      }
      return state;
    },
    _toUnmodifiableStringList(key, list) {
      return A.List_List$unmodifiable(list, type$.String);
    },
    NoSuchMethodError_toString_closure: function NoSuchMethodError_toString_closure(t0, t1) {
      this._box_0 = t0;
      this.sb = t1;
    },
    DateTime: function DateTime(t0, t1) {
      this._value = t0;
      this.isUtc = t1;
    },
    Duration: function Duration(t0) {
      this._duration = t0;
    },
    _Enum: function _Enum() {
    },
    Error: function Error() {
    },
    AssertionError: function AssertionError(t0) {
      this.message = t0;
    },
    TypeError: function TypeError() {
    },
    ArgumentError: function ArgumentError(t0, t1, t2, t3) {
      var _ = this;
      _._hasValue = t0;
      _.invalidValue = t1;
      _.name = t2;
      _.message = t3;
    },
    RangeError: function RangeError(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.start = t0;
      _.end = t1;
      _._hasValue = t2;
      _.invalidValue = t3;
      _.name = t4;
      _.message = t5;
    },
    IndexError: function IndexError(t0, t1, t2, t3, t4) {
      var _ = this;
      _.length = t0;
      _._hasValue = t1;
      _.invalidValue = t2;
      _.name = t3;
      _.message = t4;
    },
    NoSuchMethodError: function NoSuchMethodError(t0, t1, t2, t3) {
      var _ = this;
      _._core$_receiver = t0;
      _._memberName = t1;
      _._core$_arguments = t2;
      _._namedArguments = t3;
    },
    UnsupportedError: function UnsupportedError(t0) {
      this.message = t0;
    },
    UnimplementedError: function UnimplementedError(t0) {
      this.message = t0;
    },
    StateError: function StateError(t0) {
      this.message = t0;
    },
    ConcurrentModificationError: function ConcurrentModificationError(t0) {
      this.modifiedObject = t0;
    },
    OutOfMemoryError: function OutOfMemoryError() {
    },
    StackOverflowError: function StackOverflowError() {
    },
    _Exception: function _Exception(t0) {
      this.message = t0;
    },
    FormatException: function FormatException(t0, t1, t2) {
      this.message = t0;
      this.source = t1;
      this.offset = t2;
    },
    Iterable: function Iterable() {
    },
    MapEntry: function MapEntry(t0, t1, t2) {
      this.key = t0;
      this.value = t1;
      this.$ti = t2;
    },
    Null: function Null() {
    },
    Object: function Object() {
    },
    _StringStackTrace: function _StringStackTrace() {
    },
    Stopwatch: function Stopwatch() {
      this._stop = this._core$_start = 0;
    },
    StringBuffer: function StringBuffer(t0) {
      this._contents = t0;
    },
    Uri__parseIPv4Address_error: function Uri__parseIPv4Address_error(t0) {
      this.host = t0;
    },
    Uri_parseIPv6Address_error: function Uri_parseIPv6Address_error(t0) {
      this.host = t0;
    },
    Uri_parseIPv6Address_parseHex: function Uri_parseIPv6Address_parseHex(t0, t1) {
      this.error = t0;
      this.host = t1;
    },
    _Uri: function _Uri(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.scheme = t0;
      _._userInfo = t1;
      _._host = t2;
      _._port = t3;
      _.path = t4;
      _._query = t5;
      _._fragment = t6;
      _.___Uri_queryParametersAll_FI = _.___Uri_hashCode_FI = _.___Uri_pathSegments_FI = _.___Uri__text_FI = $;
    },
    _Uri__makeQuery_writeParameter: function _Uri__makeQuery_writeParameter(t0, t1) {
      this._box_0 = t0;
      this.result = t1;
    },
    _Uri__makeQuery_closure: function _Uri__makeQuery_closure(t0) {
      this.writeParameter = t0;
    },
    _Uri__splitQueryStringAll_parsePair: function _Uri__splitQueryStringAll_parsePair(t0, t1, t2) {
      this.query = t0;
      this.encoding = t1;
      this.result = t2;
    },
    UriData: function UriData(t0, t1, t2) {
      this._text = t0;
      this._separatorIndices = t1;
      this._uriCache = t2;
    },
    _createTables_build: function _createTables_build(t0) {
      this.tables = t0;
    },
    _createTables_setChars: function _createTables_setChars() {
    },
    _createTables_setRange: function _createTables_setRange() {
    },
    _SimpleUri: function _SimpleUri(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._uri = t0;
      _._schemeEnd = t1;
      _._hostStart = t2;
      _._portStart = t3;
      _._pathStart = t4;
      _._queryStart = t5;
      _._fragmentStart = t6;
      _._schemeCache = t7;
      _._hashCodeCache = null;
    },
    _DataUri: function _DataUri(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.scheme = t0;
      _._userInfo = t1;
      _._host = t2;
      _._port = t3;
      _.path = t4;
      _._query = t5;
      _._fragment = t6;
      _.___Uri_queryParametersAll_FI = _.___Uri_hashCode_FI = _.___Uri_pathSegments_FI = _.___Uri__text_FI = $;
    },
    Expando: function Expando(t0) {
      this._jsWeakMap = t0;
    },
    ServiceExtensionResponse: function ServiceExtensionResponse() {
    },
    _ChildrenElementList__addAll(_element, iterable) {
      var t1;
      for (t1 = J.get$iterator$ax(iterable); t1.moveNext$0();)
        _element.appendChild(t1.get$current(t1)).toString;
    },
    _ChildrenElementList__first(_element) {
      var result = _element.firstElementChild;
      if (result == null)
        throw A.wrapException(A.StateError$("No elements"));
      return result;
    },
    Element_Element$html(html, treeSanitizer, validator) {
      var t1 = document.body;
      t1.toString;
      t1 = new A.WhereIterable(new A._ChildNodeListLazy(B.BodyElement_methods.createFragment$3$treeSanitizer$validator(t1, html, treeSanitizer, validator)), new A.Element_Element$html_closure(), type$._ChildNodeListLazy._eval$1("WhereIterable<ListBase.E>"));
      return type$.Element._as(t1.get$single(t1));
    },
    Element__safeTagName(element) {
      var t1, exception,
        result = "element tag unavailable";
      try {
        t1 = element.tagName;
        t1.toString;
        result = t1;
      } catch (exception) {
      }
      return result;
    },
    _EventStreamSubscription$(_target, _eventType, onData, _useCapture) {
      var t1 = new A._EventStreamSubscription(_target, _eventType, onData == null ? null : A._wrapZone(new A._EventStreamSubscription_closure(onData), type$.Event), false);
      t1._tryResume$0();
      return t1;
    },
    _Html5NodeValidator$(uriPolicy) {
      var t1 = document.createElement("a");
      t1.toString;
      t1 = new A._SameOriginUriPolicy(t1, window.location);
      t1 = new A._Html5NodeValidator(t1);
      t1._Html5NodeValidator$1$uriPolicy(uriPolicy);
      return t1;
    },
    _Html5NodeValidator__standardAttributeValidator(element, attributeName, value, context) {
      return true;
    },
    _Html5NodeValidator__uriAttributeValidator(element, attributeName, value, context) {
      var t3, t4, t5,
        t1 = context.uriPolicy,
        t2 = t1._hiddenAnchor;
      t2.href = value;
      t3 = t2.hostname;
      t1 = t1._loc;
      if (t3 == t1.hostname) {
        t4 = t2.port;
        t5 = t1.port;
        t5.toString;
        if (t4 === t5) {
          t4 = t2.protocol;
          t1 = t1.protocol;
          t1.toString;
          t1 = t4 === t1;
        } else
          t1 = false;
      } else
        t1 = false;
      if (!t1)
        if (t3 === "")
          if (t2.port === "") {
            t1 = t2.protocol;
            t1 = t1 === ":" || t1 === "";
          } else
            t1 = false;
        else
          t1 = false;
      else
        t1 = true;
      return t1;
    },
    _TemplatingNodeValidator$() {
      var t1 = type$.String,
        t2 = A.LinkedHashSet_LinkedHashSet$from(B.List_AuK, t1),
        t3 = A._setArrayType(["TEMPLATE"], type$.JSArray_String);
      t1 = new A._TemplatingNodeValidator(t2, A.LinkedHashSet_LinkedHashSet(t1), A.LinkedHashSet_LinkedHashSet(t1), A.LinkedHashSet_LinkedHashSet(t1), null);
      t1._SimpleNodeValidator$4$allowedAttributes$allowedElements$allowedUriAttributes(null, new A.MappedListIterable(B.List_AuK, new A._TemplatingNodeValidator_closure(), type$.MappedListIterable_String_String), t3, null);
      return t1;
    },
    _wrapZone(callback, $T) {
      var t1 = $.Zone__current;
      if (t1 === B.C__RootZone)
        return callback;
      return t1.bindUnaryCallbackGuarded$1$1(callback, $T);
    },
    HtmlElement: function HtmlElement() {
    },
    AccessibleNodeList: function AccessibleNodeList() {
    },
    AnchorElement: function AnchorElement() {
    },
    AreaElement: function AreaElement() {
    },
    BaseElement: function BaseElement() {
    },
    Blob: function Blob() {
    },
    BodyElement: function BodyElement() {
    },
    CharacterData: function CharacterData() {
    },
    CssPerspective: function CssPerspective() {
    },
    CssRule: function CssRule() {
    },
    CssStyleDeclaration: function CssStyleDeclaration() {
    },
    CssStyleDeclarationBase: function CssStyleDeclarationBase() {
    },
    CssStyleValue: function CssStyleValue() {
    },
    CssTransformComponent: function CssTransformComponent() {
    },
    CssTransformValue: function CssTransformValue() {
    },
    CssUnparsedValue: function CssUnparsedValue() {
    },
    DataTransferItemList: function DataTransferItemList() {
    },
    DomException0: function DomException0() {
    },
    DomRectList: function DomRectList() {
    },
    DomRectReadOnly0: function DomRectReadOnly0() {
    },
    DomStringList: function DomStringList() {
    },
    DomTokenList0: function DomTokenList0() {
    },
    _ChildrenElementList: function _ChildrenElementList(t0, t1) {
      this._html$_element = t0;
      this._childElements = t1;
    },
    Element: function Element() {
    },
    Element_Element$html_closure: function Element_Element$html_closure() {
    },
    Event: function Event() {
    },
    EventTarget: function EventTarget() {
    },
    File: function File() {
    },
    FileList: function FileList() {
    },
    FileWriter: function FileWriter() {
    },
    FormElement: function FormElement() {
    },
    Gamepad: function Gamepad() {
    },
    History: function History() {
    },
    HtmlCollection: function HtmlCollection() {
    },
    LinkElement: function LinkElement() {
    },
    Location: function Location() {
    },
    MediaList: function MediaList() {
    },
    MidiInputMap: function MidiInputMap() {
    },
    MidiInputMap_keys_closure: function MidiInputMap_keys_closure(t0) {
      this.keys = t0;
    },
    MidiOutputMap: function MidiOutputMap() {
    },
    MidiOutputMap_keys_closure: function MidiOutputMap_keys_closure(t0) {
      this.keys = t0;
    },
    MimeType: function MimeType() {
    },
    MimeTypeArray: function MimeTypeArray() {
    },
    _ChildNodeListLazy: function _ChildNodeListLazy(t0) {
      this._this = t0;
    },
    Node: function Node() {
    },
    NodeList: function NodeList() {
    },
    Plugin: function Plugin() {
    },
    PluginArray: function PluginArray() {
    },
    RtcStatsReport: function RtcStatsReport() {
    },
    RtcStatsReport_keys_closure: function RtcStatsReport_keys_closure(t0) {
      this.keys = t0;
    },
    ScriptElement: function ScriptElement() {
    },
    SelectElement: function SelectElement() {
    },
    SourceBuffer: function SourceBuffer() {
    },
    SourceBufferList: function SourceBufferList() {
    },
    SpeechGrammar: function SpeechGrammar() {
    },
    SpeechGrammarList: function SpeechGrammarList() {
    },
    SpeechRecognitionResult: function SpeechRecognitionResult() {
    },
    Storage: function Storage() {
    },
    Storage_keys_closure: function Storage_keys_closure(t0) {
      this.keys = t0;
    },
    StyleSheet: function StyleSheet() {
    },
    TableElement: function TableElement() {
    },
    TableRowElement: function TableRowElement() {
    },
    TableSectionElement: function TableSectionElement() {
    },
    TemplateElement: function TemplateElement() {
    },
    TextTrack: function TextTrack() {
    },
    TextTrackCue: function TextTrackCue() {
    },
    TextTrackCueList: function TextTrackCueList() {
    },
    TextTrackList: function TextTrackList() {
    },
    TimeRanges: function TimeRanges() {
    },
    Touch: function Touch() {
    },
    TouchList: function TouchList() {
    },
    TrackDefaultList: function TrackDefaultList() {
    },
    Url: function Url() {
    },
    VideoTrackList: function VideoTrackList() {
    },
    _Attr: function _Attr() {
    },
    _CssRuleList: function _CssRuleList() {
    },
    _DomRect: function _DomRect() {
    },
    _GamepadList: function _GamepadList() {
    },
    _NamedNodeMap: function _NamedNodeMap() {
    },
    _SpeechRecognitionResultList: function _SpeechRecognitionResultList() {
    },
    _StyleSheetList: function _StyleSheetList() {
    },
    _AttributeMap: function _AttributeMap() {
    },
    _ElementAttributeMap: function _ElementAttributeMap(t0) {
      this._html$_element = t0;
    },
    EventStreamProvider: function EventStreamProvider(t0, t1) {
      this._eventType = t0;
      this.$ti = t1;
    },
    _EventStream: function _EventStream() {
    },
    _ElementEventStreamImpl: function _ElementEventStreamImpl(t0, t1, t2, t3) {
      var _ = this;
      _._target = t0;
      _._eventType = t1;
      _._useCapture = t2;
      _.$ti = t3;
    },
    _EventStreamSubscription: function _EventStreamSubscription(t0, t1, t2, t3) {
      var _ = this;
      _._target = t0;
      _._eventType = t1;
      _._html$_onData = t2;
      _._useCapture = t3;
    },
    _EventStreamSubscription_closure: function _EventStreamSubscription_closure(t0) {
      this.onData = t0;
    },
    _EventStreamSubscription_onData_closure: function _EventStreamSubscription_onData_closure(t0) {
      this.handleData = t0;
    },
    _Html5NodeValidator: function _Html5NodeValidator(t0) {
      this.uriPolicy = t0;
    },
    ImmutableListMixin: function ImmutableListMixin() {
    },
    NodeValidatorBuilder: function NodeValidatorBuilder(t0) {
      this._validators = t0;
    },
    NodeValidatorBuilder_allowsElement_closure: function NodeValidatorBuilder_allowsElement_closure(t0) {
      this.element = t0;
    },
    NodeValidatorBuilder_allowsAttribute_closure: function NodeValidatorBuilder_allowsAttribute_closure(t0, t1, t2) {
      this.element = t0;
      this.attributeName = t1;
      this.value = t2;
    },
    _SimpleNodeValidator: function _SimpleNodeValidator() {
    },
    _SimpleNodeValidator_closure: function _SimpleNodeValidator_closure() {
    },
    _SimpleNodeValidator_closure0: function _SimpleNodeValidator_closure0() {
    },
    _TemplatingNodeValidator: function _TemplatingNodeValidator(t0, t1, t2, t3, t4) {
      var _ = this;
      _._templateAttrs = t0;
      _.allowedElements = t1;
      _.allowedAttributes = t2;
      _.allowedUriAttributes = t3;
      _.uriPolicy = t4;
    },
    _TemplatingNodeValidator_closure: function _TemplatingNodeValidator_closure() {
    },
    _SvgNodeValidator: function _SvgNodeValidator() {
    },
    FixedSizeListIterator: function FixedSizeListIterator(t0, t1) {
      var _ = this;
      _._array = t0;
      _._length = t1;
      _._position = -1;
      _._current = null;
    },
    _SameOriginUriPolicy: function _SameOriginUriPolicy(t0, t1) {
      this._hiddenAnchor = t0;
      this._loc = t1;
    },
    _ValidatingTreeSanitizer: function _ValidatingTreeSanitizer(t0) {
      this.validator = t0;
      this.numTreeModifications = 0;
    },
    _ValidatingTreeSanitizer_sanitizeTree_walk: function _ValidatingTreeSanitizer_sanitizeTree_walk(t0) {
      this.$this = t0;
    },
    _CssStyleDeclaration_JavaScriptObject_CssStyleDeclarationBase: function _CssStyleDeclaration_JavaScriptObject_CssStyleDeclarationBase() {
    },
    _DomRectList_JavaScriptObject_ListMixin: function _DomRectList_JavaScriptObject_ListMixin() {
    },
    _DomRectList_JavaScriptObject_ListMixin_ImmutableListMixin: function _DomRectList_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    _DomStringList_JavaScriptObject_ListMixin: function _DomStringList_JavaScriptObject_ListMixin() {
    },
    _DomStringList_JavaScriptObject_ListMixin_ImmutableListMixin: function _DomStringList_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    _FileList_JavaScriptObject_ListMixin: function _FileList_JavaScriptObject_ListMixin() {
    },
    _FileList_JavaScriptObject_ListMixin_ImmutableListMixin: function _FileList_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    _HtmlCollection_JavaScriptObject_ListMixin: function _HtmlCollection_JavaScriptObject_ListMixin() {
    },
    _HtmlCollection_JavaScriptObject_ListMixin_ImmutableListMixin: function _HtmlCollection_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    _MidiInputMap_JavaScriptObject_MapMixin: function _MidiInputMap_JavaScriptObject_MapMixin() {
    },
    _MidiOutputMap_JavaScriptObject_MapMixin: function _MidiOutputMap_JavaScriptObject_MapMixin() {
    },
    _MimeTypeArray_JavaScriptObject_ListMixin: function _MimeTypeArray_JavaScriptObject_ListMixin() {
    },
    _MimeTypeArray_JavaScriptObject_ListMixin_ImmutableListMixin: function _MimeTypeArray_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    _NodeList_JavaScriptObject_ListMixin: function _NodeList_JavaScriptObject_ListMixin() {
    },
    _NodeList_JavaScriptObject_ListMixin_ImmutableListMixin: function _NodeList_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    _PluginArray_JavaScriptObject_ListMixin: function _PluginArray_JavaScriptObject_ListMixin() {
    },
    _PluginArray_JavaScriptObject_ListMixin_ImmutableListMixin: function _PluginArray_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    _RtcStatsReport_JavaScriptObject_MapMixin: function _RtcStatsReport_JavaScriptObject_MapMixin() {
    },
    _SourceBufferList_EventTarget_ListMixin: function _SourceBufferList_EventTarget_ListMixin() {
    },
    _SourceBufferList_EventTarget_ListMixin_ImmutableListMixin: function _SourceBufferList_EventTarget_ListMixin_ImmutableListMixin() {
    },
    _SpeechGrammarList_JavaScriptObject_ListMixin: function _SpeechGrammarList_JavaScriptObject_ListMixin() {
    },
    _SpeechGrammarList_JavaScriptObject_ListMixin_ImmutableListMixin: function _SpeechGrammarList_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    _Storage_JavaScriptObject_MapMixin: function _Storage_JavaScriptObject_MapMixin() {
    },
    _TextTrackCueList_JavaScriptObject_ListMixin: function _TextTrackCueList_JavaScriptObject_ListMixin() {
    },
    _TextTrackCueList_JavaScriptObject_ListMixin_ImmutableListMixin: function _TextTrackCueList_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    _TextTrackList_EventTarget_ListMixin: function _TextTrackList_EventTarget_ListMixin() {
    },
    _TextTrackList_EventTarget_ListMixin_ImmutableListMixin: function _TextTrackList_EventTarget_ListMixin_ImmutableListMixin() {
    },
    _TouchList_JavaScriptObject_ListMixin: function _TouchList_JavaScriptObject_ListMixin() {
    },
    _TouchList_JavaScriptObject_ListMixin_ImmutableListMixin: function _TouchList_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    __CssRuleList_JavaScriptObject_ListMixin: function __CssRuleList_JavaScriptObject_ListMixin() {
    },
    __CssRuleList_JavaScriptObject_ListMixin_ImmutableListMixin: function __CssRuleList_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    __GamepadList_JavaScriptObject_ListMixin: function __GamepadList_JavaScriptObject_ListMixin() {
    },
    __GamepadList_JavaScriptObject_ListMixin_ImmutableListMixin: function __GamepadList_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    __NamedNodeMap_JavaScriptObject_ListMixin: function __NamedNodeMap_JavaScriptObject_ListMixin() {
    },
    __NamedNodeMap_JavaScriptObject_ListMixin_ImmutableListMixin: function __NamedNodeMap_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    __SpeechRecognitionResultList_JavaScriptObject_ListMixin: function __SpeechRecognitionResultList_JavaScriptObject_ListMixin() {
    },
    __SpeechRecognitionResultList_JavaScriptObject_ListMixin_ImmutableListMixin: function __SpeechRecognitionResultList_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    __StyleSheetList_JavaScriptObject_ListMixin: function __StyleSheetList_JavaScriptObject_ListMixin() {
    },
    __StyleSheetList_JavaScriptObject_ListMixin_ImmutableListMixin: function __StyleSheetList_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    _convertNativeToDart_Value(value) {
      var t1, values, i;
      if (value == null)
        return value;
      if (typeof value == "string" || typeof value == "number" || A._isBool(value))
        return value;
      if (A.isJavaScriptSimpleObject(value))
        return A.convertNativeToDart_Dictionary(value);
      t1 = Array.isArray(value);
      t1.toString;
      if (t1) {
        values = [];
        i = 0;
        while (true) {
          t1 = value.length;
          t1.toString;
          if (!(i < t1))
            break;
          values.push(A._convertNativeToDart_Value(value[i]));
          ++i;
        }
        return values;
      }
      return value;
    },
    convertNativeToDart_Dictionary(object) {
      var dict, keys, t1, _i, key, t2;
      if (object == null)
        return null;
      dict = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
      keys = Object.getOwnPropertyNames(object);
      for (t1 = keys.length, _i = 0; _i < keys.length; keys.length === t1 || (0, A.throwConcurrentModificationError)(keys), ++_i) {
        key = keys[_i];
        t2 = key;
        t2.toString;
        dict.$indexSet(0, t2, A._convertNativeToDart_Value(object[key]));
      }
      return dict;
    },
    isJavaScriptSimpleObject(value) {
      var proto = Object.getPrototypeOf(value),
        t1 = proto === Object.prototype;
      t1.toString;
      if (!t1) {
        t1 = proto === null;
        t1.toString;
      } else
        t1 = true;
      return t1;
    },
    Device_userAgent() {
      var t1 = window.navigator.userAgent;
      t1.toString;
      return t1;
    },
    FilteredElementList: function FilteredElementList(t0, t1) {
      this._node = t0;
      this._childNodes = t1;
    },
    FilteredElementList__iterable_closure: function FilteredElementList__iterable_closure() {
    },
    FilteredElementList__iterable_closure0: function FilteredElementList__iterable_closure0() {
    },
    FilteredElementList_removeRange_closure: function FilteredElementList_removeRange_closure() {
    },
    _convertDartFunctionFast(f) {
      var ret,
        existing = f.$dart_jsFunction;
      if (existing != null)
        return existing;
      ret = function(_call, f) {
        return function() {
          return _call(f, Array.prototype.slice.apply(arguments));
        };
      }(A._callDartFunctionFast, f);
      ret[$.$get$DART_CLOSURE_PROPERTY_NAME()] = f;
      f.$dart_jsFunction = ret;
      return ret;
    },
    _callDartFunctionFast(callback, $arguments) {
      return A.Primitives_applyFunction(callback, $arguments, null);
    },
    allowInterop(f) {
      if (typeof f == "function")
        return f;
      else
        return A._convertDartFunctionFast(f);
    },
    _noJsifyRequired(o) {
      return o == null || A._isBool(o) || typeof o == "number" || typeof o == "string" || type$.Int8List._is(o) || type$.Uint8List._is(o) || type$.Uint8ClampedList._is(o) || type$.Int16List._is(o) || type$.Uint16List._is(o) || type$.Int32List._is(o) || type$.Uint32List._is(o) || type$.Float32List._is(o) || type$.Float64List._is(o) || type$.ByteBuffer._is(o) || type$.ByteData._is(o);
    },
    jsify(object) {
      if (A._noJsifyRequired(object))
        return object;
      return new A.jsify__convert(new A._IdentityHashMap(type$._IdentityHashMap_of_nullable_Object_and_nullable_Object)).call$1(object);
    },
    getProperty(o, $name) {
      return o[$name];
    },
    _callMethodUnchecked1(o, method, arg1) {
      return o[method](arg1);
    },
    _callMethodUnchecked2(o, method, arg1, arg2) {
      return o[method](arg1, arg2);
    },
    promiseToFuture(jsPromise, $T) {
      var t1 = new A._Future($.Zone__current, $T._eval$1("_Future<0>")),
        completer = new A._AsyncCompleter(t1, $T._eval$1("_AsyncCompleter<0>"));
      jsPromise.then(A.convertDartClosureToJS(new A.promiseToFuture_closure(completer), 1), A.convertDartClosureToJS(new A.promiseToFuture_closure0(completer), 1));
      return t1;
    },
    _noDartifyRequired(o) {
      return o == null || typeof o === "boolean" || typeof o === "number" || typeof o === "string" || o instanceof Int8Array || o instanceof Uint8Array || o instanceof Uint8ClampedArray || o instanceof Int16Array || o instanceof Uint16Array || o instanceof Int32Array || o instanceof Uint32Array || o instanceof Float32Array || o instanceof Float64Array || o instanceof ArrayBuffer || o instanceof DataView;
    },
    dartify(o) {
      if (A._noDartifyRequired(o))
        return o;
      return new A.dartify_convert(new A._IdentityHashMap(type$._IdentityHashMap_of_nullable_Object_and_nullable_Object)).call$1(o);
    },
    jsify__convert: function jsify__convert(t0) {
      this._convertedObjects = t0;
    },
    promiseToFuture_closure: function promiseToFuture_closure(t0) {
      this.completer = t0;
    },
    promiseToFuture_closure0: function promiseToFuture_closure0(t0) {
      this.completer = t0;
    },
    dartify_convert: function dartify_convert(t0) {
      this._convertedObjects = t0;
    },
    NullRejectionException: function NullRejectionException(t0) {
      this.isUndefined = t0;
    },
    Length: function Length() {
    },
    LengthList: function LengthList() {
    },
    Number: function Number() {
    },
    NumberList: function NumberList() {
    },
    PointList: function PointList() {
    },
    ScriptElement0: function ScriptElement0() {
    },
    StringList: function StringList() {
    },
    SvgElement: function SvgElement() {
    },
    Transform: function Transform() {
    },
    TransformList: function TransformList() {
    },
    _LengthList_JavaScriptObject_ListMixin: function _LengthList_JavaScriptObject_ListMixin() {
    },
    _LengthList_JavaScriptObject_ListMixin_ImmutableListMixin: function _LengthList_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    _NumberList_JavaScriptObject_ListMixin: function _NumberList_JavaScriptObject_ListMixin() {
    },
    _NumberList_JavaScriptObject_ListMixin_ImmutableListMixin: function _NumberList_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    _StringList_JavaScriptObject_ListMixin: function _StringList_JavaScriptObject_ListMixin() {
    },
    _StringList_JavaScriptObject_ListMixin_ImmutableListMixin: function _StringList_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    _TransformList_JavaScriptObject_ListMixin: function _TransformList_JavaScriptObject_ListMixin() {
    },
    _TransformList_JavaScriptObject_ListMixin_ImmutableListMixin: function _TransformList_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    Endian: function Endian() {
    },
    Size$(width, height) {
      return new A.Size(width, height);
    },
    KeyData__typeToString(type) {
      switch (type.index) {
        case 1:
          return "up";
        case 0:
          return "down";
        case 2:
          return "repeat";
      }
    },
    PointerData$(buttons, change, device, distance, distanceMax, kind, obscured, orientation, physicalDeltaX, physicalDeltaY, physicalX, physicalY, platformData, pointerIdentifier, pressure, pressureMax, pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, scale, scrollDeltaX, scrollDeltaY, signalKind, size, synthesized, tilt, timeStamp) {
      return new A.PointerData(physicalX, physicalY);
    },
    _StoredMessage: function _StoredMessage(t0, t1, t2) {
      this.data = t0;
      this._callback = t1;
      this._ui$_zone = t2;
    },
    _Channel: function _Channel(t0, t1) {
      this._queue = t0;
      this.debugEnableDiscardWarnings = true;
      this._capacity = t1;
    },
    ChannelBuffers: function ChannelBuffers(t0) {
      this._channels = t0;
    },
    ChannelBuffers_push_closure: function ChannelBuffers_push_closure() {
    },
    OffsetBase: function OffsetBase() {
    },
    Offset: function Offset(t0, t1) {
      this._dx = t0;
      this._dy = t1;
    },
    Size: function Size(t0, t1) {
      this._dx = t0;
      this._dy = t1;
    },
    Rect: function Rect() {
    },
    KeyEventType: function KeyEventType(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    KeyData: function KeyData(t0, t1, t2, t3, t4) {
      var _ = this;
      _.type = t0;
      _.physical = t1;
      _.logical = t2;
      _.character = t3;
      _.synthesized = t4;
    },
    KeyData__logicalToString_closure: function KeyData__logicalToString_closure(t0) {
      this.planeNum = t0;
    },
    KeyData__quotedCharCode_closure: function KeyData__quotedCharCode_closure() {
    },
    Color: function Color(t0) {
      this.value = t0;
    },
    PlatformDispatcher: function PlatformDispatcher() {
    },
    AppLifecycleState: function AppLifecycleState(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    Locale: function Locale(t0, t1) {
      this._languageCode = t0;
      this._countryCode = t1;
    },
    PointerChange: function PointerChange(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    PointerDeviceKind: function PointerDeviceKind(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    PointerSignalKind: function PointerSignalKind(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    PointerData: function PointerData(t0, t1) {
      this.physicalX = t0;
      this.physicalY = t1;
    },
    PointerDataPacket: function PointerDataPacket() {
    },
    TextAlign: function TextAlign(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    TextDirection: function TextDirection(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    TextRange: function TextRange(t0, t1) {
      this.start = t0;
      this.end = t1;
    },
    Display: function Display() {
    },
    FlutterView: function FlutterView() {
    },
    SingletonFlutterWindow: function SingletonFlutterWindow() {
    },
    Brightness: function Brightness(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    GestureSettings: function GestureSettings() {
    },
    bootstrapEngine(registerPlugins, runApp) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        bootstrap, t1, loader;
      var $async$bootstrapEngine = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              bootstrap = new A.AppBootstrap(new A.bootstrapEngine_closure(), new A.bootstrapEngine_closure0(registerPlugins, runApp));
              t1 = self._flutter;
              loader = t1 == null ? null : t1.loader;
              $async$goto = loader == null || !("didCreateEngineInitializer" in loader) ? 2 : 4;
              break;
            case 2:
              // then
              self.window.console.debug("Flutter Web Bootstrap: Auto.");
              $async$goto = 5;
              return A._asyncAwait(bootstrap.autoStart$0(), $async$bootstrapEngine);
            case 5:
              // returning from await.
              // goto join
              $async$goto = 3;
              break;
            case 4:
              // else
              self.window.console.debug("Flutter Web Bootstrap: Programmatic.");
              loader.didCreateEngineInitializer(bootstrap.prepareEngineInitializer$0());
            case 3:
              // join
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$bootstrapEngine, $async$completer);
    },
    AssetManager: function AssetManager(t0) {
      this._assetBase = t0;
    },
    bootstrapEngine_closure: function bootstrapEngine_closure() {
    },
    bootstrapEngine_closure0: function bootstrapEngine_closure0(t0, t1) {
      this.registerPlugins = t0;
      this.runApp = t1;
    },
    BrowserPlatformLocation: function BrowserPlatformLocation() {
    },
    BrowserPlatformLocation_getOrCreateDomEventListener_closure: function BrowserPlatformLocation_getOrCreateDomEventListener_closure(t0) {
      this.fn = t0;
    },
    HashUrlStrategy: function HashUrlStrategy() {
    },
    HashUrlStrategy_addPopStateListener_wrappedFn: function HashUrlStrategy_addPopStateListener_wrappedFn(t0) {
      this.fn = t0;
    },
    HashUrlStrategy_addPopStateListener_closure: function HashUrlStrategy_addPopStateListener_closure(t0, t1) {
      this.$this = t0;
      this.wrappedFn = t1;
    },
    HashUrlStrategy__waitForPopState_closure: function HashUrlStrategy__waitForPopState_closure(t0, t1) {
      this.unsubscribe = t0;
      this.completer = t1;
    },
    AudioBuffer: function AudioBuffer() {
    },
    AudioParamMap: function AudioParamMap() {
    },
    AudioParamMap_keys_closure: function AudioParamMap_keys_closure(t0) {
      this.keys = t0;
    },
    AudioTrackList: function AudioTrackList() {
    },
    BaseAudioContext: function BaseAudioContext() {
    },
    OfflineAudioContext: function OfflineAudioContext() {
    },
    _AudioParamMap_JavaScriptObject_MapMixin: function _AudioParamMap_JavaScriptObject_MapMixin() {
    },
    AudioplayersPlatformInterface: function AudioplayersPlatformInterface() {
    },
    GlobalAudioplayersPlatformInterface: function GlobalAudioplayersPlatformInterface() {
    },
    WebAudioplayersPlatform: function WebAudioplayersPlatform(t0) {
      this.players = t0;
    },
    WebGlobalAudioplayersPlatform: function WebGlobalAudioplayersPlatform(t0) {
      this._eventStreamController = t0;
    },
    ErrorDescription$(message) {
      var _null = null,
        t1 = A._setArrayType([message], type$.JSArray_Object);
      return new A.ErrorDescription(_null, false, true, _null, t1, _null, B.DiagnosticLevel_3, _null, false, false, _null, B.DiagnosticsTreeStyle_7);
    },
    ErrorSummary$(message) {
      var _null = null,
        t1 = A._setArrayType([message], type$.JSArray_Object);
      return new A.ErrorSummary(_null, false, true, _null, t1, _null, B.DiagnosticLevel_6, _null, false, false, _null, B.DiagnosticsTreeStyle_7);
    },
    ErrorSpacer$() {
      return new A.ErrorSpacer("", false, true, null, null, B.C__NoDefaultValue, B.DiagnosticLevel_3, "", true, false, null, B.DiagnosticsTreeStyle_8);
    },
    FlutterError__defaultStackTraceDemangler(stackTrace) {
      return stackTrace;
    },
    FlutterError_dumpErrorToConsole(details, forceReport) {
      if ($.FlutterError__errorCount === 0 || false)
        A.debugPrintStack(J.toString$0$(details.exception), 100, details.stack);
      else
        A.print__debugPrintThrottled$closure().call$1("Another exception was thrown: " + details.get$summary().toString$0(0));
      $.FlutterError__errorCount = $.FlutterError__errorCount + 1;
    },
    FlutterError_defaultStackFilter($frames) {
      var skipped, index, t1, frame, className, $package, reasons, _i, t2, result, resultLine, t3,
        removedPackagesAndClasses = A.LinkedHashMap_LinkedHashMap$_literal(["dart:async-patch", 0, "dart:async", 0, "package:stack_trace", 0, "class _AssertionError", 0, "class _FakeAsync", 0, "class _FrameCallbackEntry", 0, "class _Timer", 0, "class _RawReceivePortImpl", 0], type$.String, type$.int),
        parsedFrames = A.StackFrame_fromStackString(J.join$1$ax($frames, "\n"));
      for (skipped = 0, index = 0; t1 = parsedFrames.length, index < t1; ++index) {
        frame = parsedFrames[index];
        className = "class " + frame.className;
        $package = frame.packageScheme + ":" + frame.$package;
        if (removedPackagesAndClasses.containsKey$1(0, className)) {
          ++skipped;
          removedPackagesAndClasses.update$2(removedPackagesAndClasses, className, new A.FlutterError_defaultStackFilter_closure());
          B.JSArray_methods.removeAt$1(parsedFrames, index);
          --index;
        } else if (removedPackagesAndClasses.containsKey$1(0, $package)) {
          ++skipped;
          removedPackagesAndClasses.update$2(removedPackagesAndClasses, $package, new A.FlutterError_defaultStackFilter_closure0());
          B.JSArray_methods.removeAt$1(parsedFrames, index);
          --index;
        }
      }
      reasons = A.List_List$filled(t1, null, false, type$.nullable_String);
      for (_i = 0; false; ++_i)
        $.FlutterError__stackFilters[_i].filter$2(0, parsedFrames, reasons);
      t2 = type$.JSArray_String;
      result = A._setArrayType([], t2);
      for (--t1, index = 0; index < parsedFrames.length; ++index) {
        while (true) {
          index < t1;
          if (!false)
            break;
          ++index;
        }
        resultLine = parsedFrames[index].source;
        result.push(resultLine);
      }
      t1 = A._setArrayType([], t2);
      for (t2 = removedPackagesAndClasses.get$entries(removedPackagesAndClasses), t2 = t2.get$iterator(t2); t2.moveNext$0();) {
        t3 = t2.get$current(t2);
        if (t3.value > 0)
          t1.push(t3.key);
      }
      B.JSArray_methods.sort$0(t1);
      if (skipped === 1)
        result.push("(elided one frame from " + B.JSArray_methods.get$single(t1) + ")");
      else if (skipped > 1) {
        t2 = t1.length;
        if (t2 > 1)
          t1[t2 - 1] = "and " + B.JSArray_methods.get$last(t1);
        t2 = "(elided " + skipped;
        if (t1.length > 2)
          result.push(t2 + " frames from " + B.JSArray_methods.join$1(t1, ", ") + ")");
        else
          result.push(t2 + " frames from " + B.JSArray_methods.join$1(t1, " ") + ")");
      }
      return result;
    },
    debugPrintStack(label, maxFrames, stackTrace) {
      var lines, t1;
      A.print__debugPrintThrottled$closure().call$1(label);
      lines = A._setArrayType(B.JSString_methods.trimRight$0(J.toString$0$(stackTrace == null ? A.StackTrace_current() : A.FlutterError__defaultStackTraceDemangler(stackTrace))).split("\n"), type$.JSArray_String);
      t1 = lines.length;
      lines = J.take$1$ax(t1 !== 0 ? new A.SkipWhileIterable(lines, new A.debugPrintStack_closure(), type$.SkipWhileIterable_String) : lines, maxFrames);
      A.print__debugPrintThrottled$closure().call$1(B.JSArray_methods.join$1(A.FlutterError_defaultStackFilter(lines), "\n"));
    },
    DiagnosticsStackTrace__applyStackFilter(stack, stackFilter) {
      if (stack == null)
        return A._setArrayType([], type$.JSArray_DiagnosticsNode);
      return J.map$1$1$ax(A.FlutterError_defaultStackFilter(A._setArrayType(B.JSString_methods.trimRight$0(A.S(A.FlutterError__defaultStackTraceDemangler(stack))).split("\n"), type$.JSArray_String)), A.assertions_DiagnosticsStackTrace__createStackFrame$closure(), type$.DiagnosticsNode).toList$0(0);
    },
    DiagnosticsStackTrace__createStackFrame(frame) {
      return A.DiagnosticsNode_DiagnosticsNode$message(frame, false);
    },
    _FlutterErrorDetailsNode$($name, style, value) {
      return new A._FlutterErrorDetailsNode(value, $name, true, true, null, style);
    },
    _ErrorDiagnostic: function _ErrorDiagnostic() {
    },
    ErrorDescription: function ErrorDescription(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _._description = t0;
      _.expandableValue = t1;
      _.allowWrap = t2;
      _.ifNull = t3;
      _._diagnostics$_value = t4;
      _._valueComputed = true;
      _._diagnostics$_exception = null;
      _.defaultValue = t5;
      _._defaultLevel = t6;
      _.name = t7;
      _.showSeparator = t8;
      _.showName = t9;
      _.linePrefix = t10;
      _.style = t11;
    },
    ErrorSummary: function ErrorSummary(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _._description = t0;
      _.expandableValue = t1;
      _.allowWrap = t2;
      _.ifNull = t3;
      _._diagnostics$_value = t4;
      _._valueComputed = true;
      _._diagnostics$_exception = null;
      _.defaultValue = t5;
      _._defaultLevel = t6;
      _.name = t7;
      _.showSeparator = t8;
      _.showName = t9;
      _.linePrefix = t10;
      _.style = t11;
    },
    ErrorSpacer: function ErrorSpacer(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _._description = t0;
      _.expandableValue = t1;
      _.allowWrap = t2;
      _.ifNull = t3;
      _._diagnostics$_value = t4;
      _._valueComputed = true;
      _._diagnostics$_exception = null;
      _.defaultValue = t5;
      _._defaultLevel = t6;
      _.name = t7;
      _.showSeparator = t8;
      _.showName = t9;
      _.linePrefix = t10;
      _.style = t11;
    },
    FlutterErrorDetails: function FlutterErrorDetails(t0, t1, t2, t3) {
      var _ = this;
      _.exception = t0;
      _.stack = t1;
      _.library = t2;
      _.context = t3;
    },
    FlutterErrorDetails_summary_formatException: function FlutterErrorDetails_summary_formatException(t0) {
      this.$this = t0;
    },
    FlutterErrorDetails_summary_closure: function FlutterErrorDetails_summary_closure() {
    },
    FlutterErrorDetails_summary_closure0: function FlutterErrorDetails_summary_closure0() {
    },
    FlutterErrorDetails_debugFillProperties_closure: function FlutterErrorDetails_debugFillProperties_closure() {
    },
    FlutterError: function FlutterError() {
    },
    FlutterError_defaultStackFilter_closure: function FlutterError_defaultStackFilter_closure() {
    },
    FlutterError_defaultStackFilter_closure0: function FlutterError_defaultStackFilter_closure0() {
    },
    debugPrintStack_closure: function debugPrintStack_closure() {
    },
    DiagnosticsStackTrace: function DiagnosticsStackTrace(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._properties = t0;
      _._description = t1;
      _.allowTruncate = t2;
      _.name = t3;
      _.showSeparator = t4;
      _.showName = t5;
      _.linePrefix = t6;
      _.style = t7;
    },
    _FlutterErrorDetailsNode: function _FlutterErrorDetailsNode(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.value = t0;
      _._cachedBuilder = null;
      _.name = t1;
      _.showSeparator = t2;
      _.showName = t3;
      _.linePrefix = t4;
      _.style = t5;
    },
    _FlutterErrorDetails_Object_Diagnosticable: function _FlutterErrorDetails_Object_Diagnosticable() {
    },
    DiagnosticsNode_DiagnosticsNode$message(message, allowWrap) {
      return A.DiagnosticsProperty$("", null, allowWrap, B.C__NoDefaultValue, message, false, B.DiagnosticLevel_3, false, true, B.DiagnosticsTreeStyle_8);
    },
    DiagnosticsProperty$($name, value, allowWrap, defaultValue, description, expandableValue, level, showName, showSeparator, style) {
      return new A.DiagnosticsProperty(description, false, allowWrap, null, value, defaultValue, level, $name, showSeparator, false, null, style);
    },
    shortHash(object) {
      return B.JSString_methods.padLeft$2(B.JSInt_methods.toRadixString$1(A.Primitives_objectHashCode(object) & 1048575, 16), 5, "0");
    },
    DiagnosticLevel: function DiagnosticLevel(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    DiagnosticsTreeStyle: function DiagnosticsTreeStyle(t0, t1) {
      this.index = t0;
      this._core$_name = t1;
    },
    _NoDefaultValue: function _NoDefaultValue() {
    },
    DiagnosticsNode: function DiagnosticsNode() {
    },
    DiagnosticsProperty: function DiagnosticsProperty(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11) {
      var _ = this;
      _._description = t0;
      _.expandableValue = t1;
      _.allowWrap = t2;
      _.ifNull = t3;
      _._diagnostics$_value = t4;
      _._valueComputed = true;
      _._diagnostics$_exception = null;
      _.defaultValue = t5;
      _._defaultLevel = t6;
      _.name = t7;
      _.showSeparator = t8;
      _.showName = t9;
      _.linePrefix = t10;
      _.style = t11;
    },
    DiagnosticableNode: function DiagnosticableNode() {
    },
    DiagnosticPropertiesBuilder: function DiagnosticPropertiesBuilder(t0) {
      this.properties = t0;
    },
    Diagnosticable: function Diagnosticable() {
    },
    DiagnosticsBlock: function DiagnosticsBlock() {
    },
    WriteBuffer_WriteBuffer0(startCapacity) {
      var eightBytes = new DataView(new ArrayBuffer(8)),
        eightBytesAsList = A.NativeUint8List_NativeUint8List$view(eightBytes.buffer, 0, null);
      return new A.WriteBuffer0(new Uint8Array(startCapacity), eightBytes, eightBytesAsList);
    },
    WriteBuffer0: function WriteBuffer0(t0, t1, t2) {
      var _ = this;
      _._serialization$_buffer = t0;
      _._currentSize = 0;
      _._serialization$_isDone = false;
      _._serialization$_eightBytes = t1;
      _._serialization$_eightBytesAsList = t2;
    },
    ReadBuffer0: function ReadBuffer0(t0) {
      this.data = t0;
      this._serialization$_position = 0;
    },
    StackFrame_fromStackString(stack) {
      var t1 = type$.WhereTypeIterable_StackFrame;
      return A.List_List$of(new A.WhereTypeIterable(new A.MappedIterable(new A.WhereIterable(A._setArrayType(B.JSString_methods.trim$0(stack).split("\n"), type$.JSArray_String), new A.StackFrame_fromStackString_closure(), type$.WhereIterable_String), A.stack_frame_StackFrame_fromStackTraceLine$closure(), type$.MappedIterable_of_String_and_nullable_StackFrame), t1), true, t1._eval$1("Iterable.E"));
    },
    StackFrame__tryParseWebNonDebugFrame(line) {
      var classAndMethod, className,
        _s9_ = "<unknown>",
        match = $.$get$StackFrame__webNonDebugFramePattern().firstMatch$1(line);
      if (match == null)
        return null;
      classAndMethod = A._setArrayType(match._match[1].split("."), type$.JSArray_String);
      className = classAndMethod.length > 1 ? B.JSArray_methods.get$first(classAndMethod) : _s9_;
      return new A.StackFrame(line, -1, _s9_, _s9_, _s9_, -1, -1, className, classAndMethod.length > 1 ? A.SubListIterable$(classAndMethod, 1, null, type$.String).join$1(0, ".") : B.JSArray_methods.get$single(classAndMethod));
    },
    StackFrame_fromStackTraceLine(line) {
      var t1, t2, method, className, parts, packageUri, packagePath, $package, t3, t4, _null = null,
        _s9_ = "<unknown>";
      if (line === "<asynchronous suspension>")
        return B.StackFrame_SOW;
      else if (line === "...")
        return B.StackFrame_8sg;
      if (!B.JSString_methods.startsWith$1(line, "#"))
        return A.StackFrame__tryParseWebNonDebugFrame(line);
      t1 = A.RegExp_RegExp("^#(\\d+) +(.+) \\((.+?):?(\\d+){0,1}:?(\\d+){0,1}\\)$", true).firstMatch$1(line)._match;
      t2 = t1[2];
      t2.toString;
      method = A.stringReplaceAllUnchecked(t2, ".<anonymous closure>", "");
      if (B.JSString_methods.startsWith$1(method, "new")) {
        className = method.split(" ").length > 1 ? method.split(" ")[1] : _s9_;
        if (B.JSString_methods.contains$1(className, ".")) {
          parts = className.split(".");
          className = parts[0];
          method = parts[1];
        } else
          method = "";
      } else if (B.JSString_methods.contains$1(method, ".")) {
        parts = method.split(".");
        className = parts[0];
        method = parts[1];
      } else
        className = "";
      t2 = t1[3];
      t2.toString;
      packageUri = A.Uri_parse(t2);
      packagePath = packageUri.get$path(packageUri);
      if (packageUri.get$scheme() === "dart" || packageUri.get$scheme() === "package") {
        $package = packageUri.get$pathSegments()[0];
        t2 = packageUri.get$path(packageUri);
        t3 = A.S(packageUri.get$pathSegments()[0]);
        packagePath = A.stringReplaceFirstUnchecked(t2, t3 + "/", "", 0);
      } else
        $package = _s9_;
      t2 = t1[1];
      t2.toString;
      t2 = A.int_parse(t2, _null);
      t3 = packageUri.get$scheme();
      t4 = t1[4];
      if (t4 == null)
        t4 = -1;
      else {
        t4 = t4;
        t4.toString;
        t4 = A.int_parse(t4, _null);
      }
      t1 = t1[5];
      if (t1 == null)
        t1 = -1;
      else {
        t1 = t1;
        t1.toString;
        t1 = A.int_parse(t1, _null);
      }
      return new A.StackFrame(line, t2, t3, $package, packagePath, t4, t1, className, method);
    },
    StackFrame: function StackFrame(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.source = t0;
      _.number = t1;
      _.packageScheme = t2;
      _.$package = t3;
      _.packagePath = t4;
      _.line = t5;
      _.column = t6;
      _.className = t7;
      _.method = t8;
    },
    StackFrame_fromStackString_closure: function StackFrame_fromStackString_closure() {
    },
    BinaryMessenger: function BinaryMessenger() {
    },
    PlatformException$(code, details) {
      return new A.PlatformException(code, details);
    },
    MethodCall0: function MethodCall0(t0, t1) {
      this.method = t0;
      this.$arguments = t1;
    },
    PlatformException: function PlatformException(t0, t1) {
      this.code = t0;
      this.details = t1;
    },
    StandardMessageCodec0: function StandardMessageCodec0() {
    },
    StandardMessageCodec_writeValue_closure0: function StandardMessageCodec_writeValue_closure0(t0, t1) {
      this.$this = t0;
      this.buffer = t1;
    },
    StandardMethodCodec0: function StandardMethodCodec0() {
    },
    MethodChannel: function MethodChannel(t0, t1, t2) {
      this.name = t0;
      this.codec = t1;
      this._binaryMessenger = t2;
    },
    MethodChannel_setMethodCallHandler_closure: function MethodChannel_setMethodCallHandler_closure(t0, t1) {
      this.$this = t0;
      this.handler = t1;
    },
    FlutterNativeSplashWeb: function FlutterNativeSplashWeb() {
    },
    Registrar: function Registrar() {
    },
    PluginRegistry: function PluginRegistry(t0) {
      this._handlers = t0;
    },
    FluttertoastWebPlugin: function FluttertoastWebPlugin() {
    },
    PlatformInterface__verify(instance, token, preventConstObject) {
      var t2,
        t1 = $.$get$PlatformInterface__instanceTokens();
      A.Expando__checkType(instance);
      t2 = t1._jsWeakMap.get(instance) === B.C_Object;
      if (t2)
        throw A.wrapException(A.AssertionError$("`const Object()` cannot be used as the token."));
      A.Expando__checkType(instance);
      if (token !== t1._jsWeakMap.get(instance))
        throw A.wrapException(A.AssertionError$("Platform interfaces must not be implemented with `implements`"));
    },
    PlatformInterface: function PlatformInterface() {
    },
    SharedPreferencesStorePlatform: function SharedPreferencesStorePlatform() {
    },
    SharedPreferencesPlugin: function SharedPreferencesPlugin() {
    },
    main() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void);
      var $async$main = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return A._asyncAwait(A.bootstrapEngine(new A.main_closure(), new A.main_closure0()), $async$main);
            case 2:
              // returning from await.
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$main, $async$completer);
    },
    main_closure0: function main_closure0() {
    },
    main_closure: function main_closure() {
    },
    printString(string) {
      if (typeof dartPrint == "function") {
        dartPrint(string);
        return;
      }
      if (typeof console == "object" && typeof console.log != "undefined") {
        console.log(string);
        return;
      }
      if (typeof print == "function") {
        print(string);
        return;
      }
      throw "Unable to print message: " + String(string);
    },
    FunctionToJSExportedDartFunction_get_toJS(_this) {
      return A.allowInterop(_this);
    },
    JSStringToString_get_toDart(_this) {
      return _this;
    },
    StringToJSString_get_toJS(_this) {
      return _this;
    },
    main0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.dynamic);
      var $async$main0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return A._asyncAwait(type$.Future_Record_0._is(B.C_Record0) ? B.C_Record0 : A._Future$value(B.C_Record0, type$.Record_0), $async$main0);
            case 2:
              // returning from await.
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$main0, $async$completer);
    },
    debugPrintThrottled(message, wrapWidth) {
      var t1 = type$.JSArray_String,
        messageLines = A._setArrayType(message.split("\n"), t1);
      $.$get$_debugPrintBuffer().addAll$1(0, messageLines);
      if (!$._debugPrintScheduled)
        A._debugPrintTask();
    },
    _debugPrintTask() {
      var t1, t2, line;
      $._debugPrintScheduled = false;
      t1 = $.$get$_debugPrintStopwatch();
      if (A.Duration$(t1.get$elapsedMicroseconds(), 0)._duration > 1000000) {
        t2 = t1._stop;
        if (t2 == null)
          t2 = t1._stop = $.Primitives_timerTicks.call$0();
        t1._core$_start = t2;
        $._debugPrintedCharacters = 0;
      }
      while (true) {
        if ($._debugPrintedCharacters < 12288) {
          t1 = $.$get$_debugPrintBuffer();
          t1 = !t1.get$isEmpty(t1);
        } else
          t1 = false;
        if (!t1)
          break;
        line = $.$get$_debugPrintBuffer().removeFirst$0();
        $._debugPrintedCharacters = $._debugPrintedCharacters + line.length;
        A.printString(line);
      }
      t1 = $.$get$_debugPrintBuffer();
      if (!t1.get$isEmpty(t1)) {
        $._debugPrintScheduled = true;
        $._debugPrintedCharacters = 0;
        A.Timer_Timer(B.Duration_1000000, A.print___debugPrintTask$closure());
        if ($._debugPrintCompleter == null)
          $._debugPrintCompleter = new A._AsyncCompleter(new A._Future($.Zone__current, type$._Future_void), type$._AsyncCompleter_void);
      } else {
        $.$get$_debugPrintStopwatch().start$0(0);
        t1 = $._debugPrintCompleter;
        if (t1 != null)
          t1.complete$0(0);
        $._debugPrintCompleter = null;
      }
    }
  },
  B = {};
  var holders = [A, J, B];
  var $ = {};
  A.AlarmClock.prototype = {
    set$datetime(value) {
      var now, t1, t2, _this = this;
      if (J.$eq$(value, _this._datetime))
        return;
      if (value == null) {
        _this._cancelTimer$0();
        _this._datetime = null;
        return;
      }
      now = _this._timestampFunction.call$0();
      t1 = value._value;
      t2 = now._value;
      if (t1 < t2) {
        _this._cancelTimer$0();
        _this._datetime = value;
        return;
      }
      if (_this._timer == null)
        _this._timer = A.Timer_Timer(A.Duration$(0, t1 - t2), _this.get$_timerDidFire());
      else if (_this._datetime._value > t1) {
        _this._cancelTimer$0();
        _this._timer = A.Timer_Timer(A.Duration$(0, t1 - t2), _this.get$_timerDidFire());
      }
      _this._datetime = value;
    },
    _cancelTimer$0() {
      var t1 = this._timer;
      if (t1 != null)
        t1.cancel$0(0);
      this._timer = null;
    },
    _timerDidFire$0() {
      var _this = this,
        now = _this._timestampFunction.call$0(),
        t1 = _this._datetime,
        t2 = now._value;
      t1 = t1._value;
      if (t2 >= t1) {
        _this._timer = null;
        t1 = _this.callback;
        if (t1 != null)
          t1.call$0();
      } else
        _this._timer = A.Timer_Timer(A.Duration$(0, t1 - t2), _this.get$_timerDidFire());
    }
  };
  A.AppBootstrap.prototype = {
    autoStart$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t1;
      var $async$autoStart$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return A._asyncAwait($async$self._initializeEngine.call$0(), $async$autoStart$0);
            case 2:
              // returning from await.
              t1 = $async$self._runApp.call$0();
              $async$goto = 3;
              return A._asyncAwait(t1 instanceof A._Future ? t1 : A._Future$value(t1, type$.dynamic), $async$autoStart$0);
            case 3:
              // returning from await.
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$autoStart$0, $async$completer);
    },
    prepareEngineInitializer$0() {
      return A.FlutterEngineInitializer__staticInteropFactoryStub(new A.AppBootstrap_prepareEngineInitializer_closure(this), new A.AppBootstrap_prepareEngineInitializer_closure0(this));
    },
    _prepareAppRunner$0() {
      return A.FlutterAppRunner__staticInteropFactoryStub(new A.AppBootstrap__prepareAppRunner_closure(this));
    }
  };
  A.AppBootstrap_prepareEngineInitializer_closure.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.JavaScriptObject),
        $async$returnValue, $async$self = this;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return A._asyncAwait($async$self.$this.autoStart$0(), $async$call$0);
            case 3:
              // returning from await.
              $async$returnValue = type$.JavaScriptObject._as({});
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 82
  };
  A.AppBootstrap_prepareEngineInitializer_closure0.prototype = {
    call$1(configuration) {
      return this.$call$body$AppBootstrap_prepareEngineInitializer_closure(configuration);
    },
    call$0() {
      return this.call$1(null);
    },
    $call$body$AppBootstrap_prepareEngineInitializer_closure(configuration) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.JavaScriptObject),
        $async$returnValue, $async$self = this, t1;
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              $async$goto = 3;
              return A._asyncAwait(t1._initializeEngine.call$1(configuration), $async$call$1);
            case 3:
              // returning from await.
              $async$returnValue = t1._prepareAppRunner$0();
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 29
  };
  A.AppBootstrap__prepareAppRunner_closure.prototype = {
    call$1(params) {
      return this.$call$body$AppBootstrap__prepareAppRunner_closure(params);
    },
    call$0() {
      return this.call$1(null);
    },
    $call$body$AppBootstrap__prepareAppRunner_closure(params) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.JavaScriptObject),
        $async$returnValue, $async$self = this, t1;
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this._runApp.call$0();
              $async$goto = 3;
              return A._asyncAwait(t1 instanceof A._Future ? t1 : A._Future$value(t1, type$.dynamic), $async$call$1);
            case 3:
              // returning from await.
              $async$returnValue = type$.JavaScriptObject._as({});
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 29
  };
  A.BrowserEngine.prototype = {
    _enumToString$0() {
      return "BrowserEngine." + this._core$_name;
    }
  };
  A.OperatingSystem.prototype = {
    _enumToString$0() {
      return "OperatingSystem." + this._core$_name;
    }
  };
  A._canvasKitJsUrls_closure.prototype = {
    call$1(filename) {
      var t1 = $._configuration;
      t1 = (t1 == null ? $._configuration = A.FlutterConfiguration$legacy(self.window.flutterConfiguration) : t1)._configuration;
      if (t1 == null)
        t1 = null;
      else {
        t1 = t1.canvasKitBaseUrl;
        if (t1 == null)
          t1 = null;
      }
      return (t1 == null ? "https://www.gstatic.com/flutter-canvaskit/74d16627b940bb15e50891f82cad6c3e3465bd6d/" : t1) + filename;
    },
    $signature: 15
  };
  A._downloadCanvasKitJs_loadEventHandler.prototype = {
    call$1(_) {
      this.canvasKitScript.remove();
      this.canvasKitLoadCompleter.complete$1(0, true);
    },
    $signature: 1
  };
  A._downloadCanvasKitJs_errorEventHandler.prototype = {
    call$1(errorEvent) {
      this.canvasKitScript.remove();
      this.canvasKitLoadCompleter.complete$1(0, false);
    },
    $signature: 1
  };
  A.SkiaFontCollection.prototype = {
    _registerWithFontProvider$0() {
      var t2, t3, _i, font, t4, _this = this,
        t1 = _this._fontProvider;
      if (t1 != null) {
        t1.delete();
        _this._fontProvider = null;
        t1 = _this.skFontCollection;
        if (t1 != null)
          t1.delete();
        _this.skFontCollection = null;
      }
      _this._fontProvider = $.__canvasKit._readField$0().TypefaceFontProvider.Make();
      t1 = $.__canvasKit._readField$0().FontCollection.Make();
      _this.skFontCollection = t1;
      t1.enableFontFallback();
      _this.skFontCollection.setDefaultFontManager(_this._fontProvider);
      t1 = _this.familyToFontMap;
      t1.clear$0(0);
      for (t2 = _this._registeredFonts, t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, A.throwConcurrentModificationError)(t2), ++_i) {
        font = t2[_i];
        t4 = font.family;
        _this._fontProvider.registerFont(font.bytes, t4);
        J.add$1$ax(t1.putIfAbsent$2(0, t4, new A.SkiaFontCollection__registerWithFontProvider_closure()), new self.window.flutterCanvasKit.Font(font.typeface));
      }
      for (t2 = _this.registeredFallbackFonts, _i = 0; false; ++_i) {
        font = t2[_i];
        t3 = font.family;
        _this._fontProvider.registerFont(font.bytes, t3);
        J.add$1$ax(t1.putIfAbsent$2(0, t3, new A.SkiaFontCollection__registerWithFontProvider_closure0()), new self.window.flutterCanvasKit.Font(font.typeface));
      }
    },
    loadAssetFonts$1(manifest) {
      return this.loadAssetFonts$body$SkiaFontCollection(manifest);
    },
    loadAssetFonts$body$SkiaFontCollection(manifest) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.AssetFontsResult),
        $async$returnValue, $async$self = this, t1, t2, loadedRoboto, _i, family, t3, t4, t5, _i0, fontAsset, t6, t7, fontFailures, downloadedFonts, loadedFonts, _0_1, _0_2, assetName, unregisteredFont, bytes, skFont, pendingDownloads, $async$temp1;
      var $async$loadAssetFonts$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              pendingDownloads = A._setArrayType([], type$.JSArray_Future_FontDownloadResult);
              for (t1 = manifest.families, t2 = t1.length, loadedRoboto = false, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
                family = t1[_i];
                t3 = family.name;
                if (t3 === "Roboto")
                  loadedRoboto = true;
                for (t4 = family.fontAssets, t5 = t4.length, _i0 = 0; _i0 < t4.length; t4.length === t5 || (0, A.throwConcurrentModificationError)(t4), ++_i0) {
                  fontAsset = t4[_i0];
                  t6 = $._assetManager;
                  t6.toString;
                  t7 = fontAsset.asset;
                  pendingDownloads.push($async$self._downloadFont$3(t7, t6.getAssetUrl$1(t7), t3));
                }
              }
              if (!loadedRoboto)
                pendingDownloads.push($async$self._downloadFont$3("Roboto", "https://fonts.gstatic.com/s/roboto/v20/KFOmCnqEu92Fr1Me5WZLCzYlKw.ttf", "Roboto"));
              fontFailures = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.FontLoadError);
              downloadedFonts = A._setArrayType([], type$.JSArray_Record_2_String_and_UnregisteredFont);
              $async$temp1 = J;
              $async$goto = 3;
              return A._asyncAwait(A.Future_wait(pendingDownloads, type$.FontDownloadResult), $async$loadAssetFonts$1);
            case 3:
              // returning from await.
              t1 = $async$temp1.get$iterator$ax($async$result);
            case 4:
              // for condition
              if (!t1.moveNext$0()) {
                // goto after for
                $async$goto = 5;
                break;
              }
              t2 = t1.get$current(t1);
              t3 = t2.font;
              t4 = t2.assetName;
              if (t3 != null)
                downloadedFonts.push(new A._Record_2(t4, t3));
              else {
                t2 = t2.error;
                t2.toString;
                fontFailures.$indexSet(0, t4, t2);
              }
              // goto for condition
              $async$goto = 4;
              break;
            case 5:
              // after for
              t1 = $.$get$_renderer().initialize$0(0);
              $async$goto = 6;
              return A._asyncAwait(t1 instanceof A._Future ? t1 : A._Future$value(t1, type$.void), $async$loadAssetFonts$1);
            case 6:
              // returning from await.
              loadedFonts = A._setArrayType([], type$.JSArray_String);
              for (t1 = downloadedFonts.length, t2 = $.__canvasKit.__late_helper$_name, t3 = $async$self._registeredFonts, t4 = type$.JSArray_int, _i = 0; _i < downloadedFonts.length; downloadedFonts.length === t1 || (0, A.throwConcurrentModificationError)(downloadedFonts), ++_i) {
                t5 = downloadedFonts[_i];
                _0_1 = A._InitializedCell$named("#0#1", new A.SkiaFontCollection_loadAssetFonts_closure(t5));
                _0_2 = A._InitializedCell$named("#0#2", new A.SkiaFontCollection_loadAssetFonts_closure0(t5));
                if (typeof _0_1._readFinal$0() == "string") {
                  assetName = _0_1._readFinal$0();
                  if (_0_2._readFinal$0() instanceof A.UnregisteredFont) {
                    unregisteredFont = _0_2._readFinal$0();
                    t5 = true;
                  } else {
                    unregisteredFont = null;
                    t5 = false;
                  }
                } else {
                  assetName = null;
                  unregisteredFont = null;
                  t5 = false;
                }
                if (!t5)
                  throw A.wrapException(A.StateError$("Pattern matching error"));
                t5 = unregisteredFont.bytes;
                bytes = new Uint8Array(t5, 0);
                t5 = $.__canvasKit.__late_helper$_value;
                if (t5 === $.__canvasKit)
                  A.throwExpression(A.LateError$fieldNI(t2));
                t5 = t5.Typeface.MakeFreeTypeFaceFromData(bytes.buffer);
                t6 = unregisteredFont.family;
                if (t5 != null) {
                  loadedFonts.push(assetName);
                  skFont = new self.window.flutterCanvasKit.Font(t5);
                  t7 = A._setArrayType([0], t4);
                  skFont.getGlyphBounds(t7, null, null);
                  t3.push(new A.RegisteredFont(t6, bytes, t5));
                } else {
                  t5 = $.$get$printWarning();
                  t7 = unregisteredFont.url;
                  t5.call$1("Failed to load font " + t6 + " at " + t7);
                  $.$get$printWarning().call$1("Verify that " + t7 + " contains a valid font.");
                  fontFailures.$indexSet(0, assetName, new A.FontInvalidDataError());
                }
              }
              $async$self.registerDownloadedFonts$0();
              $async$returnValue = new A.AssetFontsResult();
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$loadAssetFonts$1, $async$completer);
    },
    registerDownloadedFonts$0() {
      var t1, t2, t3, _i, unregisteredFont, registeredFont,
        makeRegisterFont = new A.SkiaFontCollection_registerDownloadedFonts_makeRegisterFont();
      for (t1 = this._unregisteredFonts, t2 = t1.length, t3 = this._registeredFonts, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        unregisteredFont = t1[_i];
        registeredFont = makeRegisterFont.call$3(unregisteredFont.bytes, unregisteredFont.url, unregisteredFont.family);
        if (registeredFont != null)
          t3.push(registeredFont);
      }
      B.JSArray_methods.clear$0(t1);
      this._registerWithFontProvider$0();
    },
    _downloadFont$3(assetName, url, fontFamily) {
      return this._downloadFont$body$SkiaFontCollection(assetName, url, fontFamily);
    },
    _downloadFont$body$SkiaFontCollection(assetName, url, fontFamily) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.FontDownloadResult),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$self = this, response, e, exception, fontData, $async$exception;
      var $async$_downloadFont$3 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              fontData = null;
              $async$handler = 4;
              $async$goto = 7;
              return A._asyncAwait(A.httpFetch(url), $async$_downloadFont$3);
            case 7:
              // returning from await.
              response = $async$result;
              if (!response.get$hasPayload()) {
                $.$get$printWarning().call$1("Font family " + fontFamily + " not found (404) at " + url);
                $async$returnValue = new A.FontDownloadResult(assetName, null, new A.FontNotFoundError());
                // goto return
                $async$goto = 1;
                break;
              }
              $async$goto = 8;
              return A._asyncAwait(response.get$payload().asByteBuffer$0(), $async$_downloadFont$3);
            case 8:
              // returning from await.
              fontData = $async$result;
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              e = A.unwrapException($async$exception);
              $.$get$printWarning().call$1("Failed to load font " + fontFamily + " at " + url);
              $.$get$printWarning().call$1(J.toString$0$(e));
              $async$returnValue = new A.FontDownloadResult(assetName, null, new A.FontDownloadError());
              // goto return
              $async$goto = 1;
              break;
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
              $async$self._downloadedFontFamilies.add$1(0, fontFamily);
              $async$returnValue = new A.FontDownloadResult(assetName, new A.UnregisteredFont(fontData, url, fontFamily), null);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return A._asyncStartSync($async$_downloadFont$3, $async$completer);
    },
    clear$0(_) {
    }
  };
  A.SkiaFontCollection__registerWithFontProvider_closure.prototype = {
    call$0() {
      return A._setArrayType([], type$.JSArray_JavaScriptObject);
    },
    $signature: 25
  };
  A.SkiaFontCollection__registerWithFontProvider_closure0.prototype = {
    call$0() {
      return A._setArrayType([], type$.JSArray_JavaScriptObject);
    },
    $signature: 25
  };
  A.SkiaFontCollection_loadAssetFonts_closure.prototype = {
    call$0() {
      return this._0_0._0;
    },
    $signature: 10
  };
  A.SkiaFontCollection_loadAssetFonts_closure0.prototype = {
    call$0() {
      return this._0_0._1;
    },
    $signature: 58
  };
  A.SkiaFontCollection_registerDownloadedFonts_makeRegisterFont.prototype = {
    call$3(buffer, url, family) {
      var bytes = A.NativeUint8List_NativeUint8List$view(buffer, 0, null),
        t1 = $.__canvasKit._readField$0().Typeface.MakeFreeTypeFaceFromData(bytes.buffer);
      if (t1 != null)
        return A.RegisteredFont$(bytes, family, t1);
      else {
        $.$get$printWarning().call$1("Failed to load font " + family + " at " + url);
        $.$get$printWarning().call$1("Verify that " + url + " contains a valid font.");
        return null;
      }
    },
    $signature: 70
  };
  A.RegisteredFont.prototype = {};
  A.UnregisteredFont.prototype = {};
  A.FontDownloadResult.prototype = {};
  A.CompositorContext.prototype = {};
  A.Rasterizer.prototype = {};
  A.CanvasKitVariant.prototype = {
    _enumToString$0() {
      return "CanvasKitVariant." + this._core$_name;
    }
  };
  A.CanvasKitRenderer.prototype = {
    get$rendererTag() {
      return "canvaskit";
    },
    get$fontCollection() {
      var t1, t2, t3, t4,
        value = this.__CanvasKitRenderer__fontCollection_FI;
      if (value === $) {
        t1 = type$.String;
        t2 = A._setArrayType([], type$.JSArray_UnregisteredFont);
        t3 = type$.JSArray_RegisteredFont;
        t4 = A._setArrayType([], t3);
        t3 = A._setArrayType([], t3);
        this.__CanvasKitRenderer__fontCollection_FI !== $ && A.throwUnnamedLateFieldADI();
        value = this.__CanvasKitRenderer__fontCollection_FI = new A.SkiaFontCollection(A.LinkedHashSet_LinkedHashSet$_empty(t1), t2, t4, t3, A.LinkedHashMap_LinkedHashMap$_empty(t1, type$.List_JavaScriptObject));
      }
      return value;
    },
    initialize$0(_) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, t1;
      var $async$initialize$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self._initialized;
              $async$returnValue = t1 == null ? $async$self._initialized = new A.CanvasKitRenderer_initialize_closure($async$self).call$0() : t1;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$initialize$0, $async$completer);
    },
    reset$1(_, embedder) {
      var t2,
        t1 = this._sceneHost = A.DomDocumentExtension_createElement(self.document, "flt-scene");
      if (!J.$eq$(t1, embedder._sceneElement)) {
        t2 = embedder._sceneElement;
        if (t2 != null)
          t2.remove();
        embedder._sceneElement = t1;
        embedder._sceneHostElement.append(t1);
      }
    },
    clearFragmentProgramCache$0() {
      $.CanvasKitRenderer__programs.clear$0(0);
    }
  };
  A.CanvasKitRenderer_initialize_closure.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, $async$temp1;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = self.window.flutterCanvasKit != null ? 2 : 4;
              break;
            case 2:
              // then
              t1 = self.window.flutterCanvasKit;
              t1.toString;
              $.__canvasKit.__late_helper$_value = t1;
              // goto join
              $async$goto = 3;
              break;
            case 4:
              // else
              $async$temp1 = $.__canvasKit;
              $async$goto = 5;
              return A._asyncAwait(A.downloadCanvasKit(), $async$call$0);
            case 5:
              // returning from await.
              $async$temp1.__late_helper$_value = $async$result;
              self.window.flutterCanvasKit = $.__canvasKit._readField$0();
            case 3:
              // join
              $.CanvasKitRenderer____instance.__late_helper$_value = $async$self.$this;
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 12
  };
  A.Surface.prototype = {};
  A.SurfaceFactory.prototype = {};
  A.ClipboardMessageHandler.prototype = {
    setDataMethodCall$2(methodCall, callback) {
      var t1 = {};
      t1.errorEnvelopeEncoded = false;
      this._copyToClipboardStrategy.setData$1(0, A._asStringQ(J.$index$asx(methodCall.$arguments, "text"))).then$1$1(new A.ClipboardMessageHandler_setDataMethodCall_closure(t1, callback), type$.Null).catchError$1(new A.ClipboardMessageHandler_setDataMethodCall_closure0(t1, callback));
    },
    getDataMethodCall$1(callback) {
      this._pasteFromClipboardStrategy.getData$0(0).then$1$1(new A.ClipboardMessageHandler_getDataMethodCall_closure(callback), type$.Null).catchError$1(new A.ClipboardMessageHandler_getDataMethodCall_closure0(this, callback));
    },
    hasStringsMethodCall$1(callback) {
      this._pasteFromClipboardStrategy.getData$0(0).then$1$1(new A.ClipboardMessageHandler_hasStringsMethodCall_closure(callback), type$.Null).catchError$1(new A.ClipboardMessageHandler_hasStringsMethodCall_closure0(callback));
    }
  };
  A.ClipboardMessageHandler_setDataMethodCall_closure.prototype = {
    call$1(success) {
      var t1 = this.callback;
      if (success) {
        t1.toString;
        t1.call$1(B.C_JSONMessageCodec.encodeMessage$1([true]));
      } else {
        t1.toString;
        t1.call$1(B.C_JSONMessageCodec.encodeMessage$1(["copy_fail", "Clipboard.setData failed", null]));
        this._box_0.errorEnvelopeEncoded = true;
      }
    },
    $signature: 13
  };
  A.ClipboardMessageHandler_setDataMethodCall_closure0.prototype = {
    call$1(_) {
      var t1;
      if (!this._box_0.errorEnvelopeEncoded) {
        t1 = this.callback;
        t1.toString;
        t1.call$1(B.C_JSONMessageCodec.encodeMessage$1(["copy_fail", "Clipboard.setData failed", null]));
      }
    },
    $signature: 6
  };
  A.ClipboardMessageHandler_getDataMethodCall_closure.prototype = {
    call$1(data) {
      var map = A.LinkedHashMap_LinkedHashMap$_literal(["text", data], type$.String, type$.dynamic),
        t1 = this.callback;
      t1.toString;
      t1.call$1(B.C_JSONMessageCodec.encodeMessage$1([map]));
    },
    $signature: 27
  };
  A.ClipboardMessageHandler_getDataMethodCall_closure0.prototype = {
    call$1(error) {
      var t1;
      if (error instanceof A.UnimplementedError) {
        A.Future_Future$delayed(B.Duration_0, type$.void).then$1$1(new A.ClipboardMessageHandler_getDataMethodCall__closure(this.callback), type$.Null);
        return;
      }
      t1 = this.callback;
      A.print("Could not get text from clipboard: " + A.S(error));
      t1.toString;
      t1.call$1(B.C_JSONMessageCodec.encodeMessage$1(["paste_fail", "Clipboard.getData failed", null]));
    },
    $signature: 6
  };
  A.ClipboardMessageHandler_getDataMethodCall__closure.prototype = {
    call$1(_) {
      var t1 = this.callback;
      if (t1 != null)
        t1.call$1(null);
    },
    $signature: 7
  };
  A.ClipboardMessageHandler_hasStringsMethodCall_closure.prototype = {
    call$1(data) {
      var map = A.LinkedHashMap_LinkedHashMap$_literal(["value", data.length !== 0], type$.String, type$.dynamic),
        t1 = this.callback;
      t1.toString;
      t1.call$1(B.C_JSONMessageCodec.encodeMessage$1([map]));
    },
    $signature: 27
  };
  A.ClipboardMessageHandler_hasStringsMethodCall_closure0.prototype = {
    call$1(error) {
      var map, t1;
      if (error instanceof A.UnimplementedError) {
        A.Future_Future$delayed(B.Duration_0, type$.void).then$1$1(new A.ClipboardMessageHandler_hasStringsMethodCall__closure(this.callback), type$.Null);
        return;
      }
      map = A.LinkedHashMap_LinkedHashMap$_literal(["value", false], type$.String, type$.dynamic);
      t1 = this.callback;
      t1.toString;
      t1.call$1(B.C_JSONMessageCodec.encodeMessage$1([map]));
    },
    $signature: 6
  };
  A.ClipboardMessageHandler_hasStringsMethodCall__closure.prototype = {
    call$1(_) {
      var t1 = this.callback;
      if (t1 != null)
        t1.call$1(null);
    },
    $signature: 7
  };
  A.ClipboardAPICopyStrategy.prototype = {
    setData$1(_, text) {
      return this.setData$body$ClipboardAPICopyStrategy(0, text);
    },
    setData$body$ClipboardAPICopyStrategy(_, text) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.bool),
        $async$returnValue, $async$handler = 2, $async$currentError, error, t1, exception, $async$exception;
      var $async$setData$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$handler = 4;
              t1 = self.window.navigator.clipboard;
              t1.toString;
              text.toString;
              $async$goto = 7;
              return A._asyncAwait(A.promiseToFuture(t1.writeText(text), type$.dynamic), $async$setData$1);
            case 7:
              // returning from await.
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              error = A.unwrapException($async$exception);
              A.print("copy is not successful " + A.S(error));
              t1 = A.Future_Future$value(false, type$.bool);
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
              $async$returnValue = A.Future_Future$value(true, type$.bool);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return A._asyncStartSync($async$setData$1, $async$completer);
    }
  };
  A.ClipboardAPIPasteStrategy.prototype = {
    getData$0(_) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.String),
        $async$returnValue;
      var $async$getData$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = A.promiseToFuture(self.window.navigator.clipboard.readText(), type$.String);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$getData$0, $async$completer);
    }
  };
  A.ExecCommandCopyStrategy.prototype = {
    setData$1(_, text) {
      return A.Future_Future$value(this._setDataSync$1(text), type$.bool);
    },
    _setDataSync$1(text) {
      var tempTextArea, result, error, exception,
        _s8_ = "-99999px",
        _s11_ = "transparent",
        tempElement = A.DomDocumentExtension_createElement(self.document, "textarea"),
        elementStyle = tempElement.style;
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "position", "absolute");
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "top", _s8_);
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "left", _s8_);
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "opacity", "0");
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "color", _s11_);
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "background-color", _s11_);
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "background", _s11_);
      self.document.body.append(tempElement);
      tempTextArea = tempElement;
      A.DomHTMLTextAreaElementExtension_set_value(tempTextArea, text);
      tempTextArea.focus();
      tempTextArea.select();
      result = false;
      try {
        result = self.document.execCommand("copy");
        if (!result)
          A.print("copy is not successful");
      } catch (exception) {
        error = A.unwrapException(exception);
        A.print("copy is not successful " + A.S(error));
      } finally {
        tempTextArea.remove();
      }
      return result;
    }
  };
  A.ExecCommandPasteStrategy.prototype = {
    getData$0(_) {
      return A.Future_Future$error(new A.UnimplementedError("Paste is not implemented for this browser."), null, type$.String);
    }
  };
  A.FlutterConfiguration.prototype = {
    get$requestedRendererType() {
      var t1 = this._configuration;
      if (t1 == null)
        t1 = null;
      else {
        t1 = t1.renderer;
        if (t1 == null)
          t1 = null;
      }
      if (t1 == null) {
        t1 = self.window.flutterWebRenderer;
        if (t1 == null)
          t1 = null;
      }
      return t1;
    }
  };
  A.EngineFlutterDisplay.prototype = {};
  A.ScreenOrientation.prototype = {
    setPreferredOrientation$1(orientations) {
      return this.setPreferredOrientation$body$ScreenOrientation(orientations);
    },
    setPreferredOrientation$body$ScreenOrientation(orientations) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.bool),
        $async$returnValue, $async$handler = 2, $async$currentError, screenOrientation, lockType, t1, exception, $screen, $async$exception;
      var $async$setPreferredOrientation$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $screen = self.window.screen;
              $async$goto = $screen != null ? 3 : 4;
              break;
            case 3:
              // then
              screenOrientation = $screen.orientation;
              $async$goto = screenOrientation != null ? 5 : 6;
              break;
            case 5:
              // then
              t1 = J.getInterceptor$asx(orientations);
              $async$goto = t1.get$isEmpty(orientations) ? 7 : 9;
              break;
            case 7:
              // then
              screenOrientation.unlock();
              $async$returnValue = true;
              // goto return
              $async$goto = 1;
              break;
              // goto join
              $async$goto = 8;
              break;
            case 9:
              // else
              lockType = A.ScreenOrientation__deviceOrientationToLockType(A._asStringQ(t1.get$first(orientations)));
              $async$goto = lockType != null ? 10 : 11;
              break;
            case 10:
              // then
              $async$handler = 13;
              $async$goto = 16;
              return A._asyncAwait(A.promiseToFuture(screenOrientation.lock(lockType), type$.dynamic), $async$setPreferredOrientation$1);
            case 16:
              // returning from await.
              $async$returnValue = true;
              // goto return
              $async$goto = 1;
              break;
              $async$handler = 2;
              // goto after finally
              $async$goto = 15;
              break;
            case 13:
              // catch
              $async$handler = 12;
              $async$exception = $async$currentError;
              t1 = A.Future_Future$value(false, type$.bool);
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
              // goto after finally
              $async$goto = 15;
              break;
            case 12:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 15:
              // after finally
            case 11:
              // join
            case 8:
              // join
            case 6:
              // join
            case 4:
              // join
              $async$returnValue = false;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return A._asyncStartSync($async$setPreferredOrientation$1, $async$completer);
    }
  };
  A.DomConsoleExtension_get_warn_closure.prototype = {
    call$1(arg) {
      return this._this.warn(arg);
    },
    $signature: 11
  };
  A.DomNavigatorExtension_get_languages_closure.prototype = {
    call$1(any) {
      any.toString;
      return A._asString(any);
    },
    $signature: 71
  };
  A.HttpFetchResponseImpl.prototype = {
    get$status(_) {
      return A._asInt(this._domResponse.status);
    },
    get$hasPayload() {
      var t1 = this._domResponse,
        accepted = A._asInt(t1.status) >= 200 && A._asInt(t1.status) < 300,
        t2 = A._asInt(t1.status),
        t3 = A._asInt(t1.status),
        unknownRedirect = A._asInt(t1.status) > 307 && A._asInt(t1.status) < 400;
      return accepted || t2 === 0 || t3 === 304 || unknownRedirect;
    },
    get$payload() {
      var _this = this;
      if (!_this.get$hasPayload())
        throw A.wrapException(new A.HttpFetchNoPayloadError(_this.url, _this.get$status(_this)));
      return new A.HttpFetchPayloadImpl(_this._domResponse);
    },
    $isHttpFetchResponse: 1
  };
  A.HttpFetchPayloadImpl.prototype = {
    read$1$1(_, callback, $T) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t1, chunk, reader;
      var $async$read$1$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              reader = $async$self._domResponse.body.getReader();
              t1 = type$.JavaScriptObject;
            case 2:
              // for condition
              // trivial condition
              $async$goto = 4;
              return A._asyncAwait(A.promiseToFuture(reader.read(), t1), $async$read$1$1);
            case 4:
              // returning from await.
              chunk = $async$result;
              if (chunk.done) {
                // goto after for
                $async$goto = 3;
                break;
              }
              callback.call$1($T._as(chunk.value));
              // goto for condition
              $async$goto = 2;
              break;
            case 3:
              // after for
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$read$1$1, $async$completer);
    },
    asByteBuffer$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.ByteBuffer),
        $async$returnValue, $async$self = this, t1;
      var $async$asByteBuffer$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return A._asyncAwait(A.promiseToFuture($async$self._domResponse.arrayBuffer(), type$.nullable_Object), $async$asByteBuffer$0);
            case 3:
              // returning from await.
              t1 = $async$result;
              t1.toString;
              $async$returnValue = type$.ByteBuffer._as(t1);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$asByteBuffer$0, $async$completer);
    }
  };
  A.HttpFetchNoPayloadError.prototype = {
    toString$0(_) {
      return 'Flutter Web engine failed to fetch "' + this.url + '". HTTP request succeeded, but the server responded with HTTP status ' + this.status + ".";
    },
    $isException: 1
  };
  A.HttpFetchError.prototype = {
    toString$0(_) {
      return 'Flutter Web engine failed to complete HTTP request to fetch "' + this.url + '": ' + A.S(this.requestError);
    },
    $isException: 1
  };
  A.DomSubscription.prototype = {};
  A.DomPoint.prototype = {};
  A.createDomResizeObserver_closure.prototype = {
    call$2(entries, observer) {
      this.fn.call$2(J.cast$1$0$ax(entries, type$.JavaScriptObject), observer);
    },
    $signature: 79
  };
  A._ttPolicy_closure.prototype = {
    call$1(url) {
      var uri = A.Uri_parse(url);
      if (B.Set_Vvc75.contains$1(0, B.JSArray_methods.get$last(uri.get$pathSegments())))
        return uri.toString$0(0);
      self.window.console.error("URL rejected by TrustedTypes policy flutter-engine: " + url + "(download prevented)");
      return null;
    },
    $signature: 80
  };
  A._DomListIterator.prototype = {
    moveNext$0() {
      var t1 = ++this.index,
        t2 = this.list;
      if (t1 > t2.length)
        throw A.wrapException(A.StateError$("Iterator out of bounds"));
      return t1 < t2.length;
    },
    get$current(_) {
      return this.$ti._precomputed1._as(this.list.item(this.index));
    }
  };
  A._DomListWrapper.prototype = {
    get$iterator(_) {
      return new A._DomListIterator(this.list, this.$ti._eval$1("_DomListIterator<1>"));
    },
    get$length(_) {
      return B.JSNumber_methods.toInt$0(this.list.length);
    }
  };
  A._DomTouchListIterator.prototype = {
    moveNext$0() {
      var t1 = ++this.index,
        t2 = this.list;
      if (t1 > t2.length)
        throw A.wrapException(A.StateError$("Iterator out of bounds"));
      return t1 < t2.length;
    },
    get$current(_) {
      return this.$ti._precomputed1._as(this.list.item(this.index));
    }
  };
  A._DomTouchListWrapper.prototype = {
    get$iterator(_) {
      return new A._DomTouchListIterator(this.list, this.$ti._eval$1("_DomTouchListIterator<1>"));
    },
    get$length(_) {
      return B.JSNumber_methods.toInt$0(this.list.length);
    }
  };
  A.FlutterViewEmbedder.prototype = {
    updateSemanticsScreenProperties$0() {
      var t2,
        t1 = this._semanticsHostElement.style;
      $.$get$window();
      t2 = $.$get$EngineFlutterDisplay__instance()._debugDevicePixelRatioOverride;
      if (t2 == null) {
        t2 = self.window.devicePixelRatio;
        if (t2 === 0)
          t2 = 1;
      }
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "transform", "scale(" + A.S(1 / t2) + ")");
    },
    _metricsDidChange$1(newSize) {
      var t1;
      this.updateSemanticsScreenProperties$0();
      t1 = $.$get$_operatingSystem();
      if (!B.Set_uTMs5.contains$1(0, t1) && !$.$get$window().isRotation$0() && $.$get$textEditing().isEditing) {
        $.$get$window().computeOnScreenKeyboardInsets$1(true);
        $.$get$EnginePlatformDispatcher__instance().invokeOnMetricsChanged$0();
      } else {
        t1 = $.$get$window();
        t1.computePhysicalSize$0();
        t1.computeOnScreenKeyboardInsets$1(false);
        $.$get$EnginePlatformDispatcher__instance().invokeOnMetricsChanged$0();
      }
    }
  };
  A.FontAsset.prototype = {};
  A.FontFamily.prototype = {};
  A.FontManifest.prototype = {};
  A.fetchFontManifest_closure.prototype = {
    call$1(accumulated) {
      if (accumulated.length !== 1)
        throw A.wrapException(A.AssertionError$(string$.There_));
      this._box_0.fontManifestJson = B.JSArray_methods.get$first(accumulated);
    },
    $signature: 88
  };
  A.fetchFontManifest_closure0.prototype = {
    call$1(chunk) {
      return this.inputSink.add$1(0, chunk);
    },
    $signature: 95
  };
  A.fetchFontManifest_closure1.prototype = {
    call$1(fontFamilyJson) {
      var t1, familyName;
      type$.Map_String_dynamic._as(fontFamilyJson);
      t1 = J.getInterceptor$asx(fontFamilyJson);
      familyName = A._asString(t1.$index(fontFamilyJson, "family"));
      t1 = J.map$1$1$ax(type$.List_dynamic._as(t1.$index(fontFamilyJson, "fonts")), new A.fetchFontManifest__closure(), type$.FontAsset);
      return new A.FontFamily(familyName, A.List_List$of(t1, true, A._instanceType(t1)._eval$1("ListIterable.E")));
    },
    $signature: 98
  };
  A.fetchFontManifest__closure.prototype = {
    call$1(fontAssetJson) {
      var asset, t2, t3, t4,
        t1 = type$.String,
        descriptors = A.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
      for (t1 = J.get$entries$x(type$.Map_String_dynamic._as(fontAssetJson)), t1 = t1.get$iterator(t1), asset = null; t1.moveNext$0();) {
        t2 = t1.get$current(t1);
        t3 = t2.key;
        t4 = J.$eq$(t3, "asset");
        t2 = t2.value;
        if (t4) {
          A._asString(t2);
          asset = t2;
        } else
          descriptors.$indexSet(0, t3, A.S(t2));
      }
      if (asset == null)
        throw A.wrapException(A.AssertionError$("Invalid Font manifest, missing 'asset' key on font."));
      return new A.FontAsset(asset, descriptors);
    },
    $signature: 41
  };
  A.FontLoadError.prototype = {};
  A.FontNotFoundError.prototype = {};
  A.FontDownloadError.prototype = {};
  A.FontInvalidDataError.prototype = {};
  A.AssetFontsResult.prototype = {};
  A.HtmlRenderer.prototype = {
    get$rendererTag() {
      return "html";
    },
    get$fontCollection() {
      var value = this.__HtmlRenderer__fontCollection_FI;
      if (value === $) {
        value !== $ && A.throwUnnamedLateFieldADI();
        value = this.__HtmlRenderer__fontCollection_FI = new A.HtmlFontCollection();
      }
      return value;
    },
    initialize$0(_) {
      A.scheduleMicrotask(new A.HtmlRenderer_initialize_closure());
      $.HtmlRenderer____instance.__late_helper$_value = this;
    },
    reset$1(_, embedder) {
    },
    clearFragmentProgramCache$0() {
    }
  };
  A.HtmlRenderer_initialize_closure.prototype = {
    call$0() {
      if ($._lineLookup == null) {
        var t1 = type$.LineCharProperty;
        A._unpackProperties("00000008A0009!B000a!C000b000cD000d!E000e000vA000w!F000x!G000y!H000z!I0010!J0011!K0012!I0013!H0014!L0015!M0016!I0017!J0018!N0019!O001a!N001b!P001c001lQ001m001nN001o001qI001r!G001s002iI002j!L002k!J002l!M002m003eI003f!L003g!B003h!R003i!I003j003oA003p!D003q004fA004g!S004h!L004i!K004j004lJ004m004qI004r!H004s!I004t!B004u004vI004w!K004x!J004y004zI0050!T00510056I0057!H0058005aI005b!L005c00jrI00js!T00jt00jvI00jw!T00jx00keI00kf!T00kg00lbI00lc00niA00nj!S00nk00nvA00nw00o2S00o300ofA00og00otI00ou!N00ov00w2I00w300w9A00wa013cI013d!N013e!B013h013iI013j!J013l014tA014u!B014v!A014w!I014x014yA014z!I01500151A0152!G0153!A015c0162U0167016aU016b016wI016x016zK01700171N01720173I0174017eA017f!G017g!A017i017jG017k018qI018r019bA019c019lQ019m!K019n019oQ019p019rI019s!A019t01cjI01ck!G01cl!I01cm01csA01ct01cuI01cv01d0A01d101d2I01d301d4A01d5!I01d601d9A01da01dbI01dc01dlQ01dm01e8I01e9!A01ea01f3I01f401fuA01fx01idI01ie01ioA01ip!I01j401jdQ01je01kaI01kb01kjA01kk01knI01ko!N01kp!G01kq!I01kt!A01ku01kvJ01kw01lhI01li01llA01lm!I01ln01lvA01lw!I01lx01lzA01m0!I01m101m5A01m801ncI01nd01nfA01ni01qfI01qr01r5A01r6!I01r701s3A01s401tlI01tm01toA01tp!I01tq01u7A01u8!I01u901ufA01ug01upI01uq01urA01us01utB01uu01v3Q01v401vkI01vl01vnA01vp01x5I01x8!A01x9!I01xa01xgA01xj01xkA01xn01xpA01xq!I01xz!A01y401y9I01ya01ybA01ye01ynQ01yo01ypI01yq01yrK01ys01ywI01yx!K01yy!I01yz!J01z001z1I01z2!A01z501z7A01z9020pI020s!A020u020yA02130214A02170219A021d!A021l021qI021y0227Q02280229A022a022cI022d!A022e!I022p022rA022t0249I024c!A024d!I024e024lA024n024pA024r024tA024w025dI025e025fA025i025rQ025s!I025t!J0261!I02620267A0269026bA026d027tI027w!A027x!I027y0284A02870288A028b028dA028l028nA028s028xI028y028zA0292029bQ029c029jI029u!A029v02bdI02bi02bmA02bq02bsA02bu02bxA02c0!I02c7!A02cm02cvQ02cw02d4I02d5!J02d6!I02dc02dgA02dh02f1I02f202f8A02fa02fcA02fe02fhA02fp02fqA02fs02g1I02g202g3A02g602gfQ02gn!T02go02gwI02gx02gzA02h0!T02h102ihI02ik!A02il!I02im02isA02iu02iwA02iy02j1A02j902jaA02ji02jlI02jm02jnA02jq02jzQ02k102k2I02kg02kjA02kk02m2I02m302m4A02m5!I02m602mcA02me02mgA02mi02mlA02mm02muI02mv!A02mw02n5I02n602n7A02na02njQ02nk02nsI02nt!K02nu02nzI02o102o3A02o502pyI02q2!A02q702qcA02qe!A02qg02qnA02qu02r3Q02r602r7A02r802t6I02tb!J02tc02trI02ts02u1Q02u202u3B02v502x9I02xc02xlQ02xo02yoI02yp02ysT02yt!I02yu02yvT02yw!S02yx02yyT02yz!B02z0!S02z102z5G02z6!S02z7!I02z8!G02z902zbI02zc02zdA02ze02zjI02zk02ztQ02zu0303I0304!B0305!A0306!I0307!A0308!I0309!A030a!L030b!R030c!L030d!R030e030fA030g031oI031t0326A0327!B0328032cA032d!B032e032fA032g032kI032l032vA032x033wA033y033zB03400345I0346!A0347034fI034g034hT034i!B034j!T034k034oI034p034qS035s037jI037k037tQ037u037vB037w039rI039s03a1Q03a203cvI03cw03fjV03fk03hjW03hk03jzX03k003tmI03tp03trA03ts!I03tt!B03tu03y5I03y8!B03y904fzI04g0!B04g104gqI04gr!L04gs!R04gw04iyI04iz04j1B04j204k1I04k204k4A04kg04kxI04ky04l0A04l104l2B04lc04ltI04lu04lvA04m804moI04mq04mrA04n404pfI04pg04phB04pi!Y04pj!I04pk!B04pl!I04pm!B04pn!J04po04ppI04ps04q1Q04q804qpI04qq04qrG04qs04qtB04qu!T04qv!I04qw04qxG04qy!I04qz04r1A04r2!S04r404rdQ04rk04ucI04ud04ueA04uf04vcI04vd!A04ve04ymI04yo04yzA04z404zfA04zk!I04zo04zpG04zq04zzQ0500053dI053k053tQ053u055iI055j055nA055q058cI058f!A058g058pQ058w0595Q059c059pI059s05a8A05c005c4A05c505dfI05dg05dwA05dx05e3I05e805ehQ05ei05ejB05ek!I05el05eoB05ep05eyI05ez05f7A05f805fgI05fk05fmA05fn05ggI05gh05gtA05gu05gvI05gw05h5Q05h605idI05ie05irA05j005k3I05k405knA05kr05kvB05kw05l5Q05l905lbI05lc05llQ05lm05mlI05mm05mnB05mo05onI05ow05oyA05oz!I05p005pkA05pl05poI05pp!A05pq05pvI05pw!A05px05pyI05pz05q1A05q205vjI05vk05x5A05x705xbA05xc06bgI06bh!T06bi!I06bk06bqB06br!S06bs06buB06bv!Z06bw!A06bx!a06by06bzA06c0!B06c1!S06c206c3B06c4!b06c506c7I06c806c9H06ca!L06cb06cdH06ce!L06cf!H06cg06cjI06ck06cmc06cn!B06co06cpD06cq06cuA06cv!S06cw06d3K06d4!I06d506d6H06d7!I06d806d9Y06da06dfI06dg!N06dh!L06di!R06dj06dlY06dm06dxI06dy!B06dz!I06e006e3B06e4!I06e506e7B06e8!d06e906ecI06ee06enA06eo06f0I06f1!L06f2!R06f306fgI06fh!L06fi!R06fk06fwI06g006g6J06g7!K06g806glJ06gm!K06gn06gqJ06gr!K06gs06gtJ06gu!K06gv06hbJ06hc06i8A06io06iqI06ir!K06is06iwI06ix!K06iy06j9I06ja!J06jb06q9I06qa06qbJ06qc06weI06wf!c06wg06x3I06x4!L06x5!R06x6!L06x7!R06x806xlI06xm06xne06xo06y0I06y1!L06y2!R06y3073jI073k073ne073o07i7I07i807ibe07ic07irI07is07ite07iu07ivI07iw!e07ix!I07iy07j0e07j1!f07j207j3e07j407jsI07jt07jve07jw07l3I07l4!e07l507lqI07lr!e07ls07ngI07nh07nse07nt07nwI07nx!e07ny!I07nz07o1e07o2!I07o307o4e07o507o7I07o807o9e07oa07obI07oc!e07od07oeI07of07ohe07oi07opI07oq!e07or07owI07ox07p1e07p2!I07p307p4e07p5!f07p6!e07p707p8I07p907pge07ph07pjI07pk07ple07pm07ppf07pq07ruI07rv07s0H07s1!I07s207s3G07s4!e07s507s7I07s8!L07s9!R07sa!L07sb!R07sc!L07sd!R07se!L07sf!R07sg!L07sh!R07si!L07sj!R07sk!L07sl!R07sm07usI07ut!L07uu!R07uv07vpI07vq!L07vr!R07vs!L07vt!R07vu!L07vv!R07vw!L07vx!R07vy!L07vz!R07w00876I0877!L0878!R0879!L087a!R087b!L087c!R087d!L087e!R087f!L087g!R087h!L087i!R087j!L087k!R087l!L087m!R087n!L087o!R087p!L087q!R087r!L087s!R087t089jI089k!L089l!R089m!L089n!R089o08ajI08ak!L08al!R08am08viI08vj08vlA08vm08vnI08vt!G08vu08vwB08vx!I08vy!G08vz!B08w008z3I08z4!B08zj!A08zk0926I09280933A0934093hH093i093pB093q!I093r!B093s!L093t!B093u093vI093w093xH093y093zI09400941H0942!L0943!R0944!L0945!R0946!L0947!R0948!L0949!R094a094dB094e!G094f!I094g094hB094i!I094j094kB094l094pI094q094rb094s094uB094v!I094w094xB094y!L094z0956B0957!I0958!B0959!I095a095bB095c095eI096o097de097f099ve09a809g5e09gw09h7e09hc!B09hd09heR09hf09hge09hh!Y09hi09hje09hk!L09hl!R09hm!L09hn!R09ho!L09hp!R09hq!L09hr!R09hs!L09ht!R09hu09hve09hw!L09hx!R09hy!L09hz!R09i0!L09i1!R09i2!L09i3!R09i4!Y09i5!L09i609i7R09i809ihe09ii09inA09io09ise09it!A09iu09iye09iz09j0Y09j109j3e09j5!Y09j6!e09j7!Y09j8!e09j9!Y09ja!e09jb!Y09jc!e09jd!Y09je09k2e09k3!Y09k409kye09kz!Y09l0!e09l1!Y09l2!e09l3!Y09l409l9e09la!Y09lb09lge09lh09liY09ll09lmA09ln09lqY09lr!e09ls09ltY09lu!e09lv!Y09lw!e09lx!Y09ly!e09lz!Y09m0!e09m1!Y09m209mqe09mr!Y09ms09nme09nn!Y09no!e09np!Y09nq!e09nr!Y09ns09nxe09ny!Y09nz09o4e09o509o6Y09o709oae09ob09oeY09of!e09ol09pre09pt09see09sg09ure09v409vjY09vk09wee09wg09xje09xk09xrI09xs0fcve0fcw0fenI0feo0vmce0vmd!Y0vme0wi4e0wi80wjqe0wk00wl9I0wla0wlbB0wlc0wssI0wst!B0wsu!G0wsv!B0wsw0wtbI0wtc0wtlQ0wtm0wviI0wvj0wvmA0wvn!I0wvo0wvxA0wvy0wwtI0wwu0wwvA0www0wz3I0wz40wz5A0wz6!I0wz70wzbB0wzk0x6pI0x6q!A0x6r0x6tI0x6u!A0x6v0x6yI0x6z!A0x700x7mI0x7n0x7rA0x7s0x7vI0x7w!A0x800x87I0x88!K0x890x9vI0x9w0x9xT0x9y0x9zG0xa80xa9A0xaa0xbnI0xbo0xc5A0xce0xcfB0xcg0xcpQ0xcw0xddA0xde0xdnI0xdo!T0xdp0xdqI0xdr!A0xds0xe1Q0xe20xetI0xeu0xf1A0xf20xf3B0xf40xfqI0xfr0xg3A0xgf!I0xgg0xh8V0xhc0xhfA0xhg0xiqI0xir0xj4A0xj50xjaI0xjb0xjdB0xje0xjjI0xjk0xjtQ0xjy0xkfI0xkg0xkpQ0xkq0xm0I0xm10xmeA0xmo0xmqI0xmr!A0xms0xmzI0xn00xn1A0xn40xndQ0xng!I0xnh0xnjB0xnk0xreI0xrf0xrjA0xrk0xrlB0xrm0xroI0xrp0xrqA0xs10xyaI0xyb0xyiA0xyj!B0xyk0xylA0xyo0xyxQ0xz4!g0xz50xzvh0xzw!g0xzx0y0nh0y0o!g0y0p0y1fh0y1g!g0y1h0y27h0y28!g0y290y2zh0y30!g0y310y3rh0y3s!g0y3t0y4jh0y4k!g0y4l0y5bh0y5c!g0y5d0y63h0y64!g0y650y6vh0y6w!g0y6x0y7nh0y7o!g0y7p0y8fh0y8g!g0y8h0y97h0y98!g0y990y9zh0ya0!g0ya10yarh0yas!g0yat0ybjh0ybk!g0ybl0ycbh0ycc!g0ycd0yd3h0yd4!g0yd50ydvh0ydw!g0ydx0yenh0yeo!g0yep0yffh0yfg!g0yfh0yg7h0yg8!g0yg90ygzh0yh0!g0yh10yhrh0yhs!g0yht0yijh0yik!g0yil0yjbh0yjc!g0yjd0yk3h0yk4!g0yk50ykvh0ykw!g0ykx0ylnh0ylo!g0ylp0ymfh0ymg!g0ymh0yn7h0yn8!g0yn90ynzh0yo0!g0yo10yorh0yos!g0yot0ypjh0ypk!g0ypl0yqbh0yqc!g0yqd0yr3h0yr4!g0yr50yrvh0yrw!g0yrx0ysnh0yso!g0ysp0ytfh0ytg!g0yth0yu7h0yu8!g0yu90yuzh0yv0!g0yv10yvrh0yvs!g0yvt0ywjh0ywk!g0ywl0yxbh0yxc!g0yxd0yy3h0yy4!g0yy50yyvh0yyw!g0yyx0yznh0yzo!g0yzp0z0fh0z0g!g0z0h0z17h0z18!g0z190z1zh0z20!g0z210z2rh0z2s!g0z2t0z3jh0z3k!g0z3l0z4bh0z4c!g0z4d0z53h0z54!g0z550z5vh0z5w!g0z5x0z6nh0z6o!g0z6p0z7fh0z7g!g0z7h0z87h0z88!g0z890z8zh0z90!g0z910z9rh0z9s!g0z9t0zajh0zak!g0zal0zbbh0zbc!g0zbd0zc3h0zc4!g0zc50zcvh0zcw!g0zcx0zdnh0zdo!g0zdp0zefh0zeg!g0zeh0zf7h0zf8!g0zf90zfzh0zg0!g0zg10zgrh0zgs!g0zgt0zhjh0zhk!g0zhl0zibh0zic!g0zid0zj3h0zj4!g0zj50zjvh0zjw!g0zjx0zknh0zko!g0zkp0zlfh0zlg!g0zlh0zm7h0zm8!g0zm90zmzh0zn0!g0zn10znrh0zns!g0znt0zojh0zok!g0zol0zpbh0zpc!g0zpd0zq3h0zq4!g0zq50zqvh0zqw!g0zqx0zrnh0zro!g0zrp0zsfh0zsg!g0zsh0zt7h0zt8!g0zt90ztzh0zu0!g0zu10zurh0zus!g0zut0zvjh0zvk!g0zvl0zwbh0zwc!g0zwd0zx3h0zx4!g0zx50zxvh0zxw!g0zxx0zynh0zyo!g0zyp0zzfh0zzg!g0zzh1007h1008!g1009100zh1010!g1011101rh101s!g101t102jh102k!g102l103bh103c!g103d1043h1044!g1045104vh104w!g104x105nh105o!g105p106fh106g!g106h1077h1078!g1079107zh1080!g1081108rh108s!g108t109jh109k!g109l10abh10ac!g10ad10b3h10b4!g10b510bvh10bw!g10bx10cnh10co!g10cp10dfh10dg!g10dh10e7h10e8!g10e910ezh10f0!g10f110frh10fs!g10ft10gjh10gk!g10gl10hbh10hc!g10hd10i3h10i4!g10i510ivh10iw!g10ix10jnh10jo!g10jp10kfh10kg!g10kh10l7h10l8!g10l910lzh10m0!g10m110mrh10ms!g10mt10njh10nk!g10nl10obh10oc!g10od10p3h10p4!g10p510pvh10pw!g10px10qnh10qo!g10qp10rfh10rg!g10rh10s7h10s8!g10s910szh10t0!g10t110trh10ts!g10tt10ujh10uk!g10ul10vbh10vc!g10vd10w3h10w4!g10w510wvh10ww!g10wx10xnh10xo!g10xp10yfh10yg!g10yh10z7h10z8!g10z910zzh1100!g1101110rh110s!g110t111jh111k!g111l112bh112c!g112d1133h1134!g1135113vh113w!g113x114nh114o!g114p115fh115g!g115h1167h1168!g1169116zh1170!g1171117rh117s!g117t118jh118k!g118l119bh119c!g119d11a3h11a4!g11a511avh11aw!g11ax11bnh11bo!g11bp11cfh11cg!g11ch11d7h11d8!g11d911dzh11e0!g11e111erh11es!g11et11fjh11fk!g11fl11gbh11gc!g11gd11h3h11h4!g11h511hvh11hw!g11hx11inh11io!g11ip11jfh11jg!g11jh11k7h11k8!g11k911kzh11l0!g11l111lrh11ls!g11lt11mjh11mk!g11ml11nbh11nc!g11nd11o3h11o4!g11o511ovh11ow!g11ox11pnh11po!g11pp11qfh11qg!g11qh11r7h11r8!g11r911rzh11s0!g11s111srh11ss!g11st11tjh11tk!g11tl11ubh11uc!g11ud11v3h11v4!g11v511vvh11vw!g11vx11wnh11wo!g11wp11xfh11xg!g11xh11y7h11y8!g11y911yzh11z0!g11z111zrh11zs!g11zt120jh120k!g120l121bh121c!g121d1223h1224!g1225122vh122w!g122x123nh123o!g123p124fh124g!g124h1257h1258!g1259125zh1260!g1261126rh126s!g126t127jh127k!g127l128bh128c!g128d1293h1294!g1295129vh129w!g129x12anh12ao!g12ap12bfh12bg!g12bh12c7h12c8!g12c912czh12d0!g12d112drh12ds!g12dt12ejh12ek!g12el12fbh12fc!g12fd12g3h12g4!g12g512gvh12gw!g12gx12hnh12ho!g12hp12ifh12ig!g12ih12j7h12j8!g12j912jzh12k0!g12k112krh12ks!g12kt12ljh12lk!g12ll12mbh12mc!g12md12n3h12n4!g12n512nvh12nw!g12nx12onh12oo!g12op12pfh12pg!g12ph12q7h12q8!g12q912qzh12r0!g12r112rrh12rs!g12rt12sjh12sk!g12sl12tbh12tc!g12td12u3h12u4!g12u512uvh12uw!g12ux12vnh12vo!g12vp12wfh12wg!g12wh12x7h12x8!g12x912xzh12y0!g12y112yrh12ys!g12yt12zjh12zk!g12zl130bh130c!g130d1313h1314!g1315131vh131w!g131x132nh132o!g132p133fh133g!g133h1347h1348!g1349134zh1350!g1351135rh135s!g135t136jh136k!g136l137bh137c!g137d1383h1384!g1385138vh138w!g138x139nh139o!g139p13afh13ag!g13ah13b7h13b8!g13b913bzh13c0!g13c113crh13cs!g13ct13djh13dk!g13dl13ebh13ec!g13ed13f3h13f4!g13f513fvh13fw!g13fx13gnh13go!g13gp13hfh13hg!g13hh13i7h13i8!g13i913izh13j0!g13j113jrh13js!g13jt13kjh13kk!g13kl13lbh13lc!g13ld13m3h13m4!g13m513mvh13mw!g13mx13nnh13no!g13np13ofh13og!g13oh13p7h13p8!g13p913pzh13q0!g13q113qrh13qs!g13qt13rjh13rk!g13rl13sbh13sc!g13sd13t3h13t4!g13t513tvh13tw!g13tx13unh13uo!g13up13vfh13vg!g13vh13w7h13w8!g13w913wzh13x0!g13x113xrh13xs!g13xt13yjh13yk!g13yl13zbh13zc!g13zd1403h1404!g1405140vh140w!g140x141nh141o!g141p142fh142g!g142h1437h1438!g1439143zh1440!g1441144rh144s!g144t145jh145k!g145l146bh146c!g146d1473h1474!g1475147vh147w!g147x148nh148o!g148p149fh149g!g149h14a7h14a8!g14a914azh14b0!g14b114brh14bs!g14bt14cjh14ck!g14cl14dbh14dc!g14dd14e3h14e4!g14e514evh14ew!g14ex14fnh14fo!g14fp14gfh14gg!g14gh14h7h14h8!g14h914hzh14i0!g14i114irh14is!g14it14jjh14jk!g14jl14kbh14kc!g14kd14l3h14l4!g14l514lvh14lw!g14lx14mnh14mo!g14mp14nfh14ng!g14nh14o7h14o8!g14o914ozh14p0!g14p114prh14ps!g14pt14qjh14qk!g14ql14rbh14rc!g14rd14s3h14s4!g14s514svh14sw!g14sx14tnh14to!g14tp14ufh14ug!g14uh14v7h14v8!g14v914vzh14w0!g14w114wrh14ws!g14wt14xjh14xk!g14xl14ybh14yc!g14yd14z3h14z4!g14z514zvh14zw!g14zx150nh150o!g150p151fh151g!g151h1527h1528!g1529152zh1530!g1531153rh153s!g153t154jh154k!g154l155bh155c!g155d1563h1564!g1565156vh156w!g156x157nh157o!g157p158fh158g!g158h1597h1598!g1599159zh15a0!g15a115arh15as!g15at15bjh15bk!g15bl15cbh15cc!g15cd15d3h15d4!g15d515dvh15dw!g15dx15enh15eo!g15ep15ffh15fg!g15fh15g7h15g8!g15g915gzh15h0!g15h115hrh15hs!g15ht15ijh15ik!g15il15jbh15jc!g15jd15k3h15k4!g15k515kvh15kw!g15kx15lnh15lo!g15lp15mfh15mg!g15mh15n7h15n8!g15n915nzh15o0!g15o115orh15os!g15ot15pjh15pk!g15pl15qbh15qc!g15qd15r3h15r4!g15r515rvh15rw!g15rx15snh15so!g15sp15tfh15tg!g15th15u7h15u8!g15u915uzh15v0!g15v115vrh15vs!g15vt15wjh15wk!g15wl15xbh15xc!g15xd15y3h15y4!g15y515yvh15yw!g15yx15znh15zo!g15zp160fh160g!g160h1617h1618!g1619161zh1620!g1621162rh162s!g162t163jh163k!g163l164bh164c!g164d1653h1654!g1655165vh165w!g165x166nh166o!g166p167fh167g!g167h1687h1688!g1689168zh1690!g1691169rh169s!g169t16ajh16ak!g16al16bbh16bc!g16bd16c3h16c4!g16c516cvh16cw!g16cx16dnh16do!g16dp16efh16eg!g16eh16f7h16f8!g16f916fzh16g0!g16g116grh16gs!g16gt16hjh16hk!g16hl16ibh16ic!g16id16j3h16j4!g16j516jvh16jw!g16jx16knh16ko!g16kp16lfh16ls16meW16mj16nvX16o01d6nI1d6o1dkve1dkw1dljI1dlp!U1dlq!A1dlr1dm0U1dm1!I1dm21dmeU1dmg1dmkU1dmm!U1dmo1dmpU1dmr1dmsU1dmu1dn3U1dn41e0tI1e0u!R1e0v!L1e1c1e63I1e64!K1e65!I1e681e6nA1e6o!N1e6p1e6qR1e6r1e6sN1e6t1e6uG1e6v!L1e6w!R1e6x!c1e741e7jA1e7k1e7oe1e7p!L1e7q!R1e7r!L1e7s!R1e7t!L1e7u!R1e7v!L1e7w!R1e7x!L1e7y!R1e7z!L1e80!R1e81!L1e82!R1e83!L1e84!R1e851e86e1e87!L1e88!R1e891e8fe1e8g!R1e8h!e1e8i!R1e8k1e8lY1e8m1e8nG1e8o!e1e8p!L1e8q!R1e8r!L1e8s!R1e8t!L1e8u!R1e8v1e92e1e94!e1e95!J1e96!K1e97!e1e9c1ed8I1edb!d1edd!G1ede1edfe1edg!J1edh!K1edi1edje1edk!L1edl!R1edm1edne1edo!R1edp!e1edq!R1edr1ee1e1ee21ee3Y1ee41ee6e1ee7!G1ee81eeye1eez!L1ef0!e1ef1!R1ef21efue1efv!L1efw!e1efx!R1efy!e1efz!L1eg01eg1R1eg2!L1eg31eg4R1eg5!Y1eg6!e1eg71eggY1egh1ehpe1ehq1ehrY1ehs1eime1eiq1eive1eiy1ej3e1ej61ejbe1eje1ejge1ejk!K1ejl!J1ejm1ejoe1ejp1ejqJ1ejs1ejyI1ek91ekbA1ekc!i1ekd1ereI1erk1ermB1err1eykI1eyl!A1f281f4gI1f4w!A1f4x1f91I1f921f96A1f9c1fa5I1fa7!B1fa81fbjI1fbk!B1fbl1fh9I1fhc1fhlQ1fhs1g7pI1g7r!B1g7s1gd7I1gdb!B1gdc1gjkI1gjl1gjnA1gjp1gjqA1gjw1gjzA1gk01gl1I1gl41gl6A1glb!A1glc1glkI1gls1glzB1gm01gpwI1gpx1gpyA1gq31gq7I1gq81gqdB1gqe!c1gqo1gs5I1gs91gsfB1gsg1h5vI1h5w1h5zA1h681h6hQ1heo1hgpI1hgr1hgsA1hgt!B1hgw1hl1I1hl21hlcA1hld1hpyI1hq81hqaA1hqb1hrrI1hrs1hs6A1hs71hs8B1hs91ht1I1ht21htbQ1htr1htuA1htv1hv3I1hv41hveA1hvf1hvhI1hvi1hvlB1hvx1hwoI1hww1hx5Q1hxc1hxeA1hxf1hyeI1hyf1hysA1hyu1hz3Q1hz41hz7B1hz8!I1hz91hzaA1hzb1i0iI1i0j!A1i0k!I1i0l!T1i0m!I1i0w1i0yA1i0z1i2aI1i2b1i2oA1i2p1i2sI1i2t1i2uB1i2v!I1i2w!B1i2x1i30A1i31!I1i321i33A1i341i3dQ1i3e!I1i3f!T1i3g!I1i3h1i3jB1i3l1i5nI1i5o1i5zA1i601i61B1i62!I1i631i64B1i65!I1i66!A1i801i94I1i95!B1i9c1iamI1ian1iayA1ib41ibdQ1ibk1ibnA1ibp1id5I1id71id8A1id9!I1ida1idgA1idj1idkA1idn1idpA1ids!I1idz!A1ie51ie9I1iea1iebA1iee1iekA1ieo1iesA1iio1ik4I1ik51ikmA1ikn1ikqI1ikr1ikuB1ikv!I1ikw1il5Q1il61il7B1il9!I1ila!A1ilb1injI1ink1io3A1io41io7I1iog1iopQ1itc1iumI1iun1iutA1iuw1iv4A1iv5!T1iv61iv7B1iv81iv9G1iva1ivcI1ivd1ivrB1ivs1ivvI1ivw1ivxA1iww1iy7I1iy81iyoA1iyp1iyqB1iyr1iysI1iz41izdQ1izk1izwT1j0g1j1mI1j1n1j1zA1j20!I1j281j2hQ1j401j57I1j5c1j5lQ1j5m1j5nI1j5o1j5qB1j5r1jcbI1jcc1jcqA1jcr1jhbI1jhc1jhlQ1jhm1jjjI1jjk1jjpA1jjr1jjsA1jjv1jjyA1jjz!I1jk0!A1jk1!I1jk21jk3A1jk41jk6B1jkg1jkpQ1jmo1jo0I1jo11jo7A1joa1jogA1joh!I1joi!T1joj!I1jok!A1jpc!I1jpd1jpmA1jpn1jqqI1jqr1jqxA1jqy!I1jqz1jr2A1jr3!T1jr4!I1jr51jr8B1jr9!T1jra!I1jrb!A1jrk!I1jrl1jrvA1jrw1jt5I1jt61jtlA1jtm1jtoB1jtp!I1jtq1jtsT1jtt1jtuB1juo1k4uI1k4v1k52A1k541k5bA1k5c!I1k5d1k5hB1k5s1k61Q1k621k6kI1k6o!T1k6p!G1k6q1k7jI1k7m1k87A1k891k8mA1kao1kc0I1kc11kc6A1kca!A1kcc1kcdA1kcf1kclA1kcm!I1kcn!A1kcw1kd5Q1kdc1kehI1kei1kemA1keo1kepA1ker1kevA1kew!I1kf41kfdQ1ko01koiI1koj1komA1kon1kv0I1kv11kv4K1kv51kvlI1kvz!B1kw01lriI1lrk1lroB1ls01oifI1oig1oiiL1oij1oilR1oim1ojlI1ojm!R1ojn1ojpI1ojq!L1ojr!R1ojs!L1ojt!R1oju1oqgI1oqh!L1oqi1oqjR1oqk1oviI1ovk1ovqS1ovr!L1ovs!R1s001sctI1scu!L1scv!R1scw1zkuI1zkw1zl5Q1zla1zlbB1zo01zotI1zow1zp0A1zp1!B1zpc1zqnI1zqo1zquA1zqv1zqxB1zqy1zr7I1zr8!B1zr9!I1zrk1zrtQ1zrv20euI20ev20ewB20ex20juI20jz!A20k0!I20k120ljA20lr20luA20lv20m7I20o020o3Y20o4!S20og20ohA20ow25fbe25fk260ve260w26dxI26f426fce2dc02djye2dlc2dleY2dlw2dlzY2dm82dx7e2fpc2ftoI2ftp2ftqA2ftr!B2fts2ftvA2jnk2jxgI2jxh2jxlA2jxm2jxoI2jxp2jyaA2jyb2jycI2jyd2jyjA2jyk2jzdI2jze2jzhA2jzi2k3lI2k3m2k3oA2k3p2l6zI2l722l8fQ2l8g2lmnI2lmo2lo6A2lo72loaI2lob2lpoA2lpp2lpwI2lpx!A2lpy2lqbI2lqc!A2lqd2lqeI2lqf2lqiB2lqj!I2lqz2lr3A2lr52lrjA2mtc2mtiA2mtk2mu0A2mu32mu9A2mub2mucA2mue2muiA2n0g2n1oI2n1s2n1yA2n1z2n25I2n282n2hQ2n2m2ne3I2ne42ne7A2ne82nehQ2nen!J2oe82ojzI2ok02ok6A2olc2on7I2on82oneA2onf!I2onk2ontQ2ony2onzL2p9t2pbfI2pbg!K2pbh2pbjI2pbk!K2pbl2prlI2pz42q67e2q682q6kI2q6l2q6ne2q6o2q98I2q992q9be2q9c2qb0I2qb12qcle2qcm2qdbj2qdc2qo4e2qo5!f2qo62qore2qos2qotI2qou2qpge2qph2qpiI2qpj2qpne2qpo!I2qpp2qpte2qpu2qpwf2qpx2qpye2qpz!f2qq02qq1e2qq22qq4f2qq52qree2qrf2qrjk2qrk2qtde2qte2qtff2qtg2qthe2qti2qtsf2qtt2qude2que2quwf2qux2quze2qv0!f2qv12qv4e2qv52qv7f2qv8!e2qv92qvbf2qvc2qvie2qvj!f2qvk!e2qvl!f2qvm2qvze2qw0!I2qw1!e2qw2!I2qw3!e2qw4!I2qw52qw9e2qwa!f2qwb2qwee2qwf!I2qwg!e2qwh2qwiI2qwj2qyne2qyo2qyuI2qyv2qzae2qzb2qzoI2qzp2r01e2r022r0pI2r0q2r1ve2r1w2r1xf2r1y2r21e2r22!f2r232r2ne2r2o!f2r2p2r2se2r2t2r2uf2r2v2r4je2r4k2r4rI2r4s2r5fe2r5g2r5lI2r5m2r7oe2r7p2r7rf2r7s2r7ue2r7v2r7zf2r802r91I2r922r94H2r952r97Y2r982r9bI2r9c2raae2rab!f2rac2rare2ras2rauf2rav2rb3e2rb4!f2rb52rbfe2rbg!f2rbh2rcve2rcw2rg3I2rg42rgfe2rgg2risI2rit2rjze2rk02rkbI2rkc2rkfe2rkg2rlzI2rm02rm7e2rm82rmhI2rmi2rmne2rmo2rnrI2rns2rnze2ro02rotI2rou2rr3e2rr42rrfI2rrg!f2rrh2rrie2rrj!f2rrk2rrre2rrs2rrzf2rs02rs5e2rs6!f2rs72rsfe2rsg2rspf2rsq2rsre2rss2rsuf2rsv2ruee2ruf!f2rug2rw4e2rw52rw6f2rw7!e2rw82rw9f2rwa!e2rwb!f2rwc2rwse2rwt2rwvf2rww!e2rwx2rx9f2rxa2ry7e2ry82s0jI2s0k2s5be2s5c2sayI2sc02sc9Q2scg2t4te2t4w47p9e47pc5m9pejny9!Ajnz4jo1rAjo5cjobzAl2ionvnhI", 937, B.List_83u, t1);
        $._lineLookup = new A.UnicodePropertyLookup(A.LinkedHashMap_LinkedHashMap$_empty(type$.int, t1), type$.UnicodePropertyLookup_LineCharProperty);
      }
    },
    $signature: 0
  };
  A.DebugEngineInitializationState.prototype = {
    _enumToString$0() {
      return "DebugEngineInitializationState." + this._core$_name;
    }
  };
  A.initializeEngineServices_closure.prototype = {
    call$2(_, __) {
      var t1, _i;
      for (t1 = $._hotRestartListeners.length, _i = 0; _i < $._hotRestartListeners.length; $._hotRestartListeners.length === t1 || (0, A.throwConcurrentModificationError)($._hotRestartListeners), ++_i)
        $._hotRestartListeners[_i].call$0();
      A.checkNotNullable("OK", "result", type$.String);
      return A.Future_Future$value(new A.ServiceExtensionResponse(), type$.ServiceExtensionResponse);
    },
    $signature: 44
  };
  A.initializeEngineServices_initializeRendererCallback.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = $.$get$_renderer().initialize$0(0);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 57
  };
  A.FlutterEngineInitializer__staticInteropFactoryStub_closure.prototype = {
    call$1(config) {
      return A.futureToPromise(this.initializeEngine.call$1(config), type$.JavaScriptObject);
    },
    call$0() {
      return this.call$1(null);
    },
    "call*": "call$1",
    $requiredArgCount: 0,
    $defaultValues() {
      return [null];
    },
    $signature: 24
  };
  A.FlutterEngineInitializer__staticInteropFactoryStub_closure0.prototype = {
    call$0() {
      return A.futureToPromise(this.autoStart.call$0(), type$.JavaScriptObject);
    },
    $signature: 63
  };
  A.FlutterAppRunner__staticInteropFactoryStub_closure.prototype = {
    call$1(args) {
      return A.futureToPromise(this.runApp.call$1(args), type$.JavaScriptObject);
    },
    call$0() {
      return this.call$1(null);
    },
    "call*": "call$1",
    $requiredArgCount: 0,
    $defaultValues() {
      return [null];
    },
    $signature: 24
  };
  A.futureToPromise_closure.prototype = {
    call$2(resolver, rejecter) {
      this.future.then$1$2$onError(new A.futureToPromise__closure(resolver, this.T), new A.futureToPromise__closure0(rejecter), type$.void);
    },
    $signature: 64
  };
  A.futureToPromise__closure.prototype = {
    call$1(value) {
      var t1 = this.resolver;
      return t1.call.apply(t1, [null, value]);
    },
    $signature() {
      return this.T._eval$1("~(0)");
    }
  };
  A.futureToPromise__closure0.prototype = {
    call$1(error) {
      $.$get$printWarning().call$1("Rejecting promise with error: " + A.S(error));
      this.rejecter.call(null, null);
    },
    $signature: 67
  };
  A._kLogicalKeyToModifierGetter_closure.prototype = {
    call$1($event) {
      return $event._event.altKey;
    },
    $signature: 3
  };
  A._kLogicalKeyToModifierGetter_closure0.prototype = {
    call$1($event) {
      return $event._event.altKey;
    },
    $signature: 3
  };
  A._kLogicalKeyToModifierGetter_closure1.prototype = {
    call$1($event) {
      return $event._event.ctrlKey;
    },
    $signature: 3
  };
  A._kLogicalKeyToModifierGetter_closure2.prototype = {
    call$1($event) {
      return $event._event.ctrlKey;
    },
    $signature: 3
  };
  A._kLogicalKeyToModifierGetter_closure3.prototype = {
    call$1($event) {
      return $event._event.shiftKey;
    },
    $signature: 3
  };
  A._kLogicalKeyToModifierGetter_closure4.prototype = {
    call$1($event) {
      return $event._event.shiftKey;
    },
    $signature: 3
  };
  A._kLogicalKeyToModifierGetter_closure5.prototype = {
    call$1($event) {
      return $event._event.metaKey;
    },
    $signature: 3
  };
  A._kLogicalKeyToModifierGetter_closure6.prototype = {
    call$1($event) {
      return $event._event.metaKey;
    },
    $signature: 3
  };
  A._cached_closure.prototype = {
    call$0() {
      var t1 = this._box_0,
        t2 = t1.cache;
      return t2 == null ? t1.cache = this.body.call$0() : t2;
    },
    $signature() {
      return this.T._eval$1("0()");
    }
  };
  A.KeyboardBinding.prototype = {
    KeyboardBinding$_$0() {
      var _this = this;
      _this._addEventListener$2(0, "keydown", new A.KeyboardBinding$__closure(_this));
      _this._addEventListener$2(0, "keyup", new A.KeyboardBinding$__closure0(_this));
    },
    get$_converter() {
      var t1, t2, t3, _this = this,
        value = _this.__KeyboardBinding__converter_FI;
      if (value === $) {
        t1 = $.$get$_operatingSystem();
        t2 = type$.int;
        t3 = t1 === B.OperatingSystem_4 || t1 === B.OperatingSystem_0;
        t1 = A.KeyboardConverter__mappingFromPlatform(t1);
        _this.__KeyboardBinding__converter_FI !== $ && A.throwUnnamedLateFieldADI();
        value = _this.__KeyboardBinding__converter_FI = new A.KeyboardConverter(_this.get$_onKeyData(), t3, t1, A.LinkedHashMap_LinkedHashMap$_empty(t2, t2), A.LinkedHashMap_LinkedHashMap$_empty(t2, type$.void_Function));
      }
      return value;
    },
    _addEventListener$2(_, eventName, handler) {
      var wrappedHandler = type$.JavaScriptObject._as(A.allowInterop(new A.KeyboardBinding__addEventListener_loggedHandler(handler)));
      this._listeners.$indexSet(0, eventName, wrappedHandler);
      A.DomEventTargetExtension_addEventListener(self.window, eventName, wrappedHandler, true);
    },
    _onKeyData$1(data) {
      var t1 = {};
      t1.result = null;
      $.$get$EnginePlatformDispatcher__instance().invokeOnKeyData$2(data, new A.KeyboardBinding__onKeyData_closure(t1));
      t1 = t1.result;
      t1.toString;
      return t1;
    }
  };
  A.KeyboardBinding$__closure.prototype = {
    call$1(domEvent) {
      this.$this.get$_converter().handleEvent$1(new A.FlutterHtmlKeyboardEvent(domEvent));
    },
    $signature: 1
  };
  A.KeyboardBinding$__closure0.prototype = {
    call$1($event) {
      this.$this.get$_converter().handleEvent$1(new A.FlutterHtmlKeyboardEvent($event));
    },
    $signature: 1
  };
  A.KeyboardBinding__addEventListener_loggedHandler.prototype = {
    call$1($event) {
      var t1 = $.EngineSemanticsOwner__instance;
      if ((t1 == null ? $.EngineSemanticsOwner__instance = A.EngineSemanticsOwner$_() : t1).receiveGlobalEvent$1($event))
        this.handler.call$1($event);
    },
    $signature: 1
  };
  A.KeyboardBinding__onKeyData_closure.prototype = {
    call$1(handled) {
      this._box_0.result = false;
    },
    $signature: 22
  };
  A.FlutterHtmlKeyboardEvent.prototype = {};
  A.KeyboardConverter.prototype = {
    _scheduleAsyncEvent$3(duration, getData, callback) {
      var t2, t1 = {};
      t1.canceled = false;
      t2 = type$.void;
      A.Future_Future$delayed(duration, t2).then$1$1(new A.KeyboardConverter__scheduleAsyncEvent_closure(t1, this, callback, getData), t2);
      return new A.KeyboardConverter__scheduleAsyncEvent_closure0(t1);
    },
    _startGuardingKey$3(physicalKey, logicalKey, currentTimeStamp) {
      var cancelingCallback, t1, t2, _this = this;
      if (!_this.onDarwin)
        return;
      cancelingCallback = _this._scheduleAsyncEvent$3(B.Duration_2000000, new A.KeyboardConverter__startGuardingKey_closure(currentTimeStamp, physicalKey, logicalKey), new A.KeyboardConverter__startGuardingKey_closure0(_this, physicalKey));
      t1 = _this._keyGuards;
      t2 = t1.remove$1(0, physicalKey);
      if (t2 != null)
        t2.call$0();
      t1.$indexSet(0, physicalKey, cancelingCallback);
    },
    _handleEvent$1($event) {
      var timeStamp, t3, physicalKey, logicalKeyIsCharacter, logicalKey, isPhysicalDown, type, t4, lastLogicalRecord, nextLogicalRecord, character, _this = this, _null = null,
        t1 = $event._event,
        t2 = A.DomEventExtension_get_timeStamp(t1);
      t2.toString;
      timeStamp = A._eventTimeStampToDuration(t2);
      t2 = A.DomKeyboardEventExtension_get_key(t1);
      t2.toString;
      t3 = A.DomKeyboardEventExtension_get_code(t1);
      t3.toString;
      physicalKey = A.KeyboardConverter__getPhysicalCode(t3);
      logicalKeyIsCharacter = !(t2.length > 1 && t2.charCodeAt(0) < 127 && t2.charCodeAt(1) < 127);
      logicalKey = A._cached(new A.KeyboardConverter__handleEvent_closure(_this, t2, $event, logicalKeyIsCharacter, physicalKey), type$.int);
      if (t1.type !== "keydown")
        if (_this.onDarwin) {
          t3 = A.DomKeyboardEventExtension_get_code(t1);
          t3.toString;
          t3 = t3 === "CapsLock";
          isPhysicalDown = t3;
        } else
          isPhysicalDown = false;
      else
        isPhysicalDown = true;
      if (_this.onDarwin) {
        t3 = A.DomKeyboardEventExtension_get_code(t1);
        t3.toString;
        t3 = t3 === "CapsLock";
      } else
        t3 = false;
      if (t3) {
        _this._scheduleAsyncEvent$3(B.Duration_0, new A.KeyboardConverter__handleEvent_closure0(timeStamp, physicalKey, logicalKey), new A.KeyboardConverter__handleEvent_closure1(_this, physicalKey));
        type = B.KeyEventType_0;
      } else if (isPhysicalDown) {
        t3 = _this._pressingRecords;
        if (t3.$index(0, physicalKey) != null) {
          t4 = t1.repeat;
          if (t4 == null)
            t4 = _null;
          if (t4 === true)
            type = B.KeyEventType_2;
          else {
            t4 = _this._dispatchKeyData;
            t4.toString;
            t4.call$1(new A.KeyData(B.KeyEventType_1, physicalKey, logicalKey.call$0(), _null, true));
            t3.remove$1(0, physicalKey);
            type = B.KeyEventType_0;
          }
        } else
          type = B.KeyEventType_0;
      } else {
        if (_this._pressingRecords.$index(0, physicalKey) == null) {
          t1.preventDefault();
          return;
        }
        type = B.KeyEventType_1;
      }
      t3 = _this._pressingRecords;
      lastLogicalRecord = t3.$index(0, physicalKey);
      switch (type.index) {
        case 0:
          nextLogicalRecord = logicalKey.call$0();
          break;
        case 1:
          nextLogicalRecord = _null;
          break;
        case 2:
          nextLogicalRecord = lastLogicalRecord;
          break;
        default:
          nextLogicalRecord = _null;
      }
      t4 = nextLogicalRecord == null;
      if (t4)
        t3.remove$1(0, physicalKey);
      else
        t3.$indexSet(0, physicalKey, nextLogicalRecord);
      $.$get$_kLogicalKeyToModifierGetter().forEach$1(0, new A.KeyboardConverter__handleEvent_closure2(_this, logicalKey, $event, timeStamp));
      if (logicalKeyIsCharacter)
        if (!t4)
          _this._startGuardingKey$3(physicalKey, logicalKey.call$0(), timeStamp);
        else {
          t3 = _this._keyGuards.remove$1(0, physicalKey);
          if (t3 != null)
            t3.call$0();
        }
      if (logicalKeyIsCharacter)
        character = t2;
      else
        character = _null;
      t2 = lastLogicalRecord == null ? logicalKey.call$0() : lastLogicalRecord;
      t3 = type === B.KeyEventType_1 ? _null : character;
      if (_this._dispatchKeyData.call$1(new A.KeyData(type, physicalKey, t2, t3, false)))
        t1.preventDefault();
    },
    handleEvent$1($event) {
      var _this = this, t1 = {};
      t1.sentAnyEvents = false;
      _this._dispatchKeyData = new A.KeyboardConverter_handleEvent_closure(t1, _this);
      try {
        _this._handleEvent$1($event);
      } finally {
        if (!t1.sentAnyEvents)
          _this._dispatchKeyData.call$1(B.KeyData_EKW);
        _this._dispatchKeyData = null;
      }
    },
    synthesizeModifiersIfNeeded$5(altPressed, controlPressed, metaPressed, shiftPressed, eventTimestamp) {
      var _this = this,
        t1 = $.$get$_kPhysicalAltLeft(),
        t2 = $.$get$_kPhysicalAltRight(),
        t3 = $.$get$_kLogicalAltLeft();
      _this._synthesizeModifierIfNeeded$5(t1, t2, t3, altPressed ? B.KeyEventType_0 : B.KeyEventType_1, eventTimestamp);
      t1 = $.$get$kPhysicalControlLeft();
      t2 = $.$get$kPhysicalControlRight();
      t3 = $.$get$_kLogicalControlLeft();
      _this._synthesizeModifierIfNeeded$5(t1, t2, t3, controlPressed ? B.KeyEventType_0 : B.KeyEventType_1, eventTimestamp);
      t1 = $.$get$_kPhysicalMetaLeft();
      t2 = $.$get$_kPhysicalMetaRight();
      t3 = $.$get$_kLogicalMetaLeft();
      _this._synthesizeModifierIfNeeded$5(t1, t2, t3, metaPressed ? B.KeyEventType_0 : B.KeyEventType_1, eventTimestamp);
      t1 = $.$get$_kPhysicalShiftLeft();
      t2 = $.$get$_kPhysicalShiftRight();
      t3 = $.$get$_kLogicalShiftLeft();
      _this._synthesizeModifierIfNeeded$5(t1, t2, t3, shiftPressed ? B.KeyEventType_0 : B.KeyEventType_1, eventTimestamp);
    },
    _synthesizeModifierIfNeeded$5(physicalLeft, physicalRight, logicalLeft, type, domTimestamp) {
      var t2, _this = this,
        t1 = _this._pressingRecords,
        leftPressed = t1.containsKey$1(0, physicalLeft),
        rightPressed = t1.containsKey$1(0, physicalRight),
        alreadyPressed = leftPressed || rightPressed,
        synthesizeDown = type === B.KeyEventType_0 && !alreadyPressed,
        synthesizeUp = type === B.KeyEventType_1 && alreadyPressed;
      if (synthesizeDown) {
        A._eventTimeStampToDuration(domTimestamp);
        _this.performDispatchKeyData.call$1(new A.KeyData(B.KeyEventType_0, physicalLeft, logicalLeft, null, true));
        t1.$indexSet(0, physicalLeft, logicalLeft);
      }
      if (synthesizeUp && leftPressed) {
        t2 = t1.$index(0, physicalLeft);
        t2.toString;
        _this._synthesizeKeyUpEvent$3(domTimestamp, physicalLeft, t2);
      }
      if (synthesizeUp && rightPressed) {
        t1 = t1.$index(0, physicalRight);
        t1.toString;
        _this._synthesizeKeyUpEvent$3(domTimestamp, physicalRight, t1);
      }
    },
    _synthesizeKeyUpEvent$3(domTimestamp, physical, logical) {
      A._eventTimeStampToDuration(domTimestamp);
      this.performDispatchKeyData.call$1(new A.KeyData(B.KeyEventType_1, physical, logical, null, true));
      this._pressingRecords.remove$1(0, physical);
    }
  };
  A.KeyboardConverter__scheduleAsyncEvent_closure.prototype = {
    call$1(_) {
      var _this = this;
      if (!_this._box_0.canceled && !_this.$this._disposed) {
        _this.callback.call$0();
        _this.$this.performDispatchKeyData.call$1(_this.getData.call$0());
      }
    },
    $signature: 7
  };
  A.KeyboardConverter__scheduleAsyncEvent_closure0.prototype = {
    call$0() {
      this._box_0.canceled = true;
    },
    $signature: 0
  };
  A.KeyboardConverter__startGuardingKey_closure.prototype = {
    call$0() {
      return new A.KeyData(B.KeyEventType_1, this.physicalKey, this.logicalKey, null, true);
    },
    $signature: 23
  };
  A.KeyboardConverter__startGuardingKey_closure0.prototype = {
    call$0() {
      this.$this._pressingRecords.remove$1(0, this.physicalKey);
    },
    $signature: 0
  };
  A.KeyboardConverter__handleEvent_closure.prototype = {
    call$0() {
      var t2, result, localeLogicalKeys, t3, t4, _this = this,
        t1 = _this.eventKey,
        mappedLogicalKey = B.Map_OKwAg.$index(0, t1);
      if (mappedLogicalKey != null)
        return mappedLogicalKey;
      t2 = _this.event._event;
      if (B.Map_wskGA.containsKey$1(0, A.DomKeyboardEventExtension_get_key(t2))) {
        t1 = A.DomKeyboardEventExtension_get_key(t2);
        t1.toString;
        t1 = B.Map_wskGA.$index(0, t1);
        result = t1 == null ? null : t1[B.JSNumber_methods.toInt$0(t2.location)];
        result.toString;
        return result;
      }
      if (_this.logicalKeyIsCharacter) {
        localeLogicalKeys = _this.$this._mapping.getLogicalKey$3(A.DomKeyboardEventExtension_get_code(t2), A.DomKeyboardEventExtension_get_key(t2), B.JSNumber_methods.toInt$0(t2.keyCode));
        if (localeLogicalKeys != null)
          return localeLogicalKeys;
      }
      if (t1 === "Dead") {
        t1 = t2.altKey;
        t3 = t2.ctrlKey;
        t4 = t2.shiftKey;
        t2 = t2.metaKey;
        t1 = t1 ? 1073741824 : 0;
        t3 = t3 ? 268435456 : 0;
        t4 = t4 ? 536870912 : 0;
        t2 = t2 ? 2147483648 : 0;
        return _this.physicalKey + (t1 + t3 + t4 + t2) + 98784247808;
      }
      return B.JSString_methods.get$hashCode(t1) + 98784247808;
    },
    $signature: 14
  };
  A.KeyboardConverter__handleEvent_closure0.prototype = {
    call$0() {
      return new A.KeyData(B.KeyEventType_1, this.physicalKey, this.logicalKey.call$0(), null, true);
    },
    $signature: 23
  };
  A.KeyboardConverter__handleEvent_closure1.prototype = {
    call$0() {
      this.$this._pressingRecords.remove$1(0, this.physicalKey);
    },
    $signature: 0
  };
  A.KeyboardConverter__handleEvent_closure2.prototype = {
    call$2(testeeLogicalKey, getModifier) {
      var t1, t2, _this = this;
      if (J.$eq$(_this.logicalKey.call$0(), testeeLogicalKey))
        return;
      t1 = _this.$this;
      t2 = t1._pressingRecords;
      if (t2.containsValue$1(0, testeeLogicalKey) && !getModifier.call$1(_this.event))
        t2.removeWhere$1(t2, new A.KeyboardConverter__handleEvent__closure(t1, testeeLogicalKey, _this.timeStamp));
    },
    $signature: 83
  };
  A.KeyboardConverter__handleEvent__closure.prototype = {
    call$2(physicalKey, logicalRecord) {
      var t1 = this.testeeLogicalKey;
      if (logicalRecord !== t1)
        return false;
      this.$this._dispatchKeyData.call$1(new A.KeyData(B.KeyEventType_1, physicalKey, t1, null, true));
      return true;
    },
    $signature: 84
  };
  A.KeyboardConverter_handleEvent_closure.prototype = {
    call$1(data) {
      this._box_0.sentAnyEvents = true;
      return this.$this.performDispatchKeyData.call$1(data);
    },
    $signature: 21
  };
  A.ContextMenu.prototype = {
    disable$0(_) {
      if (!this._enabled)
        return;
      this._enabled = false;
      A.DomEventTargetExtension_addEventListener(this.element, "contextmenu", $.$get$preventDefaultListener(), null);
    },
    enable$0(_) {
      if (this._enabled)
        return;
      this._enabled = true;
      A.DomEventTargetExtension_removeEventListener(this.element, "contextmenu", $.$get$preventDefaultListener(), null);
    }
  };
  A.MouseCursor.prototype = {};
  A.preventDefaultListener_closure.prototype = {
    call$1($event) {
      $event.preventDefault();
    },
    $signature: 1
  };
  A.BrowserHistory.prototype = {
    get$_unsubscribe() {
      var t1 = this.__BrowserHistory__unsubscribe_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      return t1;
    },
    dispose$0() {
      var _this = this;
      if (_this._isDisposed || _this.get$urlStrategy() == null)
        return;
      _this._isDisposed = true;
      _this._unsubscribe$0();
    },
    exit$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$self = this;
      var $async$exit$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = $async$self.get$urlStrategy() != null ? 2 : 3;
              break;
            case 2:
              // then
              $async$goto = 4;
              return A._asyncAwait($async$self.tearDown$0(), $async$exit$0);
            case 4:
              // returning from await.
              $async$goto = 5;
              return A._asyncAwait($async$self.get$urlStrategy().go$1(0, -1), $async$exit$0);
            case 5:
              // returning from await.
            case 3:
              // join
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$exit$0, $async$completer);
    },
    get$currentPath() {
      var t1 = this.get$urlStrategy();
      t1 = t1 == null ? null : t1.getPath$0();
      return t1 == null ? "/" : t1;
    },
    get$currentState() {
      var t1 = this.get$urlStrategy();
      return t1 == null ? null : t1.getState$0(0);
    },
    _unsubscribe$0() {
      return this.get$_unsubscribe().call$0();
    }
  };
  A.MultiEntriesBrowserHistory.prototype = {
    MultiEntriesBrowserHistory$1$urlStrategy(urlStrategy) {
      var t1, _this = this,
        strategy = _this.urlStrategy;
      if (strategy == null)
        return;
      _this.__BrowserHistory__unsubscribe_A = strategy.addPopStateListener$1(_this.get$onPopState(_this));
      if (!_this._hasSerialCount$1(_this.get$currentState())) {
        t1 = type$.dynamic;
        strategy.replaceState$3(0, A.LinkedHashMap_LinkedHashMap$_literal(["serialCount", 0, "state", _this.get$currentState()], t1, t1), "flutter", _this.get$currentPath());
      }
      _this.__MultiEntriesBrowserHistory__lastSeenSerialCount_A = _this.get$_currentSerialCount();
    },
    get$_currentSerialCount() {
      if (this._hasSerialCount$1(this.get$currentState())) {
        var t1 = this.get$currentState();
        t1.toString;
        return B.JSNumber_methods.toInt$0(A._asDouble(J.$index$asx(type$.Map_dynamic_dynamic._as(t1), "serialCount")));
      }
      return 0;
    },
    _hasSerialCount$1(state) {
      return type$.Map_dynamic_dynamic._is(state) && J.$index$asx(state, "serialCount") != null;
    },
    setRouteName$3$replace$state(routeName, replace, state) {
      var t2, t3,
        t1 = this.urlStrategy;
      if (t1 != null) {
        t2 = type$.dynamic;
        t3 = this.__MultiEntriesBrowserHistory__lastSeenSerialCount_A;
        if (replace) {
          t3 === $ && A.throwUnnamedLateFieldNI();
          t2 = A.LinkedHashMap_LinkedHashMap$_literal(["serialCount", t3, "state", state], t2, t2);
          routeName.toString;
          t1.replaceState$3(0, t2, "flutter", routeName);
        } else {
          t3 === $ && A.throwUnnamedLateFieldNI();
          ++t3;
          this.__MultiEntriesBrowserHistory__lastSeenSerialCount_A = t3;
          t2 = A.LinkedHashMap_LinkedHashMap$_literal(["serialCount", t3, "state", state], t2, t2);
          routeName.toString;
          t1.pushState$3(0, t2, "flutter", routeName);
        }
      }
    },
    setRouteName$1(routeName) {
      return this.setRouteName$3$replace$state(routeName, false, null);
    },
    onPopState$1(_, state) {
      var t1, t2, t3, t4, _this = this;
      if (!_this._hasSerialCount$1(state)) {
        t1 = _this.urlStrategy;
        t1.toString;
        t2 = _this.__MultiEntriesBrowserHistory__lastSeenSerialCount_A;
        t2 === $ && A.throwUnnamedLateFieldNI();
        t3 = type$.dynamic;
        t1.replaceState$3(0, A.LinkedHashMap_LinkedHashMap$_literal(["serialCount", t2 + 1, "state", state], t3, t3), "flutter", _this.get$currentPath());
      }
      _this.__MultiEntriesBrowserHistory__lastSeenSerialCount_A = _this.get$_currentSerialCount();
      t1 = $.$get$EnginePlatformDispatcher__instance();
      t2 = _this.get$currentPath();
      type$.nullable_Map_dynamic_dynamic._as(state);
      t3 = state == null ? null : J.$index$asx(state, "state");
      t4 = type$.dynamic;
      t1.invokeOnPlatformMessage$3("flutter/navigation", B.C_JSONMethodCodec.encodeMethodCall$1(new A.MethodCall("pushRouteInformation", A.LinkedHashMap_LinkedHashMap$_literal(["location", t2, "state", t3], t4, t4))), new A.MultiEntriesBrowserHistory_onPopState_closure());
    },
    tearDown$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, backCount, t1, t2;
      var $async$tearDown$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$self.dispose$0();
              if ($async$self._isTornDown || $async$self.urlStrategy == null) {
                // goto return
                $async$goto = 1;
                break;
              }
              $async$self._isTornDown = true;
              backCount = $async$self.get$_currentSerialCount();
              $async$goto = backCount > 0 ? 3 : 4;
              break;
            case 3:
              // then
              $async$goto = 5;
              return A._asyncAwait($async$self.urlStrategy.go$1(0, -backCount), $async$tearDown$0);
            case 5:
              // returning from await.
            case 4:
              // join
              t1 = $async$self.get$currentState();
              t1.toString;
              type$.Map_dynamic_dynamic._as(t1);
              t2 = $async$self.urlStrategy;
              t2.toString;
              t2.replaceState$3(0, J.$index$asx(t1, "state"), "flutter", $async$self.get$currentPath());
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$tearDown$0, $async$completer);
    },
    get$urlStrategy() {
      return this.urlStrategy;
    }
  };
  A.MultiEntriesBrowserHistory_onPopState_closure.prototype = {
    call$1(_) {
    },
    $signature: 5
  };
  A.SingleEntryBrowserHistory.prototype = {
    SingleEntryBrowserHistory$1$urlStrategy(urlStrategy) {
      var path, _this = this,
        strategy = _this.urlStrategy;
      if (strategy == null)
        return;
      _this.__BrowserHistory__unsubscribe_A = strategy.addPopStateListener$1(_this.get$onPopState(_this));
      path = _this.get$currentPath();
      if (!A.SingleEntryBrowserHistory__isFlutterEntry(A.DomHistoryExtension_get_state(self.window.history))) {
        strategy.replaceState$3(0, A.LinkedHashMap_LinkedHashMap$_literal(["origin", true, "state", _this.get$currentState()], type$.String, type$.dynamic), "origin", "");
        _this._setupFlutterEntry$2$path(strategy, path);
      }
    },
    setRouteName$3$replace$state(routeName, replace, state) {
      var t1 = this.urlStrategy;
      if (t1 != null)
        this._setupFlutterEntry$3$path$replace(t1, routeName, true);
    },
    setRouteName$1(routeName) {
      return this.setRouteName$3$replace$state(routeName, false, null);
    },
    onPopState$1(_, state) {
      var t1, _this = this,
        _s18_ = "flutter/navigation";
      if (A.SingleEntryBrowserHistory__isOriginEntry(state)) {
        t1 = _this.urlStrategy;
        t1.toString;
        _this._setupFlutterEntry$1(t1);
        $.$get$EnginePlatformDispatcher__instance().invokeOnPlatformMessage$3(_s18_, B.C_JSONMethodCodec.encodeMethodCall$1(B.MethodCall_popRoute_null), new A.SingleEntryBrowserHistory_onPopState_closure());
      } else if (A.SingleEntryBrowserHistory__isFlutterEntry(state)) {
        t1 = _this._userProvidedRouteName;
        t1.toString;
        _this._userProvidedRouteName = null;
        $.$get$EnginePlatformDispatcher__instance().invokeOnPlatformMessage$3(_s18_, B.C_JSONMethodCodec.encodeMethodCall$1(new A.MethodCall("pushRoute", t1)), new A.SingleEntryBrowserHistory_onPopState_closure0());
      } else {
        _this._userProvidedRouteName = _this.get$currentPath();
        _this.urlStrategy.go$1(0, -1);
      }
    },
    _setupFlutterEntry$3$path$replace(strategy, path, replace) {
      var t1;
      if (path == null)
        path = this.get$currentPath();
      t1 = this._flutterState;
      if (replace)
        strategy.replaceState$3(0, t1, "flutter", path);
      else
        strategy.pushState$3(0, t1, "flutter", path);
    },
    _setupFlutterEntry$2$path(strategy, path) {
      return this._setupFlutterEntry$3$path$replace(strategy, path, false);
    },
    _setupFlutterEntry$1(strategy) {
      return this._setupFlutterEntry$3$path$replace(strategy, null, false);
    },
    tearDown$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, t1, t2;
      var $async$tearDown$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$self.dispose$0();
              if ($async$self._isTornDown || $async$self.urlStrategy == null) {
                // goto return
                $async$goto = 1;
                break;
              }
              $async$self._isTornDown = true;
              t1 = $async$self.urlStrategy;
              $async$goto = 3;
              return A._asyncAwait(t1.go$1(0, -1), $async$tearDown$0);
            case 3:
              // returning from await.
              t2 = $async$self.get$currentState();
              t2.toString;
              t1.replaceState$3(0, J.$index$asx(type$.Map_dynamic_dynamic._as(t2), "state"), "flutter", $async$self.get$currentPath());
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$tearDown$0, $async$completer);
    },
    get$urlStrategy() {
      return this.urlStrategy;
    }
  };
  A.SingleEntryBrowserHistory_onPopState_closure.prototype = {
    call$1(_) {
    },
    $signature: 5
  };
  A.SingleEntryBrowserHistory_onPopState_closure0.prototype = {
    call$1(_) {
    },
    $signature: 5
  };
  A.HighContrastSupport.prototype = {
    get$_onHighContrastChangeListener() {
      var result, _this = this,
        value = _this.__HighContrastSupport__onHighContrastChangeListener_FI;
      if (value === $) {
        result = type$.JavaScriptObject._as(A.allowInterop(_this.get$_onHighContrastChange()));
        _this.__HighContrastSupport__onHighContrastChangeListener_FI !== $ && A.throwUnnamedLateFieldADI();
        _this.__HighContrastSupport__onHighContrastChangeListener_FI = result;
        value = result;
      }
      return value;
    },
    _onHighContrastChange$1($event) {
      var t2, t3, _i,
        t1 = A.DomMediaQueryListEventExtension_get_matches($event);
      t1.toString;
      for (t2 = this._listeners, t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, A.throwConcurrentModificationError)(t2), ++_i)
        t2[_i].call$1(t1);
    }
  };
  A.EnginePlatformDispatcher.prototype = {
    dispose$0() {
      var t1, t2, _this = this;
      _this._brightnessMediaQuery.removeListener(_this._brightnessMediaQueryListener);
      _this._brightnessMediaQueryListener = null;
      t1 = _this._fontSizeObserver;
      if (t1 != null)
        t1.disconnect();
      _this._fontSizeObserver = null;
      t1 = _this._onLocaleChangedSubscription;
      if (t1 != null)
        t1.target.removeEventListener(t1.type, t1.listener);
      _this._onLocaleChangedSubscription = null;
      t1 = $.$get$HighContrastSupport_instance();
      t2 = t1._listeners;
      B.JSArray_methods.remove$1(t2, _this.get$_updateHighContrast());
      if (t2.length === 0)
        t1._highContrastMediaQuery.removeListener(t1.get$_onHighContrastChangeListener());
    },
    invokeOnMetricsChanged$0() {
    },
    invokeOnKeyData$2(data, callback) {
      callback.call$1(false);
    },
    invokeOnPlatformMessage$3($name, data, callback) {
      var t1;
      if ($name === "dev.flutter/channel-buffers")
        try {
          t1 = $.$get$channelBuffers();
          data.toString;
          t1.handleMessage$1(data);
        } finally {
          callback.call$1(null);
        }
      else
        $.$get$channelBuffers().push$3($name, data, callback);
    },
    _sendPlatformMessage$3($name, data, callback) {
      var decoded, cacheSizeInBytes, t1, t2, t3, t4, $navigator, $arguments, label, primaryColor, statusBarColor, value, dataMap, message, assertivenessIndex, _this = this, _null = null;
      switch ($name) {
        case "flutter/skia":
          decoded = B.C_JSONMethodCodec.decodeMethodCall$1(data);
          switch (decoded.method) {
            case "Skia.setResourceCacheMaxBytes":
              if ($.$get$_renderer() instanceof A.CanvasKitRenderer) {
                cacheSizeInBytes = A._asInt(decoded.$arguments);
                t1 = $.CanvasKitRenderer____instance._readField$0();
                if (t1.__CanvasKitRenderer_rasterizer_AI === $)
                  t1.__CanvasKitRenderer_rasterizer_AI = new A.Rasterizer(new A.CompositorContext(), A._setArrayType([], type$.JSArray_of_void_Function));
                t1 = $.SurfaceFactory__instance;
                if (t1 == null) {
                  t1 = $._configuration;
                  t1 = (t1 == null ? $._configuration = A.FlutterConfiguration$legacy(self.window.flutterConfiguration) : t1)._configuration;
                  if (t1 == null)
                    t1 = _null;
                  else {
                    t1 = t1.canvasKitMaximumSurfaces;
                    if (t1 == null)
                      t1 = _null;
                    t1 = t1 == null ? _null : B.JSNumber_methods.toInt$0(t1);
                  }
                  if (t1 == null)
                    t1 = 8;
                  t2 = A.DomDocumentExtension_createElement(self.document, "flt-canvas-container");
                  t3 = type$.JSArray_Surface;
                  t4 = A._setArrayType([], t3);
                  t3 = A._setArrayType([], t3);
                  Math.max(t1, 1);
                  t3 = $.SurfaceFactory__instance = new A.SurfaceFactory(new A.Surface(t2), t4, t3);
                  t1 = t3;
                }
                t1.baseSurface._skiaCacheBytes = cacheSizeInBytes;
              }
              _this.replyToPlatformMessage$2(callback, B.C_JSONMessageCodec.encodeMessage$1([A._setArrayType([true], type$.JSArray_bool)]));
              break;
          }
          return;
        case "flutter/assets":
          _this._handleFlutterAssetsMessage$2(B.C_Utf8Codec.decode$1(0, A.NativeUint8List_NativeUint8List$view(data.buffer, 0, _null)), callback);
          return;
        case "flutter/platform":
          decoded = B.C_JSONMethodCodec.decodeMethodCall$1(data);
          switch (decoded.method) {
            case "SystemNavigator.pop":
              _this.viewData.$index(0, 0).get$browserHistory().exit$0().then$1$1(new A.EnginePlatformDispatcher__sendPlatformMessage_closure(_this, callback), type$.Null);
              return;
            case "HapticFeedback.vibrate":
              t1 = _this._getHapticFeedbackDuration$1(A._asStringQ(decoded.$arguments));
              $navigator = self.window.navigator;
              if ("vibrate" in $navigator)
                $navigator.vibrate(t1);
              _this.replyToPlatformMessage$2(callback, B.C_JSONMessageCodec.encodeMessage$1([true]));
              return;
            case "SystemChrome.setApplicationSwitcherDescription":
              $arguments = type$.Map_of_String_and_nullable_Object._as(decoded.$arguments);
              t1 = J.getInterceptor$asx($arguments);
              label = A._asStringQ(t1.$index($arguments, "label"));
              if (label == null)
                label = "";
              primaryColor = A._asIntQ(t1.$index($arguments, "primaryColor"));
              if (primaryColor == null)
                primaryColor = 4278190080;
              t1 = self.document;
              t1.title = label;
              A.setThemeColor(new A.Color(primaryColor >>> 0));
              _this.replyToPlatformMessage$2(callback, B.C_JSONMessageCodec.encodeMessage$1([true]));
              return;
            case "SystemChrome.setSystemUIOverlayStyle":
              statusBarColor = A._asIntQ(J.$index$asx(type$.Map_of_String_and_nullable_Object._as(decoded.$arguments), "statusBarColor"));
              A.setThemeColor(statusBarColor == null ? _null : new A.Color(statusBarColor >>> 0));
              _this.replyToPlatformMessage$2(callback, B.C_JSONMessageCodec.encodeMessage$1([true]));
              return;
            case "SystemChrome.setPreferredOrientations":
              B.C_ScreenOrientation.setPreferredOrientation$1(type$.List_dynamic._as(decoded.$arguments)).then$1$1(new A.EnginePlatformDispatcher__sendPlatformMessage_closure0(_this, callback), type$.Null);
              return;
            case "SystemSound.play":
              _this.replyToPlatformMessage$2(callback, B.C_JSONMessageCodec.encodeMessage$1([true]));
              return;
            case "Clipboard.setData":
              new A.ClipboardMessageHandler(A.CopyToClipboardStrategy_CopyToClipboardStrategy(), A.PasteFromClipboardStrategy_PasteFromClipboardStrategy()).setDataMethodCall$2(decoded, callback);
              return;
            case "Clipboard.getData":
              new A.ClipboardMessageHandler(A.CopyToClipboardStrategy_CopyToClipboardStrategy(), A.PasteFromClipboardStrategy_PasteFromClipboardStrategy()).getDataMethodCall$1(callback);
              return;
            case "Clipboard.hasStrings":
              new A.ClipboardMessageHandler(A.CopyToClipboardStrategy_CopyToClipboardStrategy(), A.PasteFromClipboardStrategy_PasteFromClipboardStrategy()).hasStringsMethodCall$1(callback);
              return;
          }
          break;
        case "flutter/service_worker":
          t1 = self.window;
          t2 = self.document.createEvent("Event");
          t2.initEvent("flutter-first-frame", true, true);
          t1.dispatchEvent(t2);
          return;
        case "flutter/textinput":
          t1 = $.$get$textEditing();
          t1.get$channel(t1).handleTextInput$2(data, callback);
          return;
        case "flutter/contextmenu":
          switch (B.C_JSONMethodCodec.decodeMethodCall$1(data).method) {
            case "enableContextMenu":
              _this.viewData.$index(0, 0).get$contextMenu().enable$0(0);
              _this.replyToPlatformMessage$2(callback, B.C_JSONMessageCodec.encodeMessage$1([true]));
              return;
            case "disableContextMenu":
              _this.viewData.$index(0, 0).get$contextMenu().disable$0(0);
              _this.replyToPlatformMessage$2(callback, B.C_JSONMessageCodec.encodeMessage$1([true]));
              return;
          }
          return;
        case "flutter/mousecursor":
          decoded = B.C_StandardMethodCodec.decodeMethodCall$1(data);
          $arguments = type$.Map_dynamic_dynamic._as(decoded.$arguments);
          switch (decoded.method) {
            case "activateSystemCursor":
              t1 = _this.viewData.$index(0, 0);
              value = t1.__EngineFlutterWindow_mouseCursor_FI;
              if (value === $) {
                t2 = $._flutterViewEmbedder.__FlutterViewEmbedder__flutterViewElement_A;
                t2 === $ && A.throwUnnamedLateFieldNI();
                value !== $ && A.throwUnnamedLateFieldADI();
                value = t1.__EngineFlutterWindow_mouseCursor_FI = new A.MouseCursor(t2);
              }
              t1 = A._asStringQ(J.$index$asx($arguments, "kind"));
              t2 = value.element.style;
              t1 = B.Map_JwQic.$index(0, t1);
              A.DomCSSStyleDeclarationExtension_setProperty(t2, "cursor", t1 == null ? "default" : t1);
              break;
          }
          return;
        case "flutter/web_test_e2e":
          _this.replyToPlatformMessage$2(callback, B.C_JSONMessageCodec.encodeMessage$1([A._handleWebTestEnd2EndMessage(B.C_JSONMethodCodec, data)]));
          return;
        case "flutter/platform_views":
          t1 = _this._platformViewMessageHandler;
          if (t1 == null)
            t1 = _this._platformViewMessageHandler = new A.PlatformViewMessageHandler($.$get$PlatformViewManager_instance(), new A.EnginePlatformDispatcher__sendPlatformMessage_closure1());
          callback.toString;
          t1.handlePlatformViewCall$2(data, callback);
          return;
        case "flutter/accessibility":
          t1 = $._flutterViewEmbedder.__FlutterViewEmbedder__accessibilityAnnouncements_A;
          t1 === $ && A.throwUnnamedLateFieldNI();
          t2 = type$.Map_dynamic_dynamic;
          dataMap = t2._as(J.$index$asx(t2._as(B.C_StandardMessageCodec.decodeMessage$1(data)), "data"));
          message = A._asStringQ(J.$index$asx(dataMap, "message"));
          if (message != null && message.length !== 0) {
            assertivenessIndex = A.JsonExtensions_tryInt(dataMap, "assertiveness");
            t1.announce$2(message, B.List_Assertiveness_0_Assertiveness_1[assertivenessIndex == null ? 0 : assertivenessIndex]);
          }
          _this.replyToPlatformMessage$2(callback, B.C_StandardMessageCodec.encodeMessage$1(true));
          return;
        case "flutter/navigation":
          _this.viewData.$index(0, 0).handleNavigationMessage$1(data).then$1$1(new A.EnginePlatformDispatcher__sendPlatformMessage_closure2(_this, callback), type$.Null);
          return;
      }
      t1 = $.pluginMessageCallHandler;
      if (t1 != null) {
        t1.call$3($name, data, callback);
        return;
      }
      _this.replyToPlatformMessage$2(callback, _null);
    },
    _handleFlutterAssetsMessage$2(url, callback) {
      return this._handleFlutterAssetsMessage$body$EnginePlatformDispatcher(url, callback);
    },
    _handleFlutterAssetsMessage$body$EnginePlatformDispatcher(url, callback) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$handler = 1, $async$currentError, $async$self = this, response, assetData, error, exception, $async$exception, $async$temp1;
      var $async$_handleFlutterAssetsMessage$2 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$handler = 3;
              $async$temp1 = type$.HttpFetchResponse;
              $async$goto = 6;
              return A._asyncAwait(A.httpFetch($._assetManager.getAssetUrl$1(url)), $async$_handleFlutterAssetsMessage$2);
            case 6:
              // returning from await.
              response = $async$temp1._as($async$result);
              $async$goto = 7;
              return A._asyncAwait(response.get$payload().asByteBuffer$0(), $async$_handleFlutterAssetsMessage$2);
            case 7:
              // returning from await.
              assetData = $async$result;
              $async$self.replyToPlatformMessage$2(callback, A.NativeByteData_NativeByteData$view(assetData, 0, null));
              $async$handler = 1;
              // goto after finally
              $async$goto = 5;
              break;
            case 3:
              // catch
              $async$handler = 2;
              $async$exception = $async$currentError;
              error = A.unwrapException($async$exception);
              $.$get$printWarning().call$1("Error while trying to load an asset: " + A.S(error));
              $async$self.replyToPlatformMessage$2(callback, null);
              // goto after finally
              $async$goto = 5;
              break;
            case 2:
              // uncaught
              // goto rethrow
              $async$goto = 1;
              break;
            case 5:
              // after finally
              // implicit return
              return A._asyncReturn(null, $async$completer);
            case 1:
              // rethrow
              return A._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return A._asyncStartSync($async$_handleFlutterAssetsMessage$2, $async$completer);
    },
    _getHapticFeedbackDuration$1(type) {
      switch (type) {
        case "HapticFeedbackType.lightImpact":
          return 10;
        case "HapticFeedbackType.mediumImpact":
          return 20;
        case "HapticFeedbackType.heavyImpact":
          return 30;
        case "HapticFeedbackType.selectionClick":
          return 10;
        default:
          return 50;
      }
    },
    _addLocaleChangedListener$0() {
      var _this = this;
      if (_this._onLocaleChangedSubscription != null)
        return;
      _this.configuration = _this.configuration.copyWith$1$locales(A.EnginePlatformDispatcher_parseBrowserLanguages());
      _this._onLocaleChangedSubscription = A.DomSubscription$(self.window, "languagechange", new A.EnginePlatformDispatcher__addLocaleChangedListener_closure(_this));
    },
    _addFontSizeObserver$0() {
      var t2, t3, t4,
        t1 = new self.MutationObserver(A.allowInterop(new A.EnginePlatformDispatcher__addFontSizeObserver_closure(this)));
      this._fontSizeObserver = t1;
      t2 = self.document.documentElement;
      t2.toString;
      t3 = A._setArrayType(["style"], type$.JSArray_String);
      t4 = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
      t4.$indexSet(0, "attributes", true);
      t4.$indexSet(0, "attributeFilter", t3);
      t3 = A.jsify(t4);
      if (t3 == null)
        t3 = type$.Object._as(t3);
      t1.observe(t2, t3);
    },
    _updatePlatformBrightness$1(value) {
      var _null = null,
        t1 = this.configuration;
      if (t1.platformBrightness !== value) {
        this.configuration = t1.copyWith$1$platformBrightness(value);
        A.invoke(_null, _null);
        A.invoke(_null, _null);
      }
    },
    _updateHighContrast$1(value) {
      var t1 = this.configuration,
        t2 = t1.accessibilityFeatures;
      if ((t2.__engine$_index & 32) !== 0 !== value) {
        this.configuration = t1.copyWith$1$accessibilityFeatures(t2.copyWith$1$highContrast(value));
        A.invoke(null, null);
      }
    },
    _addBrightnessMediaQueryListener$0() {
      var t2, _this = this,
        t1 = _this._brightnessMediaQuery;
      _this._updatePlatformBrightness$1(t1.matches ? B.Brightness_0 : B.Brightness_1);
      t2 = type$.JavaScriptObject._as(A.allowInterop(new A.EnginePlatformDispatcher__addBrightnessMediaQueryListener_closure(_this)));
      _this._brightnessMediaQueryListener = t2;
      t1.addListener(t2);
    },
    replyToPlatformMessage$2(callback, data) {
      A.Future_Future$delayed(B.Duration_0, type$.void).then$1$1(new A.EnginePlatformDispatcher_replyToPlatformMessage_closure(callback, data), type$.Null);
    }
  };
  A.EnginePlatformDispatcher__sendPlatformMessage_closure.prototype = {
    call$1(_) {
      this.$this.replyToPlatformMessage$2(this.callback, B.C_JSONMessageCodec.encodeMessage$1([true]));
    },
    $signature: 7
  };
  A.EnginePlatformDispatcher__sendPlatformMessage_closure0.prototype = {
    call$1(success) {
      this.$this.replyToPlatformMessage$2(this.callback, B.C_JSONMessageCodec.encodeMessage$1([success]));
    },
    $signature: 13
  };
  A.EnginePlatformDispatcher__sendPlatformMessage_closure1.prototype = {
    call$1($content) {
      var t1 = $._flutterViewEmbedder.__FlutterViewEmbedder__glassPaneElement_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.append($content);
    },
    $signature: 1
  };
  A.EnginePlatformDispatcher__sendPlatformMessage_closure2.prototype = {
    call$1(handled) {
      var t1 = this.callback;
      if (handled)
        this.$this.replyToPlatformMessage$2(t1, B.C_JSONMessageCodec.encodeMessage$1([true]));
      else if (t1 != null)
        t1.call$1(null);
    },
    $signature: 13
  };
  A.EnginePlatformDispatcher__addLocaleChangedListener_closure.prototype = {
    call$1(_) {
      var t1 = this.$this;
      t1.configuration = t1.configuration.copyWith$1$locales(A.EnginePlatformDispatcher_parseBrowserLanguages());
      A.invoke(null, null);
    },
    $signature: 1
  };
  A.EnginePlatformDispatcher__addFontSizeObserver_closure.prototype = {
    call$2(mutations, _) {
      var t1, t2, t3, mutation, t4, fontSize, newTextScaleFactor, _null = null;
      for (t1 = J.get$iterator$ax(mutations), t2 = type$.JavaScriptObject, t3 = this.$this; t1.moveNext$0();) {
        mutation = t1.get$current(t1);
        mutation.toString;
        t2._as(mutation);
        t4 = mutation.type;
        if ((t4 == null ? _null : t4) === "attributes") {
          t4 = mutation.attributeName;
          t4 = (t4 == null ? _null : t4) === "style";
        } else
          t4 = false;
        if (t4) {
          t4 = self.document.documentElement;
          t4.toString;
          fontSize = A.parseFontSize(t4);
          newTextScaleFactor = (fontSize == null ? 16 : fontSize) / 16;
          t4 = t3.configuration;
          if (t4.textScaleFactor !== newTextScaleFactor) {
            t3.configuration = t4.copyWith$1$textScaleFactor(newTextScaleFactor);
            A.invoke(_null, _null);
            A.invoke(_null, _null);
          }
        }
      }
    },
    $signature: 40
  };
  A.EnginePlatformDispatcher__addBrightnessMediaQueryListener_closure.prototype = {
    call$1($event) {
      var t1 = A.DomMediaQueryListEventExtension_get_matches($event);
      t1.toString;
      t1 = t1 ? B.Brightness_0 : B.Brightness_1;
      this.$this._updatePlatformBrightness$1(t1);
    },
    $signature: 1
  };
  A.EnginePlatformDispatcher_replyToPlatformMessage_closure.prototype = {
    call$1(_) {
      var t1 = this.callback;
      if (t1 != null)
        t1.call$1(this.data);
    },
    $signature: 7
  };
  A.ViewConfiguration.prototype = {
    toString$0(_) {
      return A.getRuntimeTypeOfDartObject(this).toString$0(0) + "[view: null, geometry: " + B.C_Rect.toString$0(0) + "]";
    }
  };
  A.PlatformConfiguration.prototype = {
    copyWith$5$accessibilityFeatures$locales$platformBrightness$semanticsEnabled$textScaleFactor(accessibilityFeatures, locales, platformBrightness, semanticsEnabled, textScaleFactor) {
      var _this = this,
        t1 = accessibilityFeatures == null ? _this.accessibilityFeatures : accessibilityFeatures,
        t2 = semanticsEnabled == null ? _this.semanticsEnabled : semanticsEnabled,
        t3 = platformBrightness == null ? _this.platformBrightness : platformBrightness,
        t4 = textScaleFactor == null ? _this.textScaleFactor : textScaleFactor,
        t5 = locales == null ? _this.locales : locales;
      return new A.PlatformConfiguration(t1, false, t2, t3, t4, t5, _this.defaultRouteName, _this.systemFontFamily);
    },
    copyWith$1$accessibilityFeatures(accessibilityFeatures) {
      return this.copyWith$5$accessibilityFeatures$locales$platformBrightness$semanticsEnabled$textScaleFactor(accessibilityFeatures, null, null, null, null);
    },
    copyWith$1$locales(locales) {
      return this.copyWith$5$accessibilityFeatures$locales$platformBrightness$semanticsEnabled$textScaleFactor(null, locales, null, null, null);
    },
    copyWith$1$textScaleFactor(textScaleFactor) {
      return this.copyWith$5$accessibilityFeatures$locales$platformBrightness$semanticsEnabled$textScaleFactor(null, null, null, null, textScaleFactor);
    },
    copyWith$1$platformBrightness(platformBrightness) {
      return this.copyWith$5$accessibilityFeatures$locales$platformBrightness$semanticsEnabled$textScaleFactor(null, null, platformBrightness, null, null);
    },
    copyWith$1$semanticsEnabled(semanticsEnabled) {
      return this.copyWith$5$accessibilityFeatures$locales$platformBrightness$semanticsEnabled$textScaleFactor(null, null, null, semanticsEnabled, null);
    }
  };
  A.PlatformViewManager.prototype = {
    registerFactory$3$isVisible(viewType, factoryFunction, isVisible) {
      var t1 = this._factories;
      if (t1.containsKey$1(0, viewType))
        return false;
      t1.$indexSet(0, viewType, factoryFunction);
      if (!isVisible)
        this._invisibleViews.add$1(0, viewType);
      return true;
    },
    registerFactory$2(viewType, factoryFunction) {
      return this.registerFactory$3$isVisible(viewType, factoryFunction, true);
    },
    renderContent$3(viewType, viewId, params) {
      this._viewIdToType.$indexSet(0, viewId, viewType);
      return this.__engine$_contents.putIfAbsent$2(0, viewId, new A.PlatformViewManager_renderContent_closure(this, viewId, "flt-pv-slot-" + viewId, viewType, params));
    },
    _safelyRemoveSlottedElement$1(element) {
      var t1, tombstoneName, slot;
      if (element == null)
        return;
      t1 = $.$get$_browserEngine();
      if (t1 !== B.BrowserEngine_1) {
        element.remove();
        return;
      }
      t1 = element.getAttribute("slot");
      tombstoneName = "tombstone-" + A.S(t1 == null ? null : t1);
      slot = A.DomDocumentExtension_createElement(self.document, "slot");
      A.DomCSSStyleDeclarationExtension_setProperty(slot.style, "display", "none");
      t1 = A.jsify(tombstoneName);
      if (t1 == null)
        t1 = type$.Object._as(t1);
      slot.setAttribute("name", t1);
      t1 = $._flutterViewEmbedder.__FlutterViewEmbedder__glassPaneShadow_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.append(slot);
      t1 = A.jsify(tombstoneName);
      if (t1 == null)
        t1 = type$.Object._as(t1);
      element.setAttribute("slot", t1);
      element.remove();
      slot.remove();
    }
  };
  A.PlatformViewManager_renderContent_closure.prototype = {
    call$0() {
      var t2, t3, t4, $content, _this = this,
        wrapper = A.DomDocumentExtension_createElement(self.document, "flt-platform-view"),
        t1 = _this.viewId;
      wrapper.id = "flt-pv-" + t1;
      t2 = A.jsify(_this.slotName);
      if (t2 == null)
        t2 = type$.Object._as(t2);
      wrapper.setAttribute("slot", t2);
      t2 = _this.viewType;
      t3 = _this.$this._factories.$index(0, t2);
      t3.toString;
      t4 = type$.JavaScriptObject;
      if (type$.Object_Function_int_$named_params_nullable_Object._is(t3))
        $content = t4._as(t3.call$2$params(t1, _this.params));
      else {
        type$.Object_Function_int._as(t3);
        $content = t4._as(t3.call$1(t1));
      }
      if ($content.style.getPropertyValue("height").length === 0) {
        $.$get$printWarning().call$1("Height of Platform View type: [" + t2 + "] may not be set. Defaulting to `height: 100%`.\nSet `style.height` to any appropriate value to stop this message.");
        A.DomCSSStyleDeclarationExtension_setProperty($content.style, "height", "100%");
      }
      if ($content.style.getPropertyValue("width").length === 0) {
        $.$get$printWarning().call$1("Width of Platform View type: [" + t2 + "] may not be set. Defaulting to `width: 100%`.\nSet `style.width` to any appropriate value to stop this message.");
        A.DomCSSStyleDeclarationExtension_setProperty($content.style, "width", "100%");
      }
      wrapper.append($content);
      return wrapper;
    },
    $signature: 26
  };
  A.PlatformViewMessageHandler.prototype = {
    _createPlatformView$2(methodCall, callback) {
      var args = type$.Map_dynamic_dynamic._as(methodCall.$arguments),
        t1 = J.getInterceptor$asx(args),
        viewId = B.JSNumber_methods.toInt$0(A._asNum(t1.$index(args, "id"))),
        viewType = A._asString(t1.$index(args, "viewType")),
        params = t1.$index(args, "params");
      t1 = this._contentManager;
      if (!t1._factories.containsKey$1(0, viewType)) {
        callback.call$1(B.C_StandardMethodCodec.encodeErrorEnvelope$3$code$details$message("unregistered_view_type", "If you are the author of the PlatformView, make sure `registerViewFactory` is invoked.", "A HtmlElementView widget is trying to create a platform view with an unregistered type: <" + viewType + ">."));
        return;
      }
      if (t1.__engine$_contents.containsKey$1(0, viewId)) {
        callback.call$1(B.C_StandardMethodCodec.encodeErrorEnvelope$3$code$details$message("recreating_view", "view id: " + viewId, "trying to create an already created view"));
        return;
      }
      this._contentHandler.call$1(t1.renderContent$3(viewType, viewId, params));
      callback.call$1(B.C_StandardMethodCodec.encodeSuccessEnvelope$1(null));
    },
    handlePlatformViewCall$2(data, callback) {
      var t1,
        decoded = B.C_StandardMethodCodec.decodeMethodCall$1(data);
      switch (decoded.method) {
        case "create":
          this._createPlatformView$2(decoded, callback);
          return;
        case "dispose":
          t1 = this._contentManager;
          t1._safelyRemoveSlottedElement$1(t1.__engine$_contents.remove$1(0, A._asInt(decoded.$arguments)));
          callback.call$1(B.C_StandardMethodCodec.encodeSuccessEnvelope$1(null));
          return;
      }
      callback.call$1(null);
    }
  };
  A.SafariPointerEventWorkaround.prototype = {
    workAroundMissingPointerEvents$0() {
      A.DomEventTargetExtension_addEventListener(self.document, "touchstart", type$.JavaScriptObject._as(A.allowInterop(new A.SafariPointerEventWorkaround_workAroundMissingPointerEvents_closure())), null);
    }
  };
  A.SafariPointerEventWorkaround_workAroundMissingPointerEvents_closure.prototype = {
    call$1($event) {
    },
    $signature: 1
  };
  A.PointerBinding.prototype = {
    _createAdapter$0() {
      var t1, _this = this;
      if ("PointerEvent" in self.window) {
        t1 = new A._PointerAdapter(A.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$._ButtonSanitizer), A._setArrayType([], type$.JSArray__Listener), _this.flutterViewElement, _this.get$_onPointerData(), _this._pointerDataConverter, _this._keyboardConverter);
        t1.setup$0();
        return t1;
      }
      if ("TouchEvent" in self.window) {
        t1 = new A._TouchAdapter(A.LinkedHashSet_LinkedHashSet$_empty(type$.int), A._setArrayType([], type$.JSArray__Listener), _this.flutterViewElement, _this.get$_onPointerData(), _this._pointerDataConverter, _this._keyboardConverter);
        t1.setup$0();
        return t1;
      }
      if ("MouseEvent" in self.window) {
        t1 = new A._MouseAdapter(new A._ButtonSanitizer(), A._setArrayType([], type$.JSArray__Listener), _this.flutterViewElement, _this.get$_onPointerData(), _this._pointerDataConverter, _this._keyboardConverter);
        t1.setup$0();
        return t1;
      }
      throw A.wrapException(A.UnsupportedError$("This browser does not support pointer, touch, or mouse events."));
    },
    _onPointerData$1(data) {
      data.slice(0);
      $.$get$EnginePlatformDispatcher__instance();
      A.invoke1(null, null, new A.PointerDataPacket());
    }
  };
  A.PointerSupportDetector.prototype = {
    toString$0(_) {
      return "pointers:" + ("PointerEvent" in self.window) + ", touch:" + ("TouchEvent" in self.window) + ", mouse:" + ("MouseEvent" in self.window);
    }
  };
  A._Listener.prototype = {};
  A._BaseAdapter.prototype = {
    addEventListener$4$useCapture(_, target, eventName, handler, useCapture) {
      var jsHandler = type$.JavaScriptObject._as(A.allowInterop(new A._BaseAdapter_addEventListener_loggedHandler(handler)));
      A.DomEventTargetExtension_addEventListener(target, eventName, jsHandler, useCapture);
      this._listeners.push(new A._Listener(eventName, target, jsHandler, useCapture, false));
    },
    addEventListener$3($receiver, target, eventName, handler) {
      return this.addEventListener$4$useCapture($receiver, target, eventName, handler, true);
    }
  };
  A._BaseAdapter_addEventListener_loggedHandler.prototype = {
    call$1($event) {
      var t1 = $.EngineSemanticsOwner__instance;
      if ((t1 == null ? $.EngineSemanticsOwner__instance = A.EngineSemanticsOwner$_() : t1).receiveGlobalEvent$1($event))
        this.handler.call$1($event);
    },
    $signature: 1
  };
  A._WheelEventListenerMixin.prototype = {
    _isAcceleratedMouseWheelDelta$2(delta, wheelDelta) {
      if (wheelDelta == null)
        return false;
      return Math.abs(wheelDelta - -3 * delta) > 1;
    },
    _isTrackpadEvent$1($event) {
      var t2, t3, t4, deltaXChange, deltaYChange, _this = this,
        t1 = $.$get$_browserEngine();
      if (t1 === B.BrowserEngine_2)
        return false;
      if (_this._isAcceleratedMouseWheelDelta$2($event.deltaX, A.DomWheelEventExtension_get_wheelDeltaX($event)) || _this._isAcceleratedMouseWheelDelta$2($event.deltaY, A.DomWheelEventExtension_get_wheelDeltaY($event)))
        return false;
      if (!(B.JSNumber_methods.$mod($event.deltaX, 120) === 0 && B.JSNumber_methods.$mod($event.deltaY, 120) === 0)) {
        t1 = A.DomWheelEventExtension_get_wheelDeltaX($event);
        if (B.JSNumber_methods.$mod(t1 == null ? 1 : t1, 120) === 0) {
          t1 = A.DomWheelEventExtension_get_wheelDeltaY($event);
          t1 = B.JSNumber_methods.$mod(t1 == null ? 1 : t1, 120) === 0;
        } else
          t1 = false;
      } else
        t1 = true;
      if (t1) {
        t1 = $event.deltaX;
        t2 = _this._lastWheelEvent;
        t3 = t2 == null;
        t4 = t3 ? null : t2.deltaX;
        deltaXChange = Math.abs(t1 - (t4 == null ? 0 : t4));
        t1 = $event.deltaY;
        t4 = t3 ? null : t2.deltaY;
        deltaYChange = Math.abs(t1 - (t4 == null ? 0 : t4));
        if (!t3)
          if (!(deltaXChange === 0 && deltaYChange === 0))
            t1 = !(deltaXChange < 20 && deltaYChange < 20);
          else
            t1 = true;
        else
          t1 = true;
        if (t1) {
          if (A.DomEventExtension_get_timeStamp($event) != null)
            t1 = (t3 ? null : A.DomEventExtension_get_timeStamp(t2)) != null;
          else
            t1 = false;
          if (t1) {
            t1 = A.DomEventExtension_get_timeStamp($event);
            t1.toString;
            t2.toString;
            t2 = A.DomEventExtension_get_timeStamp(t2);
            t2.toString;
            if (t1 - t2 < 50 && _this._lastWheelEventWasTrackpad)
              return true;
          }
          return false;
        }
      }
      return true;
    },
    _convertWheelEventToPointerData$1($event) {
      var kind, deviceId, deltaX, deltaY, t1, probe, res, t2, data, offset, ignoreCtrlKey, t3, t4, t5, t6, _this = this;
      if (_this._isTrackpadEvent$1($event)) {
        kind = B.PointerDeviceKind_4;
        deviceId = -2;
      } else {
        kind = B.PointerDeviceKind_1;
        deviceId = -1;
      }
      deltaX = $event.deltaX;
      deltaY = $event.deltaY;
      switch (B.JSNumber_methods.toInt$0($event.deltaMode)) {
        case 1:
          t1 = $._WheelEventListenerMixin__defaultScrollLineHeight;
          if (t1 == null) {
            probe = A.DomDocumentExtension_createElement(self.document, "div");
            t1 = probe.style;
            A.DomCSSStyleDeclarationExtension_setProperty(t1, "font-size", "initial");
            A.DomCSSStyleDeclarationExtension_setProperty(t1, "display", "none");
            self.document.body.append(probe);
            t1 = A.DomWindowExtension_getComputedStyle(self.window, probe).getPropertyValue("font-size");
            if (B.JSString_methods.contains$1(t1, "px"))
              res = A.Primitives_parseDouble(A.stringReplaceAllUnchecked(t1, "px", ""));
            else
              res = null;
            probe.remove();
            t1 = $._WheelEventListenerMixin__defaultScrollLineHeight = res == null ? 16 : res / 4;
          }
          deltaX *= t1;
          deltaY *= t1;
          break;
        case 2:
          t1 = $.$get$window();
          deltaX *= t1.get$physicalSize()._dx;
          deltaY *= t1.get$physicalSize()._dy;
          break;
        case 0:
          t1 = $.$get$_operatingSystem();
          if (t1 === B.OperatingSystem_4) {
            t1 = $.$get$_browserEngine();
            if (t1 !== B.BrowserEngine_1)
              t1 = t1 === B.BrowserEngine_2;
            else
              t1 = true;
          } else
            t1 = false;
          if (t1) {
            $.$get$window();
            t1 = $.$get$EngineFlutterDisplay__instance();
            t2 = t1._debugDevicePixelRatioOverride;
            if (t2 == null) {
              t2 = self.window.devicePixelRatio;
              if (t2 === 0)
                t2 = 1;
            }
            deltaX *= t2;
            t1 = t1._debugDevicePixelRatioOverride;
            if (t1 == null) {
              t1 = self.window.devicePixelRatio;
              if (t1 === 0)
                t1 = 1;
            }
            deltaY *= t1;
          }
          break;
        default:
          break;
      }
      data = A._setArrayType([], type$.JSArray_PointerData);
      offset = A.computeEventOffsetToTarget($event, _this.flutterViewElement);
      t1 = $.$get$_operatingSystem();
      if (t1 === B.OperatingSystem_4) {
        t1 = $.KeyboardBinding__instance;
        t1 = t1 == null ? null : t1.get$_converter()._pressingRecords.containsKey$1(0, $.$get$kPhysicalControlLeft());
        if (t1 !== true) {
          t1 = $.KeyboardBinding__instance;
          t1 = t1 == null ? null : t1.get$_converter()._pressingRecords.containsKey$1(0, $.$get$kPhysicalControlRight());
          ignoreCtrlKey = t1 === true;
        } else
          ignoreCtrlKey = true;
      } else
        ignoreCtrlKey = false;
      t1 = $event.ctrlKey && !ignoreCtrlKey;
      t2 = _this._pointerDataConverter;
      t3 = offset._dx;
      if (t1) {
        t1 = A.DomEventExtension_get_timeStamp($event);
        t1.toString;
        t1 = A._BaseAdapter__eventTimeStampToDuration(t1);
        $.$get$window();
        t4 = $.$get$EngineFlutterDisplay__instance();
        t5 = t4._debugDevicePixelRatioOverride;
        if (t5 == null) {
          t5 = self.window.devicePixelRatio;
          if (t5 === 0)
            t5 = 1;
        }
        t4 = t4._debugDevicePixelRatioOverride;
        if (t4 == null) {
          t4 = self.window.devicePixelRatio;
          if (t4 === 0)
            t4 = 1;
        }
        t6 = A.DomMouseEventExtension_get_buttons($event);
        t6.toString;
        t2.convert$12$buttons$change$device$kind$physicalX$physicalY$pressure$pressureMax$scale$signalKind$timeStamp(data, B.JSNumber_methods.toInt$0(t6), B.PointerChange_3, deviceId, kind, t3 * t5, offset._dy * t4, 1, 1, Math.exp(-deltaY / 200), B.PointerSignalKind_3, t1);
      } else {
        t1 = A.DomEventExtension_get_timeStamp($event);
        t1.toString;
        t1 = A._BaseAdapter__eventTimeStampToDuration(t1);
        $.$get$window();
        t4 = $.$get$EngineFlutterDisplay__instance();
        t5 = t4._debugDevicePixelRatioOverride;
        if (t5 == null) {
          t5 = self.window.devicePixelRatio;
          if (t5 === 0)
            t5 = 1;
        }
        t4 = t4._debugDevicePixelRatioOverride;
        if (t4 == null) {
          t4 = self.window.devicePixelRatio;
          if (t4 === 0)
            t4 = 1;
        }
        t6 = A.DomMouseEventExtension_get_buttons($event);
        t6.toString;
        t2.convert$13$buttons$change$device$kind$physicalX$physicalY$pressure$pressureMax$scrollDeltaX$scrollDeltaY$signalKind$timeStamp(data, B.JSNumber_methods.toInt$0(t6), B.PointerChange_3, deviceId, kind, t3 * t5, offset._dy * t4, 1, 1, deltaX, deltaY, B.PointerSignalKind_1, t1);
      }
      _this._lastWheelEvent = $event;
      _this._lastWheelEventWasTrackpad = kind === B.PointerDeviceKind_4;
      return data;
    },
    _addWheelEventListener$1(handler) {
      var t1 = this.flutterViewElement,
        t2 = type$.JavaScriptObject._as(A.allowInterop(handler)),
        t3 = type$.Object,
        t4 = A.jsify(A.LinkedHashMap_LinkedHashMap$_literal(["capture", false, "passive", false], type$.String, t3));
      t3 = t4 == null ? t3._as(t4) : t4;
      t1.addEventListener("wheel", t2, t3);
      this._listeners.push(new A._Listener("wheel", t1, t2, false, true));
    },
    _handleWheelEvent$1(e) {
      this.__engine$_callback.call$1(this._convertWheelEventToPointerData$1(e));
      e.preventDefault();
    }
  };
  A._SanitizedDetails.prototype = {
    toString$0(_) {
      return A.getRuntimeTypeOfDartObject(this).toString$0(0) + "(change: " + this.change.toString$0(0) + ", buttons: " + this.buttons + ")";
    }
  };
  A._ButtonSanitizer.prototype = {
    sanitizeDownEvent$2$button$buttons(button, buttons) {
      var t1;
      if (this._pressedButtons !== 0)
        return this.sanitizeMoveEvent$1$buttons(buttons);
      t1 = (buttons === 0 && button > -1 ? A.convertButtonToButtons(button) : buttons) & 1073741823;
      this._pressedButtons = t1;
      return new A._SanitizedDetails(B.PointerChange_4, t1);
    },
    sanitizeMoveEvent$1$buttons(buttons) {
      var newPressedButtons = buttons & 1073741823,
        t1 = this._pressedButtons;
      if (t1 === 0 && newPressedButtons !== 0)
        return new A._SanitizedDetails(B.PointerChange_3, t1);
      this._pressedButtons = newPressedButtons;
      return new A._SanitizedDetails(newPressedButtons === 0 ? B.PointerChange_3 : B.PointerChange_5, newPressedButtons);
    },
    sanitizeMissingRightClickUp$1$buttons(buttons) {
      if (this._pressedButtons !== 0 && (buttons & 1073741823) === 0) {
        this._pressedButtons = 0;
        return new A._SanitizedDetails(B.PointerChange_6, 0);
      }
      return null;
    },
    sanitizeLeaveEvent$1$buttons(buttons) {
      if ((buttons & 1073741823) === 0) {
        this._pressedButtons = 0;
        return new A._SanitizedDetails(B.PointerChange_3, 0);
      }
      return null;
    },
    sanitizeUpEvent$1$buttons(buttons) {
      var t1;
      if (this._pressedButtons === 0)
        return null;
      t1 = this._pressedButtons = (buttons == null ? 0 : buttons) & 1073741823;
      if (t1 === 0)
        return new A._SanitizedDetails(B.PointerChange_6, t1);
      else
        return new A._SanitizedDetails(B.PointerChange_5, t1);
    }
  };
  A._PointerAdapter.prototype = {
    _ensureSanitizer$1(device) {
      return this._sanitizers.putIfAbsent$2(0, device, new A._PointerAdapter__ensureSanitizer_closure());
    },
    _removePointerIfUnhoverable$1($event) {
      if (A.DomPointerEventExtension_get_pointerType($event) === "touch")
        this._sanitizers.remove$1(0, A.DomPointerEventExtension_get_pointerId($event));
    },
    _addPointerEventListener$5$checkModifiers$useCapture(target, eventName, handler, checkModifiers, useCapture) {
      this.addEventListener$4$useCapture(0, target, eventName, new A._PointerAdapter__addPointerEventListener_closure(this, checkModifiers, handler), useCapture);
    },
    _addPointerEventListener$3(target, eventName, handler) {
      return this._addPointerEventListener$5$checkModifiers$useCapture(target, eventName, handler, true, true);
    },
    _addPointerEventListener$4$checkModifiers(target, eventName, handler, checkModifiers) {
      return this._addPointerEventListener$5$checkModifiers$useCapture(target, eventName, handler, checkModifiers, true);
    },
    setup$0() {
      var _this = this,
        t1 = _this.flutterViewElement;
      _this._addPointerEventListener$3(t1, "pointerdown", new A._PointerAdapter_setup_closure(_this));
      _this._addPointerEventListener$3(self.window, "pointermove", new A._PointerAdapter_setup_closure0(_this));
      _this._addPointerEventListener$5$checkModifiers$useCapture(t1, "pointerleave", new A._PointerAdapter_setup_closure1(_this), false, false);
      _this._addPointerEventListener$3(self.window, "pointerup", new A._PointerAdapter_setup_closure2(_this));
      _this._addPointerEventListener$4$checkModifiers(t1, "pointercancel", new A._PointerAdapter_setup_closure3(_this), false);
      _this._addWheelEventListener$1(new A._PointerAdapter_setup_closure4(_this));
    },
    _convertEventsToPointerData$3$data$details$event(data, details, $event) {
      var kind, t2, timeStamp, pressure, offset, t3, t4, t5, _this = this,
        t1 = A.DomPointerEventExtension_get_pointerType($event);
      t1.toString;
      kind = _this._pointerTypeToDeviceKind$1(t1);
      t1 = A.DomPointerEventExtension_get_tiltX($event);
      t1.toString;
      t2 = A.DomPointerEventExtension_get_tiltY($event);
      t2.toString;
      t1 = Math.abs(t1) > Math.abs(t2) ? A.DomPointerEventExtension_get_tiltX($event) : A.DomPointerEventExtension_get_tiltY($event);
      t1.toString;
      t2 = A.DomEventExtension_get_timeStamp($event);
      t2.toString;
      timeStamp = A._BaseAdapter__eventTimeStampToDuration(t2);
      pressure = $event.pressure;
      if (pressure == null)
        pressure = null;
      offset = A.computeEventOffsetToTarget($event, _this.flutterViewElement);
      t2 = _this._getPointerId$1($event);
      $.$get$window();
      t3 = $.$get$EngineFlutterDisplay__instance();
      t4 = t3._debugDevicePixelRatioOverride;
      if (t4 == null) {
        t4 = self.window.devicePixelRatio;
        if (t4 === 0)
          t4 = 1;
      }
      t3 = t3._debugDevicePixelRatioOverride;
      if (t3 == null) {
        t3 = self.window.devicePixelRatio;
        if (t3 === 0)
          t3 = 1;
      }
      t5 = pressure == null ? 0 : pressure;
      _this._pointerDataConverter.convert$12$buttons$change$device$kind$physicalX$physicalY$pressure$pressureMax$signalKind$tilt$timeStamp(data, details.buttons, details.change, t2, kind, offset._dx * t4, offset._dy * t3, t5, 1, B.PointerSignalKind_0, t1 / 180 * 3.141592653589793, timeStamp);
    },
    _expandEvents$1($event) {
      var t1, coalescedEvents;
      if ("getCoalescedEvents" in $event) {
        t1 = J.cast$1$0$ax($event.getCoalescedEvents(), type$.JavaScriptObject);
        coalescedEvents = new A.CastList(t1._source, t1.$ti._eval$1("CastList<1,JavaScriptObject>"));
        if (!coalescedEvents.get$isEmpty(coalescedEvents))
          return coalescedEvents;
      }
      return A._setArrayType([$event], type$.JSArray_JavaScriptObject);
    },
    _pointerTypeToDeviceKind$1(pointerType) {
      switch (pointerType) {
        case "mouse":
          return B.PointerDeviceKind_1;
        case "pen":
          return B.PointerDeviceKind_2;
        case "touch":
          return B.PointerDeviceKind_0;
        default:
          return B.PointerDeviceKind_5;
      }
    },
    _getPointerId$1($event) {
      var t1 = A.DomPointerEventExtension_get_pointerType($event);
      t1.toString;
      if (this._pointerTypeToDeviceKind$1(t1) === B.PointerDeviceKind_1)
        t1 = -1;
      else {
        t1 = A.DomPointerEventExtension_get_pointerId($event);
        t1.toString;
        t1 = B.JSNumber_methods.toInt$0(t1);
      }
      return t1;
    }
  };
  A._PointerAdapter__ensureSanitizer_closure.prototype = {
    call$0() {
      return new A._ButtonSanitizer();
    },
    $signature: 106
  };
  A._PointerAdapter__addPointerEventListener_closure.prototype = {
    call$1($event) {
      var t1, t2, t3, t4, t5;
      if (this.checkModifiers) {
        t1 = $event.getModifierState("Alt");
        t2 = $event.getModifierState("Control");
        t3 = $event.getModifierState("Meta");
        t4 = $event.getModifierState("Shift");
        t5 = A.DomEventExtension_get_timeStamp($event);
        t5.toString;
        this.$this._keyboardConverter.synthesizeModifiersIfNeeded$5(t1, t2, t3, t4, t5);
      }
      this.handler.call$1($event);
    },
    $signature: 1
  };
  A._PointerAdapter_setup_closure.prototype = {
    call$1($event) {
      var up, t3,
        t1 = this.$this,
        device = t1._getPointerId$1($event),
        pointerData = A._setArrayType([], type$.JSArray_PointerData),
        sanitizer = t1._ensureSanitizer$1(device),
        t2 = A.DomMouseEventExtension_get_buttons($event);
      t2.toString;
      up = sanitizer.sanitizeMissingRightClickUp$1$buttons(B.JSNumber_methods.toInt$0(t2));
      if (up != null)
        t1._convertEventsToPointerData$3$data$details$event(pointerData, up, $event);
      t2 = B.JSNumber_methods.toInt$0($event.button);
      t3 = A.DomMouseEventExtension_get_buttons($event);
      t3.toString;
      t1._convertEventsToPointerData$3$data$details$event(pointerData, sanitizer.sanitizeDownEvent$2$button$buttons(t2, B.JSNumber_methods.toInt$0(t3)), $event);
      t1.__engine$_callback.call$1(pointerData);
    },
    $signature: 2
  };
  A._PointerAdapter_setup_closure0.prototype = {
    call$1($event) {
      var t2, t3, t4, up,
        t1 = this.$this,
        sanitizer = t1._ensureSanitizer$1(t1._getPointerId$1($event)),
        pointerData = A._setArrayType([], type$.JSArray_PointerData);
      for (t2 = J.get$iterator$ax(t1._expandEvents$1($event)); t2.moveNext$0();) {
        t3 = t2.get$current(t2);
        t4 = t3.buttons;
        if (t4 == null)
          t4 = null;
        t4.toString;
        up = sanitizer.sanitizeMissingRightClickUp$1$buttons(B.JSNumber_methods.toInt$0(t4));
        if (up != null)
          t1._convertEventsToPointerData$3$data$details$event(pointerData, up, t3);
        t4 = t3.buttons;
        if (t4 == null)
          t4 = null;
        t4.toString;
        t1._convertEventsToPointerData$3$data$details$event(pointerData, sanitizer.sanitizeMoveEvent$1$buttons(B.JSNumber_methods.toInt$0(t4)), t3);
      }
      t1.__engine$_callback.call$1(pointerData);
    },
    $signature: 2
  };
  A._PointerAdapter_setup_closure1.prototype = {
    call$1($event) {
      var details,
        t1 = this.$this,
        sanitizer = t1._ensureSanitizer$1(t1._getPointerId$1($event)),
        pointerData = A._setArrayType([], type$.JSArray_PointerData),
        t2 = A.DomMouseEventExtension_get_buttons($event);
      t2.toString;
      details = sanitizer.sanitizeLeaveEvent$1$buttons(B.JSNumber_methods.toInt$0(t2));
      if (details != null) {
        t1._convertEventsToPointerData$3$data$details$event(pointerData, details, $event);
        t1.__engine$_callback.call$1(pointerData);
      }
    },
    $signature: 2
  };
  A._PointerAdapter_setup_closure2.prototype = {
    call$1($event) {
      var pointerData, t3, details,
        t1 = this.$this,
        device = t1._getPointerId$1($event),
        t2 = t1._sanitizers;
      if (t2.containsKey$1(0, device)) {
        pointerData = A._setArrayType([], type$.JSArray_PointerData);
        t2 = t2.$index(0, device);
        t2.toString;
        t3 = A.DomMouseEventExtension_get_buttons($event);
        details = t2.sanitizeUpEvent$1$buttons(t3 == null ? null : B.JSNumber_methods.toInt$0(t3));
        t1._removePointerIfUnhoverable$1($event);
        if (details != null) {
          t1._convertEventsToPointerData$3$data$details$event(pointerData, details, $event);
          t1.__engine$_callback.call$1(pointerData);
        }
      }
    },
    $signature: 2
  };
  A._PointerAdapter_setup_closure3.prototype = {
    call$1($event) {
      var pointerData,
        t1 = this.$this,
        device = t1._getPointerId$1($event),
        t2 = t1._sanitizers;
      if (t2.containsKey$1(0, device)) {
        pointerData = A._setArrayType([], type$.JSArray_PointerData);
        t2 = t2.$index(0, device);
        t2.toString;
        t2._pressedButtons = 0;
        t1._removePointerIfUnhoverable$1($event);
        t1._convertEventsToPointerData$3$data$details$event(pointerData, new A._SanitizedDetails(B.PointerChange_0, 0), $event);
        t1.__engine$_callback.call$1(pointerData);
      }
    },
    $signature: 2
  };
  A._PointerAdapter_setup_closure4.prototype = {
    call$1($event) {
      this.$this._handleWheelEvent$1($event);
    },
    $signature: 1
  };
  A._TouchAdapter.prototype = {
    _addTouchEventListener$3(target, eventName, handler) {
      this.addEventListener$3(0, target, eventName, new A._TouchAdapter__addTouchEventListener_closure(this, true, handler));
    },
    setup$0() {
      var _this = this,
        t1 = _this.flutterViewElement;
      _this._addTouchEventListener$3(t1, "touchstart", new A._TouchAdapter_setup_closure(_this));
      _this._addTouchEventListener$3(t1, "touchmove", new A._TouchAdapter_setup_closure0(_this));
      _this._addTouchEventListener$3(t1, "touchend", new A._TouchAdapter_setup_closure1(_this));
      _this._addTouchEventListener$3(t1, "touchcancel", new A._TouchAdapter_setup_closure2(_this));
    },
    _convertEventToPointerData$5$change$data$pressed$timeStamp$touch(change, data, pressed, timeStamp, touch) {
      var t2, t3, t4, t5, t6,
        t1 = A.DomTouchExtension_get_identifier(touch);
      t1.toString;
      t1 = B.JSNumber_methods.toInt$0(t1);
      t2 = touch.clientX;
      $.$get$window();
      t3 = $.$get$EngineFlutterDisplay__instance();
      t4 = t3._debugDevicePixelRatioOverride;
      if (t4 == null) {
        t4 = self.window.devicePixelRatio;
        if (t4 === 0)
          t4 = 1;
      }
      t5 = touch.clientY;
      t3 = t3._debugDevicePixelRatioOverride;
      if (t3 == null) {
        t3 = self.window.devicePixelRatio;
        if (t3 === 0)
          t3 = 1;
      }
      t6 = pressed ? 1 : 0;
      this._pointerDataConverter.convert$10$buttons$change$device$physicalX$physicalY$pressure$pressureMax$signalKind$timeStamp(data, t6, change, t1, t2 * t4, t5 * t3, 1, 1, B.PointerSignalKind_0, timeStamp);
    }
  };
  A._TouchAdapter__addTouchEventListener_closure.prototype = {
    call$1($event) {
      var t1 = $event.altKey,
        t2 = $event.ctrlKey,
        t3 = $event.metaKey,
        t4 = $event.shiftKey,
        t5 = A.DomEventExtension_get_timeStamp($event);
      t5.toString;
      this.$this._keyboardConverter.synthesizeModifiersIfNeeded$5(t1, t2, t3, t4, t5);
      this.handler.call$1($event);
    },
    $signature: 1
  };
  A._TouchAdapter_setup_closure.prototype = {
    call$1($event) {
      var timeStamp, pointerData, t2, t3, t4, t5, t6,
        t1 = A.DomEventExtension_get_timeStamp($event);
      t1.toString;
      timeStamp = A._BaseAdapter__eventTimeStampToDuration(t1);
      pointerData = A._setArrayType([], type$.JSArray_PointerData);
      for (t1 = type$.JavaScriptObject, t2 = type$._DomTouchListWrapper_JavaScriptObject, t2 = A.CastIterable_CastIterable(new A._DomTouchListWrapper($event.changedTouches, t2), t2._eval$1("Iterable.E"), t1), t1 = A.CastIterable_CastIterable(t2._source, A._instanceType(t2)._precomputed1, t1), t2 = t1._source, t2 = t2.get$iterator(t2), t1 = A._instanceType(t1), t1 = t1._eval$1("@<1>")._bind$1(t1._rest[1])._rest[1], t3 = this.$this; t2.moveNext$0();) {
        t4 = t1._as(t2.get$current(t2));
        t5 = t4.identifier;
        if (t5 == null)
          t5 = null;
        t5.toString;
        t6 = t3._pressedTouches;
        if (!t6.contains$1(0, B.JSNumber_methods.toInt$0(t5))) {
          t5 = t4.identifier;
          if (t5 == null)
            t5 = null;
          t5.toString;
          t6.add$1(0, B.JSNumber_methods.toInt$0(t5));
          t3._convertEventToPointerData$5$change$data$pressed$timeStamp$touch(B.PointerChange_4, pointerData, true, timeStamp, t4);
        }
      }
      t3.__engine$_callback.call$1(pointerData);
    },
    $signature: 2
  };
  A._TouchAdapter_setup_closure0.prototype = {
    call$1($event) {
      var t1, timeStamp, pointerData, t2, t3, t4, t5;
      $event.preventDefault();
      t1 = A.DomEventExtension_get_timeStamp($event);
      t1.toString;
      timeStamp = A._BaseAdapter__eventTimeStampToDuration(t1);
      pointerData = A._setArrayType([], type$.JSArray_PointerData);
      for (t1 = type$.JavaScriptObject, t2 = type$._DomTouchListWrapper_JavaScriptObject, t2 = A.CastIterable_CastIterable(new A._DomTouchListWrapper($event.changedTouches, t2), t2._eval$1("Iterable.E"), t1), t1 = A.CastIterable_CastIterable(t2._source, A._instanceType(t2)._precomputed1, t1), t2 = t1._source, t2 = t2.get$iterator(t2), t1 = A._instanceType(t1), t1 = t1._eval$1("@<1>")._bind$1(t1._rest[1])._rest[1], t3 = this.$this; t2.moveNext$0();) {
        t4 = t1._as(t2.get$current(t2));
        t5 = t4.identifier;
        if (t5 == null)
          t5 = null;
        t5.toString;
        if (t3._pressedTouches.contains$1(0, B.JSNumber_methods.toInt$0(t5)))
          t3._convertEventToPointerData$5$change$data$pressed$timeStamp$touch(B.PointerChange_5, pointerData, true, timeStamp, t4);
      }
      t3.__engine$_callback.call$1(pointerData);
    },
    $signature: 2
  };
  A._TouchAdapter_setup_closure1.prototype = {
    call$1($event) {
      var t1, timeStamp, pointerData, t2, t3, t4, t5, t6;
      $event.preventDefault();
      t1 = A.DomEventExtension_get_timeStamp($event);
      t1.toString;
      timeStamp = A._BaseAdapter__eventTimeStampToDuration(t1);
      pointerData = A._setArrayType([], type$.JSArray_PointerData);
      for (t1 = type$.JavaScriptObject, t2 = type$._DomTouchListWrapper_JavaScriptObject, t2 = A.CastIterable_CastIterable(new A._DomTouchListWrapper($event.changedTouches, t2), t2._eval$1("Iterable.E"), t1), t1 = A.CastIterable_CastIterable(t2._source, A._instanceType(t2)._precomputed1, t1), t2 = t1._source, t2 = t2.get$iterator(t2), t1 = A._instanceType(t1), t1 = t1._eval$1("@<1>")._bind$1(t1._rest[1])._rest[1], t3 = this.$this; t2.moveNext$0();) {
        t4 = t1._as(t2.get$current(t2));
        t5 = t4.identifier;
        if (t5 == null)
          t5 = null;
        t5.toString;
        t6 = t3._pressedTouches;
        if (t6.contains$1(0, B.JSNumber_methods.toInt$0(t5))) {
          t5 = t4.identifier;
          if (t5 == null)
            t5 = null;
          t5.toString;
          t6.remove$1(0, B.JSNumber_methods.toInt$0(t5));
          t3._convertEventToPointerData$5$change$data$pressed$timeStamp$touch(B.PointerChange_6, pointerData, false, timeStamp, t4);
        }
      }
      t3.__engine$_callback.call$1(pointerData);
    },
    $signature: 2
  };
  A._TouchAdapter_setup_closure2.prototype = {
    call$1($event) {
      var timeStamp, pointerData, t2, t3, t4, t5, t6,
        t1 = A.DomEventExtension_get_timeStamp($event);
      t1.toString;
      timeStamp = A._BaseAdapter__eventTimeStampToDuration(t1);
      pointerData = A._setArrayType([], type$.JSArray_PointerData);
      for (t1 = type$.JavaScriptObject, t2 = type$._DomTouchListWrapper_JavaScriptObject, t2 = A.CastIterable_CastIterable(new A._DomTouchListWrapper($event.changedTouches, t2), t2._eval$1("Iterable.E"), t1), t1 = A.CastIterable_CastIterable(t2._source, A._instanceType(t2)._precomputed1, t1), t2 = t1._source, t2 = t2.get$iterator(t2), t1 = A._instanceType(t1), t1 = t1._eval$1("@<1>")._bind$1(t1._rest[1])._rest[1], t3 = this.$this; t2.moveNext$0();) {
        t4 = t1._as(t2.get$current(t2));
        t5 = t4.identifier;
        if (t5 == null)
          t5 = null;
        t5.toString;
        t6 = t3._pressedTouches;
        if (t6.contains$1(0, B.JSNumber_methods.toInt$0(t5))) {
          t5 = t4.identifier;
          if (t5 == null)
            t5 = null;
          t5.toString;
          t6.remove$1(0, B.JSNumber_methods.toInt$0(t5));
          t3._convertEventToPointerData$5$change$data$pressed$timeStamp$touch(B.PointerChange_0, pointerData, false, timeStamp, t4);
        }
      }
      t3.__engine$_callback.call$1(pointerData);
    },
    $signature: 2
  };
  A._MouseAdapter.prototype = {
    _addMouseEventListener$4$useCapture(target, eventName, handler, useCapture) {
      this.addEventListener$4$useCapture(0, target, eventName, new A._MouseAdapter__addMouseEventListener_closure(this, true, handler), useCapture);
    },
    _addMouseEventListener$3(target, eventName, handler) {
      return this._addMouseEventListener$4$useCapture(target, eventName, handler, true);
    },
    setup$0() {
      var _this = this,
        t1 = _this.flutterViewElement;
      _this._addMouseEventListener$3(t1, "mousedown", new A._MouseAdapter_setup_closure(_this));
      _this._addMouseEventListener$3(self.window, "mousemove", new A._MouseAdapter_setup_closure0(_this));
      _this._addMouseEventListener$4$useCapture(t1, "mouseleave", new A._MouseAdapter_setup_closure1(_this), false);
      _this._addMouseEventListener$3(self.window, "mouseup", new A._MouseAdapter_setup_closure2(_this));
      _this._addWheelEventListener$1(new A._MouseAdapter_setup_closure3(_this));
    },
    _convertEventsToPointerData$3$data$details$event(data, details, $event) {
      var t2, t3,
        offset = A.computeEventOffsetToTarget($event, this.flutterViewElement),
        t1 = A.DomEventExtension_get_timeStamp($event);
      t1.toString;
      t1 = A._BaseAdapter__eventTimeStampToDuration(t1);
      $.$get$window();
      t2 = $.$get$EngineFlutterDisplay__instance();
      t3 = t2._debugDevicePixelRatioOverride;
      if (t3 == null) {
        t3 = self.window.devicePixelRatio;
        if (t3 === 0)
          t3 = 1;
      }
      t2 = t2._debugDevicePixelRatioOverride;
      if (t2 == null) {
        t2 = self.window.devicePixelRatio;
        if (t2 === 0)
          t2 = 1;
      }
      this._pointerDataConverter.convert$11$buttons$change$device$kind$physicalX$physicalY$pressure$pressureMax$signalKind$timeStamp(data, details.buttons, details.change, -1, B.PointerDeviceKind_1, offset._dx * t3, offset._dy * t2, 1, 1, B.PointerSignalKind_0, t1);
    }
  };
  A._MouseAdapter__addMouseEventListener_closure.prototype = {
    call$1($event) {
      var t1 = $event.getModifierState("Alt"),
        t2 = $event.getModifierState("Control"),
        t3 = $event.getModifierState("Meta"),
        t4 = $event.getModifierState("Shift"),
        t5 = A.DomEventExtension_get_timeStamp($event);
      t5.toString;
      this.$this._keyboardConverter.synthesizeModifiersIfNeeded$5(t1, t2, t3, t4, t5);
      this.handler.call$1($event);
    },
    $signature: 1
  };
  A._MouseAdapter_setup_closure.prototype = {
    call$1($event) {
      var up, t4,
        pointerData = A._setArrayType([], type$.JSArray_PointerData),
        t1 = this.$this,
        t2 = t1._sanitizer,
        t3 = A.DomMouseEventExtension_get_buttons($event);
      t3.toString;
      up = t2.sanitizeMissingRightClickUp$1$buttons(B.JSNumber_methods.toInt$0(t3));
      if (up != null)
        t1._convertEventsToPointerData$3$data$details$event(pointerData, up, $event);
      t3 = B.JSNumber_methods.toInt$0($event.button);
      t4 = A.DomMouseEventExtension_get_buttons($event);
      t4.toString;
      t1._convertEventsToPointerData$3$data$details$event(pointerData, t2.sanitizeDownEvent$2$button$buttons(t3, B.JSNumber_methods.toInt$0(t4)), $event);
      t1.__engine$_callback.call$1(pointerData);
    },
    $signature: 2
  };
  A._MouseAdapter_setup_closure0.prototype = {
    call$1($event) {
      var up,
        pointerData = A._setArrayType([], type$.JSArray_PointerData),
        t1 = this.$this,
        t2 = t1._sanitizer,
        t3 = A.DomMouseEventExtension_get_buttons($event);
      t3.toString;
      up = t2.sanitizeMissingRightClickUp$1$buttons(B.JSNumber_methods.toInt$0(t3));
      if (up != null)
        t1._convertEventsToPointerData$3$data$details$event(pointerData, up, $event);
      t3 = A.DomMouseEventExtension_get_buttons($event);
      t3.toString;
      t1._convertEventsToPointerData$3$data$details$event(pointerData, t2.sanitizeMoveEvent$1$buttons(B.JSNumber_methods.toInt$0(t3)), $event);
      t1.__engine$_callback.call$1(pointerData);
    },
    $signature: 2
  };
  A._MouseAdapter_setup_closure1.prototype = {
    call$1($event) {
      var details,
        pointerData = A._setArrayType([], type$.JSArray_PointerData),
        t1 = this.$this,
        t2 = A.DomMouseEventExtension_get_buttons($event);
      t2.toString;
      details = t1._sanitizer.sanitizeLeaveEvent$1$buttons(B.JSNumber_methods.toInt$0(t2));
      if (details != null) {
        t1._convertEventsToPointerData$3$data$details$event(pointerData, details, $event);
        t1.__engine$_callback.call$1(pointerData);
      }
    },
    $signature: 2
  };
  A._MouseAdapter_setup_closure2.prototype = {
    call$1($event) {
      var sanitizedDetails,
        pointerData = A._setArrayType([], type$.JSArray_PointerData),
        t1 = this.$this,
        t2 = A.DomMouseEventExtension_get_buttons($event);
      t2 = t2 == null ? null : B.JSNumber_methods.toInt$0(t2);
      sanitizedDetails = t1._sanitizer.sanitizeUpEvent$1$buttons(t2);
      if (sanitizedDetails != null) {
        t1._convertEventsToPointerData$3$data$details$event(pointerData, sanitizedDetails, $event);
        t1.__engine$_callback.call$1(pointerData);
      }
    },
    $signature: 2
  };
  A._MouseAdapter_setup_closure3.prototype = {
    call$1($event) {
      this.$this._handleWheelEvent$1($event);
    },
    $signature: 1
  };
  A._PointerState.prototype = {};
  A.PointerDataConverter.prototype = {
    _ensureStateForPointer$3(device, x, y) {
      return this._pointers.putIfAbsent$2(0, device, new A.PointerDataConverter__ensureStateForPointer_closure(x, y));
    },
    _generateCompletePointerData$25$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$signalKind$size$tilt$timeStamp(buttons, change, device, distance, distanceMax, kind, obscured, orientation, physicalX, physicalY, platformData, pressure, pressureMax, pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, scale, scrollDeltaX, scrollDeltaY, signalKind, size, tilt, timeStamp) {
      var t2, t3,
        t1 = this._pointers.$index(0, device);
      t1.toString;
      t2 = t1.x;
      t3 = t1.y;
      t1.x = physicalX;
      t1.y = physicalY;
      t1 = t1._pointer;
      if (t1 == null)
        t1 = 0;
      return A.PointerData$(buttons, change, device, distance, distanceMax, kind, false, orientation, physicalX - t2, physicalY - t3, physicalX, physicalY, platformData, t1, pressure, pressureMax, pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, scale, scrollDeltaX, scrollDeltaY, signalKind, size, false, tilt, timeStamp);
    },
    _locationHasChanged$3(device, physicalX, physicalY) {
      var t1 = this._pointers.$index(0, device);
      t1.toString;
      return t1.x !== physicalX || t1.y !== physicalY;
    },
    _synthesizePointerData$24$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$size$tilt$timeStamp(buttons, change, device, distance, distanceMax, kind, obscured, orientation, physicalX, physicalY, platformData, pressure, pressureMax, pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, scale, scrollDeltaX, scrollDeltaY, size, tilt, timeStamp) {
      var t2, t3,
        t1 = this._pointers.$index(0, device);
      t1.toString;
      t2 = t1.x;
      t3 = t1.y;
      t1.x = physicalX;
      t1.y = physicalY;
      t1 = t1._pointer;
      if (t1 == null)
        t1 = 0;
      return A.PointerData$(buttons, change, device, distance, distanceMax, kind, false, orientation, physicalX - t2, physicalY - t3, physicalX, physicalY, platformData, t1, pressure, pressureMax, pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, scale, scrollDeltaX, scrollDeltaY, B.PointerSignalKind_0, size, true, tilt, timeStamp);
    },
    convert$15$buttons$change$device$kind$physicalX$physicalY$pressure$pressureMax$scale$scrollDeltaX$scrollDeltaY$signalKind$tilt$timeStamp(result, buttons, change, device, kind, physicalX, physicalY, pressure, pressureMax, scale, scrollDeltaX, scrollDeltaY, signalKind, tilt, timeStamp) {
      var alreadyAdded, t1, t2, _this = this;
      if (signalKind === B.PointerSignalKind_0)
        switch (change.index) {
          case 1:
            _this._ensureStateForPointer$3(device, physicalX, physicalY);
            result.push(_this._generateCompletePointerData$25$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$signalKind$size$tilt$timeStamp(buttons, change, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, 0, 0, 0, 0, 0, scale, scrollDeltaX, scrollDeltaY, signalKind, 0, tilt, timeStamp));
            break;
          case 3:
            alreadyAdded = _this._pointers.containsKey$1(0, device);
            _this._ensureStateForPointer$3(device, physicalX, physicalY);
            if (!alreadyAdded)
              result.push(_this._synthesizePointerData$24$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$size$tilt$timeStamp(buttons, B.PointerChange_1, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, 0, 0, 0, 0, 0, scale, scrollDeltaX, scrollDeltaY, 0, tilt, timeStamp));
            result.push(_this._generateCompletePointerData$25$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$signalKind$size$tilt$timeStamp(buttons, change, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, 0, 0, 0, 0, 0, scale, scrollDeltaX, scrollDeltaY, signalKind, 0, tilt, timeStamp));
            _this._activeButtons = buttons;
            break;
          case 4:
            alreadyAdded = _this._pointers.containsKey$1(0, device);
            _this._ensureStateForPointer$3(device, physicalX, physicalY)._pointer = $._PointerState__pointerCount = $._PointerState__pointerCount + 1;
            if (!alreadyAdded)
              result.push(_this._synthesizePointerData$24$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$size$tilt$timeStamp(buttons, B.PointerChange_1, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, 0, 0, 0, 0, 0, scale, scrollDeltaX, scrollDeltaY, 0, tilt, timeStamp));
            if (_this._locationHasChanged$3(device, physicalX, physicalY))
              result.push(_this._synthesizePointerData$24$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$size$tilt$timeStamp(0, B.PointerChange_3, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, 0, pressureMax, 0, 0, 0, 0, 0, scale, scrollDeltaX, scrollDeltaY, 0, tilt, timeStamp));
            result.push(_this._generateCompletePointerData$25$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$signalKind$size$tilt$timeStamp(buttons, change, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, 0, 0, 0, 0, 0, scale, scrollDeltaX, scrollDeltaY, signalKind, 0, tilt, timeStamp));
            _this._activeButtons = buttons;
            break;
          case 5:
            result.push(_this._generateCompletePointerData$25$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$signalKind$size$tilt$timeStamp(buttons, change, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, 0, 0, 0, 0, 0, scale, scrollDeltaX, scrollDeltaY, signalKind, 0, tilt, timeStamp));
            _this._activeButtons = buttons;
            break;
          case 6:
          case 0:
            t1 = _this._pointers;
            t2 = t1.$index(0, device);
            t2.toString;
            if (change === B.PointerChange_0) {
              physicalX = t2.x;
              physicalY = t2.y;
            }
            if (_this._locationHasChanged$3(device, physicalX, physicalY))
              result.push(_this._synthesizePointerData$24$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$size$tilt$timeStamp(_this._activeButtons, B.PointerChange_5, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, 0, 0, 0, 0, 0, scale, scrollDeltaX, scrollDeltaY, 0, tilt, timeStamp));
            result.push(_this._generateCompletePointerData$25$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$signalKind$size$tilt$timeStamp(buttons, change, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, 0, 0, 0, 0, 0, scale, scrollDeltaX, scrollDeltaY, signalKind, 0, tilt, timeStamp));
            if (kind === B.PointerDeviceKind_0) {
              result.push(_this._synthesizePointerData$24$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$size$tilt$timeStamp(0, B.PointerChange_2, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, 0, pressureMax, 0, 0, 0, 0, 0, scale, scrollDeltaX, scrollDeltaY, 0, tilt, timeStamp));
              t1.remove$1(0, device);
            }
            break;
          case 2:
            t1 = _this._pointers;
            t2 = t1.$index(0, device);
            t2.toString;
            result.push(_this._generateCompletePointerData$25$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$signalKind$size$tilt$timeStamp(buttons, change, device, 0, 0, kind, false, 0, t2.x, t2.y, 0, pressure, pressureMax, 0, 0, 0, 0, 0, scale, scrollDeltaX, scrollDeltaY, signalKind, 0, tilt, timeStamp));
            t1.remove$1(0, device);
            break;
          case 7:
          case 8:
          case 9:
            break;
        }
      else
        switch (signalKind.index) {
          case 1:
          case 2:
          case 3:
            alreadyAdded = _this._pointers.containsKey$1(0, device);
            _this._ensureStateForPointer$3(device, physicalX, physicalY);
            if (!alreadyAdded)
              result.push(_this._synthesizePointerData$24$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$size$tilt$timeStamp(buttons, B.PointerChange_1, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, 0, 0, 0, 0, 0, scale, scrollDeltaX, scrollDeltaY, 0, tilt, timeStamp));
            if (_this._locationHasChanged$3(device, physicalX, physicalY))
              if (buttons !== 0)
                result.push(_this._synthesizePointerData$24$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$size$tilt$timeStamp(buttons, B.PointerChange_5, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, 0, 0, 0, 0, 0, scale, scrollDeltaX, scrollDeltaY, 0, tilt, timeStamp));
              else
                result.push(_this._synthesizePointerData$24$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$size$tilt$timeStamp(buttons, B.PointerChange_3, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, 0, 0, 0, 0, 0, scale, scrollDeltaX, scrollDeltaY, 0, tilt, timeStamp));
            result.push(_this._generateCompletePointerData$25$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$signalKind$size$tilt$timeStamp(buttons, change, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, 0, 0, 0, 0, 0, scale, scrollDeltaX, scrollDeltaY, signalKind, 0, tilt, timeStamp));
            break;
          case 0:
            break;
          case 4:
            break;
        }
    },
    convert$12$buttons$change$device$kind$physicalX$physicalY$pressure$pressureMax$scale$signalKind$timeStamp(result, buttons, change, device, kind, physicalX, physicalY, pressure, pressureMax, scale, signalKind, timeStamp) {
      return this.convert$15$buttons$change$device$kind$physicalX$physicalY$pressure$pressureMax$scale$scrollDeltaX$scrollDeltaY$signalKind$tilt$timeStamp(result, buttons, change, device, kind, physicalX, physicalY, pressure, pressureMax, scale, 0, 0, signalKind, 0, timeStamp);
    },
    convert$13$buttons$change$device$kind$physicalX$physicalY$pressure$pressureMax$scrollDeltaX$scrollDeltaY$signalKind$timeStamp(result, buttons, change, device, kind, physicalX, physicalY, pressure, pressureMax, scrollDeltaX, scrollDeltaY, signalKind, timeStamp) {
      return this.convert$15$buttons$change$device$kind$physicalX$physicalY$pressure$pressureMax$scale$scrollDeltaX$scrollDeltaY$signalKind$tilt$timeStamp(result, buttons, change, device, kind, physicalX, physicalY, pressure, pressureMax, 1, scrollDeltaX, scrollDeltaY, signalKind, 0, timeStamp);
    },
    convert$11$buttons$change$device$kind$physicalX$physicalY$pressure$pressureMax$signalKind$timeStamp(result, buttons, change, device, kind, physicalX, physicalY, pressure, pressureMax, signalKind, timeStamp) {
      return this.convert$15$buttons$change$device$kind$physicalX$physicalY$pressure$pressureMax$scale$scrollDeltaX$scrollDeltaY$signalKind$tilt$timeStamp(result, buttons, change, device, kind, physicalX, physicalY, pressure, pressureMax, 1, 0, 0, signalKind, 0, timeStamp);
    },
    convert$10$buttons$change$device$physicalX$physicalY$pressure$pressureMax$signalKind$timeStamp(result, buttons, change, device, physicalX, physicalY, pressure, pressureMax, signalKind, timeStamp) {
      return this.convert$15$buttons$change$device$kind$physicalX$physicalY$pressure$pressureMax$scale$scrollDeltaX$scrollDeltaY$signalKind$tilt$timeStamp(result, buttons, change, device, B.PointerDeviceKind_0, physicalX, physicalY, pressure, pressureMax, 1, 0, 0, signalKind, 0, timeStamp);
    },
    convert$12$buttons$change$device$kind$physicalX$physicalY$pressure$pressureMax$signalKind$tilt$timeStamp(result, buttons, change, device, kind, physicalX, physicalY, pressure, pressureMax, signalKind, tilt, timeStamp) {
      return this.convert$15$buttons$change$device$kind$physicalX$physicalY$pressure$pressureMax$scale$scrollDeltaX$scrollDeltaY$signalKind$tilt$timeStamp(result, buttons, change, device, kind, physicalX, physicalY, pressure, pressureMax, 1, 0, 0, signalKind, tilt, timeStamp);
    }
  };
  A.PointerDataConverter__ensureStateForPointer_closure.prototype = {
    call$0() {
      return new A._PointerState(this.x, this.y);
    },
    $signature: 42
  };
  A.Profiler.prototype = {};
  A.RawKeyboard.prototype = {
    RawKeyboard$_$1(_onMacOs) {
      var _this = this,
        t1 = type$.JavaScriptObject;
      _this._keydownListener = t1._as(A.allowInterop(new A.RawKeyboard$__closure(_this)));
      A.DomEventTargetExtension_addEventListener(self.window, "keydown", _this._keydownListener, null);
      _this._keyupListener = t1._as(A.allowInterop(new A.RawKeyboard$__closure0(_this)));
      A.DomEventTargetExtension_addEventListener(self.window, "keyup", _this._keyupListener, null);
      $._hotRestartListeners.push(new A.RawKeyboard$__closure1(_this));
    },
    dispose$0() {
      var t1, t2, _this = this;
      A.DomEventTargetExtension_removeEventListener(self.window, "keydown", _this._keydownListener, null);
      A.DomEventTargetExtension_removeEventListener(self.window, "keyup", _this._keyupListener, null);
      for (t1 = _this._keydownTimers, t2 = A.LinkedHashMapKeyIterator$(t1, t1._modifications); t2.moveNext$0();)
        t1.$index(0, t2.__js_helper$_current).cancel$0(0);
      t1.clear$0(0);
      $.RawKeyboard__instance = _this._keyupListener = _this._keydownListener = null;
    },
    _handleHtmlEvent$1(domEvent) {
      var $event, t1, t2, t3, metaState, eventData, _this = this,
        $constructor = globalThis.KeyboardEvent;
      if (!($constructor != null && domEvent instanceof $constructor))
        return;
      $event = new A.FlutterHtmlKeyboardEvent(domEvent);
      t1 = A.DomKeyboardEventExtension_get_code(domEvent);
      t1.toString;
      if (domEvent.type === "keydown" && A.DomKeyboardEventExtension_get_key(domEvent) === "Tab" && domEvent.isComposing)
        return;
      t2 = A.DomKeyboardEventExtension_get_key(domEvent);
      t2.toString;
      if (!(t2 === "Meta" || t2 === "Shift" || t2 === "Alt" || t2 === "Control") && _this._onMacOs) {
        t2 = _this._keydownTimers;
        t3 = t2.$index(0, t1);
        if (t3 != null)
          t3.cancel$0(0);
        if (domEvent.type === "keydown")
          t3 = domEvent.ctrlKey || domEvent.shiftKey || domEvent.altKey || domEvent.metaKey;
        else
          t3 = false;
        if (t3)
          t2.$indexSet(0, t1, A.Timer_Timer(B.Duration_2000000, new A.RawKeyboard__handleHtmlEvent_closure(_this, t1, $event)));
        else
          t2.remove$1(0, t1);
      }
      metaState = domEvent.getModifierState("Shift") ? 1 : 0;
      if (domEvent.getModifierState("Alt") || domEvent.getModifierState("AltGraph"))
        metaState |= 2;
      if (domEvent.getModifierState("Control"))
        metaState |= 4;
      if (domEvent.getModifierState("Meta"))
        metaState |= 8;
      _this._lastMetaState = metaState;
      if (domEvent.type === "keydown")
        if (A.DomKeyboardEventExtension_get_key(domEvent) === "CapsLock") {
          t1 = metaState | 32;
          _this._lastMetaState = t1;
        } else if (A.DomKeyboardEventExtension_get_code(domEvent) === "NumLock") {
          t1 = metaState | 16;
          _this._lastMetaState = t1;
        } else if (A.DomKeyboardEventExtension_get_key(domEvent) === "ScrollLock") {
          t1 = metaState | 64;
          _this._lastMetaState = t1;
        } else {
          if (A.DomKeyboardEventExtension_get_key(domEvent) === "Meta") {
            t1 = $.$get$_operatingSystem();
            t1 = t1 === B.OperatingSystem_2;
          } else
            t1 = false;
          if (t1) {
            t1 = metaState | 8;
            _this._lastMetaState = t1;
          } else
            t1 = metaState;
        }
      else
        t1 = metaState;
      eventData = A.LinkedHashMap_LinkedHashMap$_literal(["type", domEvent.type, "keymap", "web", "code", A.DomKeyboardEventExtension_get_code(domEvent), "key", A.DomKeyboardEventExtension_get_key(domEvent), "location", B.JSNumber_methods.toInt$0(domEvent.location), "metaState", t1, "keyCode", B.JSNumber_methods.toInt$0(domEvent.keyCode)], type$.String, type$.dynamic);
      $.$get$EnginePlatformDispatcher__instance().invokeOnPlatformMessage$3("flutter/keyevent", B.C_JSONMessageCodec.encodeMessage$1(eventData), new A.RawKeyboard__handleHtmlEvent_closure0($event));
    }
  };
  A.RawKeyboard$__closure.prototype = {
    call$1($event) {
      this.$this._handleHtmlEvent$1($event);
    },
    $signature: 1
  };
  A.RawKeyboard$__closure0.prototype = {
    call$1($event) {
      this.$this._handleHtmlEvent$1($event);
    },
    $signature: 1
  };
  A.RawKeyboard$__closure1.prototype = {
    call$0() {
      this.$this.dispose$0();
    },
    $signature: 0
  };
  A.RawKeyboard__handleHtmlEvent_closure.prototype = {
    call$0() {
      var t2, eventData,
        t1 = this.$this;
      t1._keydownTimers.remove$1(0, this.timerKey);
      t2 = this.event._event;
      eventData = A.LinkedHashMap_LinkedHashMap$_literal(["type", "keyup", "keymap", "web", "code", A.DomKeyboardEventExtension_get_code(t2), "key", A.DomKeyboardEventExtension_get_key(t2), "location", B.JSNumber_methods.toInt$0(t2.location), "metaState", t1._lastMetaState, "keyCode", B.JSNumber_methods.toInt$0(t2.keyCode)], type$.String, type$.dynamic);
      $.$get$EnginePlatformDispatcher__instance().invokeOnPlatformMessage$3("flutter/keyevent", B.C_JSONMessageCodec.encodeMessage$1(eventData), A._engine___noopCallback$closure());
    },
    $signature: 0
  };
  A.RawKeyboard__handleHtmlEvent_closure0.prototype = {
    call$1(data) {
      if (data == null)
        return;
      if (A._asBool(J.$index$asx(type$.Map_String_dynamic._as(B.C_JSONMessageCodec.decodeMessage$1(data)), "handled")))
        this.event._event.preventDefault();
    },
    $signature: 5
  };
  A.Assertiveness.prototype = {
    _enumToString$0() {
      return "Assertiveness." + this._core$_name;
    }
  };
  A.AccessibilityAnnouncements.prototype = {
    ariaLiveElementFor$1(assertiveness) {
      switch (assertiveness.index) {
        case 0:
          return this._politeElement;
        case 1:
          return this._assertiveElement;
      }
    },
    announce$2(message, assertiveness) {
      var ariaLiveElement = this.ariaLiveElementFor$1(assertiveness),
        messageElement = A.DomDocumentExtension_createElement(self.document, "div");
      messageElement.textContent = message;
      ariaLiveElement.append(messageElement);
      A.Timer_Timer(B.Duration_300000, new A.AccessibilityAnnouncements_announce_closure(messageElement));
    }
  };
  A.AccessibilityAnnouncements_announce_closure.prototype = {
    call$0() {
      return this.messageElement.remove();
    },
    $signature: 0
  };
  A.EngineAccessibilityFeatures.prototype = {
    toString$0(_) {
      var features = A._setArrayType([], type$.JSArray_String),
        t1 = this.__engine$_index;
      if ((t1 & 1) !== 0)
        features.push("accessibleNavigation");
      if ((t1 & 2) !== 0)
        features.push("invertColors");
      if ((t1 & 4) !== 0)
        features.push("disableAnimations");
      if ((t1 & 8) !== 0)
        features.push("boldText");
      if ((t1 & 16) !== 0)
        features.push("reduceMotion");
      if ((t1 & 32) !== 0)
        features.push("highContrast");
      if ((t1 & 64) !== 0)
        features.push("onOffSwitchLabels");
      return "AccessibilityFeatures" + A.S(features);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(this))
        return false;
      return other instanceof A.EngineAccessibilityFeatures && other.__engine$_index === this.__engine$_index;
    },
    get$hashCode(_) {
      return B.JSInt_methods.get$hashCode(this.__engine$_index);
    },
    copyWith$2$accessibleNavigation$highContrast(accessibleNavigation, highContrast) {
      var t1 = (accessibleNavigation == null ? (this.__engine$_index & 1) !== 0 : accessibleNavigation) ? 1 : 0,
        t2 = this.__engine$_index;
      t1 = (t2 & 2) !== 0 ? t1 | 2 : t1 & 4294967293;
      t1 = (t2 & 4) !== 0 ? t1 | 4 : t1 & 4294967291;
      t1 = (t2 & 8) !== 0 ? t1 | 8 : t1 & 4294967287;
      t1 = (t2 & 16) !== 0 ? t1 | 16 : t1 & 4294967279;
      t1 = (highContrast == null ? (t2 & 32) !== 0 : highContrast) ? t1 | 32 : t1 & 4294967263;
      return new A.EngineAccessibilityFeatures((t2 & 64) !== 0 ? t1 | 64 : t1 & 4294967231);
    },
    copyWith$1$highContrast(highContrast) {
      return this.copyWith$2$accessibleNavigation$highContrast(null, highContrast);
    },
    copyWith$1$accessibleNavigation(accessibleNavigation) {
      return this.copyWith$2$accessibleNavigation$highContrast(accessibleNavigation, null);
    }
  };
  A.EngineAccessibilityFeaturesBuilder.prototype = {
    set$highContrast(value) {
      var t1 = this.__engine$_index;
      this.__engine$_index = value ? t1 | 32 : t1 & 4294967263;
    },
    build$0() {
      return new A.EngineAccessibilityFeatures(this.__engine$_index);
    }
  };
  A.GestureMode.prototype = {
    _enumToString$0() {
      return "GestureMode." + this._core$_name;
    }
  };
  A.EngineSemanticsOwner.prototype = {
    EngineSemanticsOwner$_$0() {
      $._hotRestartListeners.push(new A.EngineSemanticsOwner$__closure(this));
    },
    set$semanticsEnabled(value) {
      var t1, t2, t3;
      if (this._semanticsEnabled)
        return;
      t1 = $.$get$EnginePlatformDispatcher__instance();
      t2 = t1.configuration;
      t1.configuration = t2.copyWith$1$accessibilityFeatures(t2.accessibilityFeatures.copyWith$1$accessibleNavigation(true));
      this._semanticsEnabled = true;
      t1 = $.$get$EnginePlatformDispatcher__instance();
      t2 = this._semanticsEnabled;
      t3 = t1.configuration;
      if (t2 !== t3.semanticsEnabled)
        t1.configuration = t3.copyWith$1$semanticsEnabled(t2);
    },
    _getGestureModeClock$0() {
      var _this = this,
        t1 = _this._gestureModeClock;
      if (t1 == null) {
        t1 = _this._gestureModeClock = new A.AlarmClock(_this._now);
        t1.callback = new A.EngineSemanticsOwner__getGestureModeClock_closure(_this);
      }
      return t1;
    },
    receiveGlobalEvent$1($event) {
      var t1, t2, _this = this;
      if (B.JSArray_methods.contains$1(B.List_CEh, $event.type)) {
        t1 = _this._getGestureModeClock$0();
        t1.toString;
        t2 = _this._now.call$0();
        t1.set$datetime(A.DateTime$_withValue(t2._value + 500, t2.isUtc));
        if (_this._gestureMode !== B.GestureMode_0) {
          _this._gestureMode = B.GestureMode_0;
          _this._notifyGestureModeListeners$0();
        }
      }
      return _this.semanticsHelper._semanticsEnabler.shouldEnableSemantics$1($event);
    },
    _notifyGestureModeListeners$0() {
      var t1, i;
      for (t1 = this._gestureModeListeners, i = 0; false; ++i)
        t1[i].call$1(this._gestureMode);
    }
  };
  A.EngineSemanticsOwner$__closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A.EngineSemanticsOwner__now_closure.prototype = {
    call$0() {
      return new A.DateTime(Date.now(), false);
    },
    $signature: 43
  };
  A.EngineSemanticsOwner__getGestureModeClock_closure.prototype = {
    call$0() {
      var t1 = this.$this;
      if (t1._gestureMode === B.GestureMode_1)
        return;
      t1._gestureMode = B.GestureMode_1;
      t1._notifyGestureModeListeners$0();
    },
    $signature: 0
  };
  A.SemanticsHelper.prototype = {};
  A.SemanticsEnabler.prototype = {
    shouldEnableSemantics$1($event) {
      if (!this.get$isWaitingToEnableSemantics())
        return true;
      else
        return this.tryEnableSemantics$1($event);
    }
  };
  A.DesktopSemanticsEnabler.prototype = {
    get$isWaitingToEnableSemantics() {
      return this._semanticsPlaceholder != null;
    },
    tryEnableSemantics$1($event) {
      var t1, _this = this;
      if (_this._semanticsPlaceholder == null)
        return true;
      t1 = $.EngineSemanticsOwner__instance;
      if ((t1 == null ? $.EngineSemanticsOwner__instance = A.EngineSemanticsOwner$_() : t1)._semanticsEnabled)
        return true;
      if (!B.Set_8Gl9.contains$1(0, $event.type))
        return true;
      if (!J.$eq$($event.target, _this._semanticsPlaceholder))
        return true;
      t1 = $.EngineSemanticsOwner__instance;
      (t1 == null ? $.EngineSemanticsOwner__instance = A.EngineSemanticsOwner$_() : t1).set$semanticsEnabled(true);
      t1 = _this._semanticsPlaceholder;
      if (t1 != null)
        t1.remove();
      _this._semanticsPlaceholder = null;
      return false;
    },
    prepareAccessibilityPlaceholder$0() {
      var t1,
        placeholder = this._semanticsPlaceholder = A.DomDocumentExtension_createElement(self.document, "flt-semantics-placeholder");
      A.DomEventTargetExtension_addEventListener(placeholder, "click", type$.JavaScriptObject._as(A.allowInterop(new A.DesktopSemanticsEnabler_prepareAccessibilityPlaceholder_closure(this))), true);
      t1 = A.jsify("button");
      if (t1 == null)
        t1 = type$.Object._as(t1);
      placeholder.setAttribute("role", t1);
      t1 = A.jsify("polite");
      if (t1 == null)
        t1 = type$.Object._as(t1);
      placeholder.setAttribute("aria-live", t1);
      t1 = A.jsify("0");
      if (t1 == null)
        t1 = type$.Object._as(t1);
      placeholder.setAttribute("tabindex", t1);
      t1 = A.jsify("Enable accessibility");
      if (t1 == null)
        t1 = type$.Object._as(t1);
      placeholder.setAttribute("aria-label", t1);
      t1 = placeholder.style;
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "position", "absolute");
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "left", "-1px");
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "top", "-1px");
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "width", "1px");
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "height", "1px");
      return placeholder;
    }
  };
  A.DesktopSemanticsEnabler_prepareAccessibilityPlaceholder_closure.prototype = {
    call$1($event) {
      this.$this.tryEnableSemantics$1($event);
    },
    $signature: 1
  };
  A.MobileSemanticsEnabler.prototype = {
    get$isWaitingToEnableSemantics() {
      return this._semanticsPlaceholder != null;
    },
    tryEnableSemantics$1($event) {
      var t1, activationPoint, t2, activatingElementRect, t3, t4, t5, t6, deltaX, deltaY, _this = this;
      if (_this._semanticsPlaceholder == null)
        return true;
      if (_this._schedulePlaceholderRemoval) {
        t1 = $.$get$_browserEngine();
        if (t1 !== B.BrowserEngine_1 || $event.type === "touchend" || $event.type === "pointerup" || $event.type === "click")
          _this.dispose$0();
        return true;
      }
      t1 = $.EngineSemanticsOwner__instance;
      if ((t1 == null ? $.EngineSemanticsOwner__instance = A.EngineSemanticsOwner$_() : t1)._semanticsEnabled)
        return true;
      if (++_this.semanticsActivationAttempts >= 20)
        return _this._schedulePlaceholderRemoval = true;
      if (!B.Set_EGZpe.contains$1(0, $event.type))
        return true;
      if (_this.semanticsActivationTimer != null)
        return false;
      activationPoint = A._Cell$named("activationPoint");
      switch ($event.type) {
        case "click":
          activationPoint.set$finalLocalValue(new A.DomPoint($event.offsetX, $event.offsetY));
          break;
        case "touchstart":
        case "touchend":
          t1 = type$._DomTouchListWrapper_JavaScriptObject;
          t1 = A.CastIterable_CastIterable(new A._DomTouchListWrapper($event.changedTouches, t1), t1._eval$1("Iterable.E"), type$.JavaScriptObject);
          t2 = t1._source;
          t2 = A._instanceType(t1)._rest[1]._as(t2.get$first(t2));
          activationPoint.set$finalLocalValue(new A.DomPoint(t2.clientX, t2.clientY));
          break;
        case "pointerdown":
        case "pointerup":
          activationPoint.set$finalLocalValue(new A.DomPoint($event.clientX, $event.clientY));
          break;
        default:
          return true;
      }
      activatingElementRect = _this._semanticsPlaceholder.getBoundingClientRect();
      t1 = activatingElementRect.left;
      t2 = activatingElementRect.right;
      t3 = activatingElementRect.left;
      t4 = activatingElementRect.top;
      t5 = activatingElementRect.bottom;
      t6 = activatingElementRect.top;
      deltaX = activationPoint._readLocal$0().x - (t1 + (t2 - t3) / 2);
      deltaY = activationPoint._readLocal$0().y - (t4 + (t5 - t6) / 2);
      if (deltaX * deltaX + deltaY * deltaY < 1 && true) {
        _this._schedulePlaceholderRemoval = true;
        _this.semanticsActivationTimer = A.Timer_Timer(B.Duration_300000, new A.MobileSemanticsEnabler_tryEnableSemantics_closure(_this));
        return false;
      }
      return true;
    },
    prepareAccessibilityPlaceholder$0() {
      var t1,
        placeholder = this._semanticsPlaceholder = A.DomDocumentExtension_createElement(self.document, "flt-semantics-placeholder");
      A.DomEventTargetExtension_addEventListener(placeholder, "click", type$.JavaScriptObject._as(A.allowInterop(new A.MobileSemanticsEnabler_prepareAccessibilityPlaceholder_closure(this))), true);
      t1 = A.jsify("button");
      if (t1 == null)
        t1 = type$.Object._as(t1);
      placeholder.setAttribute("role", t1);
      t1 = A.jsify("Enable accessibility");
      if (t1 == null)
        t1 = type$.Object._as(t1);
      placeholder.setAttribute("aria-label", t1);
      t1 = placeholder.style;
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "position", "absolute");
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "left", "0");
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "top", "0");
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "right", "0");
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "bottom", "0");
      return placeholder;
    },
    dispose$0() {
      var t1 = this._semanticsPlaceholder;
      if (t1 != null)
        t1.remove();
      this.semanticsActivationTimer = this._semanticsPlaceholder = null;
    }
  };
  A.MobileSemanticsEnabler_tryEnableSemantics_closure.prototype = {
    call$0() {
      this.$this.dispose$0();
      var t1 = $.EngineSemanticsOwner__instance;
      (t1 == null ? $.EngineSemanticsOwner__instance = A.EngineSemanticsOwner$_() : t1).set$semanticsEnabled(true);
    },
    $signature: 0
  };
  A.MobileSemanticsEnabler_prepareAccessibilityPlaceholder_closure.prototype = {
    call$1($event) {
      this.$this.tryEnableSemantics$1($event);
    },
    $signature: 1
  };
  A.SemanticsTextEditingStrategy.prototype = {
    enable$3$onAction$onChange(_, inputConfig, onAction, onChange) {
      this.onChange = onChange;
      this.onAction = onAction;
    },
    disable$0(_) {
      var t1, i, t2, _this = this;
      if (!_this.isEnabled)
        return;
      _this.isEnabled = false;
      _this.geometry = _this.style = null;
      for (t1 = _this.subscriptions, i = 0; i < t1.length; ++i) {
        t2 = t1[i];
        t2.target.removeEventListener(t2.type, t2.listener);
      }
      B.JSArray_methods.clear$0(t1);
      _this.lastEditingState = null;
      t1 = _this.domElement;
      if (t1 != null)
        t1.blur();
      _this._queuedStyle = _this.domElement = null;
    },
    addEventHandlers$0() {
      var t2, t3, _this = this,
        t1 = _this.__DefaultTextEditingStrategy_inputConfiguration_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1 = t1.autofillGroup;
      if (t1 != null)
        B.JSArray_methods.addAll$1(_this.subscriptions, t1.addInputEventListeners$0());
      t1 = _this.subscriptions;
      t2 = _this.domElement;
      t2.toString;
      t3 = _this.get$handleChange();
      t1.push(A.DomSubscription$(t2, "input", t3));
      t2 = _this.domElement;
      t2.toString;
      t1.push(A.DomSubscription$(t2, "keydown", _this.get$maybeSendAction()));
      t1.push(A.DomSubscription$(self.document, "selectionchange", t3));
      _this.preventDefaultForMouseEvents$0();
    },
    initializeTextEditing$3$onAction$onChange(inputConfig, onAction, onChange) {
      this.isEnabled = true;
      this.__DefaultTextEditingStrategy_inputConfiguration_A = inputConfig;
      this.applyConfiguration$1(inputConfig);
    },
    placeElement$0() {
      this.__DefaultTextEditingStrategy_inputConfiguration_A === $ && A.throwUnnamedLateFieldNI();
      this.domElement.focus();
    },
    initializeElementPlacement$0() {
    },
    updateElementPlacement$1(textGeometry) {
    },
    updateElementStyle$1(textStyle) {
      this._queuedStyle = textStyle;
      this._syncStyle$0();
    },
    _syncStyle$0() {
      var t1 = this._queuedStyle;
      if (t1 == null || this.domElement == null)
        return;
      t1.toString;
      this.super$DefaultTextEditingStrategy$updateElementStyle(t1);
    }
  };
  A._TypedDataBuffer.prototype = {
    get$length(_) {
      return this.__engine$_length;
    },
    $index(_, index) {
      if (index >= this.__engine$_length)
        throw A.wrapException(A.IndexError$(index, this));
      return this._buffer[index];
    },
    $indexSet(_, index, value) {
      if (index >= this.__engine$_length)
        throw A.wrapException(A.IndexError$(index, this));
      this._buffer[index] = value;
    },
    set$length(_, newLength) {
      var t2, i, newBuffer, _this = this,
        t1 = _this.__engine$_length;
      if (newLength < t1)
        for (t2 = _this._buffer, i = newLength; i < t1; ++i)
          t2[i] = 0;
      else {
        t1 = _this._buffer.length;
        if (newLength > t1) {
          if (t1 === 0)
            newBuffer = new Uint8Array(newLength);
          else
            newBuffer = _this._createBiggerBuffer$1(newLength);
          B.NativeUint8List_methods.setRange$3(newBuffer, 0, _this.__engine$_length, _this._buffer);
          _this._buffer = newBuffer;
        }
      }
      _this.__engine$_length = newLength;
    },
    __engine$_add$1(_, value) {
      var _this = this,
        t1 = _this.__engine$_length,
        t2 = _this._buffer;
      if (t1 === t2.length) {
        t2 = _this._createBiggerBuffer$1(null);
        B.NativeUint8List_methods.setRange$3(t2, 0, t1, _this._buffer);
        _this._buffer = t2;
        t1 = t2;
      } else
        t1 = t2;
      t1[_this.__engine$_length++] = value;
    },
    add$1(_, value) {
      var _this = this,
        t1 = _this.__engine$_length,
        t2 = _this._buffer;
      if (t1 === t2.length) {
        t2 = _this._createBiggerBuffer$1(null);
        B.NativeUint8List_methods.setRange$3(t2, 0, t1, _this._buffer);
        _this._buffer = t2;
        t1 = t2;
      } else
        t1 = t2;
      t1[_this.__engine$_length++] = value;
    },
    addAll$3(_, values, start, end) {
      A.RangeError_checkNotNegative(start, "start");
      if (end != null && start > end)
        throw A.wrapException(A.RangeError$range(end, start, null, "end", null));
      this._addAll$3(values, start, end);
    },
    addAll$1($receiver, values) {
      return this.addAll$3($receiver, values, 0, null);
    },
    _addAll$3(values, start, end) {
      var t1, t2, valuesLength, newLength, t3, i, value, _this = this,
        _s16_ = "Too few elements";
      if (A._instanceType(_this)._eval$1("List<_TypedDataBuffer.E>")._is(values))
        end = end == null ? values.length : end;
      if (end != null) {
        t1 = _this.__engine$_length;
        t2 = J.getInterceptor$asx(values);
        if (start > t2.get$length(values) || end > t2.get$length(values))
          A.throwExpression(A.StateError$(_s16_));
        valuesLength = end - start;
        newLength = _this.__engine$_length + valuesLength;
        _this._ensureCapacity$1(newLength);
        t2 = _this._buffer;
        t3 = t1 + valuesLength;
        B.NativeUint8List_methods.setRange$4(t2, t3, _this.__engine$_length + valuesLength, t2, t1);
        B.NativeUint8List_methods.setRange$4(_this._buffer, t1, t3, values, start);
        _this.__engine$_length = newLength;
        return;
      }
      for (t1 = J.get$iterator$ax(values), i = 0; t1.moveNext$0();) {
        value = t1.get$current(t1);
        if (i >= start)
          _this.__engine$_add$1(0, value);
        ++i;
      }
      if (i < start)
        throw A.wrapException(A.StateError$(_s16_));
    },
    _ensureCapacity$1(requiredCapacity) {
      var newBuffer, _this = this;
      if (requiredCapacity <= _this._buffer.length)
        return;
      newBuffer = _this._createBiggerBuffer$1(requiredCapacity);
      B.NativeUint8List_methods.setRange$3(newBuffer, 0, _this.__engine$_length, _this._buffer);
      _this._buffer = newBuffer;
    },
    _createBiggerBuffer$1(requiredCapacity) {
      var newLength = this._buffer.length * 2;
      if (requiredCapacity != null && newLength < requiredCapacity)
        newLength = requiredCapacity;
      else if (newLength < 8)
        newLength = 8;
      return new Uint8Array(newLength);
    }
  };
  A._IntBuffer.prototype = {};
  A.Uint8Buffer.prototype = {};
  A.MethodCall.prototype = {
    toString$0(_) {
      return A.getRuntimeTypeOfDartObject(this).toString$0(0) + "(" + this.method + ", " + A.S(this.$arguments) + ")";
    }
  };
  A.JSONMessageCodec.prototype = {
    encodeMessage$1(message) {
      return A.NativeByteData_NativeByteData$view(B.C_Utf8Encoder.convert$1(B.C_JsonCodec.encode$1(message)).buffer, 0, null);
    },
    decodeMessage$1(message) {
      return B.C_JsonCodec.decode$1(0, B.Utf8Decoder_false.convert$1(A.NativeUint8List_NativeUint8List$view(message.buffer, 0, null)));
    }
  };
  A.JSONMethodCodec.prototype = {
    encodeMethodCall$1($call) {
      return B.C_JSONMessageCodec.encodeMessage$1(A.LinkedHashMap_LinkedHashMap$_literal(["method", $call.method, "args", $call.$arguments], type$.String, type$.dynamic));
    },
    decodeMethodCall$1(methodCall) {
      var t1, method, $arguments, _null = null,
        decoded = B.C_JSONMessageCodec.decodeMessage$1(methodCall);
      if (!type$.Map_dynamic_dynamic._is(decoded))
        throw A.wrapException(A.FormatException$("Expected method call Map, got " + A.S(decoded), _null, _null));
      t1 = J.getInterceptor$asx(decoded);
      method = t1.$index(decoded, "method");
      $arguments = t1.$index(decoded, "args");
      if (typeof method == "string")
        return new A.MethodCall(method, $arguments);
      throw A.wrapException(A.FormatException$("Invalid method call: " + A.S(decoded), _null, _null));
    }
  };
  A.StandardMessageCodec.prototype = {
    encodeMessage$1(message) {
      var buffer = A.WriteBuffer_WriteBuffer();
      this.writeValue$2(0, buffer, true);
      return buffer.done$0();
    },
    decodeMessage$1(message) {
      var buffer = new A.ReadBuffer(message),
        result = this.readValue$1(0, buffer);
      if (buffer.__engine$_position < message.byteLength)
        throw A.wrapException(B.FormatException_oCg);
      return result;
    },
    writeValue$2(_, buffer, value) {
      var t1, t2, t3, bytes, _this = this;
      if (value == null)
        buffer._buffer.__engine$_add$1(0, 0);
      else if (A._isBool(value)) {
        t1 = value ? 1 : 2;
        buffer._buffer.__engine$_add$1(0, t1);
      } else if (typeof value == "number") {
        t1 = buffer._buffer;
        t1.__engine$_add$1(0, 6);
        buffer._alignTo$1(8);
        buffer._eightBytes.setFloat64(0, value, B.C_Endian === $.$get$Endian_host());
        t1.addAll$1(0, buffer._eightBytesAsList);
      } else if (A._isInt(value)) {
        t1 = -2147483648 <= value && value <= 2147483647;
        t2 = buffer._buffer;
        t3 = buffer._eightBytes;
        if (t1) {
          t2.__engine$_add$1(0, 3);
          t3.setInt32(0, value, B.C_Endian === $.$get$Endian_host());
          t2.addAll$3(0, buffer._eightBytesAsList, 0, 4);
        } else {
          t2.__engine$_add$1(0, 4);
          B.NativeByteData_methods.setInt64$3(t3, 0, value, $.$get$Endian_host());
        }
      } else if (typeof value == "string") {
        t1 = buffer._buffer;
        t1.__engine$_add$1(0, 7);
        bytes = B.C_Utf8Encoder.convert$1(value);
        _this.writeSize$2(buffer, bytes.length);
        t1.addAll$1(0, bytes);
      } else if (type$.Uint8List._is(value)) {
        t1 = buffer._buffer;
        t1.__engine$_add$1(0, 8);
        _this.writeSize$2(buffer, value.length);
        t1.addAll$1(0, value);
      } else if (type$.Int32List._is(value)) {
        t1 = buffer._buffer;
        t1.__engine$_add$1(0, 9);
        t2 = value.length;
        _this.writeSize$2(buffer, t2);
        buffer._alignTo$1(4);
        t1.addAll$1(0, A.NativeUint8List_NativeUint8List$view(value.buffer, value.byteOffset, 4 * t2));
      } else if (type$.Float64List._is(value)) {
        t1 = buffer._buffer;
        t1.__engine$_add$1(0, 11);
        t2 = value.length;
        _this.writeSize$2(buffer, t2);
        buffer._alignTo$1(8);
        t1.addAll$1(0, A.NativeUint8List_NativeUint8List$view(value.buffer, value.byteOffset, 8 * t2));
      } else if (type$.List_dynamic._is(value)) {
        buffer._buffer.__engine$_add$1(0, 12);
        t1 = J.getInterceptor$asx(value);
        _this.writeSize$2(buffer, t1.get$length(value));
        for (t1 = t1.get$iterator(value); t1.moveNext$0();)
          _this.writeValue$2(0, buffer, t1.get$current(t1));
      } else if (type$.Map_dynamic_dynamic._is(value)) {
        buffer._buffer.__engine$_add$1(0, 13);
        t1 = J.getInterceptor$asx(value);
        _this.writeSize$2(buffer, t1.get$length(value));
        t1.forEach$1(value, new A.StandardMessageCodec_writeValue_closure(_this, buffer));
      } else
        throw A.wrapException(A.ArgumentError$value(value, null, null));
    },
    readValue$1(_, buffer) {
      if (buffer.__engine$_position >= buffer.data.byteLength)
        throw A.wrapException(B.FormatException_oCg);
      return this.readValueOfType$2(buffer.getUint8$0(0), buffer);
    },
    readValueOfType$2(type, buffer) {
      var result, value, $length, t1, list, i, t2, t3, _this = this;
      switch (type) {
        case 0:
          result = null;
          break;
        case 1:
          result = true;
          break;
        case 2:
          result = false;
          break;
        case 3:
          value = buffer.data.getInt32(buffer.__engine$_position, B.C_Endian === $.$get$Endian_host());
          buffer.__engine$_position += 4;
          result = value;
          break;
        case 4:
          result = buffer.getInt64$0(0);
          break;
        case 5:
          $length = _this.readSize$1(buffer);
          result = A.int_parse(B.Utf8Decoder_false.convert$1(buffer.getUint8List$1($length)), 16);
          break;
        case 6:
          buffer._alignTo$1(8);
          value = buffer.data.getFloat64(buffer.__engine$_position, B.C_Endian === $.$get$Endian_host());
          buffer.__engine$_position += 8;
          result = value;
          break;
        case 7:
          $length = _this.readSize$1(buffer);
          result = B.Utf8Decoder_false.convert$1(buffer.getUint8List$1($length));
          break;
        case 8:
          result = buffer.getUint8List$1(_this.readSize$1(buffer));
          break;
        case 9:
          $length = _this.readSize$1(buffer);
          buffer._alignTo$1(4);
          t1 = buffer.data;
          list = A.NativeInt32List_NativeInt32List$view(t1.buffer, t1.byteOffset + buffer.__engine$_position, $length);
          buffer.__engine$_position = buffer.__engine$_position + 4 * $length;
          result = list;
          break;
        case 10:
          result = buffer.getInt64List$1(_this.readSize$1(buffer));
          break;
        case 11:
          $length = _this.readSize$1(buffer);
          buffer._alignTo$1(8);
          t1 = buffer.data;
          list = A.NativeFloat64List_NativeFloat64List$view(t1.buffer, t1.byteOffset + buffer.__engine$_position, $length);
          buffer.__engine$_position = buffer.__engine$_position + 8 * $length;
          result = list;
          break;
        case 12:
          $length = _this.readSize$1(buffer);
          result = [];
          for (t1 = buffer.data, i = 0; i < $length; ++i) {
            t2 = buffer.__engine$_position;
            if (t2 >= t1.byteLength)
              A.throwExpression(B.FormatException_oCg);
            buffer.__engine$_position = t2 + 1;
            result.push(_this.readValueOfType$2(t1.getUint8(t2), buffer));
          }
          break;
        case 13:
          $length = _this.readSize$1(buffer);
          t1 = type$.dynamic;
          result = A.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
          for (t1 = buffer.data, i = 0; i < $length; ++i) {
            t2 = buffer.__engine$_position;
            if (t2 >= t1.byteLength)
              A.throwExpression(B.FormatException_oCg);
            buffer.__engine$_position = t2 + 1;
            t2 = _this.readValueOfType$2(t1.getUint8(t2), buffer);
            t3 = buffer.__engine$_position;
            if (t3 >= t1.byteLength)
              A.throwExpression(B.FormatException_oCg);
            buffer.__engine$_position = t3 + 1;
            result.$indexSet(0, t2, _this.readValueOfType$2(t1.getUint8(t3), buffer));
          }
          break;
        default:
          throw A.wrapException(B.FormatException_oCg);
      }
      return result;
    },
    writeSize$2(buffer, value) {
      var t1, t2, t3;
      if (value < 254)
        buffer._buffer.__engine$_add$1(0, value);
      else {
        t1 = buffer._buffer;
        t2 = buffer._eightBytes;
        t3 = buffer._eightBytesAsList;
        if (value <= 65535) {
          t1.__engine$_add$1(0, 254);
          t2.setUint16(0, value, B.C_Endian === $.$get$Endian_host());
          t1.addAll$3(0, t3, 0, 2);
        } else {
          t1.__engine$_add$1(0, 255);
          t2.setUint32(0, value, B.C_Endian === $.$get$Endian_host());
          t1.addAll$3(0, t3, 0, 4);
        }
      }
    },
    readSize$1(buffer) {
      var value = buffer.getUint8$0(0);
      switch (value) {
        case 254:
          value = buffer.data.getUint16(buffer.__engine$_position, B.C_Endian === $.$get$Endian_host());
          buffer.__engine$_position += 2;
          return value;
        case 255:
          value = buffer.data.getUint32(buffer.__engine$_position, B.C_Endian === $.$get$Endian_host());
          buffer.__engine$_position += 4;
          return value;
        default:
          return value;
      }
    }
  };
  A.StandardMessageCodec_writeValue_closure.prototype = {
    call$2(key, value) {
      var t1 = this.$this,
        t2 = this.buffer;
      t1.writeValue$2(0, t2, key);
      t1.writeValue$2(0, t2, value);
    },
    $signature: 28
  };
  A.StandardMethodCodec.prototype = {
    decodeMethodCall$1(methodCall) {
      var buffer = new A.ReadBuffer(methodCall),
        method = B.C_StandardMessageCodec.readValue$1(0, buffer),
        $arguments = B.C_StandardMessageCodec.readValue$1(0, buffer);
      if (typeof method == "string" && buffer.__engine$_position >= methodCall.byteLength)
        return new A.MethodCall(method, $arguments);
      else
        throw A.wrapException(B.FormatException_Qi2);
    },
    encodeSuccessEnvelope$1(result) {
      var buffer = A.WriteBuffer_WriteBuffer();
      buffer._buffer.__engine$_add$1(0, 0);
      B.C_StandardMessageCodec.writeValue$2(0, buffer, result);
      return buffer.done$0();
    },
    encodeErrorEnvelope$3$code$details$message(code, details, message) {
      var buffer = A.WriteBuffer_WriteBuffer();
      buffer._buffer.__engine$_add$1(0, 1);
      B.C_StandardMessageCodec.writeValue$2(0, buffer, code);
      B.C_StandardMessageCodec.writeValue$2(0, buffer, message);
      B.C_StandardMessageCodec.writeValue$2(0, buffer, details);
      return buffer.done$0();
    }
  };
  A.WriteBuffer.prototype = {
    _alignTo$1(alignment) {
      var t2, i,
        t1 = this._buffer,
        mod = B.JSInt_methods.$mod(t1.__engine$_length, alignment);
      if (mod !== 0)
        for (t2 = alignment - mod, i = 0; i < t2; ++i)
          t1.__engine$_add$1(0, 0);
    },
    done$0() {
      var t1, t2;
      this._debugFinalized = true;
      t1 = this._buffer;
      t2 = t1._buffer;
      return A.NativeByteData_NativeByteData$view(t2.buffer, 0, t1.__engine$_length * t2.BYTES_PER_ELEMENT);
    }
  };
  A.ReadBuffer.prototype = {
    getUint8$0(_) {
      return this.data.getUint8(this.__engine$_position++);
    },
    getInt64$0(_) {
      B.NativeByteData_methods.getInt64$2(this.data, this.__engine$_position, $.$get$Endian_host());
    },
    getUint8List$1($length) {
      var t1 = this.data,
        list = A.NativeUint8List_NativeUint8List$view(t1.buffer, t1.byteOffset + this.__engine$_position, $length);
      this.__engine$_position += $length;
      return list;
    },
    getInt64List$1($length) {
      var t1;
      this._alignTo$1(8);
      t1 = this.data;
      B.NativeByteBuffer_methods.asInt64List$2(t1.buffer, t1.byteOffset + this.__engine$_position, $length);
    },
    _alignTo$1(alignment) {
      var t1 = this.__engine$_position,
        mod = B.JSInt_methods.$mod(t1, alignment);
      if (mod !== 0)
        this.__engine$_position = t1 + (alignment - mod);
    }
  };
  A.HtmlFontCollection.prototype = {
    loadAssetFonts$1(manifest) {
      return this.loadAssetFonts$body$HtmlFontCollection(manifest);
    },
    loadAssetFonts$body$HtmlFontCollection(manifest) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.AssetFontsResult),
        $async$returnValue, $async$self = this, t1, t2, _i, family, t3, t4, _i0, loadedFonts, fontFailures, _0_1, _0_2, asset, error, pendingFonts, $async$temp1;
      var $async$loadAssetFonts$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              pendingFonts = A._setArrayType([], type$.JSArray_Future_Record_2_String_and_nullable_FontLoadError);
              for (t1 = manifest.families, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
                family = t1[_i];
                for (t3 = family.fontAssets, t4 = t3.length, _i0 = 0; _i0 < t3.length; t3.length === t4 || (0, A.throwConcurrentModificationError)(t3), ++_i0)
                  pendingFonts.push(new A.HtmlFontCollection_loadAssetFonts_closure($async$self, t3[_i0], family).call$0());
              }
              loadedFonts = A._setArrayType([], type$.JSArray_String);
              fontFailures = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.FontLoadError);
              $async$temp1 = J;
              $async$goto = 3;
              return A._asyncAwait(A.Future_wait(pendingFonts, type$.Record_2_String_and_nullable_FontLoadError), $async$loadAssetFonts$1);
            case 3:
              // returning from await.
              t1 = $async$temp1.get$iterator$ax($async$result), t2 = type$.nullable_FontLoadError;
            case 4:
              // for condition
              if (!t1.moveNext$0()) {
                // goto after for
                $async$goto = 5;
                break;
              }
              t3 = t1.get$current(t1);
              _0_1 = A._InitializedCell$named("#0#1", new A.HtmlFontCollection_loadAssetFonts_closure0(t3));
              _0_2 = A._InitializedCell$named("#0#2", new A.HtmlFontCollection_loadAssetFonts_closure1(t3));
              if (typeof _0_1._readFinal$0() == "string") {
                asset = _0_1._readFinal$0();
                if (t2._is(_0_2._readFinal$0())) {
                  error = _0_2._readFinal$0();
                  t3 = true;
                } else {
                  error = null;
                  t3 = false;
                }
              } else {
                asset = null;
                error = null;
                t3 = false;
              }
              if (!t3)
                throw A.wrapException(A.StateError$("Pattern matching error"));
              if (error == null)
                loadedFonts.push(asset);
              else
                fontFailures.$indexSet(0, asset, error);
              // goto for condition
              $async$goto = 4;
              break;
            case 5:
              // after for
              $async$returnValue = new A.AssetFontsResult();
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$loadAssetFonts$1, $async$completer);
    },
    clear$0(_) {
      self.document.fonts.clear();
    },
    _loadFontAsset$3(family, asset, descriptors) {
      return this._loadFontAsset$body$HtmlFontCollection(family, asset, descriptors);
    },
    _loadFontAsset$body$HtmlFontCollection(family, asset, descriptors) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.nullable_FontLoadError),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$self = this, error, error0, font, t1, exception, t2, _i, fontFaces, errors, $async$exception, $async$exception1, $async$temp1, $async$temp2;
      var $async$_loadFontAsset$3 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              fontFaces = A._setArrayType([], type$.JSArray_JavaScriptObject);
              errors = A._setArrayType([], type$.JSArray_FontLoadError);
              $async$handler = 4;
              t1 = $.$get$HtmlFontCollection_startWithDigit();
              $async$goto = t1._nativeRegExp.test(family) || $.$get$HtmlFontCollection_notPunctuation().stringMatch$1(family) !== family ? 7 : 8;
              break;
            case 7:
              // then
              $async$temp1 = J;
              $async$temp2 = fontFaces;
              $async$goto = 9;
              return A._asyncAwait($async$self._loadFontFace$3("'" + family + "'", asset, descriptors), $async$_loadFontAsset$3);
            case 9:
              // returning from await.
              $async$temp1.add$1$ax($async$temp2, $async$result);
            case 8:
              // join
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              t1 = A.unwrapException($async$exception);
              if (t1 instanceof A.FontLoadError) {
                error = t1;
                J.add$1$ax(errors, error);
              } else
                throw $async$exception;
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
              $async$handler = 11;
              $async$temp1 = J;
              $async$temp2 = fontFaces;
              $async$goto = 14;
              return A._asyncAwait($async$self._loadFontFace$3(family, asset, descriptors), $async$_loadFontAsset$3);
            case 14:
              // returning from await.
              $async$temp1.add$1$ax($async$temp2, $async$result);
              $async$handler = 2;
              // goto after finally
              $async$goto = 13;
              break;
            case 11:
              // catch
              $async$handler = 10;
              $async$exception1 = $async$currentError;
              t1 = A.unwrapException($async$exception1);
              if (t1 instanceof A.FontLoadError) {
                error0 = t1;
                J.add$1$ax(errors, error0);
              } else
                throw $async$exception1;
              // goto after finally
              $async$goto = 13;
              break;
            case 10:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 13:
              // after finally
              if (J.get$length$asx(fontFaces) === 0) {
                $async$returnValue = J.get$first$ax(errors);
                // goto return
                $async$goto = 1;
                break;
              }
              try {
                for (t1 = fontFaces, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
                  font = t1[_i];
                  self.document.fonts.add(font);
                }
              } catch (exception) {
                $async$returnValue = new A.FontInvalidDataError();
                // goto return
                $async$goto = 1;
                break;
              }
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return A._asyncStartSync($async$_loadFontAsset$3, $async$completer);
    },
    _loadFontFace$3(family, asset, descriptors) {
      return this._loadFontFace$body$HtmlFontCollection(family, asset, descriptors);
    },
    _loadFontFace$body$HtmlFontCollection(family, asset, descriptors) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.JavaScriptObject),
        $async$returnValue, $async$handler = 2, $async$currentError, fontFace, e, t1, exception, $async$exception;
      var $async$_loadFontFace$3 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$handler = 4;
              fontFace = A.createDomFontFace(family, "url(" + $._assetManager.getAssetUrl$1(asset) + ")", descriptors);
              $async$goto = 7;
              return A._asyncAwait(A.promiseToFuture(fontFace.load(), type$.JavaScriptObject), $async$_loadFontFace$3);
            case 7:
              // returning from await.
              t1 = $async$result;
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              e = A.unwrapException($async$exception);
              $.$get$printWarning().call$1('Error while loading font family "' + family + '":\n' + A.S(e));
              t1 = A.FontDownloadError$(asset, e);
              throw A.wrapException(t1);
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return A._asyncStartSync($async$_loadFontFace$3, $async$completer);
    }
  };
  A.HtmlFontCollection_loadAssetFonts_closure.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Record_2_String_and_nullable_FontLoadError),
        $async$returnValue, $async$self = this, t1, t2, $async$temp1, $async$temp2;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.fontAsset;
              t2 = t1.asset;
              $async$temp1 = A;
              $async$temp2 = t2;
              $async$goto = 3;
              return A._asyncAwait($async$self.$this._loadFontAsset$3($async$self.family.name, t2, t1.descriptors), $async$call$0);
            case 3:
              // returning from await.
              $async$returnValue = new $async$temp1._Record_2($async$temp2, $async$result);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 45
  };
  A.HtmlFontCollection_loadAssetFonts_closure0.prototype = {
    call$0() {
      return this._0_0._0;
    },
    $signature: 10
  };
  A.HtmlFontCollection_loadAssetFonts_closure1.prototype = {
    call$0() {
      return this._0_0._1;
    },
    $signature: 46
  };
  A.UnicodeRange.prototype = {};
  A.UnicodePropertyLookup.prototype = {};
  A.BrowserAutofillHints.prototype = {};
  A.CompositionAwareMixin.prototype = {
    get$_compositionStartListener() {
      var result, _this = this,
        value = _this.CompositionAwareMixin___CompositionAwareMixin__compositionStartListener_FI;
      if (value === $) {
        result = type$.JavaScriptObject._as(A.allowInterop(_this.get$_handleCompositionStart()));
        _this.CompositionAwareMixin___CompositionAwareMixin__compositionStartListener_FI !== $ && A.throwUnnamedLateFieldADI();
        _this.CompositionAwareMixin___CompositionAwareMixin__compositionStartListener_FI = result;
        value = result;
      }
      return value;
    },
    get$_compositionUpdateListener() {
      var result, _this = this,
        value = _this.CompositionAwareMixin___CompositionAwareMixin__compositionUpdateListener_FI;
      if (value === $) {
        result = type$.JavaScriptObject._as(A.allowInterop(_this.get$_handleCompositionUpdate()));
        _this.CompositionAwareMixin___CompositionAwareMixin__compositionUpdateListener_FI !== $ && A.throwUnnamedLateFieldADI();
        _this.CompositionAwareMixin___CompositionAwareMixin__compositionUpdateListener_FI = result;
        value = result;
      }
      return value;
    },
    get$_compositionEndListener() {
      var result, _this = this,
        value = _this.CompositionAwareMixin___CompositionAwareMixin__compositionEndListener_FI;
      if (value === $) {
        result = type$.JavaScriptObject._as(A.allowInterop(_this.get$_handleCompositionEnd()));
        _this.CompositionAwareMixin___CompositionAwareMixin__compositionEndListener_FI !== $ && A.throwUnnamedLateFieldADI();
        _this.CompositionAwareMixin___CompositionAwareMixin__compositionEndListener_FI = result;
        value = result;
      }
      return value;
    },
    addCompositionEventHandlers$1(domElement) {
      A.DomEventTargetExtension_addEventListener(domElement, "compositionstart", this.get$_compositionStartListener(), null);
      A.DomEventTargetExtension_addEventListener(domElement, "compositionupdate", this.get$_compositionUpdateListener(), null);
      A.DomEventTargetExtension_addEventListener(domElement, "compositionend", this.get$_compositionEndListener(), null);
    },
    _handleCompositionStart$1($event) {
      this.CompositionAwareMixin_composingText = null;
    },
    _handleCompositionUpdate$1($event) {
      var t1,
        $constructor = globalThis.CompositionEvent;
      if ($constructor != null && $event instanceof $constructor) {
        t1 = $event.data;
        this.CompositionAwareMixin_composingText = t1 == null ? null : t1;
      }
    },
    _handleCompositionEnd$1($event) {
      this.CompositionAwareMixin_composingText = null;
    },
    determineCompositionState$1(editingState) {
      var t1, t2, composingBase;
      if (this.CompositionAwareMixin_composingText == null || editingState.text == null)
        return editingState;
      t1 = editingState.extentOffset;
      t2 = this.CompositionAwareMixin_composingText.length;
      composingBase = t1 - t2;
      if (composingBase < 0)
        return editingState;
      return A.EditingState$(editingState.baseOffset, composingBase, composingBase + t2, t1, editingState.text);
    }
  };
  A.EngineInputAction.prototype = {
    configureInputAction$1(domElement) {
      var t1;
      if (this.get$enterkeyhintAttribute() == null)
        return;
      t1 = $.$get$_operatingSystem();
      if (t1 !== B.OperatingSystem_0)
        t1 = t1 === B.OperatingSystem_1 || this.get$enterkeyhintAttribute() == null;
      else
        t1 = true;
      if (t1) {
        t1 = this.get$enterkeyhintAttribute();
        t1.toString;
        t1 = A.jsify(t1);
        if (t1 == null)
          t1 = type$.Object._as(t1);
        domElement.setAttribute("enterkeyhint", t1);
      }
    }
  };
  A.NoInputAction.prototype = {
    get$enterkeyhintAttribute() {
      return null;
    }
  };
  A.EnterInputAction.prototype = {
    get$enterkeyhintAttribute() {
      return "enter";
    }
  };
  A.DoneInputAction.prototype = {
    get$enterkeyhintAttribute() {
      return "done";
    }
  };
  A.GoInputAction.prototype = {
    get$enterkeyhintAttribute() {
      return "go";
    }
  };
  A.NextInputAction.prototype = {
    get$enterkeyhintAttribute() {
      return "next";
    }
  };
  A.PreviousInputAction.prototype = {
    get$enterkeyhintAttribute() {
      return "previous";
    }
  };
  A.SearchInputAction.prototype = {
    get$enterkeyhintAttribute() {
      return "search";
    }
  };
  A.SendInputAction.prototype = {
    get$enterkeyhintAttribute() {
      return "send";
    }
  };
  A.EngineInputType.prototype = {
    createDomElement$0() {
      return A.DomDocumentExtension_createElement(self.document, "input");
    },
    configureInputMode$1(domElement) {
      var t1;
      if (this.get$inputmodeAttribute() == null)
        return;
      t1 = $.$get$_operatingSystem();
      if (t1 !== B.OperatingSystem_0)
        t1 = t1 === B.OperatingSystem_1 || this.get$inputmodeAttribute() === "none";
      else
        t1 = true;
      if (t1) {
        t1 = this.get$inputmodeAttribute();
        t1.toString;
        t1 = A.jsify(t1);
        if (t1 == null)
          t1 = type$.Object._as(t1);
        domElement.setAttribute("inputmode", t1);
      }
    }
  };
  A.NoTextInputType.prototype = {
    get$inputmodeAttribute() {
      return "none";
    }
  };
  A.TextInputType.prototype = {
    get$inputmodeAttribute() {
      return null;
    }
  };
  A.NumberInputType.prototype = {
    get$inputmodeAttribute() {
      return "numeric";
    }
  };
  A.DecimalInputType.prototype = {
    get$inputmodeAttribute() {
      return "decimal";
    }
  };
  A.PhoneInputType.prototype = {
    get$inputmodeAttribute() {
      return "tel";
    }
  };
  A.EmailInputType.prototype = {
    get$inputmodeAttribute() {
      return "email";
    }
  };
  A.UrlInputType.prototype = {
    get$inputmodeAttribute() {
      return "url";
    }
  };
  A.MultilineInputType.prototype = {
    get$inputmodeAttribute() {
      return null;
    },
    createDomElement$0() {
      return A.DomDocumentExtension_createElement(self.document, "textarea");
    }
  };
  A.TextCapitalization.prototype = {
    _enumToString$0() {
      return "TextCapitalization." + this._core$_name;
    }
  };
  A.TextCapitalizationConfig.prototype = {
    setAutocapitalizeAttribute$1(domElement) {
      var t1, autocapitalize, $constructor,
        _s9_ = "sentences";
      switch (this.textCapitalization.index) {
        case 0:
          t1 = $.$get$_browserEngine();
          autocapitalize = t1 === B.BrowserEngine_1 ? _s9_ : "words";
          break;
        case 2:
          autocapitalize = "characters";
          break;
        case 1:
          autocapitalize = _s9_;
          break;
        case 3:
        default:
          autocapitalize = "off";
          break;
      }
      $constructor = globalThis.HTMLInputElement;
      if ($constructor != null && domElement instanceof $constructor) {
        t1 = A.jsify(autocapitalize);
        if (t1 == null)
          t1 = type$.Object._as(t1);
        domElement.setAttribute("autocapitalize", t1);
      } else {
        $constructor = globalThis.HTMLTextAreaElement;
        if ($constructor != null && domElement instanceof $constructor) {
          t1 = A.jsify(autocapitalize);
          if (t1 == null)
            t1 = type$.Object._as(t1);
          domElement.setAttribute("autocapitalize", t1);
        }
      }
    }
  };
  A.EngineAutofillForm.prototype = {
    addInputEventListeners$0() {
      var t1 = this.elements,
        subscriptions = A._setArrayType([], type$.JSArray_DomSubscription);
      new A.LinkedHashMapKeyIterable(t1, A._instanceType(t1)._eval$1("LinkedHashMapKeyIterable<1>")).forEach$1(0, new A.EngineAutofillForm_addInputEventListeners_addSubscriptionForKey(this, subscriptions));
      return subscriptions;
    }
  };
  A.EngineAutofillForm_addInputEventListeners_addSubscriptionForKey.prototype = {
    call$1(key) {
      var t1 = this.$this,
        t2 = t1.elements.$index(0, key);
      t2.toString;
      this.subscriptions.push(A.DomSubscription$(t2, "input", new A.EngineAutofillForm_addInputEventListeners_addSubscriptionForKey_closure(t1, key, t2)));
    },
    $signature: 47
  };
  A.EngineAutofillForm_addInputEventListeners_addSubscriptionForKey_closure.prototype = {
    call$1(e) {
      var newEditingState,
        t1 = this.$this.items,
        t2 = this.key;
      if (t1.$index(0, t2) == null)
        throw A.wrapException(A.StateError$("AutofillInfo must have a valid uniqueIdentifier."));
      else {
        t1 = t1.$index(0, t2);
        t1.toString;
        newEditingState = A.EditingState_EditingState$fromDomElement(this.element);
        $.$get$EnginePlatformDispatcher__instance().invokeOnPlatformMessage$3("flutter/textinput", B.C_JSONMethodCodec.encodeMethodCall$1(new A.MethodCall("TextInputClient.updateEditingStateWithTag", [0, A.LinkedHashMap_LinkedHashMap$_literal([t1.uniqueIdentifier, newEditingState.toFlutter$0()], type$.nullable_String, type$.dynamic)])), A._engine___emptyCallback$closure());
      }
    },
    $signature: 1
  };
  A.AutofillInfo.prototype = {
    applyToDomElement$2$focusedElement(domElement, focusedElement) {
      var t1, t2,
        _s8_ = "password",
        autofillHint = this.autofillHint,
        placeholder = this.placeholder,
        $constructor = globalThis.HTMLInputElement;
      if ($constructor != null && domElement instanceof $constructor) {
        if (placeholder != null)
          domElement.placeholder = placeholder;
        t1 = autofillHint == null;
        if (!t1) {
          domElement.name = autofillHint;
          domElement.id = autofillHint;
          if (B.JSString_methods.contains$1(autofillHint, _s8_))
            A.DomHTMLInputElementExtension_set_type(domElement, _s8_);
          else
            A.DomHTMLInputElementExtension_set_type(domElement, "text");
        }
        t1 = t1 ? "on" : autofillHint;
        domElement.autocomplete = t1;
      } else {
        $constructor = globalThis.HTMLTextAreaElement;
        if ($constructor != null && domElement instanceof $constructor) {
          if (placeholder != null)
            domElement.placeholder = placeholder;
          t1 = autofillHint == null;
          if (!t1) {
            domElement.name = autofillHint;
            domElement.id = autofillHint;
          }
          t2 = A.jsify(t1 ? "on" : autofillHint);
          t1 = t2 == null ? type$.Object._as(t2) : t2;
          domElement.setAttribute("autocomplete", t1);
        }
      }
    },
    applyToDomElement$1(domElement) {
      return this.applyToDomElement$2$focusedElement(domElement, false);
    }
  };
  A.TextEditingDeltaState.prototype = {};
  A.EditingState.prototype = {
    get$minOffset() {
      return Math.min(this.baseOffset, this.extentOffset);
    },
    get$maxOffset() {
      return Math.max(this.baseOffset, this.extentOffset);
    },
    toFlutter$0() {
      var _this = this;
      return A.LinkedHashMap_LinkedHashMap$_literal(["text", _this.text, "selectionBase", _this.baseOffset, "selectionExtent", _this.extentOffset, "composingBase", _this.composingBaseOffset, "composingExtent", _this.composingExtentOffset], type$.String, type$.dynamic);
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.text, _this.baseOffset, _this.extentOffset, _this.composingBaseOffset, _this.composingExtentOffset, B.C_SentinelValue, B.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (A.getRuntimeTypeOfDartObject(_this) !== J.get$runtimeType$(other))
        return false;
      return other instanceof A.EditingState && other.text == _this.text && other.get$minOffset() === _this.get$minOffset() && other.get$maxOffset() === _this.get$maxOffset() && other.composingBaseOffset === _this.composingBaseOffset && other.composingExtentOffset === _this.composingExtentOffset;
    },
    toString$0(_) {
      return this.super$Object$toString(0);
    },
    applyToDomElement$1(domElement) {
      var t1, t2, _this = this,
        $constructor = globalThis.HTMLInputElement;
      if ($constructor != null && domElement instanceof $constructor) {
        domElement.toString;
        t1 = _this.text;
        if (t1 == null)
          t1 = null;
        domElement.value = t1;
        t1 = _this.get$minOffset();
        t2 = _this.get$maxOffset();
        domElement.setSelectionRange(t1, t2);
      } else {
        $constructor = globalThis.HTMLTextAreaElement;
        if ($constructor != null && domElement instanceof $constructor) {
          domElement.toString;
          A.DomHTMLTextAreaElementExtension_set_value(domElement, _this.text);
          t1 = _this.get$minOffset();
          t2 = _this.get$maxOffset();
          domElement.setSelectionRange(t1, t2);
        } else {
          t1 = domElement == null ? null : A.JSStringToString_get_toDart(A.getProperty(domElement, "tagName"));
          throw A.wrapException(A.UnsupportedError$("Unsupported DOM element type: <" + A.S(t1) + "> (" + J.get$runtimeType$(domElement).toString$0(0) + ")"));
        }
      }
    }
  };
  A.InputConfiguration.prototype = {};
  A.GloballyPositionedTextEditingStrategy.prototype = {
    placeElement$0() {
      var t2, _this = this,
        t1 = _this.geometry;
      if (t1 != null) {
        t2 = _this.domElement;
        t2.toString;
        t1.applyToDomElement$1(t2);
      }
      t1 = _this.__DefaultTextEditingStrategy_inputConfiguration_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      if (t1.autofillGroup != null) {
        _this.placeForm$0();
        t1 = _this.lastEditingState;
        if (t1 != null)
          t1.applyToDomElement$1(_this.domElement);
        _this.get$focusedFormElement().focus();
        _this.domElement.focus();
      }
    }
  };
  A.SafariDesktopTextEditingStrategy.prototype = {
    placeElement$0() {
      var t2, _this = this,
        t1 = _this.geometry;
      if (t1 != null) {
        t2 = _this.domElement;
        t2.toString;
        t1.applyToDomElement$1(t2);
      }
      t1 = _this.__DefaultTextEditingStrategy_inputConfiguration_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      if (t1.autofillGroup != null)
        A.Timer_Timer(B.Duration_0, new A.SafariDesktopTextEditingStrategy_placeElement_closure(_this));
    },
    initializeElementPlacement$0() {
      if (this.geometry != null)
        this.placeElement$0();
      this.domElement.focus();
    }
  };
  A.SafariDesktopTextEditingStrategy_placeElement_closure.prototype = {
    call$0() {
      var t2,
        t1 = this.$this;
      t1.placeForm$0();
      t1.get$focusedFormElement().focus();
      t1.domElement.focus();
      t2 = t1.lastEditingState;
      if (t2 != null) {
        t1 = t1.domElement;
        t1.toString;
        t2.applyToDomElement$1(t1);
      }
    },
    $signature: 0
  };
  A.DefaultTextEditingStrategy.prototype = {
    get$editingDeltaState() {
      var _null = null,
        t1 = this._editingDeltaState;
      if (t1 == null) {
        t1 = this.lastEditingState.text;
        t1.toString;
        t1 = this._editingDeltaState = new A.TextEditingDeltaState(t1, "", -1, -1, _null, _null, _null, _null);
      }
      return t1;
    },
    get$focusedFormElement() {
      var t1 = this.__DefaultTextEditingStrategy_inputConfiguration_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1 = t1.autofillGroup;
      return t1 == null ? null : t1.formElement;
    },
    initializeTextEditing$3$onAction$onChange(inputConfig, onAction, onChange) {
      var t1, elementStyle, t2, _this = this, _s4_ = "none",
        _s11_ = "transparent";
      _this.domElement = inputConfig.inputType.createDomElement$0();
      _this.applyConfiguration$1(inputConfig);
      t1 = _this.domElement;
      t1.classList.add("flt-text-editing");
      elementStyle = t1.style;
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "forced-color-adjust", _s4_);
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "white-space", "pre-wrap");
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "align-content", "center");
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "position", "absolute");
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "top", "0");
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "left", "0");
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "padding", "0");
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "opacity", "1");
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "color", _s11_);
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "background-color", _s11_);
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "background", _s11_);
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "caret-color", _s11_);
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "outline", _s4_);
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "border", _s4_);
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "resize", _s4_);
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "text-shadow", _s4_);
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "overflow", "hidden");
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "transform-origin", "0 0 0");
      t2 = $.$get$_browserEngine();
      if (t2 !== B.BrowserEngine_0)
        t2 = t2 === B.BrowserEngine_1;
      else
        t2 = true;
      if (t2)
        t1.classList.add("transparentTextEditing");
      t1 = _this.style;
      if (t1 != null) {
        t2 = _this.domElement;
        t2.toString;
        t1.applyToDomElement$1(t2);
      }
      t1 = _this.__DefaultTextEditingStrategy_inputConfiguration_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      if (t1.autofillGroup == null) {
        t1 = $._flutterViewEmbedder.__FlutterViewEmbedder__textEditingHostNode_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        t2 = _this.domElement;
        t2.toString;
        t1.append(t2);
        _this._appendedToForm = false;
      }
      _this.initializeElementPlacement$0();
      _this.isEnabled = true;
      _this.onChange = onChange;
      _this.onAction = onAction;
    },
    applyConfiguration$1(config) {
      var t1, t2, action, autofill, autocorrectValue, _this = this;
      _this.__DefaultTextEditingStrategy_inputConfiguration_A = config;
      t1 = _this.domElement;
      if (config.readOnly) {
        t1.toString;
        t2 = A.jsify("readonly");
        if (t2 == null)
          t2 = type$.Object._as(t2);
        t1.setAttribute("readonly", t2);
      } else
        t1.removeAttribute("readonly");
      if (config.obscureText) {
        t1 = _this.domElement;
        t1.toString;
        t2 = A.jsify("password");
        if (t2 == null)
          t2 = type$.Object._as(t2);
        t1.setAttribute("type", t2);
      }
      if (config.inputType === B.C_NoTextInputType) {
        t1 = _this.domElement;
        t1.toString;
        t2 = A.jsify("none");
        if (t2 == null)
          t2 = type$.Object._as(t2);
        t1.setAttribute("inputmode", t2);
      }
      action = A.EngineInputAction_fromName(config.inputAction);
      t1 = _this.domElement;
      t1.toString;
      action.configureInputAction$1(t1);
      autofill = config.autofill;
      t1 = _this.domElement;
      if (autofill != null) {
        t1.toString;
        autofill.applyToDomElement$2$focusedElement(t1, true);
      } else {
        t1.toString;
        t2 = A.jsify("off");
        if (t2 == null)
          t2 = type$.Object._as(t2);
        t1.setAttribute("autocomplete", t2);
      }
      autocorrectValue = config.autocorrect ? "on" : "off";
      t1 = _this.domElement;
      t1.toString;
      t2 = A.jsify(autocorrectValue);
      if (t2 == null)
        t2 = type$.Object._as(t2);
      t1.setAttribute("autocorrect", t2);
    },
    initializeElementPlacement$0() {
      this.placeElement$0();
    },
    addEventHandlers$0() {
      var t2, t3, _this = this,
        t1 = _this.__DefaultTextEditingStrategy_inputConfiguration_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1 = t1.autofillGroup;
      if (t1 != null)
        B.JSArray_methods.addAll$1(_this.subscriptions, t1.addInputEventListeners$0());
      t1 = _this.subscriptions;
      t2 = _this.domElement;
      t2.toString;
      t3 = _this.get$handleChange();
      t1.push(A.DomSubscription$(t2, "input", t3));
      t2 = _this.domElement;
      t2.toString;
      t1.push(A.DomSubscription$(t2, "keydown", _this.get$maybeSendAction()));
      t1.push(A.DomSubscription$(self.document, "selectionchange", t3));
      t3 = _this.domElement;
      t3.toString;
      A.DomEventTargetExtension_addEventListener(t3, "beforeinput", type$.JavaScriptObject._as(A.allowInterop(_this.get$handleBeforeInput())), null);
      t3 = _this.domElement;
      t3.toString;
      _this.addCompositionEventHandlers$1(t3);
      t3 = _this.domElement;
      t3.toString;
      t1.push(A.DomSubscription$(t3, "blur", new A.DefaultTextEditingStrategy_addEventHandlers_closure(_this)));
      _this.preventDefaultForMouseEvents$0();
    },
    updateElementPlacement$1(textGeometry) {
      this.geometry = textGeometry;
      if (this.isEnabled)
        this.placeElement$0();
    },
    updateElementStyle$1(textStyle) {
      var t1;
      this.style = textStyle;
      if (this.isEnabled) {
        t1 = this.domElement;
        t1.toString;
        textStyle.applyToDomElement$1(t1);
      }
    },
    disable$0(_) {
      var t1, i, t2, _this = this, _null = null;
      _this.isEnabled = false;
      _this.geometry = _this.style = _this._editingDeltaState = _this.lastEditingState = null;
      for (t1 = _this.subscriptions, i = 0; i < t1.length; ++i) {
        t2 = t1[i];
        t2.target.removeEventListener(t2.type, t2.listener);
      }
      B.JSArray_methods.clear$0(t1);
      t1 = _this.domElement;
      t1.toString;
      A.DomEventTargetExtension_removeEventListener(t1, "compositionstart", _this.get$_compositionStartListener(), _null);
      A.DomEventTargetExtension_removeEventListener(t1, "compositionupdate", _this.get$_compositionUpdateListener(), _null);
      A.DomEventTargetExtension_removeEventListener(t1, "compositionend", _this.get$_compositionEndListener(), _null);
      if (_this._appendedToForm) {
        t1 = _this.__DefaultTextEditingStrategy_inputConfiguration_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        t1 = t1.autofillGroup;
        t1 = (t1 == null ? _null : t1.formElement) != null;
      } else
        t1 = false;
      t2 = _this.domElement;
      if (t1) {
        t2.blur();
        t1 = _this.domElement;
        t1.toString;
        A._styleAutofillElements(t1, true, false, true);
        t1 = _this.__DefaultTextEditingStrategy_inputConfiguration_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        t1 = t1.autofillGroup;
        if (t1 != null) {
          t2 = t1.formIdentifier;
          t1 = t1.formElement;
          $.formsOnTheDom.$indexSet(0, t2, t1);
          A._styleAutofillElements(t1, true, false, true);
        }
      } else
        t2.remove();
      _this.domElement = null;
    },
    setEditingState$1(editingState) {
      var t1;
      this.lastEditingState = editingState;
      if (this.isEnabled)
        t1 = !(editingState.baseOffset >= 0 && editingState.extentOffset >= 0);
      else
        t1 = true;
      if (t1)
        return;
      editingState.applyToDomElement$1(this.domElement);
    },
    placeElement$0() {
      this.domElement.focus();
    },
    placeForm$0() {
      var t2, t3,
        t1 = this.__DefaultTextEditingStrategy_inputConfiguration_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1 = t1.autofillGroup;
      t1.toString;
      t2 = this.domElement;
      t2.toString;
      t3 = t1.formElement;
      t3.insertBefore(t2, t1.insertionReferenceNode);
      t1 = $._flutterViewEmbedder.__FlutterViewEmbedder__textEditingHostNode_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.append(t3);
      this._appendedToForm = true;
    },
    handleChange$1($event) {
      var newEditingState, newTextEditingDeltaState, _this = this,
        t1 = _this.domElement;
      t1.toString;
      newEditingState = _this.determineCompositionState$1(A.EditingState_EditingState$fromDomElement(t1));
      t1 = _this.__DefaultTextEditingStrategy_inputConfiguration_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      if (t1.enableDeltaModel) {
        _this.get$editingDeltaState().composingOffset = newEditingState.composingBaseOffset;
        _this.get$editingDeltaState().composingExtent = newEditingState.composingExtentOffset;
        newTextEditingDeltaState = A.TextEditingDeltaState_inferDeltaState(newEditingState, _this.lastEditingState, _this.get$editingDeltaState());
      } else
        newTextEditingDeltaState = null;
      if (!newEditingState.$eq(0, _this.lastEditingState)) {
        _this.lastEditingState = newEditingState;
        _this._editingDeltaState = newTextEditingDeltaState;
        _this.onChange.call$2(newEditingState, newTextEditingDeltaState);
      }
      _this._editingDeltaState = null;
    },
    handleBeforeInput$1($event) {
      var t1, deltaOffset, deltaOffset0, _this = this,
        eventData = A._asStringQ($event.data),
        inputType = A._asStringQ($event.inputType);
      if (inputType != null) {
        t1 = _this.lastEditingState;
        deltaOffset = t1.baseOffset;
        deltaOffset0 = t1.extentOffset;
        deltaOffset = deltaOffset > deltaOffset0 ? deltaOffset : deltaOffset0;
        if (B.JSString_methods.contains$1(inputType, "delete")) {
          _this.get$editingDeltaState().deltaText = "";
          _this.get$editingDeltaState().deltaEnd = deltaOffset;
        } else if (inputType === "insertLineBreak") {
          _this.get$editingDeltaState().deltaText = "\n";
          _this.get$editingDeltaState().deltaStart = deltaOffset;
          _this.get$editingDeltaState().deltaEnd = deltaOffset;
        } else if (eventData != null) {
          _this.get$editingDeltaState().deltaText = eventData;
          _this.get$editingDeltaState().deltaStart = deltaOffset;
          _this.get$editingDeltaState().deltaEnd = deltaOffset;
        }
      }
    },
    maybeSendAction$1(e) {
      var t1, t2,
        $constructor = globalThis.KeyboardEvent;
      if ($constructor != null && e instanceof $constructor)
        if (e.keyCode === 13) {
          t1 = this.onAction;
          t1.toString;
          t2 = this.__DefaultTextEditingStrategy_inputConfiguration_A;
          t2 === $ && A.throwUnnamedLateFieldNI();
          t1.call$1(t2.inputAction);
          if (!(this.__DefaultTextEditingStrategy_inputConfiguration_A.inputType instanceof A.MultilineInputType))
            e.preventDefault();
        }
    },
    enable$3$onAction$onChange(_, inputConfig, onAction, onChange) {
      var t1, _this = this;
      _this.initializeTextEditing$3$onAction$onChange(inputConfig, onAction, onChange);
      _this.addEventHandlers$0();
      t1 = _this.lastEditingState;
      if (t1 != null)
        _this.setEditingState$1(t1);
      _this.domElement.focus();
    },
    preventDefaultForMouseEvents$0() {
      var _this = this,
        t1 = _this.subscriptions,
        t2 = _this.domElement;
      t2.toString;
      t1.push(A.DomSubscription$(t2, "mousedown", new A.DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure()));
      t2 = _this.domElement;
      t2.toString;
      t1.push(A.DomSubscription$(t2, "mouseup", new A.DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure0()));
      t2 = _this.domElement;
      t2.toString;
      t1.push(A.DomSubscription$(t2, "mousemove", new A.DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure1()));
    }
  };
  A.DefaultTextEditingStrategy_addEventHandlers_closure.prototype = {
    call$1(_) {
      this.$this.domElement.focus();
    },
    $signature: 1
  };
  A.DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure.prototype = {
    call$1(_) {
      _.preventDefault();
    },
    $signature: 1
  };
  A.DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure0.prototype = {
    call$1(_) {
      _.preventDefault();
    },
    $signature: 1
  };
  A.DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure1.prototype = {
    call$1(_) {
      _.preventDefault();
    },
    $signature: 1
  };
  A.IOSTextEditingStrategy.prototype = {
    initializeTextEditing$3$onAction$onChange(inputConfig, onAction, onChange) {
      var t1, _this = this;
      _this.super$DefaultTextEditingStrategy$initializeTextEditing(inputConfig, onAction, onChange);
      t1 = _this.domElement;
      t1.toString;
      inputConfig.inputType.configureInputMode$1(t1);
      t1 = _this.__DefaultTextEditingStrategy_inputConfiguration_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      if (t1.autofillGroup != null)
        _this.placeForm$0();
      t1 = _this.domElement;
      t1.toString;
      inputConfig.textCapitalization.setAutocapitalizeAttribute$1(t1);
    },
    initializeElementPlacement$0() {
      A.DomCSSStyleDeclarationExtension_setProperty(this.domElement.style, "transform", "translate(-9999px, -9999px)");
      this._canPosition = false;
    },
    addEventHandlers$0() {
      var t2, t3, blurWatch, _this = this,
        t1 = _this.__DefaultTextEditingStrategy_inputConfiguration_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1 = t1.autofillGroup;
      if (t1 != null)
        B.JSArray_methods.addAll$1(_this.subscriptions, t1.addInputEventListeners$0());
      t1 = _this.subscriptions;
      t2 = _this.domElement;
      t2.toString;
      t3 = _this.get$handleChange();
      t1.push(A.DomSubscription$(t2, "input", t3));
      t2 = _this.domElement;
      t2.toString;
      t1.push(A.DomSubscription$(t2, "keydown", _this.get$maybeSendAction()));
      t1.push(A.DomSubscription$(self.document, "selectionchange", t3));
      t3 = _this.domElement;
      t3.toString;
      A.DomEventTargetExtension_addEventListener(t3, "beforeinput", type$.JavaScriptObject._as(A.allowInterop(_this.get$handleBeforeInput())), null);
      t3 = _this.domElement;
      t3.toString;
      _this.addCompositionEventHandlers$1(t3);
      t3 = _this.domElement;
      t3.toString;
      t1.push(A.DomSubscription$(t3, "focus", new A.IOSTextEditingStrategy_addEventHandlers_closure(_this)));
      _this._addTapListener$0();
      blurWatch = new A.Stopwatch();
      $.$get$Stopwatch__frequency();
      blurWatch.start$0(0);
      t3 = _this.domElement;
      t3.toString;
      t1.push(A.DomSubscription$(t3, "blur", new A.IOSTextEditingStrategy_addEventHandlers_closure0(_this, blurWatch)));
    },
    updateElementPlacement$1(textGeometry) {
      var _this = this;
      _this.geometry = textGeometry;
      if (_this.isEnabled && _this._canPosition)
        _this.placeElement$0();
    },
    disable$0(_) {
      var t1;
      this.super$DefaultTextEditingStrategy$disable(0);
      t1 = this._positionInputElementTimer;
      if (t1 != null)
        t1.cancel$0(0);
      this._positionInputElementTimer = null;
    },
    _addTapListener$0() {
      var t1 = this.domElement;
      t1.toString;
      this.subscriptions.push(A.DomSubscription$(t1, "click", new A.IOSTextEditingStrategy__addTapListener_closure(this)));
    },
    _schedulePlacement$0() {
      var t1 = this._positionInputElementTimer;
      if (t1 != null)
        t1.cancel$0(0);
      this._positionInputElementTimer = A.Timer_Timer(B.Duration_100000, new A.IOSTextEditingStrategy__schedulePlacement_closure(this));
    },
    placeElement$0() {
      var t1, t2;
      this.domElement.focus();
      t1 = this.geometry;
      if (t1 != null) {
        t2 = this.domElement;
        t2.toString;
        t1.applyToDomElement$1(t2);
      }
    }
  };
  A.IOSTextEditingStrategy_addEventHandlers_closure.prototype = {
    call$1(_) {
      this.$this._schedulePlacement$0();
    },
    $signature: 1
  };
  A.IOSTextEditingStrategy_addEventHandlers_closure0.prototype = {
    call$1(_) {
      var isFastCallback = A.Duration$(this.blurWatch.get$elapsedMicroseconds(), 0)._duration < 200000,
        t1 = self.document.hasFocus() && isFastCallback,
        t2 = this.$this;
      if (t1)
        t2.domElement.focus();
      else
        t2.owner.sendTextConnectionClosedToFrameworkIfAny$0();
    },
    $signature: 1
  };
  A.IOSTextEditingStrategy__addTapListener_closure.prototype = {
    call$1(_) {
      var t1 = this.$this;
      if (t1._canPosition) {
        t1.initializeElementPlacement$0();
        t1._schedulePlacement$0();
      }
    },
    $signature: 1
  };
  A.IOSTextEditingStrategy__schedulePlacement_closure.prototype = {
    call$0() {
      var t1 = this.$this;
      t1._canPosition = true;
      t1.placeElement$0();
    },
    $signature: 0
  };
  A.AndroidTextEditingStrategy.prototype = {
    initializeTextEditing$3$onAction$onChange(inputConfig, onAction, onChange) {
      var t1, t2, _this = this;
      _this.super$DefaultTextEditingStrategy$initializeTextEditing(inputConfig, onAction, onChange);
      t1 = _this.domElement;
      t1.toString;
      inputConfig.inputType.configureInputMode$1(t1);
      t1 = _this.__DefaultTextEditingStrategy_inputConfiguration_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      if (t1.autofillGroup != null)
        _this.placeForm$0();
      else {
        t1 = $._flutterViewEmbedder.__FlutterViewEmbedder__textEditingHostNode_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        t2 = _this.domElement;
        t2.toString;
        t1.append(t2);
      }
      t1 = _this.domElement;
      t1.toString;
      inputConfig.textCapitalization.setAutocapitalizeAttribute$1(t1);
    },
    addEventHandlers$0() {
      var t2, t3, _this = this,
        t1 = _this.__DefaultTextEditingStrategy_inputConfiguration_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1 = t1.autofillGroup;
      if (t1 != null)
        B.JSArray_methods.addAll$1(_this.subscriptions, t1.addInputEventListeners$0());
      t1 = _this.subscriptions;
      t2 = _this.domElement;
      t2.toString;
      t3 = _this.get$handleChange();
      t1.push(A.DomSubscription$(t2, "input", t3));
      t2 = _this.domElement;
      t2.toString;
      t1.push(A.DomSubscription$(t2, "keydown", _this.get$maybeSendAction()));
      t1.push(A.DomSubscription$(self.document, "selectionchange", t3));
      t3 = _this.domElement;
      t3.toString;
      A.DomEventTargetExtension_addEventListener(t3, "beforeinput", type$.JavaScriptObject._as(A.allowInterop(_this.get$handleBeforeInput())), null);
      t3 = _this.domElement;
      t3.toString;
      _this.addCompositionEventHandlers$1(t3);
      t3 = _this.domElement;
      t3.toString;
      t1.push(A.DomSubscription$(t3, "blur", new A.AndroidTextEditingStrategy_addEventHandlers_closure(_this)));
      _this.preventDefaultForMouseEvents$0();
    },
    placeElement$0() {
      var t1, t2;
      this.domElement.focus();
      t1 = this.geometry;
      if (t1 != null) {
        t2 = this.domElement;
        t2.toString;
        t1.applyToDomElement$1(t2);
      }
    }
  };
  A.AndroidTextEditingStrategy_addEventHandlers_closure.prototype = {
    call$1(_) {
      var t1 = this.$this;
      if (self.document.hasFocus())
        t1.domElement.focus();
      else
        t1.owner.sendTextConnectionClosedToFrameworkIfAny$0();
    },
    $signature: 1
  };
  A.FirefoxTextEditingStrategy.prototype = {
    initializeTextEditing$3$onAction$onChange(inputConfig, onAction, onChange) {
      var t1;
      this.super$DefaultTextEditingStrategy$initializeTextEditing(inputConfig, onAction, onChange);
      t1 = this.__DefaultTextEditingStrategy_inputConfiguration_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      if (t1.autofillGroup != null)
        this.placeForm$0();
    },
    addEventHandlers$0() {
      var t2, t3, _this = this,
        t1 = _this.__DefaultTextEditingStrategy_inputConfiguration_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1 = t1.autofillGroup;
      if (t1 != null)
        B.JSArray_methods.addAll$1(_this.subscriptions, t1.addInputEventListeners$0());
      t1 = _this.subscriptions;
      t2 = _this.domElement;
      t2.toString;
      t3 = _this.get$handleChange();
      t1.push(A.DomSubscription$(t2, "input", t3));
      t2 = _this.domElement;
      t2.toString;
      t1.push(A.DomSubscription$(t2, "keydown", _this.get$maybeSendAction()));
      t2 = _this.domElement;
      t2.toString;
      A.DomEventTargetExtension_addEventListener(t2, "beforeinput", type$.JavaScriptObject._as(A.allowInterop(_this.get$handleBeforeInput())), null);
      t2 = _this.domElement;
      t2.toString;
      _this.addCompositionEventHandlers$1(t2);
      t2 = _this.domElement;
      t2.toString;
      t1.push(A.DomSubscription$(t2, "keyup", new A.FirefoxTextEditingStrategy_addEventHandlers_closure(_this)));
      t2 = _this.domElement;
      t2.toString;
      t1.push(A.DomSubscription$(t2, "select", t3));
      t3 = _this.domElement;
      t3.toString;
      t1.push(A.DomSubscription$(t3, "blur", new A.FirefoxTextEditingStrategy_addEventHandlers_closure0(_this)));
      _this.preventDefaultForMouseEvents$0();
    },
    _postponeFocus$0() {
      A.Timer_Timer(B.Duration_0, new A.FirefoxTextEditingStrategy__postponeFocus_closure(this));
    },
    placeElement$0() {
      var t1, t2, _this = this;
      _this.domElement.focus();
      t1 = _this.geometry;
      if (t1 != null) {
        t2 = _this.domElement;
        t2.toString;
        t1.applyToDomElement$1(t2);
      }
      t1 = _this.lastEditingState;
      if (t1 != null) {
        t2 = _this.domElement;
        t2.toString;
        t1.applyToDomElement$1(t2);
      }
    }
  };
  A.FirefoxTextEditingStrategy_addEventHandlers_closure.prototype = {
    call$1($event) {
      this.$this.handleChange$1($event);
    },
    $signature: 1
  };
  A.FirefoxTextEditingStrategy_addEventHandlers_closure0.prototype = {
    call$1(_) {
      this.$this._postponeFocus$0();
    },
    $signature: 1
  };
  A.FirefoxTextEditingStrategy__postponeFocus_closure.prototype = {
    call$0() {
      this.$this.domElement.focus();
    },
    $signature: 0
  };
  A.TextInputCommand.prototype = {};
  A.TextInputSetClient.prototype = {
    run$1(textEditing) {
      var t1 = textEditing._clientId;
      if (t1 != null && t1 !== this.clientId && textEditing.isEditing) {
        textEditing.isEditing = false;
        textEditing.get$strategy().disable$0(0);
      }
      textEditing._clientId = this.clientId;
      textEditing.configuration = this.configuration;
    }
  };
  A.TextInputUpdateConfig.prototype = {
    run$1(textEditing) {
      var t1 = textEditing.get$strategy(),
        t2 = textEditing.configuration;
      t2.toString;
      t1.applyConfiguration$1(t2);
    }
  };
  A.TextInputSetEditingState.prototype = {
    run$1(textEditing) {
      textEditing.get$strategy().setEditingState$1(this.state);
    }
  };
  A.TextInputShow.prototype = {
    run$1(textEditing) {
      if (!textEditing.isEditing)
        textEditing._startEditing$0();
    }
  };
  A.TextInputSetEditableSizeAndTransform.prototype = {
    run$1(textEditing) {
      textEditing.get$strategy().updateElementPlacement$1(this.geometry);
    }
  };
  A.TextInputSetStyle.prototype = {
    run$1(textEditing) {
      textEditing.get$strategy().updateElementStyle$1(this.style);
    }
  };
  A.TextInputClearClient.prototype = {
    run$1(textEditing) {
      if (textEditing.isEditing) {
        textEditing.isEditing = false;
        textEditing.get$strategy().disable$0(0);
      }
    }
  };
  A.TextInputHide.prototype = {
    run$1(textEditing) {
      if (textEditing.isEditing) {
        textEditing.isEditing = false;
        textEditing.get$strategy().disable$0(0);
      }
    }
  };
  A.TextInputSetMarkedTextRect.prototype = {
    run$1(textEditing) {
    }
  };
  A.TextInputSetCaretRect.prototype = {
    run$1(textEditing) {
    }
  };
  A.TextInputRequestAutofill.prototype = {
    run$1(textEditing) {
    }
  };
  A.TextInputFinishAutofillContext.prototype = {
    run$1(textEditing) {
      textEditing.sendTextConnectionClosedToFrameworkIfAny$0();
      if (this.saveForm)
        A.saveForms();
      A.cleanForms();
    }
  };
  A.saveForms_closure.prototype = {
    call$2(identifier, form) {
      var t2,
        t1 = type$._DomListWrapper_JavaScriptObject;
      t1 = A.CastIterable_CastIterable(new A._DomListWrapper(form.getElementsByClassName("submitBtn"), t1), t1._eval$1("Iterable.E"), type$.JavaScriptObject);
      t2 = t1._source;
      A._instanceType(t1)._rest[1]._as(t2.get$first(t2)).click();
    },
    $signature: 48
  };
  A.TextEditingChannel.prototype = {
    handleTextInput$2(data, callback) {
      var t1, t2, command, textAlignIndex, textDirectionIndex, fontWeightIndex, fontWeight, t3,
        $call = B.C_JSONMethodCodec.decodeMethodCall$1(data);
      switch ($call.method) {
        case "TextInput.setClient":
          t1 = $call.$arguments;
          t2 = J.getInterceptor$asx(t1);
          command = new A.TextInputSetClient(A._asInt(t2.$index(t1, 0)), A.InputConfiguration$fromFrameworkMessage(type$.Map_String_dynamic._as(t2.$index(t1, 1))));
          break;
        case "TextInput.updateConfig":
          this.implementation.configuration = A.InputConfiguration$fromFrameworkMessage(type$.Map_String_dynamic._as($call.$arguments));
          command = B.C_TextInputUpdateConfig;
          break;
        case "TextInput.setEditingState":
          command = new A.TextInputSetEditingState(A.EditingState_EditingState$fromFrameworkMessage(type$.Map_String_dynamic._as($call.$arguments)));
          break;
        case "TextInput.show":
          command = B.C_TextInputShow;
          break;
        case "TextInput.setEditableSizeAndTransform":
          command = new A.TextInputSetEditableSizeAndTransform(A.EditableTextGeometry_EditableTextGeometry$fromFrameworkMessage(type$.Map_String_dynamic._as($call.$arguments)));
          break;
        case "TextInput.setStyle":
          t1 = type$.Map_String_dynamic._as($call.$arguments);
          t2 = J.getInterceptor$asx(t1);
          textAlignIndex = A._asInt(t2.$index(t1, "textAlignIndex"));
          textDirectionIndex = A._asInt(t2.$index(t1, "textDirectionIndex"));
          fontWeightIndex = A._asIntQ(t2.$index(t1, "fontWeightIndex"));
          fontWeight = fontWeightIndex != null ? A.fontWeightIndexToCss(fontWeightIndex) : "normal";
          t3 = A._asNumQ(t2.$index(t1, "fontSize"));
          if (t3 == null)
            t3 = null;
          command = new A.TextInputSetStyle(new A.EditableTextStyle(t3, fontWeight, A._asStringQ(t2.$index(t1, "fontFamily")), B.List_jfs[textAlignIndex], B.List_TextDirection_0_TextDirection_1[textDirectionIndex]));
          break;
        case "TextInput.clearClient":
          command = B.C_TextInputClearClient;
          break;
        case "TextInput.hide":
          command = B.C_TextInputHide;
          break;
        case "TextInput.requestAutofill":
          command = B.C_TextInputRequestAutofill;
          break;
        case "TextInput.finishAutofillContext":
          command = new A.TextInputFinishAutofillContext(A._asBool($call.$arguments));
          break;
        case "TextInput.setMarkedTextRect":
          command = B.C_TextInputSetMarkedTextRect;
          break;
        case "TextInput.setCaretRect":
          command = B.C_TextInputSetCaretRect;
          break;
        default:
          $.$get$EnginePlatformDispatcher__instance().replyToPlatformMessage$2(callback, null);
          return;
      }
      command.run$1(this.implementation);
      new A.TextEditingChannel_handleTextInput_closure(callback).call$0();
    }
  };
  A.TextEditingChannel_handleTextInput_closure.prototype = {
    call$0() {
      $.$get$EnginePlatformDispatcher__instance().replyToPlatformMessage$2(this.callback, B.C_JSONMessageCodec.encodeMessage$1([true]));
    },
    $signature: 0
  };
  A.HybridTextEditing.prototype = {
    get$channel(_) {
      var value = this.__HybridTextEditing_channel_FI;
      if (value === $) {
        value !== $ && A.throwUnnamedLateFieldADI();
        value = this.__HybridTextEditing_channel_FI = new A.TextEditingChannel(this);
      }
      return value;
    },
    get$strategy() {
      var t1, result, t2, strategy, _this = this, _null = null,
        value = _this.__HybridTextEditing_strategy_FI;
      if (value === $) {
        t1 = $.EngineSemanticsOwner__instance;
        if ((t1 == null ? $.EngineSemanticsOwner__instance = A.EngineSemanticsOwner$_() : t1)._semanticsEnabled) {
          t1 = A.SemanticsTextEditingStrategy_ensureInitialized(_this);
          result = t1;
        } else {
          t1 = $.$get$_browserEngine();
          if (t1 === B.BrowserEngine_1) {
            t2 = $.$get$_operatingSystem();
            t2 = t2 === B.OperatingSystem_0;
          } else
            t2 = false;
          if (t2)
            strategy = new A.IOSTextEditingStrategy(_this, A._setArrayType([], type$.JSArray_DomSubscription), $, $, $, _null);
          else if (t1 === B.BrowserEngine_1)
            strategy = new A.SafariDesktopTextEditingStrategy(_this, A._setArrayType([], type$.JSArray_DomSubscription), $, $, $, _null);
          else {
            if (t1 === B.BrowserEngine_0) {
              t2 = $.$get$_operatingSystem();
              t2 = t2 === B.OperatingSystem_1;
            } else
              t2 = false;
            if (t2)
              strategy = new A.AndroidTextEditingStrategy(_this, A._setArrayType([], type$.JSArray_DomSubscription), $, $, $, _null);
            else
              strategy = t1 === B.BrowserEngine_2 ? new A.FirefoxTextEditingStrategy(_this, A._setArrayType([], type$.JSArray_DomSubscription), $, $, $, _null) : A.GloballyPositionedTextEditingStrategy$(_this);
          }
          result = strategy;
        }
        _this.__HybridTextEditing_strategy_FI !== $ && A.throwUnnamedLateFieldADI();
        value = _this.__HybridTextEditing_strategy_FI = result;
      }
      return value;
    },
    _startEditing$0() {
      var t1, t2, _this = this;
      _this.isEditing = true;
      t1 = _this.get$strategy();
      t2 = _this.configuration;
      t2.toString;
      t1.enable$3$onAction$onChange(0, t2, new A.HybridTextEditing__startEditing_closure(_this), new A.HybridTextEditing__startEditing_closure0(_this));
    },
    sendTextConnectionClosedToFrameworkIfAny$0() {
      var t1, _this = this;
      if (_this.isEditing) {
        _this.isEditing = false;
        _this.get$strategy().disable$0(0);
        _this.get$channel(_this);
        t1 = _this._clientId;
        $.$get$EnginePlatformDispatcher__instance().invokeOnPlatformMessage$3("flutter/textinput", B.C_JSONMethodCodec.encodeMethodCall$1(new A.MethodCall("TextInputClient.onConnectionClosed", [t1])), A._engine___emptyCallback$closure());
      }
    }
  };
  A.HybridTextEditing__startEditing_closure0.prototype = {
    call$2(editingState, editingDeltaState) {
      var t2, t3,
        _s17_ = "flutter/textinput",
        t1 = this.$this;
      if (t1.configuration.enableDeltaModel) {
        t1.get$channel(t1);
        t1 = t1._clientId;
        t2 = type$.String;
        t3 = type$.dynamic;
        $.$get$EnginePlatformDispatcher__instance().invokeOnPlatformMessage$3(_s17_, B.C_JSONMethodCodec.encodeMethodCall$1(new A.MethodCall("TextInputClient.updateEditingStateWithDeltas", [t1, A.LinkedHashMap_LinkedHashMap$_literal(["deltas", A._setArrayType([A.LinkedHashMap_LinkedHashMap$_literal(["oldText", editingDeltaState.oldText, "deltaText", editingDeltaState.deltaText, "deltaStart", editingDeltaState.deltaStart, "deltaEnd", editingDeltaState.deltaEnd, "selectionBase", editingDeltaState.baseOffset, "selectionExtent", editingDeltaState.extentOffset, "composingBase", editingDeltaState.composingOffset, "composingExtent", editingDeltaState.composingExtent], t2, t3)], type$.JSArray_Map_String_dynamic)], t2, t3)])), A._engine___emptyCallback$closure());
      } else {
        t1.get$channel(t1);
        t1 = t1._clientId;
        $.$get$EnginePlatformDispatcher__instance().invokeOnPlatformMessage$3(_s17_, B.C_JSONMethodCodec.encodeMethodCall$1(new A.MethodCall("TextInputClient.updateEditingState", [t1, editingState.toFlutter$0()])), A._engine___emptyCallback$closure());
      }
    },
    $signature: 49
  };
  A.HybridTextEditing__startEditing_closure.prototype = {
    call$1(inputAction) {
      var t1 = this.$this;
      t1.get$channel(t1);
      t1 = t1._clientId;
      $.$get$EnginePlatformDispatcher__instance().invokeOnPlatformMessage$3("flutter/textinput", B.C_JSONMethodCodec.encodeMethodCall$1(new A.MethodCall("TextInputClient.performAction", [t1, inputAction])), A._engine___emptyCallback$closure());
    },
    $signature: 50
  };
  A.EditableTextStyle.prototype = {
    applyToDomElement$1(domElement) {
      var _this = this,
        t1 = domElement.style;
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "text-align", A.textAlignToCssValue(_this.textAlign, _this.textDirection));
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "font", _this.fontWeight + " " + A.S(_this.fontSize) + "px " + A.S(A.canonicalizeFontFamily(_this.fontFamily)));
    }
  };
  A.EditableTextGeometry.prototype = {
    applyToDomElement$1(domElement) {
      var cssTransform = A.float64ListToCssTransform(this.globalTransform),
        t1 = domElement.style;
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "width", A.S(this.width) + "px");
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "height", A.S(this.height) + "px");
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "transform", cssTransform);
    }
  };
  A.EditableTextGeometry_EditableTextGeometry$fromFrameworkMessage_closure.prototype = {
    call$1(e) {
      return A._asNum(e);
    },
    $signature: 51
  };
  A.TransformKind.prototype = {
    _enumToString$0() {
      return "TransformKind." + this._core$_name;
    }
  };
  A.CustomElementDimensionsProvider.prototype = {
    CustomElementDimensionsProvider$1(_hostElement) {
      var t1 = A.createDomResizeObserver(new A.CustomElementDimensionsProvider_closure(this));
      this.__CustomElementDimensionsProvider__hostElementResizeObserver_A = t1;
      t1.observe(this._hostElement);
    },
    _broadcastSize$1(size) {
      this._onResizeStreamController.add$1(0, size);
    },
    close$0(_) {
      var t1 = this.__CustomElementDimensionsProvider__hostElementResizeObserver_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.disconnect();
      this._onResizeStreamController.close$0(0);
    },
    get$onResize(_) {
      var t1 = this._onResizeStreamController;
      return new A._BroadcastStream(t1, A._instanceType(t1)._eval$1("_BroadcastStream<1>"));
    },
    computePhysicalSize$0() {
      var devicePixelRatio, t1;
      $.$get$window();
      devicePixelRatio = $.$get$EngineFlutterDisplay__instance()._debugDevicePixelRatioOverride;
      if (devicePixelRatio == null) {
        t1 = self.window.devicePixelRatio;
        devicePixelRatio = t1 === 0 ? 1 : t1;
      }
      t1 = this._hostElement;
      return new A.Size(t1.clientWidth * devicePixelRatio, t1.clientHeight * devicePixelRatio);
    },
    computeKeyboardInsets$2(physicalHeight, isEditingOnMobile) {
      return B.C_ViewPadding;
    }
  };
  A.CustomElementDimensionsProvider_closure.prototype = {
    call$2(entries, _) {
      new A.MappedListIterable(entries, new A.CustomElementDimensionsProvider__closure(), entries.$ti._eval$1("MappedListIterable<ListBase.E,Size>")).forEach$1(0, this.$this.get$_broadcastSize());
    },
    $signature: 53
  };
  A.CustomElementDimensionsProvider__closure.prototype = {
    call$1(entry) {
      return new A.Size(entry.contentRect.width, entry.contentRect.height);
    },
    $signature: 54
  };
  A.DimensionsProvider.prototype = {};
  A.FullPageDimensionsProvider.prototype = {
    _onVisualViewportResize$1($event) {
      this._onResizeStreamController.add$1(0, null);
    },
    close$0(_) {
      var t1 = this.__FullPageDimensionsProvider__domResizeSubscription_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.target.removeEventListener(t1.type, t1.listener);
      this._onResizeStreamController.close$0(0);
    },
    get$onResize(_) {
      var t1 = this._onResizeStreamController;
      return new A._BroadcastStream(t1, A._instanceType(t1)._eval$1("_BroadcastStream<1>"));
    },
    computePhysicalSize$0() {
      var devicePixelRatio, t1, t2,
        windowInnerWidth = A._Cell$named("windowInnerWidth"),
        windowInnerHeight = A._Cell$named("windowInnerHeight"),
        viewport = self.window.visualViewport;
      $.$get$window();
      devicePixelRatio = $.$get$EngineFlutterDisplay__instance()._debugDevicePixelRatioOverride;
      if (devicePixelRatio == null) {
        t1 = self.window.devicePixelRatio;
        devicePixelRatio = t1 === 0 ? 1 : t1;
      }
      if (viewport != null) {
        t1 = $.$get$_operatingSystem();
        if (t1 === B.OperatingSystem_0) {
          t1 = self.document.documentElement.clientWidth;
          t2 = self.document.documentElement.clientHeight;
          windowInnerWidth.__late_helper$_value = t1 * devicePixelRatio;
          windowInnerHeight.__late_helper$_value = t2 * devicePixelRatio;
        } else {
          t1 = viewport.width;
          if (t1 == null)
            t1 = null;
          t1.toString;
          windowInnerWidth.__late_helper$_value = t1 * devicePixelRatio;
          t1 = A.DomVisualViewportExtension_get_height(viewport);
          t1.toString;
          windowInnerHeight.__late_helper$_value = t1 * devicePixelRatio;
        }
      } else {
        t1 = self.window.innerWidth;
        if (t1 == null)
          t1 = null;
        t1.toString;
        windowInnerWidth.__late_helper$_value = t1 * devicePixelRatio;
        t1 = A.DomWindowExtension_get_innerHeight(self.window);
        t1.toString;
        windowInnerHeight.__late_helper$_value = t1 * devicePixelRatio;
      }
      return new A.Size(windowInnerWidth._readLocal$0(), windowInnerHeight._readLocal$0());
    },
    computeKeyboardInsets$2(physicalHeight, isEditingOnMobile) {
      var devicePixelRatio, t1, viewport, windowInnerHeight;
      $.$get$window();
      devicePixelRatio = $.$get$EngineFlutterDisplay__instance()._debugDevicePixelRatioOverride;
      if (devicePixelRatio == null) {
        t1 = self.window.devicePixelRatio;
        devicePixelRatio = t1 === 0 ? 1 : t1;
      }
      viewport = self.window.visualViewport;
      windowInnerHeight = A._Cell$named("windowInnerHeight");
      if (viewport != null) {
        t1 = $.$get$_operatingSystem();
        if (t1 === B.OperatingSystem_0 && !isEditingOnMobile)
          windowInnerHeight.__late_helper$_value = self.document.documentElement.clientHeight * devicePixelRatio;
        else {
          t1 = A.DomVisualViewportExtension_get_height(viewport);
          t1.toString;
          windowInnerHeight.__late_helper$_value = t1 * devicePixelRatio;
        }
      } else {
        t1 = A.DomWindowExtension_get_innerHeight(self.window);
        t1.toString;
        windowInnerHeight.__late_helper$_value = t1 * devicePixelRatio;
      }
      windowInnerHeight._readLocal$0();
      return new A.ViewPadding();
    }
  };
  A.CustomElementEmbeddingStrategy.prototype = {
    initialize$1$hostElementAttributes(_, hostElementAttributes) {
      var t1;
      hostElementAttributes.get$entries(hostElementAttributes).forEach$1(0, new A.CustomElementEmbeddingStrategy_initialize_closure(this));
      t1 = A.jsify("custom-element");
      if (t1 == null)
        t1 = type$.Object._as(t1);
      this._hostElement.setAttribute("flt-embedding", t1);
    },
    attachGlassPane$1(glassPaneElement) {
      A.DomCSSStyleDeclarationExtension_setProperty(glassPaneElement.style, "width", "100%");
      A.DomCSSStyleDeclarationExtension_setProperty(glassPaneElement.style, "height", "100%");
      A.DomCSSStyleDeclarationExtension_setProperty(glassPaneElement.style, "display", "block");
      A.DomCSSStyleDeclarationExtension_setProperty(glassPaneElement.style, "overflow", "hidden");
      A.DomCSSStyleDeclarationExtension_setProperty(glassPaneElement.style, "position", "relative");
      this._hostElement.appendChild(glassPaneElement);
      this.registerElementForCleanup$1(glassPaneElement);
    }
  };
  A.CustomElementEmbeddingStrategy_initialize_closure.prototype = {
    call$1(entry) {
      var t1 = A.jsify(entry.value);
      if (t1 == null)
        t1 = type$.Object._as(t1);
      this.$this._hostElement.setAttribute(entry.key, t1);
    },
    $signature: 35
  };
  A.EmbeddingStrategy.prototype = {
    registerElementForCleanup$1(element) {
    }
  };
  A.FullPageEmbeddingStrategy.prototype = {
    initialize$1$hostElementAttributes(_, hostElementAttributes) {
      var t1, t2, _s1_ = "0", _s4_ = "none";
      hostElementAttributes.get$entries(hostElementAttributes).forEach$1(0, new A.FullPageEmbeddingStrategy_initialize_closure(this));
      t1 = self.document.body;
      t1.toString;
      t2 = A.jsify("full-page");
      if (t2 == null)
        t2 = type$.Object._as(t2);
      t1.setAttribute("flt-embedding", t2);
      this._applyViewportMeta$0();
      t2 = self.document.body;
      t2.toString;
      A.setElementStyle(t2, "position", "fixed");
      A.setElementStyle(t2, "top", _s1_);
      A.setElementStyle(t2, "right", _s1_);
      A.setElementStyle(t2, "bottom", _s1_);
      A.setElementStyle(t2, "left", _s1_);
      A.setElementStyle(t2, "overflow", "hidden");
      A.setElementStyle(t2, "padding", _s1_);
      A.setElementStyle(t2, "margin", _s1_);
      A.setElementStyle(t2, "user-select", _s4_);
      A.setElementStyle(t2, "-webkit-user-select", _s4_);
      A.setElementStyle(t2, "touch-action", _s4_);
    },
    attachGlassPane$1(glassPaneElement) {
      var t1 = glassPaneElement.style;
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "position", "absolute");
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "top", "0");
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "right", "0");
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "bottom", "0");
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "left", "0");
      self.document.body.append(glassPaneElement);
      this.registerElementForCleanup$1(glassPaneElement);
    },
    _applyViewportMeta$0() {
      var t1, t2, viewportMeta;
      for (t1 = type$._DomListWrapper_JavaScriptObject, t1 = A.CastIterable_CastIterable(new A._DomListWrapper(self.document.head.querySelectorAll('meta[name="viewport"]'), t1), t1._eval$1("Iterable.E"), type$.JavaScriptObject), t2 = t1._source, t2 = t2.get$iterator(t2), t1 = A._instanceType(t1), t1 = t1._eval$1("@<1>")._bind$1(t1._rest[1])._rest[1]; t2.moveNext$0();)
        t1._as(t2.get$current(t2)).remove();
      viewportMeta = A.DomDocumentExtension_createElement(self.document, "meta");
      t1 = A.jsify("");
      if (t1 == null)
        t1 = type$.Object._as(t1);
      viewportMeta.setAttribute("flt-viewport", t1);
      viewportMeta.name = "viewport";
      viewportMeta.content = "width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no";
      self.document.head.append(viewportMeta);
      this.registerElementForCleanup$1(viewportMeta);
    }
  };
  A.FullPageEmbeddingStrategy_initialize_closure.prototype = {
    call$1(entry) {
      var t2,
        t1 = self.document.body;
      t1.toString;
      t2 = A.jsify(entry.value);
      if (t2 == null)
        t2 = type$.Object._as(t2);
      t1.setAttribute(entry.key, t2);
    },
    $signature: 35
  };
  A.EngineFlutterWindow.prototype = {
    EngineFlutterWindow$2(viewId, platformDispatcher) {
      var _this = this,
        t1 = _this.platformDispatcher,
        t2 = _this.viewId;
      t1.viewData.$indexSet(0, t2, _this);
      t1._windowConfigurations.$indexSet(0, t2, B.C_ViewConfiguration);
      $._hotRestartListeners.push(new A.EngineFlutterWindow_closure(_this));
    },
    get$contextMenu() {
      var t1,
        value = this.__EngineFlutterWindow_contextMenu_FI;
      if (value === $) {
        t1 = $._flutterViewEmbedder.__FlutterViewEmbedder__flutterViewElement_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        value !== $ && A.throwUnnamedLateFieldADI();
        value = this.__EngineFlutterWindow_contextMenu_FI = new A.ContextMenu(t1);
      }
      return value;
    },
    get$browserHistory() {
      var t1 = this._browserHistory;
      if (t1 == null) {
        t1 = $.$get$_realDefaultUrlStrategy();
        t1 = this._browserHistory = A.createHistoryForExistingState(t1);
      }
      return t1;
    },
    _useSingleEntryBrowserHistory$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, strategy, t1;
      var $async$_useSingleEntryBrowserHistory$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self._browserHistory;
              if (t1 == null) {
                t1 = $.$get$_realDefaultUrlStrategy();
                t1 = $async$self._browserHistory = A.createHistoryForExistingState(t1);
              }
              if (t1 instanceof A.SingleEntryBrowserHistory) {
                // goto return
                $async$goto = 1;
                break;
              }
              strategy = t1.get$urlStrategy();
              t1 = $async$self._browserHistory;
              t1 = t1 == null ? null : t1.tearDown$0();
              $async$goto = 3;
              return A._asyncAwait(t1 instanceof A._Future ? t1 : A._Future$value(t1, type$.void), $async$_useSingleEntryBrowserHistory$0);
            case 3:
              // returning from await.
              $async$self._browserHistory = A.SingleEntryBrowserHistory$(strategy);
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$_useSingleEntryBrowserHistory$0, $async$completer);
    },
    _useMultiEntryBrowserHistory$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, strategy, t1;
      var $async$_useMultiEntryBrowserHistory$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self._browserHistory;
              if (t1 == null) {
                t1 = $.$get$_realDefaultUrlStrategy();
                t1 = $async$self._browserHistory = A.createHistoryForExistingState(t1);
              }
              if (t1 instanceof A.MultiEntriesBrowserHistory) {
                // goto return
                $async$goto = 1;
                break;
              }
              strategy = t1.get$urlStrategy();
              t1 = $async$self._browserHistory;
              t1 = t1 == null ? null : t1.tearDown$0();
              $async$goto = 3;
              return A._asyncAwait(t1 instanceof A._Future ? t1 : A._Future$value(t1, type$.void), $async$_useMultiEntryBrowserHistory$0);
            case 3:
              // returning from await.
              $async$self._browserHistory = A.MultiEntriesBrowserHistory$(strategy);
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$_useMultiEntryBrowserHistory$0, $async$completer);
    },
    _waitInTheLine$1(callback) {
      return this._waitInTheLine$body$EngineFlutterWindow(callback);
    },
    _waitInTheLine$body$EngineFlutterWindow(callback) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.bool),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, result, currentPosition, completer;
      var $async$_waitInTheLine$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              currentPosition = $async$self._endOfTheLine;
              completer = new A._AsyncCompleter(new A._Future($.Zone__current, type$._Future_void), type$._AsyncCompleter_void);
              $async$self._endOfTheLine = completer.future;
              $async$goto = 3;
              return A._asyncAwait(currentPosition, $async$_waitInTheLine$1);
            case 3:
              // returning from await.
              result = false;
              $async$handler = 4;
              $async$goto = 7;
              return A._asyncAwait(callback.call$0(), $async$_waitInTheLine$1);
            case 7:
              // returning from await.
              result = $async$result;
              $async$next.push(6);
              // goto finally
              $async$goto = 5;
              break;
            case 4:
              // uncaught
              $async$next = [2];
            case 5:
              // finally
              $async$handler = 2;
              J.complete$0$z(completer);
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 6:
              // after finally
              $async$returnValue = result;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return A._asyncStartSync($async$_waitInTheLine$1, $async$completer);
    },
    handleNavigationMessage$1(data) {
      return this.handleNavigationMessage$body$EngineFlutterWindow(data);
    },
    handleNavigationMessage$body$EngineFlutterWindow(data) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.bool),
        $async$returnValue, $async$self = this;
      var $async$handleNavigationMessage$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = $async$self._waitInTheLine$1(new A.EngineFlutterWindow_handleNavigationMessage_closure($async$self, data));
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$handleNavigationMessage$1, $async$completer);
    },
    get$physicalSize() {
      if (this._physicalSize == null)
        this.computePhysicalSize$0();
      var t1 = this._physicalSize;
      t1.toString;
      return t1;
    },
    computePhysicalSize$0() {
      var t1 = this.__EngineFlutterWindow__dimensionsProvider_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      this._physicalSize = t1.computePhysicalSize$0();
    },
    computeOnScreenKeyboardInsets$1(isEditingOnMobile) {
      var t1 = this.__EngineFlutterWindow__dimensionsProvider_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.computeKeyboardInsets$2(this._physicalSize._dy, isEditingOnMobile);
    },
    isRotation$0() {
      var t1, current, t2, t3;
      if (this._physicalSize != null) {
        t1 = this.__EngineFlutterWindow__dimensionsProvider_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        current = t1.computePhysicalSize$0();
        t1 = this._physicalSize;
        t2 = t1._dy;
        t3 = current._dy;
        if (t2 !== t3 && t1._dx !== current._dx) {
          t1 = t1._dx;
          if (!(t2 > t1 && t3 < current._dx))
            t1 = t1 > t2 && current._dx < t3;
          else
            t1 = true;
          if (t1)
            return true;
        }
      }
      return false;
    }
  };
  A.EngineFlutterWindow_closure.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1._browserHistory;
      if (t2 != null)
        t2.dispose$0();
      $.$get$_renderer().clearFragmentProgramCache$0();
      t1 = t1.__EngineFlutterWindow__dimensionsProvider_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.close$0(0);
    },
    $signature: 0
  };
  A.EngineFlutterWindow_handleNavigationMessage_closure.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.bool),
        $async$returnValue, $async$self = this, t1, uriString, uri, t2, t3, t4, userInfo, host, query, fragment, port, hasAuthority, path, decoded, $arguments;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              decoded = B.C_JSONMethodCodec.decodeMethodCall$1($async$self.data);
              $arguments = type$.nullable_Map_String_dynamic._as(decoded.$arguments);
            case 3:
              // switch
              switch (decoded.method) {
                case "selectMultiEntryHistory":
                  // goto case
                  $async$goto = 5;
                  break;
                case "selectSingleEntryHistory":
                  // goto case
                  $async$goto = 6;
                  break;
                case "routeUpdated":
                  // goto case
                  $async$goto = 7;
                  break;
                case "routeInformationUpdated":
                  // goto case
                  $async$goto = 8;
                  break;
                default:
                  // goto after switch
                  $async$goto = 4;
                  break;
              }
              break;
            case 5:
              // case
              $async$goto = 9;
              return A._asyncAwait($async$self.$this._useMultiEntryBrowserHistory$0(), $async$call$0);
            case 9:
              // returning from await.
              $async$returnValue = true;
              // goto return
              $async$goto = 1;
              break;
            case 6:
              // case
              $async$goto = 10;
              return A._asyncAwait($async$self.$this._useSingleEntryBrowserHistory$0(), $async$call$0);
            case 10:
              // returning from await.
              $async$returnValue = true;
              // goto return
              $async$goto = 1;
              break;
            case 7:
              // case
              t1 = $async$self.$this;
              $async$goto = 11;
              return A._asyncAwait(t1._useSingleEntryBrowserHistory$0(), $async$call$0);
            case 11:
              // returning from await.
              t1 = t1.get$browserHistory();
              $arguments.toString;
              t1.setRouteName$1(A._asStringQ(J.$index$asx($arguments, "routeName")));
              $async$returnValue = true;
              // goto return
              $async$goto = 1;
              break;
            case 8:
              // case
              $arguments.toString;
              t1 = J.getInterceptor$asx($arguments);
              uriString = A._asStringQ(t1.$index($arguments, "uri"));
              if (uriString != null) {
                uri = A.Uri_parse(uriString);
                t2 = uri.get$path(uri).length === 0 ? "/" : uri.get$path(uri);
                t3 = uri.get$queryParametersAll();
                t3 = t3.get$isEmpty(t3) ? null : uri.get$queryParametersAll();
                t4 = uri.get$fragment().length === 0 ? null : uri.get$fragment();
                userInfo = A._Uri__makeUserInfo(null, 0, 0);
                host = A._Uri__makeHost(null, 0, 0, false);
                query = A._Uri__makeQuery(null, 0, 0, t3);
                fragment = A._Uri__makeFragment(t4, 0, t4 == null ? 0 : t4.length);
                port = A._Uri__makePort(null, "");
                if (host == null)
                  t3 = userInfo.length !== 0 || port != null || false;
                else
                  t3 = false;
                if (t3)
                  host = "";
                t3 = host == null;
                hasAuthority = !t3;
                path = A._Uri__makePath(t2, 0, t2.length, null, "", hasAuthority);
                if (t3 && !B.JSString_methods.startsWith$1(path, "/"))
                  path = A._Uri__normalizeRelativePath(path, hasAuthority);
                else
                  path = A._Uri__removeDotSegments(path);
                t2 = A._Uri$_internal("", userInfo, t3 && B.JSString_methods.startsWith$1(path, "//") ? "" : host, port, path, query, fragment).get$_text();
                path = A._Uri__uriDecode(t2, 0, t2.length, B.C_Utf8Codec, false);
              } else {
                t2 = A._asStringQ(t1.$index($arguments, "location"));
                t2.toString;
                path = t2;
              }
              t2 = $async$self.$this.get$browserHistory();
              t3 = t1.$index($arguments, "state");
              t1 = A._asBoolQ(t1.$index($arguments, "replace"));
              t2.setRouteName$3$replace$state(path, t1 === true, t3);
              $async$returnValue = true;
              // goto return
              $async$goto = 1;
              break;
            case 4:
              // after switch
              $async$returnValue = false;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 56
  };
  A.ViewPadding.prototype = {};
  A._DefaultTextEditingStrategy_Object_CompositionAwareMixin.prototype = {};
  A.__MouseAdapter__BaseAdapter__WheelEventListenerMixin.prototype = {};
  A.__PointerAdapter__BaseAdapter__WheelEventListenerMixin.prototype = {};
  A.JS_CONST.prototype = {};
  J.Interceptor.prototype = {
    $eq(receiver, other) {
      return receiver === other;
    },
    get$hashCode(receiver) {
      return A.Primitives_objectHashCode(receiver);
    },
    toString$0(receiver) {
      return "Instance of '" + A.Primitives_objectTypeName(receiver) + "'";
    },
    noSuchMethod$1(receiver, invocation) {
      throw A.wrapException(A.NoSuchMethodError_NoSuchMethodError$withInvocation(receiver, invocation));
    },
    get$runtimeType(receiver) {
      return A.createRuntimeType(A._instanceTypeFromConstructor(this));
    }
  };
  J.JSBool.prototype = {
    toString$0(receiver) {
      return String(receiver);
    },
    get$hashCode(receiver) {
      return receiver ? 519018 : 218159;
    },
    get$runtimeType(receiver) {
      return A.createRuntimeType(type$.bool);
    },
    $isTrustedGetRuntimeType: 1,
    $isbool: 1
  };
  J.JSNull.prototype = {
    $eq(receiver, other) {
      return null == other;
    },
    toString$0(receiver) {
      return "null";
    },
    get$hashCode(receiver) {
      return 0;
    },
    get$runtimeType(receiver) {
      return A.createRuntimeType(type$.Null);
    },
    $isTrustedGetRuntimeType: 1,
    $isNull: 1
  };
  J.JavaScriptObject.prototype = {};
  J.LegacyJavaScriptObject.prototype = {
    get$hashCode(receiver) {
      return 0;
    },
    get$runtimeType(receiver) {
      return B.Type_JSObject_8k0;
    },
    toString$0(receiver) {
      return String(receiver);
    }
  };
  J.PlainJavaScriptObject.prototype = {};
  J.UnknownJavaScriptObject.prototype = {};
  J.JavaScriptFunction.prototype = {
    toString$0(receiver) {
      var dartClosure = receiver[$.$get$DART_CLOSURE_PROPERTY_NAME()];
      if (dartClosure == null)
        return this.super$LegacyJavaScriptObject$toString(receiver);
      return "JavaScript function for " + J.toString$0$(dartClosure);
    },
    $isFunction: 1
  };
  J.JavaScriptBigInt.prototype = {
    get$hashCode(receiver) {
      return 0;
    },
    toString$0(receiver) {
      return String(receiver);
    }
  };
  J.JavaScriptSymbol.prototype = {
    get$hashCode(receiver) {
      return 0;
    },
    toString$0(receiver) {
      return String(receiver);
    }
  };
  J.JSArray.prototype = {
    cast$1$0(receiver, $R) {
      return new A.CastList(receiver, A._arrayInstanceType(receiver)._eval$1("@<1>")._bind$1($R)._eval$1("CastList<1,2>"));
    },
    add$1(receiver, value) {
      if (!!receiver.fixed$length)
        A.throwExpression(A.UnsupportedError$("add"));
      receiver.push(value);
    },
    removeAt$1(receiver, index) {
      if (!!receiver.fixed$length)
        A.throwExpression(A.UnsupportedError$("removeAt"));
      if (index < 0 || index >= receiver.length)
        throw A.wrapException(A.RangeError$value(index, null));
      return receiver.splice(index, 1)[0];
    },
    remove$1(receiver, element) {
      var i;
      if (!!receiver.fixed$length)
        A.throwExpression(A.UnsupportedError$("remove"));
      for (i = 0; i < receiver.length; ++i)
        if (J.$eq$(receiver[i], element)) {
          receiver.splice(i, 1);
          return true;
        }
      return false;
    },
    addAll$1(receiver, collection) {
      var t1;
      if (!!receiver.fixed$length)
        A.throwExpression(A.UnsupportedError$("addAll"));
      if (Array.isArray(collection)) {
        this._addAllFromArray$1(receiver, collection);
        return;
      }
      for (t1 = J.get$iterator$ax(collection); t1.moveNext$0();)
        receiver.push(t1.get$current(t1));
    },
    _addAllFromArray$1(receiver, array) {
      var i,
        len = array.length;
      if (len === 0)
        return;
      if (receiver === array)
        throw A.wrapException(A.ConcurrentModificationError$(receiver));
      for (i = 0; i < len; ++i)
        receiver.push(array[i]);
    },
    clear$0(receiver) {
      if (!!receiver.fixed$length)
        A.throwExpression(A.UnsupportedError$("clear"));
      receiver.length = 0;
    },
    forEach$1(receiver, f) {
      var i,
        end = receiver.length;
      for (i = 0; i < end; ++i) {
        f.call$1(receiver[i]);
        if (receiver.length !== end)
          throw A.wrapException(A.ConcurrentModificationError$(receiver));
      }
    },
    map$1$1(receiver, f, $T) {
      return new A.MappedListIterable(receiver, f, A._arrayInstanceType(receiver)._eval$1("@<1>")._bind$1($T)._eval$1("MappedListIterable<1,2>"));
    },
    join$1(receiver, separator) {
      var i,
        list = A.List_List$filled(receiver.length, "", false, type$.String);
      for (i = 0; i < receiver.length; ++i)
        list[i] = A.S(receiver[i]);
      return list.join(separator);
    },
    join$0($receiver) {
      return this.join$1($receiver, "");
    },
    take$1(receiver, n) {
      return A.SubListIterable$(receiver, 0, A.checkNotNullable(n, "count", type$.int), A._arrayInstanceType(receiver)._precomputed1);
    },
    skip$1(receiver, n) {
      return A.SubListIterable$(receiver, n, null, A._arrayInstanceType(receiver)._precomputed1);
    },
    elementAt$1(receiver, index) {
      return receiver[index];
    },
    get$first(receiver) {
      if (receiver.length > 0)
        return receiver[0];
      throw A.wrapException(A.IterableElementError_noElement());
    },
    get$last(receiver) {
      var t1 = receiver.length;
      if (t1 > 0)
        return receiver[t1 - 1];
      throw A.wrapException(A.IterableElementError_noElement());
    },
    get$single(receiver) {
      var t1 = receiver.length;
      if (t1 === 1)
        return receiver[0];
      if (t1 === 0)
        throw A.wrapException(A.IterableElementError_noElement());
      throw A.wrapException(A.IterableElementError_tooMany());
    },
    setRange$4(receiver, start, end, iterable, skipCount) {
      var $length, otherList, otherStart, t1, i;
      if (!!receiver.immutable$list)
        A.throwExpression(A.UnsupportedError$("setRange"));
      A.RangeError_checkValidRange(start, end, receiver.length);
      $length = end - start;
      if ($length === 0)
        return;
      A.RangeError_checkNotNegative(skipCount, "skipCount");
      if (type$.List_dynamic._is(iterable)) {
        otherList = iterable;
        otherStart = skipCount;
      } else {
        otherList = J.skip$1$ax(iterable, skipCount).toList$1$growable(0, false);
        otherStart = 0;
      }
      t1 = J.getInterceptor$asx(otherList);
      if (otherStart + $length > t1.get$length(otherList))
        throw A.wrapException(A.IterableElementError_tooFew());
      if (otherStart < start)
        for (i = $length - 1; i >= 0; --i)
          receiver[start + i] = t1.$index(otherList, otherStart + i);
      else
        for (i = 0; i < $length; ++i)
          receiver[start + i] = t1.$index(otherList, otherStart + i);
    },
    any$1(receiver, test) {
      var i,
        end = receiver.length;
      for (i = 0; i < end; ++i) {
        if (test.call$1(receiver[i]))
          return true;
        if (receiver.length !== end)
          throw A.wrapException(A.ConcurrentModificationError$(receiver));
      }
      return false;
    },
    sort$1(receiver, compare) {
      var len, a, b, undefineds, i;
      if (!!receiver.immutable$list)
        A.throwExpression(A.UnsupportedError$("sort"));
      len = receiver.length;
      if (len < 2)
        return;
      if (compare == null)
        compare = J._interceptors_JSArray__compareAny$closure();
      if (len === 2) {
        a = receiver[0];
        b = receiver[1];
        if (compare.call$2(a, b) > 0) {
          receiver[0] = b;
          receiver[1] = a;
        }
        return;
      }
      if (A._arrayInstanceType(receiver)._precomputed1._is(null)) {
        for (undefineds = 0, i = 0; i < receiver.length; ++i)
          if (receiver[i] === void 0) {
            receiver[i] = null;
            ++undefineds;
          }
      } else
        undefineds = 0;
      receiver.sort(A.convertDartClosureToJS(compare, 2));
      if (undefineds > 0)
        this._replaceSomeNullsWithUndefined$1(receiver, undefineds);
    },
    sort$0($receiver) {
      return this.sort$1($receiver, null);
    },
    _replaceSomeNullsWithUndefined$1(receiver, count) {
      var i0,
        i = receiver.length;
      for (; i0 = i - 1, i > 0; i = i0)
        if (receiver[i0] === null) {
          receiver[i0] = void 0;
          --count;
          if (count === 0)
            break;
        }
    },
    contains$1(receiver, other) {
      var i;
      for (i = 0; i < receiver.length; ++i)
        if (J.$eq$(receiver[i], other))
          return true;
      return false;
    },
    get$isEmpty(receiver) {
      return receiver.length === 0;
    },
    get$isNotEmpty(receiver) {
      return receiver.length !== 0;
    },
    toString$0(receiver) {
      return A.Iterable_iterableToFullString(receiver, "[", "]");
    },
    get$iterator(receiver) {
      return new J.ArrayIterator(receiver, receiver.length);
    },
    get$hashCode(receiver) {
      return A.Primitives_objectHashCode(receiver);
    },
    get$length(receiver) {
      return receiver.length;
    },
    set$length(receiver, newLength) {
      if (!!receiver.fixed$length)
        A.throwExpression(A.UnsupportedError$("set length"));
      if (newLength < 0)
        throw A.wrapException(A.RangeError$range(newLength, 0, null, "newLength", null));
      if (newLength > receiver.length)
        A._arrayInstanceType(receiver)._precomputed1._as(null);
      receiver.length = newLength;
    },
    $index(receiver, index) {
      if (!(index >= 0 && index < receiver.length))
        throw A.wrapException(A.diagnoseIndexError(receiver, index));
      return receiver[index];
    },
    $indexSet(receiver, index, value) {
      if (!!receiver.immutable$list)
        A.throwExpression(A.UnsupportedError$("indexed set"));
      if (!(index >= 0 && index < receiver.length))
        throw A.wrapException(A.diagnoseIndexError(receiver, index));
      receiver[index] = value;
    },
    get$runtimeType(receiver) {
      return A.createRuntimeType(A._arrayInstanceType(receiver));
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  J.JSUnmodifiableArray.prototype = {};
  J.ArrayIterator.prototype = {
    get$current(_) {
      var t1 = this.__interceptors$_current;
      return t1 == null ? A._instanceType(this)._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var t2, _this = this,
        t1 = _this._iterable,
        $length = t1.length;
      if (_this.__interceptors$_length !== $length)
        throw A.wrapException(A.throwConcurrentModificationError(t1));
      t2 = _this._index;
      if (t2 >= $length) {
        _this.__interceptors$_current = null;
        return false;
      }
      _this.__interceptors$_current = t1[t2];
      _this._index = t2 + 1;
      return true;
    }
  };
  J.JSNumber.prototype = {
    compareTo$1(receiver, b) {
      var bIsNegative;
      if (receiver < b)
        return -1;
      else if (receiver > b)
        return 1;
      else if (receiver === b) {
        if (receiver === 0) {
          bIsNegative = this.get$isNegative(b);
          if (this.get$isNegative(receiver) === bIsNegative)
            return 0;
          if (this.get$isNegative(receiver))
            return -1;
          return 1;
        }
        return 0;
      } else if (isNaN(receiver)) {
        if (isNaN(b))
          return 0;
        return 1;
      } else
        return -1;
    },
    get$isNegative(receiver) {
      return receiver === 0 ? 1 / receiver < 0 : receiver < 0;
    },
    toInt$0(receiver) {
      var t1;
      if (receiver >= -2147483648 && receiver <= 2147483647)
        return receiver | 0;
      if (isFinite(receiver)) {
        t1 = receiver < 0 ? Math.ceil(receiver) : Math.floor(receiver);
        return t1 + 0;
      }
      throw A.wrapException(A.UnsupportedError$("" + receiver + ".toInt()"));
    },
    floor$0(receiver) {
      var truncated, d;
      if (receiver >= 0) {
        if (receiver <= 2147483647)
          return receiver | 0;
      } else if (receiver >= -2147483648) {
        truncated = receiver | 0;
        return receiver === truncated ? truncated : truncated - 1;
      }
      d = Math.floor(receiver);
      if (isFinite(d))
        return d;
      throw A.wrapException(A.UnsupportedError$("" + receiver + ".floor()"));
    },
    toStringAsFixed$1(receiver, fractionDigits) {
      var result;
      if (fractionDigits > 20)
        throw A.wrapException(A.RangeError$range(fractionDigits, 0, 20, "fractionDigits", null));
      result = receiver.toFixed(fractionDigits);
      if (receiver === 0 && this.get$isNegative(receiver))
        return "-" + result;
      return result;
    },
    toRadixString$1(receiver, radix) {
      var result, match, exponent, t1;
      if (radix < 2 || radix > 36)
        throw A.wrapException(A.RangeError$range(radix, 2, 36, "radix", null));
      result = receiver.toString(radix);
      if (result.charCodeAt(result.length - 1) !== 41)
        return result;
      match = /^([\da-z]+)(?:\.([\da-z]+))?\(e\+(\d+)\)$/.exec(result);
      if (match == null)
        A.throwExpression(A.UnsupportedError$("Unexpected toString result: " + result));
      result = match[1];
      exponent = +match[3];
      t1 = match[2];
      if (t1 != null) {
        result += t1;
        exponent -= t1.length;
      }
      return result + B.JSString_methods.$mul("0", exponent);
    },
    toString$0(receiver) {
      if (receiver === 0 && 1 / receiver < 0)
        return "-0.0";
      else
        return "" + receiver;
    },
    get$hashCode(receiver) {
      var absolute, floorLog2, factor, scaled,
        intValue = receiver | 0;
      if (receiver === intValue)
        return intValue & 536870911;
      absolute = Math.abs(receiver);
      floorLog2 = Math.log(absolute) / 0.6931471805599453 | 0;
      factor = Math.pow(2, floorLog2);
      scaled = absolute < 1 ? absolute / factor : factor / absolute;
      return ((scaled * 9007199254740992 | 0) + (scaled * 3542243181176521 | 0)) * 599197 + floorLog2 * 1259 & 536870911;
    },
    $mod(receiver, other) {
      var result = receiver % other;
      if (result === 0)
        return 0;
      if (result > 0)
        return result;
      return result + other;
    },
    $tdiv(receiver, other) {
      if ((receiver | 0) === receiver)
        if (other >= 1 || other < -1)
          return receiver / other | 0;
      return this._tdivSlow$1(receiver, other);
    },
    _tdivFast$1(receiver, other) {
      return (receiver | 0) === receiver ? receiver / other | 0 : this._tdivSlow$1(receiver, other);
    },
    _tdivSlow$1(receiver, other) {
      var quotient = receiver / other;
      if (quotient >= -2147483648 && quotient <= 2147483647)
        return quotient | 0;
      if (quotient > 0) {
        if (quotient !== 1 / 0)
          return Math.floor(quotient);
      } else if (quotient > -1 / 0)
        return Math.ceil(quotient);
      throw A.wrapException(A.UnsupportedError$("Result of truncating division is " + A.S(quotient) + ": " + A.S(receiver) + " ~/ " + other));
    },
    $shl(receiver, other) {
      if (other < 0)
        throw A.wrapException(A.argumentErrorValue(other));
      return other > 31 ? 0 : receiver << other >>> 0;
    },
    _shrOtherPositive$1(receiver, other) {
      var t1;
      if (receiver > 0)
        t1 = this._shrBothPositive$1(receiver, other);
      else {
        t1 = other > 31 ? 31 : other;
        t1 = receiver >> t1 >>> 0;
      }
      return t1;
    },
    _shrReceiverPositive$1(receiver, other) {
      if (0 > other)
        throw A.wrapException(A.argumentErrorValue(other));
      return this._shrBothPositive$1(receiver, other);
    },
    _shrBothPositive$1(receiver, other) {
      return other > 31 ? 0 : receiver >>> other;
    },
    get$runtimeType(receiver) {
      return A.createRuntimeType(type$.num);
    },
    $isdouble: 1,
    $isnum: 1
  };
  J.JSInt.prototype = {
    get$runtimeType(receiver) {
      return A.createRuntimeType(type$.int);
    },
    $isTrustedGetRuntimeType: 1,
    $isint: 1
  };
  J.JSNumNotInt.prototype = {
    get$runtimeType(receiver) {
      return A.createRuntimeType(type$.double);
    },
    $isTrustedGetRuntimeType: 1
  };
  J.JSString.prototype = {
    codeUnitAt$1(receiver, index) {
      if (index < 0)
        throw A.wrapException(A.diagnoseIndexError(receiver, index));
      if (index >= receiver.length)
        A.throwExpression(A.diagnoseIndexError(receiver, index));
      return receiver.charCodeAt(index);
    },
    $add(receiver, other) {
      return receiver + other;
    },
    split$1(receiver, pattern) {
      var t1 = A._setArrayType(receiver.split(pattern), type$.JSArray_String);
      return t1;
    },
    replaceRange$3(receiver, start, end, replacement) {
      var e = A.RangeError_checkValidRange(start, end, receiver.length);
      return A.stringReplaceRangeUnchecked(receiver, start, e, replacement);
    },
    startsWith$2(receiver, pattern, index) {
      var endIndex;
      if (index < 0 || index > receiver.length)
        throw A.wrapException(A.RangeError$range(index, 0, receiver.length, null, null));
      endIndex = index + pattern.length;
      if (endIndex > receiver.length)
        return false;
      return pattern === receiver.substring(index, endIndex);
    },
    startsWith$1($receiver, pattern) {
      return this.startsWith$2($receiver, pattern, 0);
    },
    substring$2(receiver, start, end) {
      return receiver.substring(start, A.RangeError_checkValidRange(start, end, receiver.length));
    },
    substring$1($receiver, start) {
      return this.substring$2($receiver, start, null);
    },
    toLowerCase$0(receiver) {
      return receiver.toLowerCase();
    },
    trim$0(receiver) {
      var startIndex, t1, endIndex0,
        result = receiver.trim(),
        endIndex = result.length;
      if (endIndex === 0)
        return result;
      if (result.charCodeAt(0) === 133) {
        startIndex = J.JSString__skipLeadingWhitespace(result, 1);
        if (startIndex === endIndex)
          return "";
      } else
        startIndex = 0;
      t1 = endIndex - 1;
      endIndex0 = result.charCodeAt(t1) === 133 ? J.JSString__skipTrailingWhitespace(result, t1) : endIndex;
      if (startIndex === 0 && endIndex0 === endIndex)
        return result;
      return result.substring(startIndex, endIndex0);
    },
    trimLeft$0(receiver) {
      var result = receiver.trimStart();
      if (result.length === 0)
        return result;
      if (result.charCodeAt(0) !== 133)
        return result;
      return result.substring(J.JSString__skipLeadingWhitespace(result, 1));
    },
    trimRight$0(receiver) {
      var t1,
        result = receiver.trimEnd(),
        endIndex = result.length;
      if (endIndex === 0)
        return result;
      t1 = endIndex - 1;
      if (result.charCodeAt(t1) !== 133)
        return result;
      return result.substring(0, J.JSString__skipTrailingWhitespace(result, t1));
    },
    $mul(receiver, times) {
      var s, result;
      if (0 >= times)
        return "";
      if (times === 1 || receiver.length === 0)
        return receiver;
      if (times !== times >>> 0)
        throw A.wrapException(B.C_OutOfMemoryError);
      for (s = receiver, result = ""; true;) {
        if ((times & 1) === 1)
          result = s + result;
        times = times >>> 1;
        if (times === 0)
          break;
        s += s;
      }
      return result;
    },
    padLeft$2(receiver, width, padding) {
      var delta = width - receiver.length;
      if (delta <= 0)
        return receiver;
      return this.$mul(padding, delta) + receiver;
    },
    indexOf$2(receiver, pattern, start) {
      var t1;
      if (start < 0 || start > receiver.length)
        throw A.wrapException(A.RangeError$range(start, 0, receiver.length, null, null));
      t1 = receiver.indexOf(pattern, start);
      return t1;
    },
    indexOf$1($receiver, pattern) {
      return this.indexOf$2($receiver, pattern, 0);
    },
    lastIndexOf$1(receiver, pattern) {
      var start = receiver.length,
        t1 = pattern.length;
      if (start + t1 > start)
        start -= t1;
      return receiver.lastIndexOf(pattern, start);
    },
    contains$2(receiver, other, startIndex) {
      var t1 = receiver.length;
      if (startIndex > t1)
        throw A.wrapException(A.RangeError$range(startIndex, 0, t1, null, null));
      return A.stringContainsUnchecked(receiver, other, startIndex);
    },
    contains$1($receiver, other) {
      return this.contains$2($receiver, other, 0);
    },
    compareTo$1(receiver, other) {
      var t1;
      if (receiver === other)
        t1 = 0;
      else
        t1 = receiver < other ? -1 : 1;
      return t1;
    },
    toString$0(receiver) {
      return receiver;
    },
    get$hashCode(receiver) {
      var t1, hash, i;
      for (t1 = receiver.length, hash = 0, i = 0; i < t1; ++i) {
        hash = hash + receiver.charCodeAt(i) & 536870911;
        hash = hash + ((hash & 524287) << 10) & 536870911;
        hash ^= hash >> 6;
      }
      hash = hash + ((hash & 67108863) << 3) & 536870911;
      hash ^= hash >> 11;
      return hash + ((hash & 16383) << 15) & 536870911;
    },
    get$runtimeType(receiver) {
      return A.createRuntimeType(type$.String);
    },
    get$length(receiver) {
      return receiver.length;
    },
    $index(receiver, index) {
      if (!(index >= 0 && index < receiver.length))
        throw A.wrapException(A.diagnoseIndexError(receiver, index));
      return receiver[index];
    },
    $isTrustedGetRuntimeType: 1,
    $isString: 1
  };
  A._CastIterableBase.prototype = {
    get$iterator(_) {
      var t1 = A._instanceType(this);
      return new A.CastIterator(J.get$iterator$ax(this.get$_source()), t1._eval$1("@<1>")._bind$1(t1._rest[1])._eval$1("CastIterator<1,2>"));
    },
    get$length(_) {
      return J.get$length$asx(this.get$_source());
    },
    get$isEmpty(_) {
      return J.get$isEmpty$asx(this.get$_source());
    },
    get$isNotEmpty(_) {
      return J.get$isNotEmpty$asx(this.get$_source());
    },
    skip$1(_, count) {
      var t1 = A._instanceType(this);
      return A.CastIterable_CastIterable(J.skip$1$ax(this.get$_source(), count), t1._precomputed1, t1._rest[1]);
    },
    elementAt$1(_, index) {
      return A._instanceType(this)._rest[1]._as(J.elementAt$1$ax(this.get$_source(), index));
    },
    get$first(_) {
      return A._instanceType(this)._rest[1]._as(J.get$first$ax(this.get$_source()));
    },
    toString$0(_) {
      return J.toString$0$(this.get$_source());
    }
  };
  A.CastIterator.prototype = {
    moveNext$0() {
      return this._source.moveNext$0();
    },
    get$current(_) {
      var t1 = this._source;
      return this.$ti._rest[1]._as(t1.get$current(t1));
    }
  };
  A.CastIterable.prototype = {
    get$_source() {
      return this._source;
    }
  };
  A._EfficientLengthCastIterable.prototype = {$isEfficientLengthIterable: 1};
  A._CastListBase.prototype = {
    $index(_, index) {
      return this.$ti._rest[1]._as(J.$index$asx(this._source, index));
    },
    $indexSet(_, index, value) {
      J.$indexSet$ax(this._source, index, this.$ti._precomputed1._as(value));
    },
    set$length(_, $length) {
      J.set$length$asx(this._source, $length);
    },
    add$1(_, value) {
      J.add$1$ax(this._source, this.$ti._precomputed1._as(value));
    },
    $isEfficientLengthIterable: 1,
    $isList: 1
  };
  A.CastList.prototype = {
    cast$1$0(_, $R) {
      return new A.CastList(this._source, this.$ti._eval$1("@<1>")._bind$1($R)._eval$1("CastList<1,2>"));
    },
    get$_source() {
      return this._source;
    }
  };
  A.LateError.prototype = {
    toString$0(_) {
      return "LateInitializationError: " + this._message;
    }
  };
  A.CodeUnits.prototype = {
    get$length(_) {
      return this._string.length;
    },
    $index(_, i) {
      return this._string.charCodeAt(i);
    }
  };
  A.nullFuture_closure.prototype = {
    call$0() {
      return A.Future_Future$value(null, type$.Null);
    },
    $signature: 12
  };
  A.SentinelValue.prototype = {};
  A.EfficientLengthIterable.prototype = {};
  A.ListIterable.prototype = {
    get$iterator(_) {
      return new A.ListIterator(this, this.get$length(this));
    },
    forEach$1(_, action) {
      var i, _this = this,
        $length = _this.get$length(_this);
      for (i = 0; i < $length; ++i) {
        action.call$1(_this.elementAt$1(0, i));
        if ($length !== _this.get$length(_this))
          throw A.wrapException(A.ConcurrentModificationError$(_this));
      }
    },
    get$isEmpty(_) {
      return this.get$length(this) === 0;
    },
    get$first(_) {
      if (this.get$length(this) === 0)
        throw A.wrapException(A.IterableElementError_noElement());
      return this.elementAt$1(0, 0);
    },
    join$1(_, separator) {
      var first, t1, i, _this = this,
        $length = _this.get$length(_this);
      if (separator.length !== 0) {
        if ($length === 0)
          return "";
        first = A.S(_this.elementAt$1(0, 0));
        if ($length !== _this.get$length(_this))
          throw A.wrapException(A.ConcurrentModificationError$(_this));
        for (t1 = first, i = 1; i < $length; ++i) {
          t1 = t1 + separator + A.S(_this.elementAt$1(0, i));
          if ($length !== _this.get$length(_this))
            throw A.wrapException(A.ConcurrentModificationError$(_this));
        }
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      } else {
        for (i = 0, t1 = ""; i < $length; ++i) {
          t1 += A.S(_this.elementAt$1(0, i));
          if ($length !== _this.get$length(_this))
            throw A.wrapException(A.ConcurrentModificationError$(_this));
        }
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      }
    },
    where$1(_, test) {
      return this.super$Iterable$where(0, test);
    },
    map$1$1(_, toElement, $T) {
      return new A.MappedListIterable(this, toElement, A._instanceType(this)._eval$1("@<ListIterable.E>")._bind$1($T)._eval$1("MappedListIterable<1,2>"));
    },
    skip$1(_, count) {
      return A.SubListIterable$(this, count, null, A._instanceType(this)._eval$1("ListIterable.E"));
    },
    toList$1$growable(_, growable) {
      return A.List_List$of(this, true, A._instanceType(this)._eval$1("ListIterable.E"));
    },
    toList$0($receiver) {
      return this.toList$1$growable($receiver, true);
    }
  };
  A.SubListIterable.prototype = {
    get$_endIndex() {
      var $length = J.get$length$asx(this.__internal$_iterable),
        endOrLength = this._endOrLength;
      if (endOrLength == null || endOrLength > $length)
        return $length;
      return endOrLength;
    },
    get$_startIndex() {
      var $length = J.get$length$asx(this.__internal$_iterable),
        t1 = this._start;
      if (t1 > $length)
        return $length;
      return t1;
    },
    get$length(_) {
      var endOrLength,
        $length = J.get$length$asx(this.__internal$_iterable),
        t1 = this._start;
      if (t1 >= $length)
        return 0;
      endOrLength = this._endOrLength;
      if (endOrLength == null || endOrLength >= $length)
        return $length - t1;
      return endOrLength - t1;
    },
    elementAt$1(_, index) {
      var _this = this,
        realIndex = _this.get$_startIndex() + index;
      if (index < 0 || realIndex >= _this.get$_endIndex())
        throw A.wrapException(A.IndexError$withLength(index, _this.get$length(_this), _this, null, "index"));
      return J.elementAt$1$ax(_this.__internal$_iterable, realIndex);
    },
    skip$1(_, count) {
      var newStart, endOrLength, _this = this;
      A.RangeError_checkNotNegative(count, "count");
      newStart = _this._start + count;
      endOrLength = _this._endOrLength;
      if (endOrLength != null && newStart >= endOrLength)
        return new A.EmptyIterable(_this.$ti._eval$1("EmptyIterable<1>"));
      return A.SubListIterable$(_this.__internal$_iterable, newStart, endOrLength, _this.$ti._precomputed1);
    },
    toList$1$growable(_, growable) {
      var $length, result, i, _this = this,
        start = _this._start,
        t1 = _this.__internal$_iterable,
        t2 = J.getInterceptor$asx(t1),
        end = t2.get$length(t1),
        endOrLength = _this._endOrLength;
      if (endOrLength != null && endOrLength < end)
        end = endOrLength;
      $length = end - start;
      if ($length <= 0) {
        t1 = _this.$ti._precomputed1;
        return growable ? J.JSArray_JSArray$growable(0, t1) : J.JSArray_JSArray$fixed(0, t1);
      }
      result = A.List_List$filled($length, t2.elementAt$1(t1, start), growable, _this.$ti._precomputed1);
      for (i = 1; i < $length; ++i) {
        result[i] = t2.elementAt$1(t1, start + i);
        if (t2.get$length(t1) < end)
          throw A.wrapException(A.ConcurrentModificationError$(_this));
      }
      return result;
    }
  };
  A.ListIterator.prototype = {
    get$current(_) {
      var t1 = this.__internal$_current;
      return t1 == null ? A._instanceType(this)._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var t3, _this = this,
        t1 = _this.__internal$_iterable,
        t2 = J.getInterceptor$asx(t1),
        $length = t2.get$length(t1);
      if (_this.__internal$_length !== $length)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      t3 = _this.__internal$_index;
      if (t3 >= $length) {
        _this.__internal$_current = null;
        return false;
      }
      _this.__internal$_current = t2.elementAt$1(t1, t3);
      ++_this.__internal$_index;
      return true;
    }
  };
  A.MappedIterable.prototype = {
    get$iterator(_) {
      return new A.MappedIterator(J.get$iterator$ax(this.__internal$_iterable), this._f);
    },
    get$length(_) {
      return J.get$length$asx(this.__internal$_iterable);
    },
    get$isEmpty(_) {
      return J.get$isEmpty$asx(this.__internal$_iterable);
    },
    get$first(_) {
      return this._f.call$1(J.get$first$ax(this.__internal$_iterable));
    },
    elementAt$1(_, index) {
      return this._f.call$1(J.elementAt$1$ax(this.__internal$_iterable, index));
    }
  };
  A.EfficientLengthMappedIterable.prototype = {$isEfficientLengthIterable: 1};
  A.MappedIterator.prototype = {
    moveNext$0() {
      var _this = this,
        t1 = _this._iterator;
      if (t1.moveNext$0()) {
        _this.__internal$_current = _this._f.call$1(t1.get$current(t1));
        return true;
      }
      _this.__internal$_current = null;
      return false;
    },
    get$current(_) {
      var t1 = this.__internal$_current;
      return t1 == null ? A._instanceType(this)._rest[1]._as(t1) : t1;
    }
  };
  A.MappedListIterable.prototype = {
    get$length(_) {
      return J.get$length$asx(this._source);
    },
    elementAt$1(_, index) {
      return this._f.call$1(J.elementAt$1$ax(this._source, index));
    }
  };
  A.WhereIterable.prototype = {
    get$iterator(_) {
      return new A.WhereIterator(J.get$iterator$ax(this.__internal$_iterable), this._f);
    },
    map$1$1(_, toElement, $T) {
      return new A.MappedIterable(this, toElement, this.$ti._eval$1("@<1>")._bind$1($T)._eval$1("MappedIterable<1,2>"));
    }
  };
  A.WhereIterator.prototype = {
    moveNext$0() {
      var t1, t2;
      for (t1 = this._iterator, t2 = this._f; t1.moveNext$0();)
        if (t2.call$1(t1.get$current(t1)))
          return true;
      return false;
    },
    get$current(_) {
      var t1 = this._iterator;
      return t1.get$current(t1);
    }
  };
  A.TakeIterable.prototype = {
    get$iterator(_) {
      return new A.TakeIterator(J.get$iterator$ax(this.__internal$_iterable), this._takeCount);
    }
  };
  A.EfficientLengthTakeIterable.prototype = {
    get$length(_) {
      var iterableLength = J.get$length$asx(this.__internal$_iterable),
        t1 = this._takeCount;
      if (iterableLength > t1)
        return t1;
      return iterableLength;
    },
    $isEfficientLengthIterable: 1
  };
  A.TakeIterator.prototype = {
    moveNext$0() {
      if (--this._remaining >= 0)
        return this._iterator.moveNext$0();
      this._remaining = -1;
      return false;
    },
    get$current(_) {
      var t1;
      if (this._remaining < 0) {
        A._instanceType(this)._precomputed1._as(null);
        return null;
      }
      t1 = this._iterator;
      return t1.get$current(t1);
    }
  };
  A.SkipIterable.prototype = {
    skip$1(_, count) {
      A.ArgumentError_checkNotNull(count, "count");
      A.RangeError_checkNotNegative(count, "count");
      return new A.SkipIterable(this.__internal$_iterable, this._skipCount + count, A._instanceType(this)._eval$1("SkipIterable<1>"));
    },
    get$iterator(_) {
      return new A.SkipIterator(J.get$iterator$ax(this.__internal$_iterable), this._skipCount);
    }
  };
  A.EfficientLengthSkipIterable.prototype = {
    get$length(_) {
      var $length = J.get$length$asx(this.__internal$_iterable) - this._skipCount;
      if ($length >= 0)
        return $length;
      return 0;
    },
    skip$1(_, count) {
      A.ArgumentError_checkNotNull(count, "count");
      A.RangeError_checkNotNegative(count, "count");
      return new A.EfficientLengthSkipIterable(this.__internal$_iterable, this._skipCount + count, this.$ti);
    },
    $isEfficientLengthIterable: 1
  };
  A.SkipIterator.prototype = {
    moveNext$0() {
      var t1, i;
      for (t1 = this._iterator, i = 0; i < this._skipCount; ++i)
        t1.moveNext$0();
      this._skipCount = 0;
      return t1.moveNext$0();
    },
    get$current(_) {
      var t1 = this._iterator;
      return t1.get$current(t1);
    }
  };
  A.SkipWhileIterable.prototype = {
    get$iterator(_) {
      return new A.SkipWhileIterator(J.get$iterator$ax(this.__internal$_iterable), this._f);
    }
  };
  A.SkipWhileIterator.prototype = {
    moveNext$0() {
      var t1, t2, _this = this;
      if (!_this._hasSkipped) {
        _this._hasSkipped = true;
        for (t1 = _this._iterator, t2 = _this._f; t1.moveNext$0();)
          if (!t2.call$1(t1.get$current(t1)))
            return true;
      }
      return _this._iterator.moveNext$0();
    },
    get$current(_) {
      var t1 = this._iterator;
      return t1.get$current(t1);
    }
  };
  A.EmptyIterable.prototype = {
    get$iterator(_) {
      return B.C_EmptyIterator;
    },
    get$isEmpty(_) {
      return true;
    },
    get$length(_) {
      return 0;
    },
    get$first(_) {
      throw A.wrapException(A.IterableElementError_noElement());
    },
    elementAt$1(_, index) {
      throw A.wrapException(A.RangeError$range(index, 0, 0, "index", null));
    },
    map$1$1(_, toElement, $T) {
      return new A.EmptyIterable($T._eval$1("EmptyIterable<0>"));
    },
    skip$1(_, count) {
      A.RangeError_checkNotNegative(count, "count");
      return this;
    },
    toList$1$growable(_, growable) {
      var t1 = J.JSArray_JSArray$growable(0, this.$ti._precomputed1);
      return t1;
    },
    toList$0($receiver) {
      return this.toList$1$growable($receiver, true);
    }
  };
  A.EmptyIterator.prototype = {
    moveNext$0() {
      return false;
    },
    get$current(_) {
      throw A.wrapException(A.IterableElementError_noElement());
    }
  };
  A.WhereTypeIterable.prototype = {
    get$iterator(_) {
      return new A.WhereTypeIterator(J.get$iterator$ax(this._source), this.$ti._eval$1("WhereTypeIterator<1>"));
    }
  };
  A.WhereTypeIterator.prototype = {
    moveNext$0() {
      var t1, t2;
      for (t1 = this._source, t2 = this.$ti._precomputed1; t1.moveNext$0();)
        if (t2._is(t1.get$current(t1)))
          return true;
      return false;
    },
    get$current(_) {
      var t1 = this._source;
      return this.$ti._precomputed1._as(t1.get$current(t1));
    }
  };
  A.FixedLengthListMixin.prototype = {
    set$length(receiver, newLength) {
      throw A.wrapException(A.UnsupportedError$("Cannot change the length of a fixed-length list"));
    },
    add$1(receiver, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot add to a fixed-length list"));
    }
  };
  A.UnmodifiableListMixin.prototype = {
    $indexSet(_, index, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot modify an unmodifiable list"));
    },
    set$length(_, newLength) {
      throw A.wrapException(A.UnsupportedError$("Cannot change the length of an unmodifiable list"));
    },
    add$1(_, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot add to an unmodifiable list"));
    }
  };
  A.UnmodifiableListBase.prototype = {};
  A.Symbol.prototype = {
    get$hashCode(_) {
      var hash = this._hashCode;
      if (hash != null)
        return hash;
      hash = 664597 * B.JSString_methods.get$hashCode(this._name) & 536870911;
      this._hashCode = hash;
      return hash;
    },
    toString$0(_) {
      return 'Symbol("' + this._name + '")';
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.Symbol && this._name === other._name;
    },
    $isSymbol0: 1
  };
  A.__CastListBase__CastIterableBase_ListMixin.prototype = {};
  A._Record_2.prototype = {$recipe: "+(1,2)", $shape: 1};
  A.ConstantMapView.prototype = {};
  A.ConstantMap.prototype = {
    get$isEmpty(_) {
      return this.get$length(this) === 0;
    },
    toString$0(_) {
      return A.MapBase_mapToString(this);
    },
    get$entries(_) {
      return new A._SyncStarIterable(this.entries$body$ConstantMap(0), A._instanceType(this)._eval$1("_SyncStarIterable<MapEntry<1,2>>"));
    },
    entries$body$ConstantMap($async$_) {
      var $async$self = this;
      return function() {
        var _ = $async$_;
        var $async$goto = 0, $async$handler = 1, $async$currentError, t1, t2, key;
        return function $async$get$entries($async$iterator, $async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = $async$self.get$keys($async$self), t1 = t1.get$iterator(t1), t2 = A._instanceType($async$self), t2 = t2._eval$1("@<1>")._bind$1(t2._rest[1])._eval$1("MapEntry<1,2>");
              case 2:
                // for condition
                if (!t1.moveNext$0()) {
                  // goto after for
                  $async$goto = 3;
                  break;
                }
                key = t1.get$current(t1);
                $async$goto = 4;
                return $async$iterator._async$_current = new A.MapEntry(key, $async$self.$index(0, key), t2), 1;
              case 4:
                // after yield
                // goto for condition
                $async$goto = 2;
                break;
              case 3:
                // after for
                // implicit return
                return 0;
              case 1:
                // rethrow
                return $async$iterator._datum = $async$currentError, 3;
            }
        };
      };
    },
    $isMap: 1
  };
  A.ConstantStringMap.prototype = {
    get$length(_) {
      return this._values.length;
    },
    get$_keys() {
      var keys = this.$keys;
      if (keys == null) {
        keys = Object.keys(this._jsIndex);
        this.$keys = keys;
      }
      return keys;
    },
    containsKey$1(_, key) {
      if (typeof key != "string")
        return false;
      if ("__proto__" === key)
        return false;
      return this._jsIndex.hasOwnProperty(key);
    },
    $index(_, key) {
      if (!this.containsKey$1(0, key))
        return null;
      return this._values[this._jsIndex[key]];
    },
    forEach$1(_, f) {
      var t1, i,
        keys = this.get$_keys(),
        values = this._values;
      for (t1 = keys.length, i = 0; i < t1; ++i)
        f.call$2(keys[i], values[i]);
    },
    get$keys(_) {
      return new A._KeysOrValues(this.get$_keys(), this.$ti._eval$1("_KeysOrValues<1>"));
    }
  };
  A._KeysOrValues.prototype = {
    get$length(_) {
      return this._elements.length;
    },
    get$isEmpty(_) {
      return 0 === this._elements.length;
    },
    get$isNotEmpty(_) {
      return 0 !== this._elements.length;
    },
    get$iterator(_) {
      var t1 = this._elements;
      return new A._KeysOrValuesOrElementsIterator(t1, t1.length);
    }
  };
  A._KeysOrValuesOrElementsIterator.prototype = {
    get$current(_) {
      var t1 = this.__js_helper$_current;
      return t1 == null ? A._instanceType(this)._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var _this = this,
        t1 = _this.__js_helper$_index;
      if (t1 >= _this.__js_helper$_length) {
        _this.__js_helper$_current = null;
        return false;
      }
      _this.__js_helper$_current = _this._elements[t1];
      _this.__js_helper$_index = t1 + 1;
      return true;
    }
  };
  A.GeneralConstantMap.prototype = {
    _getMap$0() {
      var t1, _this = this,
        backingMap = _this.$map;
      if (backingMap == null) {
        t1 = _this.$ti;
        backingMap = new A.JsConstantLinkedHashMap(t1._eval$1("@<1>")._bind$1(t1._rest[1])._eval$1("JsConstantLinkedHashMap<1,2>"));
        A.fillLiteralMap(_this._jsData, backingMap);
        _this.$map = backingMap;
      }
      return backingMap;
    },
    containsKey$1(_, key) {
      return this._getMap$0().containsKey$1(0, key);
    },
    $index(_, key) {
      return this._getMap$0().$index(0, key);
    },
    forEach$1(_, f) {
      this._getMap$0().forEach$1(0, f);
    },
    get$keys(_) {
      var t1 = this._getMap$0();
      return new A.LinkedHashMapKeyIterable(t1, A._instanceType(t1)._eval$1("LinkedHashMapKeyIterable<1>"));
    },
    get$length(_) {
      return this._getMap$0().__js_helper$_length;
    }
  };
  A.ConstantSet.prototype = {
    add$1(_, value) {
      A.ConstantSet__throwUnmodifiable();
    }
  };
  A.ConstantStringSet.prototype = {
    get$length(_) {
      return this.__js_helper$_length;
    },
    get$isEmpty(_) {
      return this.__js_helper$_length === 0;
    },
    get$isNotEmpty(_) {
      return this.__js_helper$_length !== 0;
    },
    get$iterator(_) {
      var t1,
        keys = this.$keys;
      if (keys == null) {
        keys = Object.keys(this._jsIndex);
        this.$keys = keys;
      }
      t1 = keys;
      return new A._KeysOrValuesOrElementsIterator(t1, t1.length);
    },
    contains$1(_, key) {
      if (typeof key != "string")
        return false;
      if ("__proto__" === key)
        return false;
      return this._jsIndex.hasOwnProperty(key);
    }
  };
  A.GeneralConstantSet.prototype = {
    get$length(_) {
      return this._elements.length;
    },
    get$isEmpty(_) {
      return this._elements.length === 0;
    },
    get$isNotEmpty(_) {
      return this._elements.length !== 0;
    },
    get$iterator(_) {
      var t1 = this._elements;
      return new A._KeysOrValuesOrElementsIterator(t1, t1.length);
    },
    _getMap$0() {
      var t1, t2, _i, key, _this = this,
        backingMap = _this.$map;
      if (backingMap == null) {
        t1 = _this.$ti;
        backingMap = new A.JsConstantLinkedHashMap(t1._eval$1("@<1>")._bind$1(t1._precomputed1)._eval$1("JsConstantLinkedHashMap<1,2>"));
        for (t1 = _this._elements, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
          key = t1[_i];
          backingMap.$indexSet(0, key, key);
        }
        _this.$map = backingMap;
      }
      return backingMap;
    },
    contains$1(_, key) {
      return this._getMap$0().containsKey$1(0, key);
    }
  };
  A.JSInvocationMirror.prototype = {
    get$memberName() {
      var t1 = this.__js_helper$_memberName;
      return t1;
    },
    get$positionalArguments() {
      var t1, argumentCount, list, index, _this = this;
      if (_this.__js_helper$_kind === 1)
        return B.List_empty;
      t1 = _this._arguments;
      argumentCount = t1.length - _this._namedArgumentNames.length - _this._typeArgumentCount;
      if (argumentCount === 0)
        return B.List_empty;
      list = [];
      for (index = 0; index < argumentCount; ++index)
        list.push(t1[index]);
      return J.JSArray_markUnmodifiableList(list);
    },
    get$namedArguments() {
      var t1, namedArgumentCount, t2, namedArgumentsStartIndex, map, i, _this = this;
      if (_this.__js_helper$_kind !== 0)
        return B.Map_empty;
      t1 = _this._namedArgumentNames;
      namedArgumentCount = t1.length;
      t2 = _this._arguments;
      namedArgumentsStartIndex = t2.length - namedArgumentCount - _this._typeArgumentCount;
      if (namedArgumentCount === 0)
        return B.Map_empty;
      map = new A.JsLinkedHashMap(type$.JsLinkedHashMap_Symbol_dynamic);
      for (i = 0; i < namedArgumentCount; ++i)
        map.$indexSet(0, new A.Symbol(t1[i]), t2[namedArgumentsStartIndex + i]);
      return new A.ConstantMapView(map, type$.ConstantMapView_Symbol_dynamic);
    }
  };
  A.Primitives_initTicker_closure.prototype = {
    call$0() {
      return B.JSNumber_methods.floor$0(1000 * this.performance.now());
    },
    $signature: 14
  };
  A.Primitives_functionNoSuchMethod_closure.prototype = {
    call$2($name, argument) {
      var t1 = this._box_0;
      t1.names = t1.names + "$" + $name;
      this.namedArgumentList.push($name);
      this.$arguments.push(argument);
      ++t1.argumentCount;
    },
    $signature: 4
  };
  A.TypeErrorDecoder.prototype = {
    matchTypeError$1(message) {
      var result, t1, _this = this,
        match = new RegExp(_this._pattern).exec(message);
      if (match == null)
        return null;
      result = Object.create(null);
      t1 = _this._arguments;
      if (t1 !== -1)
        result.arguments = match[t1 + 1];
      t1 = _this._argumentsExpr;
      if (t1 !== -1)
        result.argumentsExpr = match[t1 + 1];
      t1 = _this._expr;
      if (t1 !== -1)
        result.expr = match[t1 + 1];
      t1 = _this._method;
      if (t1 !== -1)
        result.method = match[t1 + 1];
      t1 = _this._receiver;
      if (t1 !== -1)
        result.receiver = match[t1 + 1];
      return result;
    }
  };
  A.NullError.prototype = {
    toString$0(_) {
      return "Null check operator used on a null value";
    }
  };
  A.JsNoSuchMethodError.prototype = {
    toString$0(_) {
      var t2, _this = this,
        _s38_ = "NoSuchMethodError: method not found: '",
        t1 = _this._method;
      if (t1 == null)
        return "NoSuchMethodError: " + _this.__js_helper$_message;
      t2 = _this._receiver;
      if (t2 == null)
        return _s38_ + t1 + "' (" + _this.__js_helper$_message + ")";
      return _s38_ + t1 + "' on '" + t2 + "' (" + _this.__js_helper$_message + ")";
    }
  };
  A.UnknownJsTypeError.prototype = {
    toString$0(_) {
      var t1 = this.__js_helper$_message;
      return t1.length === 0 ? "Error" : "Error: " + t1;
    }
  };
  A.NullThrownFromJavaScriptException.prototype = {
    toString$0(_) {
      return "Throw of null ('" + (this._irritant === null ? "null" : "undefined") + "' from JavaScript)";
    },
    $isException: 1
  };
  A.ExceptionAndStackTrace.prototype = {};
  A._StackTrace.prototype = {
    toString$0(_) {
      var trace,
        t1 = this._trace;
      if (t1 != null)
        return t1;
      t1 = this._exception;
      trace = t1 !== null && typeof t1 === "object" ? t1.stack : null;
      return this._trace = trace == null ? "" : trace;
    },
    $isStackTrace: 1
  };
  A.Closure.prototype = {
    toString$0(_) {
      var $constructor = this.constructor,
        $name = $constructor == null ? null : $constructor.name;
      return "Closure '" + A.unminifyOrTag($name == null ? "unknown" : $name) + "'";
    },
    get$runtimeType(_) {
      var rti = A.closureFunctionType(this);
      return A.createRuntimeType(rti == null ? A.instanceType(this) : rti);
    },
    $isFunction: 1,
    get$$call() {
      return this;
    },
    "call*": "call$1",
    $requiredArgCount: 1,
    $defaultValues: null
  };
  A.Closure0Args.prototype = {"call*": "call$0", $requiredArgCount: 0};
  A.Closure2Args.prototype = {"call*": "call$2", $requiredArgCount: 2};
  A.TearOffClosure.prototype = {};
  A.StaticClosure.prototype = {
    toString$0(_) {
      var $name = this.$static_name;
      if ($name == null)
        return "Closure of unknown static method";
      return "Closure '" + A.unminifyOrTag($name) + "'";
    }
  };
  A.BoundClosure.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (!(other instanceof A.BoundClosure))
        return false;
      return this.$_target === other.$_target && this._receiver === other._receiver;
    },
    get$hashCode(_) {
      return (A.objectHashCode(this._receiver) ^ A.Primitives_objectHashCode(this.$_target)) >>> 0;
    },
    toString$0(_) {
      return "Closure '" + this.$_name + "' of " + ("Instance of '" + A.Primitives_objectTypeName(this._receiver) + "'");
    }
  };
  A._CyclicInitializationError.prototype = {
    toString$0(_) {
      return "Reading static variable '" + this.variableName + "' during its initialization";
    }
  };
  A.RuntimeError.prototype = {
    toString$0(_) {
      return "RuntimeError: " + this.message;
    }
  };
  A._Required.prototype = {};
  A.JsLinkedHashMap.prototype = {
    get$length(_) {
      return this.__js_helper$_length;
    },
    get$isEmpty(_) {
      return this.__js_helper$_length === 0;
    },
    get$keys(_) {
      return new A.LinkedHashMapKeyIterable(this, A._instanceType(this)._eval$1("LinkedHashMapKeyIterable<1>"));
    },
    get$values(_) {
      var t1 = A._instanceType(this);
      return A.MappedIterable_MappedIterable(new A.LinkedHashMapKeyIterable(this, t1._eval$1("LinkedHashMapKeyIterable<1>")), new A.JsLinkedHashMap_values_closure(this), t1._precomputed1, t1._rest[1]);
    },
    containsKey$1(_, key) {
      var strings, nums;
      if (typeof key == "string") {
        strings = this._strings;
        if (strings == null)
          return false;
        return strings[key] != null;
      } else if (typeof key == "number" && (key & 0x3fffffff) === key) {
        nums = this._nums;
        if (nums == null)
          return false;
        return nums[key] != null;
      } else
        return this.internalContainsKey$1(key);
    },
    internalContainsKey$1(key) {
      var rest = this.__js_helper$_rest;
      if (rest == null)
        return false;
      return this.internalFindBucketIndex$2(rest[this.internalComputeHashCode$1(key)], key) >= 0;
    },
    containsValue$1(_, value) {
      return new A.LinkedHashMapKeyIterable(this, A._instanceType(this)._eval$1("LinkedHashMapKeyIterable<1>")).any$1(0, new A.JsLinkedHashMap_containsValue_closure(this, value));
    },
    $index(_, key) {
      var strings, cell, t1, nums, _null = null;
      if (typeof key == "string") {
        strings = this._strings;
        if (strings == null)
          return _null;
        cell = strings[key];
        t1 = cell == null ? _null : cell.hashMapCellValue;
        return t1;
      } else if (typeof key == "number" && (key & 0x3fffffff) === key) {
        nums = this._nums;
        if (nums == null)
          return _null;
        cell = nums[key];
        t1 = cell == null ? _null : cell.hashMapCellValue;
        return t1;
      } else
        return this.internalGet$1(key);
    },
    internalGet$1(key) {
      var bucket, index,
        rest = this.__js_helper$_rest;
      if (rest == null)
        return null;
      bucket = rest[this.internalComputeHashCode$1(key)];
      index = this.internalFindBucketIndex$2(bucket, key);
      if (index < 0)
        return null;
      return bucket[index].hashMapCellValue;
    },
    $indexSet(_, key, value) {
      var strings, nums, _this = this;
      if (typeof key == "string") {
        strings = _this._strings;
        _this._addHashTableEntry$3(strings == null ? _this._strings = _this._newHashTable$0() : strings, key, value);
      } else if (typeof key == "number" && (key & 0x3fffffff) === key) {
        nums = _this._nums;
        _this._addHashTableEntry$3(nums == null ? _this._nums = _this._newHashTable$0() : nums, key, value);
      } else
        _this.internalSet$2(key, value);
    },
    internalSet$2(key, value) {
      var hash, bucket, index, _this = this,
        rest = _this.__js_helper$_rest;
      if (rest == null)
        rest = _this.__js_helper$_rest = _this._newHashTable$0();
      hash = _this.internalComputeHashCode$1(key);
      bucket = rest[hash];
      if (bucket == null)
        rest[hash] = [_this._newLinkedCell$2(key, value)];
      else {
        index = _this.internalFindBucketIndex$2(bucket, key);
        if (index >= 0)
          bucket[index].hashMapCellValue = value;
        else
          bucket.push(_this._newLinkedCell$2(key, value));
      }
    },
    putIfAbsent$2(_, key, ifAbsent) {
      var t1, value, _this = this;
      if (_this.containsKey$1(0, key)) {
        t1 = _this.$index(0, key);
        return t1 == null ? A._instanceType(_this)._rest[1]._as(t1) : t1;
      }
      value = ifAbsent.call$0();
      _this.$indexSet(0, key, value);
      return value;
    },
    remove$1(_, key) {
      var _this = this;
      if (typeof key == "string")
        return _this._removeHashTableEntry$2(_this._strings, key);
      else if (typeof key == "number" && (key & 0x3fffffff) === key)
        return _this._removeHashTableEntry$2(_this._nums, key);
      else
        return _this.internalRemove$1(key);
    },
    internalRemove$1(key) {
      var hash, bucket, index, cell, _this = this,
        rest = _this.__js_helper$_rest;
      if (rest == null)
        return null;
      hash = _this.internalComputeHashCode$1(key);
      bucket = rest[hash];
      index = _this.internalFindBucketIndex$2(bucket, key);
      if (index < 0)
        return null;
      cell = bucket.splice(index, 1)[0];
      _this._unlinkCell$1(cell);
      if (bucket.length === 0)
        delete rest[hash];
      return cell.hashMapCellValue;
    },
    clear$0(_) {
      var _this = this;
      if (_this.__js_helper$_length > 0) {
        _this._strings = _this._nums = _this.__js_helper$_rest = _this._first = _this._last = null;
        _this.__js_helper$_length = 0;
        _this._modified$0();
      }
    },
    forEach$1(_, action) {
      var _this = this,
        cell = _this._first,
        modifications = _this._modifications;
      for (; cell != null;) {
        action.call$2(cell.hashMapCellKey, cell.hashMapCellValue);
        if (modifications !== _this._modifications)
          throw A.wrapException(A.ConcurrentModificationError$(_this));
        cell = cell._next;
      }
    },
    _addHashTableEntry$3(table, key, value) {
      var cell = table[key];
      if (cell == null)
        table[key] = this._newLinkedCell$2(key, value);
      else
        cell.hashMapCellValue = value;
    },
    _removeHashTableEntry$2(table, key) {
      var cell;
      if (table == null)
        return null;
      cell = table[key];
      if (cell == null)
        return null;
      this._unlinkCell$1(cell);
      delete table[key];
      return cell.hashMapCellValue;
    },
    _modified$0() {
      this._modifications = this._modifications + 1 & 1073741823;
    },
    _newLinkedCell$2(key, value) {
      var t1, _this = this,
        cell = new A.LinkedHashMapCell(key, value);
      if (_this._first == null)
        _this._first = _this._last = cell;
      else {
        t1 = _this._last;
        t1.toString;
        cell._previous = t1;
        _this._last = t1._next = cell;
      }
      ++_this.__js_helper$_length;
      _this._modified$0();
      return cell;
    },
    _unlinkCell$1(cell) {
      var _this = this,
        previous = cell._previous,
        next = cell._next;
      if (previous == null)
        _this._first = next;
      else
        previous._next = next;
      if (next == null)
        _this._last = previous;
      else
        next._previous = previous;
      --_this.__js_helper$_length;
      _this._modified$0();
    },
    internalComputeHashCode$1(key) {
      return J.get$hashCode$(key) & 1073741823;
    },
    internalFindBucketIndex$2(bucket, key) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (J.$eq$(bucket[i].hashMapCellKey, key))
          return i;
      return -1;
    },
    toString$0(_) {
      return A.MapBase_mapToString(this);
    },
    _newHashTable$0() {
      var table = Object.create(null);
      table["<non-identifier-key>"] = table;
      delete table["<non-identifier-key>"];
      return table;
    }
  };
  A.JsLinkedHashMap_values_closure.prototype = {
    call$1(each) {
      var t1 = this.$this,
        t2 = t1.$index(0, each);
      return t2 == null ? A._instanceType(t1)._rest[1]._as(t2) : t2;
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("2(1)");
    }
  };
  A.JsLinkedHashMap_containsValue_closure.prototype = {
    call$1(each) {
      return J.$eq$(this.$this.$index(0, each), this.value);
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("bool(1)");
    }
  };
  A.LinkedHashMapCell.prototype = {};
  A.LinkedHashMapKeyIterable.prototype = {
    get$length(_) {
      return this._map.__js_helper$_length;
    },
    get$isEmpty(_) {
      return this._map.__js_helper$_length === 0;
    },
    get$iterator(_) {
      var t1 = this._map,
        t2 = new A.LinkedHashMapKeyIterator(t1, t1._modifications);
      t2._cell = t1._first;
      return t2;
    },
    contains$1(_, element) {
      return this._map.containsKey$1(0, element);
    },
    forEach$1(_, f) {
      var t1 = this._map,
        cell = t1._first,
        modifications = t1._modifications;
      for (; cell != null;) {
        f.call$1(cell.hashMapCellKey);
        if (modifications !== t1._modifications)
          throw A.wrapException(A.ConcurrentModificationError$(t1));
        cell = cell._next;
      }
    }
  };
  A.LinkedHashMapKeyIterator.prototype = {
    get$current(_) {
      return this.__js_helper$_current;
    },
    moveNext$0() {
      var cell, _this = this,
        t1 = _this._map;
      if (_this._modifications !== t1._modifications)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      cell = _this._cell;
      if (cell == null) {
        _this.__js_helper$_current = null;
        return false;
      } else {
        _this.__js_helper$_current = cell.hashMapCellKey;
        _this._cell = cell._next;
        return true;
      }
    }
  };
  A.JsConstantLinkedHashMap.prototype = {
    internalComputeHashCode$1(key) {
      return A.constantHashCode(key) & 1073741823;
    },
    internalFindBucketIndex$2(bucket, key) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (J.$eq$(bucket[i].hashMapCellKey, key))
          return i;
      return -1;
    }
  };
  A.initHooks_closure.prototype = {
    call$1(o) {
      return this.getTag(o);
    },
    $signature: 39
  };
  A.initHooks_closure0.prototype = {
    call$2(o, tag) {
      return this.getUnknownTag(o, tag);
    },
    $signature: 59
  };
  A.initHooks_closure1.prototype = {
    call$1(tag) {
      return this.prototypeForTag(tag);
    },
    $signature: 60
  };
  A._Record.prototype = {
    get$runtimeType(_) {
      return A.createRuntimeType(this._getRti$0());
    },
    _getRti$0() {
      return A.evaluateRtiForRecord(this.$recipe, this._getFieldValues$0());
    },
    toString$0(_) {
      return this._toString$1(false);
    },
    _toString$1(safe) {
      var t2, separator, i, key, value,
        keys = this._fieldKeys$0(),
        values = this._getFieldValues$0(),
        t1 = (safe ? "" + "Record " : "") + "(";
      for (t2 = keys.length, separator = "", i = 0; i < t2; ++i, separator = ", ") {
        t1 += separator;
        key = keys[i];
        if (typeof key == "string")
          t1 = t1 + key + ": ";
        value = values[i];
        t1 = safe ? t1 + A.Primitives_safeToString(value) : t1 + A.S(value);
      }
      t1 += ")";
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _fieldKeys$0() {
      var t1,
        shapeTag = this.$shape;
      for (; $._Record__computedFieldKeys.length <= shapeTag;)
        $._Record__computedFieldKeys.push(null);
      t1 = $._Record__computedFieldKeys[shapeTag];
      if (t1 == null) {
        t1 = this._computeFieldKeys$0();
        $._Record__computedFieldKeys[shapeTag] = t1;
      }
      return t1;
    },
    _computeFieldKeys$0() {
      var i, names, last,
        recipe = this.$recipe,
        position = recipe.indexOf("("),
        joinedNames = recipe.substring(1, position),
        fields = recipe.substring(position),
        arity = fields === "()" ? 0 : fields.replace(/[^,]/g, "").length + 1,
        t1 = type$.Object,
        result = J.JSArray_JSArray$allocateGrowable(arity, t1);
      for (i = 0; i < arity; ++i)
        result[i] = i;
      if (joinedNames !== "") {
        names = joinedNames.split(",");
        i = names.length;
        for (last = arity; i > 0;) {
          --last;
          --i;
          result[last] = names[i];
        }
      }
      return A.List_List$unmodifiable(result, t1);
    }
  };
  A._EmptyRecord.prototype = {
    _getFieldValues$0() {
      return B.List_empty2;
    },
    toString$0(_) {
      return "()";
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other === B.C_Record0;
    },
    get$hashCode(_) {
      return 2881;
    },
    $recipe: "+()",
    $shape: 0
  };
  A._Record2.prototype = {
    _getFieldValues$0() {
      return [this._0, this._1];
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A._Record2 && this.$shape === other.$shape && J.$eq$(this._0, other._0) && J.$eq$(this._1, other._1);
    },
    get$hashCode(_) {
      return A.Object_hash(this.$shape, this._0, this._1, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    }
  };
  A.JSSyntaxRegExp.prototype = {
    toString$0(_) {
      return "RegExp/" + this.pattern + "/" + this._nativeRegExp.flags;
    },
    get$_nativeGlobalVersion() {
      var _this = this,
        t1 = _this._nativeGlobalRegExp;
      if (t1 != null)
        return t1;
      t1 = _this._nativeRegExp;
      return _this._nativeGlobalRegExp = A.JSSyntaxRegExp_makeNative(_this.pattern, t1.multiline, !t1.ignoreCase, t1.unicode, t1.dotAll, true);
    },
    firstMatch$1(string) {
      var m = this._nativeRegExp.exec(string);
      if (m == null)
        return null;
      return new A._MatchImplementation(m);
    },
    stringMatch$1(string) {
      var match = this.firstMatch$1(string);
      if (match != null)
        return match._match[0];
      return null;
    },
    _execGlobal$2(string, start) {
      var match,
        regexp = this.get$_nativeGlobalVersion();
      regexp.lastIndex = start;
      match = regexp.exec(string);
      if (match == null)
        return null;
      return new A._MatchImplementation(match);
    }
  };
  A._MatchImplementation.prototype = {
    get$end(_) {
      var t1 = this._match;
      return t1.index + t1[0].length;
    },
    $index(_, index) {
      return this._match[index];
    },
    $isRegExpMatch: 1
  };
  A._AllMatchesIterator.prototype = {
    get$current(_) {
      var t1 = this.__js_helper$_current;
      return t1 == null ? type$.RegExpMatch._as(t1) : t1;
    },
    moveNext$0() {
      var t1, t2, t3, match, nextIndex, _this = this,
        string = _this.__js_helper$_string;
      if (string == null)
        return false;
      t1 = _this._nextIndex;
      t2 = string.length;
      if (t1 <= t2) {
        t3 = _this._regExp;
        match = t3._execGlobal$2(string, t1);
        if (match != null) {
          _this.__js_helper$_current = match;
          nextIndex = match.get$end(match);
          if (match._match.index === nextIndex) {
            if (t3._nativeRegExp.unicode) {
              t1 = _this._nextIndex;
              t3 = t1 + 1;
              if (t3 < t2) {
                t1 = string.charCodeAt(t1);
                if (t1 >= 55296 && t1 <= 56319) {
                  t1 = string.charCodeAt(t3);
                  t1 = t1 >= 56320 && t1 <= 57343;
                } else
                  t1 = false;
              } else
                t1 = false;
            } else
              t1 = false;
            nextIndex = (t1 ? nextIndex + 1 : nextIndex) + 1;
          }
          _this._nextIndex = nextIndex;
          return true;
        }
      }
      _this.__js_helper$_string = _this.__js_helper$_current = null;
      return false;
    }
  };
  A.StringMatch.prototype = {
    $index(_, g) {
      if (g !== 0)
        A.throwExpression(A.RangeError$value(g, null));
      return this.pattern;
    }
  };
  A._StringAllMatchesIterator.prototype = {
    moveNext$0() {
      var index, end, _this = this,
        t1 = _this.__js_helper$_index,
        t2 = _this._pattern,
        t3 = t2.length,
        t4 = _this._input,
        t5 = t4.length;
      if (t1 + t3 > t5) {
        _this.__js_helper$_current = null;
        return false;
      }
      index = t4.indexOf(t2, t1);
      if (index < 0) {
        _this.__js_helper$_index = t5 + 1;
        _this.__js_helper$_current = null;
        return false;
      }
      end = index + t3;
      _this.__js_helper$_current = new A.StringMatch(index, t2);
      _this.__js_helper$_index = end === _this.__js_helper$_index ? end + 1 : end;
      return true;
    },
    get$current(_) {
      var t1 = this.__js_helper$_current;
      t1.toString;
      return t1;
    }
  };
  A._Cell.prototype = {
    _readLocal$0() {
      var t1 = this.__late_helper$_value;
      if (t1 === this)
        throw A.wrapException(new A.LateError("Local '" + this.__late_helper$_name + "' has not been initialized."));
      return t1;
    },
    _readField$0() {
      var t1 = this.__late_helper$_value;
      if (t1 === this)
        throw A.wrapException(A.LateError$fieldNI(this.__late_helper$_name));
      return t1;
    },
    set$finalLocalValue(v) {
      var _this = this;
      if (_this.__late_helper$_value !== _this)
        throw A.wrapException(new A.LateError("Local '" + _this.__late_helper$_name + "' has already been initialized."));
      _this.__late_helper$_value = v;
    }
  };
  A._InitializedCell.prototype = {
    _readFinal$0() {
      var result, _this = this,
        t1 = _this.__late_helper$_value;
      if (t1 === _this) {
        result = _this._initializer.call$0();
        if (_this.__late_helper$_value !== _this)
          throw A.wrapException(new A.LateError("Local '" + _this.__late_helper$_name + string$.__has_));
        _this.__late_helper$_value = result;
        t1 = result;
      }
      return t1;
    }
  };
  A.NativeByteBuffer.prototype = {
    get$runtimeType(receiver) {
      return B.Type_ByteBuffer_RkP;
    },
    asInt64List$2(receiver, offsetInBytes, $length) {
      throw A.wrapException(A.UnsupportedError$("Int64List not supported by dart2js."));
    },
    $isTrustedGetRuntimeType: 1,
    $isByteBuffer: 1
  };
  A.NativeTypedData.prototype = {
    _invalidPosition$3(receiver, position, $length, $name) {
      var t1 = A.RangeError$range(position, 0, $length, $name, null);
      throw A.wrapException(t1);
    },
    _checkPosition$3(receiver, position, $length, $name) {
      if (position >>> 0 !== position || position > $length)
        this._invalidPosition$3(receiver, position, $length, $name);
    }
  };
  A.NativeByteData.prototype = {
    get$runtimeType(receiver) {
      return B.Type_ByteData_zNC;
    },
    getInt64$2(receiver, byteOffset, endian) {
      throw A.wrapException(A.UnsupportedError$("Int64 accessor not supported by dart2js."));
    },
    setInt64$3(receiver, byteOffset, value, endian) {
      throw A.wrapException(A.UnsupportedError$("Int64 accessor not supported by dart2js."));
    },
    $isTrustedGetRuntimeType: 1,
    $isByteData: 1
  };
  A.NativeTypedArray.prototype = {
    get$length(receiver) {
      return receiver.length;
    },
    _setRangeFast$4(receiver, start, end, source, skipCount) {
      var count, sourceLength,
        targetLength = receiver.length;
      this._checkPosition$3(receiver, start, targetLength, "start");
      this._checkPosition$3(receiver, end, targetLength, "end");
      if (start > end)
        throw A.wrapException(A.RangeError$range(start, 0, end, null, null));
      count = end - start;
      if (skipCount < 0)
        throw A.wrapException(A.ArgumentError$(skipCount, null));
      sourceLength = source.length;
      if (sourceLength - skipCount < count)
        throw A.wrapException(A.StateError$("Not enough elements"));
      if (skipCount !== 0 || sourceLength !== count)
        source = source.subarray(skipCount, skipCount + count);
      receiver.set(source, start);
    },
    $isJavaScriptIndexingBehavior: 1
  };
  A.NativeTypedArrayOfDouble.prototype = {
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    $indexSet(receiver, index, value) {
      A._checkValidIndex(index, receiver, receiver.length);
      receiver[index] = value;
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.NativeTypedArrayOfInt.prototype = {
    $indexSet(receiver, index, value) {
      A._checkValidIndex(index, receiver, receiver.length);
      receiver[index] = value;
    },
    setRange$4(receiver, start, end, iterable, skipCount) {
      if (type$.NativeTypedArrayOfInt._is(iterable)) {
        this._setRangeFast$4(receiver, start, end, iterable, skipCount);
        return;
      }
      this.super$ListBase$setRange(receiver, start, end, iterable, skipCount);
    },
    setRange$3($receiver, start, end, iterable) {
      return this.setRange$4($receiver, start, end, iterable, 0);
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.NativeFloat32List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Float32List_LB7;
    },
    $isTrustedGetRuntimeType: 1,
    $isFloat32List: 1
  };
  A.NativeFloat64List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Float64List_LB7;
    },
    $isTrustedGetRuntimeType: 1,
    $isFloat64List: 1
  };
  A.NativeInt16List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Int16List_uXf;
    },
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    $isTrustedGetRuntimeType: 1,
    $isInt16List: 1
  };
  A.NativeInt32List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Int32List_O50;
    },
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    $isTrustedGetRuntimeType: 1,
    $isInt32List: 1
  };
  A.NativeInt8List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Int8List_ekJ;
    },
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    $isTrustedGetRuntimeType: 1,
    $isInt8List: 1
  };
  A.NativeUint16List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Uint16List_2bx;
    },
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    $isTrustedGetRuntimeType: 1,
    $isUint16List: 1
  };
  A.NativeUint32List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Uint32List_2bx;
    },
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    $isTrustedGetRuntimeType: 1,
    $isUint32List: 1
  };
  A.NativeUint8ClampedList.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Uint8ClampedList_Jik;
    },
    get$length(receiver) {
      return receiver.length;
    },
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    $isTrustedGetRuntimeType: 1,
    $isUint8ClampedList: 1
  };
  A.NativeUint8List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Uint8List_WLA;
    },
    get$length(receiver) {
      return receiver.length;
    },
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    sublist$2(receiver, start, end) {
      return new Uint8Array(receiver.subarray(start, A._checkValidRange(start, end, receiver.length)));
    },
    $isTrustedGetRuntimeType: 1,
    $isNativeUint8List: 1,
    $isUint8List: 1
  };
  A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin.prototype = {};
  A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin.prototype = {};
  A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin.prototype = {};
  A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin.prototype = {};
  A.Rti.prototype = {
    _eval$1(recipe) {
      return A._Universe_evalInEnvironment(init.typeUniverse, this, recipe);
    },
    _bind$1(typeOrTuple) {
      return A._Universe_bind(init.typeUniverse, this, typeOrTuple);
    }
  };
  A._FunctionParameters.prototype = {};
  A._Type.prototype = {
    toString$0(_) {
      return A._rtiToString(this._rti, null);
    }
  };
  A._Error.prototype = {
    toString$0(_) {
      return this.__rti$_message;
    }
  };
  A._TypeError.prototype = {$isTypeError: 1};
  A._StringStream.prototype = {
    readIntAsVerbatim$0() {
      var t1 = this.__web_locale_keymap$_offset;
      this.__web_locale_keymap$_offset = t1 + 1;
      return this.__web_locale_keymap$_data.charCodeAt(t1) - $.$get$_kMarshallIntBase();
    },
    readIntAsChar$0() {
      var t1 = this.__web_locale_keymap$_offset;
      this.__web_locale_keymap$_offset = t1 + 1;
      return this.__web_locale_keymap$_data.charCodeAt(t1);
    },
    readEventKey$0() {
      var char = A.Primitives_stringFromCharCode(this.readIntAsChar$0());
      if (char === $.$get$_kUseDead())
        return "Dead";
      else
        return char;
    }
  };
  A._StringStream__goalToEventCode_closure.prototype = {
    call$1(beforeEntry) {
      return new A.MapEntry(J.codeUnitAt$1$s(beforeEntry.value, 0), beforeEntry.key, type$.MapEntry_int_String);
    },
    $signature: 61
  };
  A.LocaleKeymap.prototype = {
    getLogicalKey$3(eventCode, eventKey, eventKeyCode) {
      var heuristicResult, characterLogicalKey,
        t1 = this.__web_locale_keymap$_mapping.$index(0, eventCode),
        result = t1 == null ? null : t1.$index(0, eventKey);
      if (result === 255)
        return eventKeyCode;
      if (result == null) {
        t1 = eventCode == null ? "" : eventCode;
        heuristicResult = A.heuristicMapper(t1, eventKey == null ? "" : eventKey);
        if (heuristicResult != null)
          return heuristicResult;
        characterLogicalKey = A._characterToLogicalKey(eventKey);
        if (characterLogicalKey != null)
          return characterLogicalKey;
      }
      return result;
    }
  };
  A.LineCharProperty.prototype = {
    _enumToString$0() {
      return "LineCharProperty." + this._core$_name;
    }
  };
  A._AsyncRun__initializeScheduleImmediate_internalCallback.prototype = {
    call$1(_) {
      var t1 = this._box_0,
        f = t1.storedCallback;
      t1.storedCallback = null;
      f.call$0();
    },
    $signature: 6
  };
  A._AsyncRun__initializeScheduleImmediate_closure.prototype = {
    call$1(callback) {
      var t1, t2;
      this._box_0.storedCallback = callback;
      t1 = this.div;
      t2 = this.span;
      t1.firstChild ? t1.removeChild(t2) : t1.appendChild(t2);
    },
    $signature: 62
  };
  A._AsyncRun__scheduleImmediateJsOverride_internalCallback.prototype = {
    call$0() {
      this.callback.call$0();
    },
    $signature: 17
  };
  A._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback.prototype = {
    call$0() {
      this.callback.call$0();
    },
    $signature: 17
  };
  A._TimerImpl.prototype = {
    _TimerImpl$2(milliseconds, callback) {
      if (self.setTimeout != null)
        this._handle = self.setTimeout(A.convertDartClosureToJS(new A._TimerImpl_internalCallback(this, callback), 0), milliseconds);
      else
        throw A.wrapException(A.UnsupportedError$("`setTimeout()` not found."));
    },
    cancel$0(_) {
      var t1;
      if (self.setTimeout != null) {
        t1 = this._handle;
        if (t1 == null)
          return;
        self.clearTimeout(t1);
        this._handle = null;
      } else
        throw A.wrapException(A.UnsupportedError$("Canceling a timer."));
    },
    $isTimer: 1
  };
  A._TimerImpl_internalCallback.prototype = {
    call$0() {
      this.$this._handle = null;
      this.callback.call$0();
    },
    $signature: 0
  };
  A._AsyncAwaitCompleter.prototype = {
    complete$1(_, value) {
      var t1, _this = this;
      if (value == null)
        value = _this.$ti._precomputed1._as(value);
      if (!_this.isSync)
        _this._future._asyncComplete$1(value);
      else {
        t1 = _this._future;
        if (_this.$ti._eval$1("Future<1>")._is(value))
          t1._chainFuture$1(value);
        else
          t1._completeWithValue$1(value);
      }
    },
    completeError$2(e, st) {
      var t1 = this._future;
      if (this.isSync)
        t1._completeError$2(e, st);
      else
        t1._asyncCompleteError$2(e, st);
    }
  };
  A._awaitOnObject_closure.prototype = {
    call$1(result) {
      return this.bodyFunction.call$2(0, result);
    },
    $signature: 8
  };
  A._awaitOnObject_closure0.prototype = {
    call$2(error, stackTrace) {
      this.bodyFunction.call$2(1, new A.ExceptionAndStackTrace(error, stackTrace));
    },
    $signature: 65
  };
  A._wrapJsFunctionForAsync_closure.prototype = {
    call$2(errorCode, result) {
      this.$protected(errorCode, result);
    },
    $signature: 66
  };
  A._SyncStarIterator.prototype = {
    get$current(_) {
      return this._async$_current;
    },
    _resumeBody$2(errorCode, errorValue) {
      var body, t1, exception;
      errorCode = errorCode;
      errorValue = errorValue;
      body = this._body;
      for (; true;)
        try {
          t1 = body(this, errorCode, errorValue);
          return t1;
        } catch (exception) {
          errorValue = exception;
          errorCode = 1;
        }
    },
    moveNext$0() {
      var nestedIterator, exception, value, suspendedBodies, _this = this, errorValue = null, errorCode = 0;
      for (; true;) {
        nestedIterator = _this._nestedIterator;
        if (nestedIterator != null)
          try {
            if (nestedIterator.moveNext$0()) {
              _this._async$_current = J.get$current$z(nestedIterator);
              return true;
            } else
              _this._nestedIterator = null;
          } catch (exception) {
            errorValue = exception;
            errorCode = 1;
            _this._nestedIterator = null;
          }
        value = _this._resumeBody$2(errorCode, errorValue);
        if (1 === value)
          return true;
        if (0 === value) {
          _this._async$_current = null;
          suspendedBodies = _this._suspendedBodies;
          if (suspendedBodies == null || suspendedBodies.length === 0) {
            _this._body = A._SyncStarIterator__terminatedBody;
            return false;
          }
          _this._body = suspendedBodies.pop();
          errorCode = 0;
          errorValue = null;
          continue;
        }
        if (2 === value) {
          errorCode = 0;
          errorValue = null;
          continue;
        }
        if (3 === value) {
          errorValue = _this._datum;
          _this._datum = null;
          suspendedBodies = _this._suspendedBodies;
          if (suspendedBodies == null || suspendedBodies.length === 0) {
            _this._async$_current = null;
            _this._body = A._SyncStarIterator__terminatedBody;
            throw errorValue;
            return false;
          }
          _this._body = suspendedBodies.pop();
          errorCode = 1;
          continue;
        }
        throw A.wrapException(A.StateError$("sync*"));
      }
      return false;
    },
    _yieldStar$1(iterable) {
      var t1, t2, _this = this;
      if (iterable instanceof A._SyncStarIterable) {
        t1 = iterable._outerHelper();
        t2 = _this._suspendedBodies;
        if (t2 == null)
          t2 = _this._suspendedBodies = [];
        t2.push(_this._body);
        _this._body = t1;
        return 2;
      } else {
        _this._nestedIterator = J.get$iterator$ax(iterable);
        return 2;
      }
    }
  };
  A._SyncStarIterable.prototype = {
    get$iterator(_) {
      return new A._SyncStarIterator(this._outerHelper());
    }
  };
  A.AsyncError.prototype = {
    toString$0(_) {
      return A.S(this.error);
    },
    $isError: 1,
    get$stackTrace() {
      return this.stackTrace;
    }
  };
  A._BroadcastStream.prototype = {};
  A._BroadcastSubscription.prototype = {
    _onPause$0() {
    },
    _onResume$0() {
    }
  };
  A._BroadcastStreamController.prototype = {
    get$_mayAddEvent() {
      return this._state < 4;
    },
    _removeListener$1(subscription) {
      var previous = subscription._async$_previous,
        next = subscription._async$_next;
      if (previous == null)
        this._firstSubscription = next;
      else
        previous._async$_next = next;
      if (next == null)
        this._lastSubscription = previous;
      else
        next._async$_previous = previous;
      subscription._async$_previous = subscription;
      subscription._async$_next = subscription;
    },
    _subscribe$4(onData, onError, onDone, cancelOnError) {
      var t1, t2, t3, t4, subscription, oldLast, _this = this;
      if ((_this._state & 4) !== 0) {
        t1 = new A._DoneStreamSubscription($.Zone__current);
        A.scheduleMicrotask(t1.get$_onMicrotask());
        if (onDone != null)
          t1._onDone = onDone;
        return t1;
      }
      t1 = $.Zone__current;
      t2 = cancelOnError ? 1 : 0;
      t3 = A._BufferingStreamSubscription__registerDataHandler(t1, onData);
      A._BufferingStreamSubscription__registerErrorHandler(t1, onError);
      t4 = onDone == null ? A.async___nullDoneHandler$closure() : onDone;
      subscription = new A._BroadcastSubscription(_this, t3, t4, t1, t2, A._instanceType(_this)._eval$1("_BroadcastSubscription<1>"));
      subscription._async$_previous = subscription;
      subscription._async$_next = subscription;
      subscription._eventState = _this._state & 1;
      oldLast = _this._lastSubscription;
      _this._lastSubscription = subscription;
      subscription._async$_next = null;
      subscription._async$_previous = oldLast;
      if (oldLast == null)
        _this._firstSubscription = subscription;
      else
        oldLast._async$_next = subscription;
      if (_this._firstSubscription === subscription)
        A._runGuarded(_this.onListen);
      return subscription;
    },
    _recordCancel$1(sub) {
      var t1, _this = this;
      A._instanceType(_this)._eval$1("_BroadcastSubscription<1>")._as(sub);
      if (sub._async$_next === sub)
        return null;
      t1 = sub._eventState;
      if ((t1 & 2) !== 0)
        sub._eventState = t1 | 4;
      else {
        _this._removeListener$1(sub);
        if ((_this._state & 2) === 0 && _this._firstSubscription == null)
          _this._callOnCancel$0();
      }
      return null;
    },
    _addEventError$0() {
      if ((this._state & 4) !== 0)
        return new A.StateError("Cannot add new events after calling close");
      return new A.StateError("Cannot add new events while doing an addStream");
    },
    add$1(_, data) {
      if (!this.get$_mayAddEvent())
        throw A.wrapException(this._addEventError$0());
      this._sendData$1(data);
    },
    close$0(_) {
      var t1, doneFuture, _this = this;
      if ((_this._state & 4) !== 0) {
        t1 = _this._doneFuture;
        t1.toString;
        return t1;
      }
      if (!_this.get$_mayAddEvent())
        throw A.wrapException(_this._addEventError$0());
      _this._state |= 4;
      doneFuture = _this._doneFuture;
      if (doneFuture == null)
        doneFuture = _this._doneFuture = new A._Future($.Zone__current, type$._Future_void);
      _this._sendDone$0();
      return doneFuture;
    },
    _callOnCancel$0() {
      if ((this._state & 4) !== 0) {
        var doneFuture = this._doneFuture;
        if ((doneFuture._state & 30) === 0)
          doneFuture._asyncComplete$1(null);
      }
      A._runGuarded(this.onCancel);
    }
  };
  A._AsyncBroadcastStreamController.prototype = {
    _sendData$1(data) {
      var subscription;
      for (subscription = this._firstSubscription; subscription != null; subscription = subscription._async$_next)
        subscription._addPending$1(new A._DelayedData(data));
    },
    _sendDone$0() {
      var subscription = this._firstSubscription;
      if (subscription != null)
        for (; subscription != null; subscription = subscription._async$_next)
          subscription._addPending$1(B.C__DelayedDone);
      else
        this._doneFuture._asyncComplete$1(null);
    }
  };
  A.Future_Future$delayed_closure.prototype = {
    call$0() {
      this.T._as(null);
      this.result._complete$1(null);
    },
    $signature: 0
  };
  A.Future_wait_handleError.prototype = {
    call$2(theError, theStackTrace) {
      var _this = this,
        t1 = _this._box_0,
        t2 = --t1.remaining;
      if (t1.values != null) {
        t1.values = null;
        if (t1.remaining === 0 || _this.eagerError)
          _this._future._completeError$2(theError, theStackTrace);
        else {
          _this.error.__late_helper$_value = theError;
          _this.stackTrace.__late_helper$_value = theStackTrace;
        }
      } else if (t2 === 0 && !_this.eagerError)
        _this._future._completeError$2(_this.error._readLocal$0(), _this.stackTrace._readLocal$0());
    },
    $signature: 18
  };
  A.Future_wait_closure.prototype = {
    call$1(value) {
      var valueList, _this = this,
        t1 = _this._box_0;
      --t1.remaining;
      valueList = t1.values;
      if (valueList != null) {
        J.$indexSet$ax(valueList, _this.pos, value);
        if (t1.remaining === 0)
          _this._future._completeWithValue$1(A.List_List$from(valueList, true, _this.T));
      } else if (t1.remaining === 0 && !_this.eagerError)
        _this._future._completeError$2(_this.error._readLocal$0(), _this.stackTrace._readLocal$0());
    },
    $signature() {
      return this.T._eval$1("Null(0)");
    }
  };
  A._Completer.prototype = {
    completeError$2(error, stackTrace) {
      A.checkNotNullable(error, "error", type$.Object);
      if ((this.future._state & 30) !== 0)
        throw A.wrapException(A.StateError$("Future already completed"));
      if (stackTrace == null)
        stackTrace = A.AsyncError_defaultStackTrace(error);
      this._completeError$2(error, stackTrace);
    },
    completeError$1(error) {
      return this.completeError$2(error, null);
    }
  };
  A._AsyncCompleter.prototype = {
    complete$1(_, value) {
      var t1 = this.future;
      if ((t1._state & 30) !== 0)
        throw A.wrapException(A.StateError$("Future already completed"));
      t1._asyncComplete$1(value);
    },
    complete$0($receiver) {
      return this.complete$1($receiver, null);
    },
    _completeError$2(error, stackTrace) {
      this.future._asyncCompleteError$2(error, stackTrace);
    }
  };
  A._FutureListener.prototype = {
    matchesErrorTest$1(asyncError) {
      if ((this.state & 15) !== 6)
        return true;
      return this.result._zone.runUnary$2(this.callback, asyncError.error);
    },
    handleError$1(asyncError) {
      var exception,
        errorCallback = this.errorCallback,
        result = null,
        t1 = asyncError.error,
        t2 = this.result._zone;
      if (type$.dynamic_Function_Object_StackTrace._is(errorCallback))
        result = t2.runBinary$3(errorCallback, t1, asyncError.stackTrace);
      else
        result = t2.runUnary$2(errorCallback, t1);
      try {
        t1 = result;
        return t1;
      } catch (exception) {
        if (type$.TypeError._is(A.unwrapException(exception))) {
          if ((this.state & 1) !== 0)
            throw A.wrapException(A.ArgumentError$("The error handler of Future.then must return a value of the returned future's type", "onError"));
          throw A.wrapException(A.ArgumentError$("The error handler of Future.catchError must return a value of the future's type", "onError"));
        } else
          throw exception;
      }
    }
  };
  A._Future.prototype = {
    _setChained$1(source) {
      this._state = this._state & 1 | 4;
      this._resultOrListeners = source;
    },
    then$1$2$onError(f, onError, $R) {
      var result, t1,
        currentZone = $.Zone__current;
      if (currentZone === B.C__RootZone) {
        if (onError != null && !type$.dynamic_Function_Object_StackTrace._is(onError) && !type$.dynamic_Function_Object._is(onError))
          throw A.wrapException(A.ArgumentError$value(onError, "onError", string$.Error_));
      } else if (onError != null)
        onError = A._registerErrorHandler(onError, currentZone);
      result = new A._Future(currentZone, $R._eval$1("_Future<0>"));
      t1 = onError == null ? 1 : 3;
      this._addListener$1(new A._FutureListener(result, t1, f, onError, this.$ti._eval$1("@<1>")._bind$1($R)._eval$1("_FutureListener<1,2>")));
      return result;
    },
    then$1$1(f, $R) {
      return this.then$1$2$onError(f, null, $R);
    },
    _thenAwait$1$2(f, onError, $E) {
      var result = new A._Future($.Zone__current, $E._eval$1("_Future<0>"));
      this._addListener$1(new A._FutureListener(result, 19, f, onError, this.$ti._eval$1("@<1>")._bind$1($E)._eval$1("_FutureListener<1,2>")));
      return result;
    },
    catchError$1(onError) {
      var t1 = this.$ti,
        t2 = $.Zone__current,
        result = new A._Future(t2, t1);
      if (t2 !== B.C__RootZone)
        onError = A._registerErrorHandler(onError, t2);
      this._addListener$1(new A._FutureListener(result, 2, null, onError, t1._eval$1("@<1>")._bind$1(t1._precomputed1)._eval$1("_FutureListener<1,2>")));
      return result;
    },
    _setErrorObject$1(error) {
      this._state = this._state & 1 | 16;
      this._resultOrListeners = error;
    },
    _cloneResult$1(source) {
      this._state = source._state & 30 | this._state & 1;
      this._resultOrListeners = source._resultOrListeners;
    },
    _addListener$1(listener) {
      var _this = this,
        t1 = _this._state;
      if (t1 <= 3) {
        listener._nextListener = _this._resultOrListeners;
        _this._resultOrListeners = listener;
      } else {
        if ((t1 & 4) !== 0) {
          t1 = _this._resultOrListeners;
          if ((t1._state & 24) === 0) {
            t1._addListener$1(listener);
            return;
          }
          _this._cloneResult$1(t1);
        }
        A._rootScheduleMicrotask(null, null, _this._zone, new A._Future__addListener_closure(_this, listener));
      }
    },
    _prependListeners$1(listeners) {
      var t1, existingListeners, next, cursor, next0, _this = this, _box_0 = {};
      _box_0.listeners = listeners;
      if (listeners == null)
        return;
      t1 = _this._state;
      if (t1 <= 3) {
        existingListeners = _this._resultOrListeners;
        _this._resultOrListeners = listeners;
        if (existingListeners != null) {
          next = listeners._nextListener;
          for (cursor = listeners; next != null; cursor = next, next = next0)
            next0 = next._nextListener;
          cursor._nextListener = existingListeners;
        }
      } else {
        if ((t1 & 4) !== 0) {
          t1 = _this._resultOrListeners;
          if ((t1._state & 24) === 0) {
            t1._prependListeners$1(listeners);
            return;
          }
          _this._cloneResult$1(t1);
        }
        _box_0.listeners = _this._reverseListeners$1(listeners);
        A._rootScheduleMicrotask(null, null, _this._zone, new A._Future__prependListeners_closure(_box_0, _this));
      }
    },
    _removeListeners$0() {
      var current = this._resultOrListeners;
      this._resultOrListeners = null;
      return this._reverseListeners$1(current);
    },
    _reverseListeners$1(listeners) {
      var current, prev, next;
      for (current = listeners, prev = null; current != null; prev = current, current = next) {
        next = current._nextListener;
        current._nextListener = prev;
      }
      return prev;
    },
    _chainForeignFuture$1(source) {
      var e, s, exception, _this = this;
      _this._state ^= 2;
      try {
        source.then$1$2$onError(new A._Future__chainForeignFuture_closure(_this), new A._Future__chainForeignFuture_closure0(_this), type$.Null);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        A.scheduleMicrotask(new A._Future__chainForeignFuture_closure1(_this, e, s));
      }
    },
    _complete$1(value) {
      var listeners, _this = this,
        t1 = _this.$ti;
      if (t1._eval$1("Future<1>")._is(value))
        if (t1._is(value))
          A._Future__chainCoreFutureSync(value, _this);
        else
          _this._chainForeignFuture$1(value);
      else {
        listeners = _this._removeListeners$0();
        _this._state = 8;
        _this._resultOrListeners = value;
        A._Future__propagateToListeners(_this, listeners);
      }
    },
    _completeWithValue$1(value) {
      var _this = this,
        listeners = _this._removeListeners$0();
      _this._state = 8;
      _this._resultOrListeners = value;
      A._Future__propagateToListeners(_this, listeners);
    },
    _completeError$2(error, stackTrace) {
      var listeners = this._removeListeners$0();
      this._setErrorObject$1(A.AsyncError$(error, stackTrace));
      A._Future__propagateToListeners(this, listeners);
    },
    _asyncComplete$1(value) {
      if (this.$ti._eval$1("Future<1>")._is(value)) {
        this._chainFuture$1(value);
        return;
      }
      this._asyncCompleteWithValue$1(value);
    },
    _asyncCompleteWithValue$1(value) {
      this._state ^= 2;
      A._rootScheduleMicrotask(null, null, this._zone, new A._Future__asyncCompleteWithValue_closure(this, value));
    },
    _chainFuture$1(value) {
      if (this.$ti._is(value)) {
        A._Future__chainCoreFutureAsync(value, this);
        return;
      }
      this._chainForeignFuture$1(value);
    },
    _asyncCompleteError$2(error, stackTrace) {
      this._state ^= 2;
      A._rootScheduleMicrotask(null, null, this._zone, new A._Future__asyncCompleteError_closure(this, error, stackTrace));
    },
    $isFuture: 1
  };
  A._Future__addListener_closure.prototype = {
    call$0() {
      A._Future__propagateToListeners(this.$this, this.listener);
    },
    $signature: 0
  };
  A._Future__prependListeners_closure.prototype = {
    call$0() {
      A._Future__propagateToListeners(this.$this, this._box_0.listeners);
    },
    $signature: 0
  };
  A._Future__chainForeignFuture_closure.prototype = {
    call$1(value) {
      var error, stackTrace, exception,
        t1 = this.$this;
      t1._state ^= 2;
      try {
        t1._completeWithValue$1(t1.$ti._precomputed1._as(value));
      } catch (exception) {
        error = A.unwrapException(exception);
        stackTrace = A.getTraceFromException(exception);
        t1._completeError$2(error, stackTrace);
      }
    },
    $signature: 6
  };
  A._Future__chainForeignFuture_closure0.prototype = {
    call$2(error, stackTrace) {
      this.$this._completeError$2(error, stackTrace);
    },
    $signature: 68
  };
  A._Future__chainForeignFuture_closure1.prototype = {
    call$0() {
      this.$this._completeError$2(this.e, this.s);
    },
    $signature: 0
  };
  A._Future__chainCoreFutureAsync_closure.prototype = {
    call$0() {
      A._Future__chainCoreFutureSync(this._box_0.source, this.target);
    },
    $signature: 0
  };
  A._Future__asyncCompleteWithValue_closure.prototype = {
    call$0() {
      this.$this._completeWithValue$1(this.value);
    },
    $signature: 0
  };
  A._Future__asyncCompleteError_closure.prototype = {
    call$0() {
      this.$this._completeError$2(this.error, this.stackTrace);
    },
    $signature: 0
  };
  A._Future__propagateToListeners_handleWhenCompleteCallback.prototype = {
    call$0() {
      var e, s, t1, exception, t2, originalSource, _this = this, completeResult = null;
      try {
        t1 = _this._box_0.listener;
        completeResult = t1.result._zone.run$1(t1.callback);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        t1 = _this.hasError && _this._box_1.source._resultOrListeners.error === e;
        t2 = _this._box_0;
        if (t1)
          t2.listenerValueOrError = _this._box_1.source._resultOrListeners;
        else
          t2.listenerValueOrError = A.AsyncError$(e, s);
        t2.listenerHasError = true;
        return;
      }
      if (completeResult instanceof A._Future && (completeResult._state & 24) !== 0) {
        if ((completeResult._state & 16) !== 0) {
          t1 = _this._box_0;
          t1.listenerValueOrError = completeResult._resultOrListeners;
          t1.listenerHasError = true;
        }
        return;
      }
      if (completeResult instanceof A._Future) {
        originalSource = _this._box_1.source;
        t1 = _this._box_0;
        t1.listenerValueOrError = completeResult.then$1$1(new A._Future__propagateToListeners_handleWhenCompleteCallback_closure(originalSource), type$.dynamic);
        t1.listenerHasError = false;
      }
    },
    $signature: 0
  };
  A._Future__propagateToListeners_handleWhenCompleteCallback_closure.prototype = {
    call$1(_) {
      return this.originalSource;
    },
    $signature: 69
  };
  A._Future__propagateToListeners_handleValueCallback.prototype = {
    call$0() {
      var e, s, t1, t2, exception;
      try {
        t1 = this._box_0;
        t2 = t1.listener;
        t1.listenerValueOrError = t2.result._zone.runUnary$2(t2.callback, this.sourceResult);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        t1 = this._box_0;
        t1.listenerValueOrError = A.AsyncError$(e, s);
        t1.listenerHasError = true;
      }
    },
    $signature: 0
  };
  A._Future__propagateToListeners_handleError.prototype = {
    call$0() {
      var asyncError, e, s, t1, exception, t2, _this = this;
      try {
        asyncError = _this._box_1.source._resultOrListeners;
        t1 = _this._box_0;
        if (t1.listener.matchesErrorTest$1(asyncError) && t1.listener.errorCallback != null) {
          t1.listenerValueOrError = t1.listener.handleError$1(asyncError);
          t1.listenerHasError = false;
        }
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        t1 = _this._box_1.source._resultOrListeners;
        t2 = _this._box_0;
        if (t1.error === e)
          t2.listenerValueOrError = t1;
        else
          t2.listenerValueOrError = A.AsyncError$(e, s);
        t2.listenerHasError = true;
      }
    },
    $signature: 0
  };
  A._AsyncCallbackEntry.prototype = {};
  A.Stream.prototype = {
    get$length(_) {
      var t1 = {},
        future = new A._Future($.Zone__current, type$._Future_int);
      t1.count = 0;
      this.listen$4$cancelOnError$onDone$onError(new A.Stream_length_closure(t1, this), true, new A.Stream_length_closure0(t1, future), future.get$_completeError());
      return future;
    },
    get$first(_) {
      var future = new A._Future($.Zone__current, A._instanceType(this)._eval$1("_Future<1>")),
        subscription = this.listen$4$cancelOnError$onDone$onError(null, true, new A.Stream_first_closure(future), future.get$_completeError());
      subscription.onData$1(new A.Stream_first_closure0(this, subscription, future));
      return future;
    }
  };
  A.Stream_length_closure.prototype = {
    call$1(_) {
      ++this._box_0.count;
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("~(1)");
    }
  };
  A.Stream_length_closure0.prototype = {
    call$0() {
      this.future._complete$1(this._box_0.count);
    },
    $signature: 0
  };
  A.Stream_first_closure.prototype = {
    call$0() {
      var e, s, t1, exception;
      try {
        t1 = A.IterableElementError_noElement();
        throw A.wrapException(t1);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        A._completeWithErrorCallback(this.future, e, s);
      }
    },
    $signature: 0
  };
  A.Stream_first_closure0.prototype = {
    call$1(value) {
      A._cancelAndValue(this.subscription, this.future, value);
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("~(1)");
    }
  };
  A._ControllerStream.prototype = {
    get$hashCode(_) {
      return (A.Primitives_objectHashCode(this._controller) ^ 892482866) >>> 0;
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      return other instanceof A._BroadcastStream && other._controller === this._controller;
    }
  };
  A._ControllerSubscription.prototype = {
    _onCancel$0() {
      return this._controller._recordCancel$1(this);
    },
    _onPause$0() {
    },
    _onResume$0() {
    }
  };
  A._BufferingStreamSubscription.prototype = {
    onData$1(handleData) {
      this._onData = A._BufferingStreamSubscription__registerDataHandler(this._zone, handleData);
    },
    cancel$0(_) {
      var t1 = this._state &= 4294967279;
      if ((t1 & 8) === 0)
        this._cancel$0();
      t1 = $.$get$Future__nullFuture();
      return t1;
    },
    _cancel$0() {
      var t2, _this = this,
        t1 = _this._state |= 8;
      if ((t1 & 64) !== 0) {
        t2 = _this._pending;
        if (t2._state === 1)
          t2._state = 3;
      }
      if ((t1 & 32) === 0)
        _this._pending = null;
      _this._cancelFuture = _this._onCancel$0();
    },
    _onPause$0() {
    },
    _onResume$0() {
    },
    _onCancel$0() {
      return null;
    },
    _addPending$1($event) {
      var lastEvent, t1, _this = this,
        pending = _this._pending;
      if (pending == null)
        pending = _this._pending = new A._PendingEvents();
      lastEvent = pending.lastPendingEvent;
      if (lastEvent == null)
        pending.firstPendingEvent = pending.lastPendingEvent = $event;
      else {
        lastEvent.set$next(0, $event);
        pending.lastPendingEvent = $event;
      }
      t1 = _this._state;
      if ((t1 & 64) === 0) {
        t1 |= 64;
        _this._state = t1;
        if (t1 < 128)
          pending.schedule$1(_this);
      }
    },
    _sendData$1(data) {
      var _this = this,
        t1 = _this._state;
      _this._state = t1 | 32;
      _this._zone.runUnaryGuarded$2(_this._onData, data);
      _this._state &= 4294967263;
      _this._checkState$1((t1 & 4) !== 0);
    },
    _sendDone$0() {
      this._cancel$0();
      this._state |= 16;
      new A._BufferingStreamSubscription__sendDone_sendDone(this).call$0();
    },
    _checkState$1(wasInputPaused) {
      var t2, isInputPaused, _this = this,
        t1 = _this._state;
      if ((t1 & 64) !== 0 && _this._pending.lastPendingEvent == null) {
        t1 = _this._state = t1 & 4294967231;
        if ((t1 & 4) !== 0)
          if (t1 < 128) {
            t2 = _this._pending;
            t2 = t2 == null ? null : t2.lastPendingEvent == null;
            t2 = t2 !== false;
          } else
            t2 = false;
        else
          t2 = false;
        if (t2) {
          t1 &= 4294967291;
          _this._state = t1;
        }
      }
      for (; true; wasInputPaused = isInputPaused) {
        if ((t1 & 8) !== 0) {
          _this._pending = null;
          return;
        }
        isInputPaused = (t1 & 4) !== 0;
        if (wasInputPaused === isInputPaused)
          break;
        _this._state = t1 ^ 32;
        if (isInputPaused)
          _this._onPause$0();
        else
          _this._onResume$0();
        t1 = _this._state &= 4294967263;
      }
      if ((t1 & 64) !== 0 && t1 < 128)
        _this._pending.schedule$1(_this);
    }
  };
  A._BufferingStreamSubscription__sendDone_sendDone.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1._state;
      if ((t2 & 16) === 0)
        return;
      t1._state = t2 | 42;
      t1._zone.runGuarded$1(t1._onDone);
      t1._state &= 4294967263;
    },
    $signature: 0
  };
  A._StreamImpl.prototype = {
    listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, onError) {
      return this._controller._subscribe$4(onData, onError, onDone, cancelOnError === true);
    },
    listen$1(onData) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
    }
  };
  A._DelayedEvent.prototype = {
    get$next(receiver) {
      return this.next;
    },
    set$next(receiver, val) {
      return this.next = val;
    }
  };
  A._DelayedData.prototype = {
    perform$1(dispatch) {
      dispatch._sendData$1(this.value);
    }
  };
  A._DelayedDone.prototype = {
    perform$1(dispatch) {
      dispatch._sendDone$0();
    },
    get$next(_) {
      return null;
    },
    set$next(_, _0) {
      throw A.wrapException(A.StateError$("No events after a done."));
    }
  };
  A._PendingEvents.prototype = {
    schedule$1(dispatch) {
      var _this = this,
        t1 = _this._state;
      if (t1 === 1)
        return;
      if (t1 >= 1) {
        _this._state = 1;
        return;
      }
      A.scheduleMicrotask(new A._PendingEvents_schedule_closure(_this, dispatch));
      _this._state = 1;
    }
  };
  A._PendingEvents_schedule_closure.prototype = {
    call$0() {
      var $event, nextEvent,
        t1 = this.$this,
        oldState = t1._state;
      t1._state = 0;
      if (oldState === 3)
        return;
      $event = t1.firstPendingEvent;
      nextEvent = $event.get$next($event);
      t1.firstPendingEvent = nextEvent;
      if (nextEvent == null)
        t1.lastPendingEvent = null;
      $event.perform$1(this.dispatch);
    },
    $signature: 0
  };
  A._DoneStreamSubscription.prototype = {
    onData$1(handleData) {
    },
    cancel$0(_) {
      this._state = -1;
      this._onDone = null;
      return $.$get$Future__nullFuture();
    },
    _onMicrotask$0() {
      var _0_0, doneHandler, t1, _this = this,
        unscheduledState = _this._state - 1;
      if (unscheduledState === 0) {
        _this._state = -1;
        _0_0 = _this._onDone;
        if (_0_0 != null) {
          doneHandler = _0_0;
          t1 = true;
        } else {
          doneHandler = null;
          t1 = false;
        }
        if (t1) {
          _this._onDone = null;
          _this._zone.runGuarded$1(doneHandler);
        }
      } else
        _this._state = unscheduledState;
    }
  };
  A._StreamIterator.prototype = {};
  A._cancelAndValue_closure.prototype = {
    call$0() {
      return this.future._complete$1(this.value);
    },
    $signature: 0
  };
  A._Zone.prototype = {};
  A._rootHandleError_closure.prototype = {
    call$0() {
      A.Error_throwWithStackTrace(this.error, this.stackTrace);
    },
    $signature: 0
  };
  A._RootZone.prototype = {
    runGuarded$1(f) {
      var e, s, exception;
      try {
        if (B.C__RootZone === $.Zone__current) {
          f.call$0();
          return;
        }
        A._rootRun(null, null, this, f);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        A._rootHandleError(e, s);
      }
    },
    runUnaryGuarded$1$2(f, arg) {
      var e, s, exception;
      try {
        if (B.C__RootZone === $.Zone__current) {
          f.call$1(arg);
          return;
        }
        A._rootRunUnary(null, null, this, f, arg);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        A._rootHandleError(e, s);
      }
    },
    runUnaryGuarded$2(f, arg) {
      return this.runUnaryGuarded$1$2(f, arg, type$.dynamic);
    },
    bindBinaryCallback$3$1(f, $R, T1, T2) {
      return new A._RootZone_bindBinaryCallback_closure(this, f, T1, T2, $R);
    },
    bindCallbackGuarded$1(f) {
      return new A._RootZone_bindCallbackGuarded_closure(this, f);
    },
    bindUnaryCallbackGuarded$1$1(f, $T) {
      return new A._RootZone_bindUnaryCallbackGuarded_closure(this, f, $T);
    },
    $index(_, key) {
      return null;
    },
    run$1$1(f) {
      if ($.Zone__current === B.C__RootZone)
        return f.call$0();
      return A._rootRun(null, null, this, f);
    },
    run$1(f) {
      return this.run$1$1(f, type$.dynamic);
    },
    runUnary$2$2(f, arg) {
      if ($.Zone__current === B.C__RootZone)
        return f.call$1(arg);
      return A._rootRunUnary(null, null, this, f, arg);
    },
    runUnary$2(f, arg) {
      return this.runUnary$2$2(f, arg, type$.dynamic, type$.dynamic);
    },
    runBinary$3$3(f, arg1, arg2) {
      if ($.Zone__current === B.C__RootZone)
        return f.call$2(arg1, arg2);
      return A._rootRunBinary(null, null, this, f, arg1, arg2);
    },
    runBinary$3(f, arg1, arg2) {
      return this.runBinary$3$3(f, arg1, arg2, type$.dynamic, type$.dynamic, type$.dynamic);
    },
    registerBinaryCallback$3$1(f) {
      return f;
    },
    registerBinaryCallback$1(f) {
      return this.registerBinaryCallback$3$1(f, type$.dynamic, type$.dynamic, type$.dynamic);
    }
  };
  A._RootZone_bindBinaryCallback_closure.prototype = {
    call$2(arg1, arg2) {
      return this.$this.runBinary$3(this.f, arg1, arg2);
    },
    $signature() {
      return this.R._eval$1("@<0>")._bind$1(this.T1)._bind$1(this.T2)._eval$1("1(2,3)");
    }
  };
  A._RootZone_bindCallbackGuarded_closure.prototype = {
    call$0() {
      return this.$this.runGuarded$1(this.f);
    },
    $signature: 0
  };
  A._RootZone_bindUnaryCallbackGuarded_closure.prototype = {
    call$1(arg) {
      return this.$this.runUnaryGuarded$2(this.f, arg);
    },
    $signature() {
      return this.T._eval$1("~(0)");
    }
  };
  A._HashMap.prototype = {
    get$length(_) {
      return this._collection$_length;
    },
    get$isEmpty(_) {
      return this._collection$_length === 0;
    },
    get$keys(_) {
      return new A._HashMapKeyIterable(this, this.$ti._eval$1("_HashMapKeyIterable<1>"));
    },
    containsKey$1(_, key) {
      var strings, nums;
      if (typeof key == "string" && key !== "__proto__") {
        strings = this._collection$_strings;
        return strings == null ? false : strings[key] != null;
      } else if (typeof key == "number" && (key & 1073741823) === key) {
        nums = this._collection$_nums;
        return nums == null ? false : nums[key] != null;
      } else
        return this._containsKey$1(key);
    },
    _containsKey$1(key) {
      var rest = this._collection$_rest;
      if (rest == null)
        return false;
      return this._findBucketIndex$2(this._getBucket$2(rest, key), key) >= 0;
    },
    $index(_, key) {
      var strings, t1, nums;
      if (typeof key == "string" && key !== "__proto__") {
        strings = this._collection$_strings;
        t1 = strings == null ? null : A._HashMap__getTableEntry(strings, key);
        return t1;
      } else if (typeof key == "number" && (key & 1073741823) === key) {
        nums = this._collection$_nums;
        t1 = nums == null ? null : A._HashMap__getTableEntry(nums, key);
        return t1;
      } else
        return this._get$1(0, key);
    },
    _get$1(_, key) {
      var bucket, index,
        rest = this._collection$_rest;
      if (rest == null)
        return null;
      bucket = this._getBucket$2(rest, key);
      index = this._findBucketIndex$2(bucket, key);
      return index < 0 ? null : bucket[index + 1];
    },
    $indexSet(_, key, value) {
      var strings, nums, rest, hash, bucket, index, _this = this;
      if (typeof key == "string" && key !== "__proto__") {
        strings = _this._collection$_strings;
        _this._collection$_addHashTableEntry$3(strings == null ? _this._collection$_strings = A._HashMap__newHashTable() : strings, key, value);
      } else if (typeof key == "number" && (key & 1073741823) === key) {
        nums = _this._collection$_nums;
        _this._collection$_addHashTableEntry$3(nums == null ? _this._collection$_nums = A._HashMap__newHashTable() : nums, key, value);
      } else {
        rest = _this._collection$_rest;
        if (rest == null)
          rest = _this._collection$_rest = A._HashMap__newHashTable();
        hash = A.objectHashCode(key) & 1073741823;
        bucket = rest[hash];
        if (bucket == null) {
          A._HashMap__setTableEntry(rest, hash, [key, value]);
          ++_this._collection$_length;
          _this._collection$_keys = null;
        } else {
          index = _this._findBucketIndex$2(bucket, key);
          if (index >= 0)
            bucket[index + 1] = value;
          else {
            bucket.push(key, value);
            ++_this._collection$_length;
            _this._collection$_keys = null;
          }
        }
      }
    },
    remove$1(_, key) {
      var _this = this;
      if (typeof key == "string" && key !== "__proto__")
        return _this._collection$_removeHashTableEntry$2(_this._collection$_strings, key);
      else if (typeof key == "number" && (key & 1073741823) === key)
        return _this._collection$_removeHashTableEntry$2(_this._collection$_nums, key);
      else
        return _this._remove$1(0, key);
    },
    _remove$1(_, key) {
      var hash, bucket, index, result, _this = this,
        rest = _this._collection$_rest;
      if (rest == null)
        return null;
      hash = A.objectHashCode(key) & 1073741823;
      bucket = rest[hash];
      index = _this._findBucketIndex$2(bucket, key);
      if (index < 0)
        return null;
      --_this._collection$_length;
      _this._collection$_keys = null;
      result = bucket.splice(index, 2)[1];
      if (0 === bucket.length)
        delete rest[hash];
      return result;
    },
    forEach$1(_, action) {
      var $length, t1, i, key, t2, _this = this,
        keys = _this._computeKeys$0();
      for ($length = keys.length, t1 = _this.$ti._rest[1], i = 0; i < $length; ++i) {
        key = keys[i];
        t2 = _this.$index(0, key);
        action.call$2(key, t2 == null ? t1._as(t2) : t2);
        if (keys !== _this._collection$_keys)
          throw A.wrapException(A.ConcurrentModificationError$(_this));
      }
    },
    _computeKeys$0() {
      var strings, names, entries, index, i, nums, rest, bucket, $length, i0, _this = this,
        result = _this._collection$_keys;
      if (result != null)
        return result;
      result = A.List_List$filled(_this._collection$_length, null, false, type$.dynamic);
      strings = _this._collection$_strings;
      if (strings != null) {
        names = Object.getOwnPropertyNames(strings);
        entries = names.length;
        for (index = 0, i = 0; i < entries; ++i) {
          result[index] = names[i];
          ++index;
        }
      } else
        index = 0;
      nums = _this._collection$_nums;
      if (nums != null) {
        names = Object.getOwnPropertyNames(nums);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          result[index] = +names[i];
          ++index;
        }
      }
      rest = _this._collection$_rest;
      if (rest != null) {
        names = Object.getOwnPropertyNames(rest);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          bucket = rest[names[i]];
          $length = bucket.length;
          for (i0 = 0; i0 < $length; i0 += 2) {
            result[index] = bucket[i0];
            ++index;
          }
        }
      }
      return _this._collection$_keys = result;
    },
    _collection$_addHashTableEntry$3(table, key, value) {
      if (table[key] == null) {
        ++this._collection$_length;
        this._collection$_keys = null;
      }
      A._HashMap__setTableEntry(table, key, value);
    },
    _collection$_removeHashTableEntry$2(table, key) {
      var value;
      if (table != null && table[key] != null) {
        value = A._HashMap__getTableEntry(table, key);
        delete table[key];
        --this._collection$_length;
        this._collection$_keys = null;
        return value;
      } else
        return null;
    },
    _getBucket$2(table, key) {
      return table[A.objectHashCode(key) & 1073741823];
    }
  };
  A._IdentityHashMap.prototype = {
    _findBucketIndex$2(bucket, key) {
      var $length, i, t1;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; i += 2) {
        t1 = bucket[i];
        if (t1 == null ? key == null : t1 === key)
          return i;
      }
      return -1;
    }
  };
  A._HashMapKeyIterable.prototype = {
    get$length(_) {
      return this._collection$_map._collection$_length;
    },
    get$isEmpty(_) {
      return this._collection$_map._collection$_length === 0;
    },
    get$isNotEmpty(_) {
      return this._collection$_map._collection$_length !== 0;
    },
    get$iterator(_) {
      var t1 = this._collection$_map;
      return new A._HashMapKeyIterator(t1, t1._computeKeys$0());
    },
    contains$1(_, element) {
      return this._collection$_map.containsKey$1(0, element);
    }
  };
  A._HashMapKeyIterator.prototype = {
    get$current(_) {
      var t1 = this._collection$_current;
      return t1 == null ? A._instanceType(this)._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var _this = this,
        keys = _this._collection$_keys,
        offset = _this._offset,
        t1 = _this._collection$_map;
      if (keys !== t1._collection$_keys)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      else if (offset >= keys.length) {
        _this._collection$_current = null;
        return false;
      } else {
        _this._collection$_current = keys[offset];
        _this._offset = offset + 1;
        return true;
      }
    }
  };
  A._LinkedHashSet.prototype = {
    get$iterator(_) {
      var t1 = new A._LinkedHashSetIterator(this, this._collection$_modifications);
      t1._collection$_cell = this._collection$_first;
      return t1;
    },
    get$length(_) {
      return this._collection$_length;
    },
    get$isEmpty(_) {
      return this._collection$_length === 0;
    },
    get$isNotEmpty(_) {
      return this._collection$_length !== 0;
    },
    contains$1(_, object) {
      var strings, nums;
      if (typeof object == "string" && object !== "__proto__") {
        strings = this._collection$_strings;
        if (strings == null)
          return false;
        return strings[object] != null;
      } else if (typeof object == "number" && (object & 1073741823) === object) {
        nums = this._collection$_nums;
        if (nums == null)
          return false;
        return nums[object] != null;
      } else
        return this._contains$1(object);
    },
    _contains$1(object) {
      var rest = this._collection$_rest;
      if (rest == null)
        return false;
      return this._findBucketIndex$2(rest[this._computeHashCode$1(object)], object) >= 0;
    },
    get$first(_) {
      var first = this._collection$_first;
      if (first == null)
        throw A.wrapException(A.StateError$("No elements"));
      return first._element;
    },
    add$1(_, element) {
      var strings, nums, _this = this;
      if (typeof element == "string" && element !== "__proto__") {
        strings = _this._collection$_strings;
        return _this._collection$_addHashTableEntry$2(strings == null ? _this._collection$_strings = A._LinkedHashSet__newHashTable() : strings, element);
      } else if (typeof element == "number" && (element & 1073741823) === element) {
        nums = _this._collection$_nums;
        return _this._collection$_addHashTableEntry$2(nums == null ? _this._collection$_nums = A._LinkedHashSet__newHashTable() : nums, element);
      } else
        return _this._add$1(0, element);
    },
    _add$1(_, element) {
      var hash, bucket, _this = this,
        rest = _this._collection$_rest;
      if (rest == null)
        rest = _this._collection$_rest = A._LinkedHashSet__newHashTable();
      hash = _this._computeHashCode$1(element);
      bucket = rest[hash];
      if (bucket == null)
        rest[hash] = [_this._collection$_newLinkedCell$1(element)];
      else {
        if (_this._findBucketIndex$2(bucket, element) >= 0)
          return false;
        bucket.push(_this._collection$_newLinkedCell$1(element));
      }
      return true;
    },
    remove$1(_, object) {
      if ((object & 1073741823) === object)
        return this._collection$_removeHashTableEntry$2(this._collection$_nums, object);
      else
        return this._remove$1(0, object);
    },
    _remove$1(_, object) {
      var hash, bucket, index, cell, _this = this,
        rest = _this._collection$_rest;
      if (rest == null)
        return false;
      hash = _this._computeHashCode$1(object);
      bucket = rest[hash];
      index = _this._findBucketIndex$2(bucket, object);
      if (index < 0)
        return false;
      cell = bucket.splice(index, 1)[0];
      if (0 === bucket.length)
        delete rest[hash];
      _this._collection$_unlinkCell$1(cell);
      return true;
    },
    _collection$_addHashTableEntry$2(table, element) {
      if (table[element] != null)
        return false;
      table[element] = this._collection$_newLinkedCell$1(element);
      return true;
    },
    _collection$_removeHashTableEntry$2(table, element) {
      var cell;
      if (table == null)
        return false;
      cell = table[element];
      if (cell == null)
        return false;
      this._collection$_unlinkCell$1(cell);
      delete table[element];
      return true;
    },
    _collection$_modified$0() {
      this._collection$_modifications = this._collection$_modifications + 1 & 1073741823;
    },
    _collection$_newLinkedCell$1(element) {
      var t1, _this = this,
        cell = new A._LinkedHashSetCell(element);
      if (_this._collection$_first == null)
        _this._collection$_first = _this._collection$_last = cell;
      else {
        t1 = _this._collection$_last;
        t1.toString;
        cell._collection$_previous = t1;
        _this._collection$_last = t1._collection$_next = cell;
      }
      ++_this._collection$_length;
      _this._collection$_modified$0();
      return cell;
    },
    _collection$_unlinkCell$1(cell) {
      var _this = this,
        previous = cell._collection$_previous,
        next = cell._collection$_next;
      if (previous == null)
        _this._collection$_first = next;
      else
        previous._collection$_next = next;
      if (next == null)
        _this._collection$_last = previous;
      else
        next._collection$_previous = previous;
      --_this._collection$_length;
      _this._collection$_modified$0();
    },
    _computeHashCode$1(element) {
      return J.get$hashCode$(element) & 1073741823;
    },
    _findBucketIndex$2(bucket, element) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (J.$eq$(bucket[i]._element, element))
          return i;
      return -1;
    }
  };
  A._LinkedHashSetCell.prototype = {};
  A._LinkedHashSetIterator.prototype = {
    get$current(_) {
      var t1 = this._collection$_current;
      return t1 == null ? A._instanceType(this)._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var _this = this,
        cell = _this._collection$_cell,
        t1 = _this._set;
      if (_this._collection$_modifications !== t1._collection$_modifications)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      else if (cell == null) {
        _this._collection$_current = null;
        return false;
      } else {
        _this._collection$_current = cell._element;
        _this._collection$_cell = cell._collection$_next;
        return true;
      }
    }
  };
  A.LinkedHashMap_LinkedHashMap$from_closure.prototype = {
    call$2(k, v) {
      this.result.$indexSet(0, this.K._as(k), this.V._as(v));
    },
    $signature: 28
  };
  A.ListBase.prototype = {
    get$iterator(receiver) {
      return new A.ListIterator(receiver, this.get$length(receiver));
    },
    elementAt$1(receiver, index) {
      return this.$index(receiver, index);
    },
    get$isEmpty(receiver) {
      return this.get$length(receiver) === 0;
    },
    get$isNotEmpty(receiver) {
      return !this.get$isEmpty(receiver);
    },
    get$first(receiver) {
      if (this.get$length(receiver) === 0)
        throw A.wrapException(A.IterableElementError_noElement());
      return this.$index(receiver, 0);
    },
    firstWhere$2$orElse(receiver, test, orElse) {
      var i, element,
        $length = this.get$length(receiver);
      for (i = 0; i < $length; ++i) {
        element = this.$index(receiver, i);
        if (test.call$1(element))
          return element;
        if ($length !== this.get$length(receiver))
          throw A.wrapException(A.ConcurrentModificationError$(receiver));
      }
      return orElse.call$0();
    },
    map$1$1(receiver, f, $T) {
      return new A.MappedListIterable(receiver, f, A.instanceType(receiver)._eval$1("@<ListBase.E>")._bind$1($T)._eval$1("MappedListIterable<1,2>"));
    },
    skip$1(receiver, count) {
      return A.SubListIterable$(receiver, count, null, A.instanceType(receiver)._eval$1("ListBase.E"));
    },
    toList$1$growable(receiver, growable) {
      var t1, first, result, i, _this = this;
      if (_this.get$isEmpty(receiver)) {
        t1 = J.JSArray_JSArray$growable(0, A.instanceType(receiver)._eval$1("ListBase.E"));
        return t1;
      }
      first = _this.$index(receiver, 0);
      result = A.List_List$filled(_this.get$length(receiver), first, true, A.instanceType(receiver)._eval$1("ListBase.E"));
      for (i = 1; i < _this.get$length(receiver); ++i)
        result[i] = _this.$index(receiver, i);
      return result;
    },
    toList$0($receiver) {
      return this.toList$1$growable($receiver, true);
    },
    add$1(receiver, element) {
      var t1 = this.get$length(receiver);
      this.set$length(receiver, t1 + 1);
      this.$indexSet(receiver, t1, element);
    },
    cast$1$0(receiver, $R) {
      return new A.CastList(receiver, A.instanceType(receiver)._eval$1("@<ListBase.E>")._bind$1($R)._eval$1("CastList<1,2>"));
    },
    fillRange$3(receiver, start, end, fill) {
      var i;
      A.RangeError_checkValidRange(start, end, this.get$length(receiver));
      for (i = start; i < end; ++i)
        this.$indexSet(receiver, i, fill);
    },
    setRange$4(receiver, start, end, iterable, skipCount) {
      var $length, otherStart, otherList, i;
      A.RangeError_checkValidRange(start, end, this.get$length(receiver));
      $length = end - start;
      if ($length === 0)
        return;
      A.RangeError_checkNotNegative(skipCount, "skipCount");
      if (A.instanceType(receiver)._eval$1("List<ListBase.E>")._is(iterable)) {
        otherStart = skipCount;
        otherList = iterable;
      } else {
        otherList = J.skip$1$ax(iterable, skipCount).toList$1$growable(0, false);
        otherStart = 0;
      }
      if (otherStart + $length > otherList.length)
        throw A.wrapException(A.IterableElementError_tooFew());
      if (otherStart < start)
        for (i = $length - 1; i >= 0; --i)
          this.$indexSet(receiver, start + i, otherList[otherStart + i]);
      else
        for (i = 0; i < $length; ++i)
          this.$indexSet(receiver, start + i, otherList[otherStart + i]);
    },
    toString$0(receiver) {
      return A.Iterable_iterableToFullString(receiver, "[", "]");
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.MapBase.prototype = {
    forEach$1(receiver, action) {
      var t1, t2, key, t3;
      for (t1 = J.get$iterator$ax(this.get$keys(receiver)), t2 = A.instanceType(receiver)._eval$1("MapBase.V"); t1.moveNext$0();) {
        key = t1.get$current(t1);
        t3 = this.$index(receiver, key);
        action.call$2(key, t3 == null ? t2._as(t3) : t3);
      }
    },
    update$3$ifAbsent(receiver, key, update, ifAbsent) {
      var t1;
      if (this.containsKey$1(receiver, key)) {
        t1 = this.$index(receiver, key);
        t1 = update.call$1(t1 == null ? A.instanceType(receiver)._eval$1("MapBase.V")._as(t1) : t1);
        this.$indexSet(receiver, key, t1);
        return t1;
      }
      throw A.wrapException(A.ArgumentError$value(key, "key", "Key not in map."));
    },
    update$2($receiver, key, update) {
      return this.update$3$ifAbsent($receiver, key, update, null);
    },
    updateAll$1(receiver, update) {
      var t1, t2, key, t3;
      for (t1 = J.get$iterator$ax(this.get$keys(receiver)), t2 = A.instanceType(receiver)._eval$1("MapBase.V"); t1.moveNext$0();) {
        key = t1.get$current(t1);
        t3 = this.$index(receiver, key);
        this.$indexSet(receiver, key, update.call$2(key, t3 == null ? t2._as(t3) : t3));
      }
    },
    get$entries(receiver) {
      return J.map$1$1$ax(this.get$keys(receiver), new A.MapBase_entries_closure(receiver), A.instanceType(receiver)._eval$1("MapEntry<MapBase.K,MapBase.V>"));
    },
    addEntries$1(receiver, newEntries) {
      var t1, t2;
      for (t1 = newEntries.get$iterator(newEntries); t1.moveNext$0();) {
        t2 = t1.get$current(t1);
        this.$indexSet(receiver, t2.key, t2.value);
      }
    },
    removeWhere$1(receiver, test) {
      var t2, key, t3, _i,
        t1 = A.instanceType(receiver),
        keysToRemove = A._setArrayType([], t1._eval$1("JSArray<MapBase.K>"));
      for (t2 = J.get$iterator$ax(this.get$keys(receiver)), t1 = t1._eval$1("MapBase.V"); t2.moveNext$0();) {
        key = t2.get$current(t2);
        t3 = this.$index(receiver, key);
        if (test.call$2(key, t3 == null ? t1._as(t3) : t3))
          keysToRemove.push(key);
      }
      for (t1 = keysToRemove.length, _i = 0; _i < keysToRemove.length; keysToRemove.length === t1 || (0, A.throwConcurrentModificationError)(keysToRemove), ++_i)
        this.remove$1(receiver, keysToRemove[_i]);
    },
    containsKey$1(receiver, key) {
      return J.contains$1$asx(this.get$keys(receiver), key);
    },
    get$length(receiver) {
      return J.get$length$asx(this.get$keys(receiver));
    },
    get$isEmpty(receiver) {
      return J.get$isEmpty$asx(this.get$keys(receiver));
    },
    toString$0(receiver) {
      return A.MapBase_mapToString(receiver);
    },
    $isMap: 1
  };
  A.MapBase_entries_closure.prototype = {
    call$1(key) {
      var t1 = this.$this,
        t2 = J.$index$asx(t1, key);
      if (t2 == null)
        t2 = A.instanceType(t1)._eval$1("MapBase.V")._as(t2);
      t1 = A.instanceType(t1);
      return new A.MapEntry(key, t2, t1._eval$1("@<MapBase.K>")._bind$1(t1._eval$1("MapBase.V"))._eval$1("MapEntry<1,2>"));
    },
    $signature() {
      return A.instanceType(this.$this)._eval$1("MapEntry<MapBase.K,MapBase.V>(MapBase.K)");
    }
  };
  A.MapBase_mapToString_closure.prototype = {
    call$2(k, v) {
      var t2,
        t1 = this._box_0;
      if (!t1.first)
        this.result._contents += ", ";
      t1.first = false;
      t1 = this.result;
      t2 = t1._contents += A.S(k);
      t1._contents = t2 + ": ";
      t1._contents += A.S(v);
    },
    $signature: 19
  };
  A._UnmodifiableMapMixin.prototype = {};
  A.MapView.prototype = {
    $index(_, key) {
      return this._collection$_map.$index(0, key);
    },
    containsKey$1(_, key) {
      return this._collection$_map.containsKey$1(0, key);
    },
    forEach$1(_, action) {
      this._collection$_map.forEach$1(0, action);
    },
    get$isEmpty(_) {
      return this._collection$_map.__js_helper$_length === 0;
    },
    get$length(_) {
      return this._collection$_map.__js_helper$_length;
    },
    get$keys(_) {
      var t1 = this._collection$_map;
      return new A.LinkedHashMapKeyIterable(t1, A._instanceType(t1)._eval$1("LinkedHashMapKeyIterable<1>"));
    },
    toString$0(_) {
      return A.MapBase_mapToString(this._collection$_map);
    },
    get$entries(_) {
      var t1 = this._collection$_map;
      return t1.get$entries(t1);
    },
    $isMap: 1
  };
  A.UnmodifiableMapView.prototype = {};
  A.ListQueue.prototype = {
    get$iterator(_) {
      var _this = this;
      return new A._ListQueueIterator(_this, _this._tail, _this._modificationCount, _this._head);
    },
    get$isEmpty(_) {
      return this._head === this._tail;
    },
    get$length(_) {
      return (this._tail - this._head & this._table.length - 1) >>> 0;
    },
    get$first(_) {
      var _this = this,
        t1 = _this._head;
      if (t1 === _this._tail)
        throw A.wrapException(A.IterableElementError_noElement());
      t1 = _this._table[t1];
      return t1 == null ? _this.$ti._precomputed1._as(t1) : t1;
    },
    elementAt$1(_, index) {
      var _this = this,
        t1 = _this.get$length(_this);
      if (0 > index || index >= t1)
        A.throwExpression(A.IndexError$withLength(index, t1, _this, null, "index"));
      t1 = _this._table;
      t1 = t1[(_this._head + index & t1.length - 1) >>> 0];
      return t1 == null ? _this.$ti._precomputed1._as(t1) : t1;
    },
    addAll$1(_, elements) {
      var addCount, $length, t2, t3, t4, newTable, endSpace, preSpace, _this = this,
        t1 = _this.$ti;
      if (t1._eval$1("List<1>")._is(elements)) {
        addCount = elements.length;
        $length = _this.get$length(_this);
        t2 = $length + addCount;
        t3 = _this._table;
        t4 = t3.length;
        if (t2 >= t4) {
          newTable = A.List_List$filled(A.ListQueue__nextPowerOf2(t2 + (t2 >>> 1)), null, false, t1._eval$1("1?"));
          _this._tail = _this._writeToList$1(newTable);
          _this._table = newTable;
          _this._head = 0;
          B.JSArray_methods.setRange$4(newTable, $length, t2, elements, 0);
          _this._tail += addCount;
        } else {
          t1 = _this._tail;
          endSpace = t4 - t1;
          if (addCount < endSpace) {
            B.JSArray_methods.setRange$4(t3, t1, t1 + addCount, elements, 0);
            _this._tail += addCount;
          } else {
            preSpace = addCount - endSpace;
            B.JSArray_methods.setRange$4(t3, t1, t1 + endSpace, elements, 0);
            B.JSArray_methods.setRange$4(_this._table, 0, preSpace, elements, endSpace);
            _this._tail = preSpace;
          }
        }
        ++_this._modificationCount;
      } else
        for (t1 = J.get$iterator$ax(elements); t1.moveNext$0();)
          _this._add$1(0, t1.get$current(t1));
    },
    toString$0(_) {
      return A.Iterable_iterableToFullString(this, "{", "}");
    },
    removeFirst$0() {
      var t2, result, _this = this,
        t1 = _this._head;
      if (t1 === _this._tail)
        throw A.wrapException(A.IterableElementError_noElement());
      ++_this._modificationCount;
      t2 = _this._table;
      result = t2[t1];
      if (result == null)
        result = _this.$ti._precomputed1._as(result);
      t2[t1] = null;
      _this._head = (t1 + 1 & t2.length - 1) >>> 0;
      return result;
    },
    _add$1(_, element) {
      var newTable, split, _this = this,
        t1 = _this._table,
        t2 = _this._tail;
      t1[t2] = element;
      t1 = t1.length;
      t2 = (t2 + 1 & t1 - 1) >>> 0;
      _this._tail = t2;
      if (_this._head === t2) {
        newTable = A.List_List$filled(t1 * 2, null, false, _this.$ti._eval$1("1?"));
        t1 = _this._table;
        t2 = _this._head;
        split = t1.length - t2;
        B.JSArray_methods.setRange$4(newTable, 0, split, t1, t2);
        B.JSArray_methods.setRange$4(newTable, split, split + _this._head, _this._table, 0);
        _this._head = 0;
        _this._tail = _this._table.length;
        _this._table = newTable;
      }
      ++_this._modificationCount;
    },
    _writeToList$1(target) {
      var $length, firstPartSize, _this = this,
        t1 = _this._head,
        t2 = _this._tail,
        t3 = _this._table;
      if (t1 <= t2) {
        $length = t2 - t1;
        B.JSArray_methods.setRange$4(target, 0, $length, t3, t1);
        return $length;
      } else {
        firstPartSize = t3.length - t1;
        B.JSArray_methods.setRange$4(target, 0, firstPartSize, t3, t1);
        B.JSArray_methods.setRange$4(target, firstPartSize, firstPartSize + _this._tail, _this._table, 0);
        return _this._tail + firstPartSize;
      }
    }
  };
  A._ListQueueIterator.prototype = {
    get$current(_) {
      var t1 = this._collection$_current;
      return t1 == null ? A._instanceType(this)._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var t2, _this = this,
        t1 = _this._collection$_queue;
      if (_this._modificationCount !== t1._modificationCount)
        A.throwExpression(A.ConcurrentModificationError$(t1));
      t2 = _this._collection$_position;
      if (t2 === _this._end) {
        _this._collection$_current = null;
        return false;
      }
      t1 = t1._table;
      _this._collection$_current = t1[t2];
      _this._collection$_position = (t2 + 1 & t1.length - 1) >>> 0;
      return true;
    }
  };
  A.SetBase.prototype = {
    get$isEmpty(_) {
      return this.get$length(this) === 0;
    },
    get$isNotEmpty(_) {
      return this.get$length(this) !== 0;
    },
    addAll$1(_, elements) {
      var t1;
      for (t1 = J.get$iterator$ax(elements); t1.moveNext$0();)
        this.add$1(0, t1.get$current(t1));
    },
    map$1$1(_, f, $T) {
      return new A.EfficientLengthMappedIterable(this, f, A._instanceType(this)._eval$1("@<1>")._bind$1($T)._eval$1("EfficientLengthMappedIterable<1,2>"));
    },
    toString$0(_) {
      return A.Iterable_iterableToFullString(this, "{", "}");
    },
    skip$1(_, n) {
      return A.SkipIterable_SkipIterable(this, n, A._instanceType(this)._precomputed1);
    },
    get$first(_) {
      var it = this.get$iterator(this);
      if (!it.moveNext$0())
        throw A.wrapException(A.IterableElementError_noElement());
      return it.get$current(it);
    },
    elementAt$1(_, index) {
      var iterator, skipCount;
      A.RangeError_checkNotNegative(index, "index");
      iterator = this.get$iterator(this);
      for (skipCount = index; iterator.moveNext$0();) {
        if (skipCount === 0)
          return iterator.get$current(iterator);
        --skipCount;
      }
      throw A.wrapException(A.IndexError$withLength(index, index - skipCount, this, null, "index"));
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1
  };
  A._SetBase.prototype = {};
  A._UnmodifiableMapView_MapView__UnmodifiableMapMixin.prototype = {};
  A._JsonMap.prototype = {
    $index(_, key) {
      var result,
        t1 = this._processed;
      if (t1 == null)
        return this._data.$index(0, key);
      else if (typeof key != "string")
        return null;
      else {
        result = t1[key];
        return typeof result == "undefined" ? this._process$1(key) : result;
      }
    },
    get$length(_) {
      return this._processed == null ? this._data.__js_helper$_length : this._convert$_computeKeys$0().length;
    },
    get$isEmpty(_) {
      return this.get$length(this) === 0;
    },
    get$keys(_) {
      var t1;
      if (this._processed == null) {
        t1 = this._data;
        return new A.LinkedHashMapKeyIterable(t1, A._instanceType(t1)._eval$1("LinkedHashMapKeyIterable<1>"));
      }
      return new A._JsonMapKeyIterable(this);
    },
    $indexSet(_, key, value) {
      var processed, original, _this = this;
      if (_this._processed == null)
        _this._data.$indexSet(0, key, value);
      else if (_this.containsKey$1(0, key)) {
        processed = _this._processed;
        processed[key] = value;
        original = _this._original;
        if (original == null ? processed != null : original !== processed)
          original[key] = null;
      } else
        _this._upgrade$0().$indexSet(0, key, value);
    },
    containsKey$1(_, key) {
      if (this._processed == null)
        return this._data.containsKey$1(0, key);
      if (typeof key != "string")
        return false;
      return Object.prototype.hasOwnProperty.call(this._original, key);
    },
    remove$1(_, key) {
      if (this._processed != null && !this.containsKey$1(0, key))
        return null;
      return this._upgrade$0().remove$1(0, key);
    },
    forEach$1(_, f) {
      var keys, i, key, value, _this = this;
      if (_this._processed == null)
        return _this._data.forEach$1(0, f);
      keys = _this._convert$_computeKeys$0();
      for (i = 0; i < keys.length; ++i) {
        key = keys[i];
        value = _this._processed[key];
        if (typeof value == "undefined") {
          value = A._convertJsonToDartLazy(_this._original[key]);
          _this._processed[key] = value;
        }
        f.call$2(key, value);
        if (keys !== _this._data)
          throw A.wrapException(A.ConcurrentModificationError$(_this));
      }
    },
    _convert$_computeKeys$0() {
      var keys = this._data;
      if (keys == null)
        keys = this._data = A._setArrayType(Object.keys(this._original), type$.JSArray_String);
      return keys;
    },
    _upgrade$0() {
      var result, keys, i, t1, key, _this = this;
      if (_this._processed == null)
        return _this._data;
      result = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
      keys = _this._convert$_computeKeys$0();
      for (i = 0; t1 = keys.length, i < t1; ++i) {
        key = keys[i];
        result.$indexSet(0, key, _this.$index(0, key));
      }
      if (t1 === 0)
        keys.push("");
      else
        B.JSArray_methods.clear$0(keys);
      _this._original = _this._processed = null;
      return _this._data = result;
    },
    _process$1(key) {
      var result;
      if (!Object.prototype.hasOwnProperty.call(this._original, key))
        return null;
      result = A._convertJsonToDartLazy(this._original[key]);
      return this._processed[key] = result;
    }
  };
  A._JsonMapKeyIterable.prototype = {
    get$length(_) {
      var t1 = this._parent;
      return t1.get$length(t1);
    },
    elementAt$1(_, index) {
      var t1 = this._parent;
      return t1._processed == null ? t1.get$keys(t1).elementAt$1(0, index) : t1._convert$_computeKeys$0()[index];
    },
    get$iterator(_) {
      var t1 = this._parent;
      if (t1._processed == null) {
        t1 = t1.get$keys(t1);
        t1 = t1.get$iterator(t1);
      } else {
        t1 = t1._convert$_computeKeys$0();
        t1 = new J.ArrayIterator(t1, t1.length);
      }
      return t1;
    },
    contains$1(_, key) {
      return this._parent.containsKey$1(0, key);
    }
  };
  A._JsonDecoderSink.prototype = {
    close$0(_) {
      var t1, t2, _this = this;
      _this.super$_StringSinkConversionSink$close(0);
      t1 = _this._stringSink;
      t2 = t1._contents;
      t1._contents = "";
      t1 = _this._sink;
      t1.add$1(0, A._parseJson(t2.charCodeAt(0) == 0 ? t2 : t2, _this._reviver));
      t1.close$0(0);
    }
  };
  A.Utf8Decoder__decoder_closure.prototype = {
    call$0() {
      var t1, exception;
      try {
        t1 = new TextDecoder("utf-8", {fatal: true});
        return t1;
      } catch (exception) {
      }
      return null;
    },
    $signature: 30
  };
  A.Utf8Decoder__decoderNonfatal_closure.prototype = {
    call$0() {
      var t1, exception;
      try {
        t1 = new TextDecoder("utf-8", {fatal: false});
        return t1;
      } catch (exception) {
      }
      return null;
    },
    $signature: 30
  };
  A.Base64Codec.prototype = {
    normalize$3(_, source, start, end) {
      var inverseAlphabet, i, sliceStart, buffer, firstPadding, firstPaddingSourceIndex, paddingCount, i0, char, i1, digit1, digit2, char0, value, t1, t2, endLength, $length,
        _s31_ = "Invalid base64 encoding length ";
      end = A.RangeError_checkValidRange(start, end, source.length);
      inverseAlphabet = $.$get$_Base64Decoder__inverseAlphabet();
      for (i = start, sliceStart = i, buffer = null, firstPadding = -1, firstPaddingSourceIndex = -1, paddingCount = 0; i < end; i = i0) {
        i0 = i + 1;
        char = source.charCodeAt(i);
        if (char === 37) {
          i1 = i0 + 2;
          if (i1 <= end) {
            digit1 = A.hexDigitValue(source.charCodeAt(i0));
            digit2 = A.hexDigitValue(source.charCodeAt(i0 + 1));
            char0 = digit1 * 16 + digit2 - (digit2 & 256);
            if (char0 === 37)
              char0 = -1;
            i0 = i1;
          } else
            char0 = -1;
        } else
          char0 = char;
        if (0 <= char0 && char0 <= 127) {
          value = inverseAlphabet[char0];
          if (value >= 0) {
            char0 = string$.ABCDEF.charCodeAt(value);
            if (char0 === char)
              continue;
            char = char0;
          } else {
            if (value === -1) {
              if (firstPadding < 0) {
                t1 = buffer == null ? null : buffer._contents.length;
                if (t1 == null)
                  t1 = 0;
                firstPadding = t1 + (i - sliceStart);
                firstPaddingSourceIndex = i;
              }
              ++paddingCount;
              if (char === 61)
                continue;
            }
            char = char0;
          }
          if (value !== -2) {
            if (buffer == null) {
              buffer = new A.StringBuffer("");
              t1 = buffer;
            } else
              t1 = buffer;
            t1._contents += B.JSString_methods.substring$2(source, sliceStart, i);
            t1._contents += A.Primitives_stringFromCharCode(char);
            sliceStart = i0;
            continue;
          }
        }
        throw A.wrapException(A.FormatException$("Invalid base64 data", source, i));
      }
      if (buffer != null) {
        t1 = buffer._contents += B.JSString_methods.substring$2(source, sliceStart, end);
        t2 = t1.length;
        if (firstPadding >= 0)
          A.Base64Codec__checkPadding(source, firstPaddingSourceIndex, end, firstPadding, paddingCount, t2);
        else {
          endLength = B.JSInt_methods.$mod(t2 - 1, 4) + 1;
          if (endLength === 1)
            throw A.wrapException(A.FormatException$(_s31_, source, end));
          for (; endLength < 4;) {
            t1 += "=";
            buffer._contents = t1;
            ++endLength;
          }
        }
        t1 = buffer._contents;
        return B.JSString_methods.replaceRange$3(source, start, end, t1.charCodeAt(0) == 0 ? t1 : t1);
      }
      $length = end - start;
      if (firstPadding >= 0)
        A.Base64Codec__checkPadding(source, firstPaddingSourceIndex, end, firstPadding, paddingCount, $length);
      else {
        endLength = B.JSInt_methods.$mod($length, 4);
        if (endLength === 1)
          throw A.wrapException(A.FormatException$(_s31_, source, end));
        if (endLength > 1)
          source = B.JSString_methods.replaceRange$3(source, end, end, endLength === 2 ? "==" : "=");
      }
      return source;
    }
  };
  A.Base64Encoder.prototype = {
    startChunkedConversion$1(sink) {
      return new A._Utf8Base64EncoderSink(new A._Utf8StringSinkAdapter(new A._Utf8Decoder(false), sink, sink._stringSink), new A._Base64Encoder(string$.ABCDEF));
    }
  };
  A._Base64Encoder.prototype = {
    createBuffer$1(_, bufferLength) {
      return new Uint8Array(bufferLength);
    },
    encode$4(bytes, start, end, isLast) {
      var output, _this = this,
        byteCount = (_this._convert$_state & 3) + (end - start),
        fullChunks = B.JSInt_methods._tdivFast$1(byteCount, 3),
        bufferLength = fullChunks * 4;
      if (isLast && byteCount - fullChunks * 3 > 0)
        bufferLength += 4;
      output = _this.createBuffer$1(0, bufferLength);
      _this._convert$_state = A._Base64Encoder_encodeChunk(_this._alphabet, bytes, start, end, isLast, output, 0, _this._convert$_state);
      if (bufferLength > 0)
        return output;
      return null;
    }
  };
  A._Base64EncoderSink.prototype = {
    add$1(_, source) {
      this._convert$_add$4(0, source, 0, source.length, false);
    },
    close$0(_) {
      this._convert$_add$4(0, B.List_empty1, 0, 0, true);
    }
  };
  A._Utf8Base64EncoderSink.prototype = {
    _convert$_add$4(_, source, start, end, isLast) {
      var buffer = this._encoder.encode$4(source, start, end, isLast);
      if (buffer != null)
        this._sink.addSlice$4(buffer, 0, buffer.length, isLast);
    }
  };
  A.ByteConversionSink.prototype = {};
  A._ByteAdapterSink.prototype = {
    add$1(_, chunk) {
      this._sink._stringSink._contents += chunk;
    },
    close$0(_) {
      this._sink.close$0(0);
    }
  };
  A.ChunkedConversionSink.prototype = {};
  A._SimpleCallbackSink.prototype = {
    add$1(_, chunk) {
      this._accumulated.push(chunk);
    },
    close$0(_) {
      this._convert$_callback.call$1(this._accumulated);
    }
  };
  A.Codec.prototype = {};
  A.Converter.prototype = {
    fuse$1$1(other) {
      return new A._FusedConverter(this, other);
    },
    startChunkedConversion$1(sink) {
      throw A.wrapException(A.UnsupportedError$("This converter does not support chunked conversions: " + this.toString$0(0)));
    }
  };
  A._FusedConverter.prototype = {
    startChunkedConversion$1(sink) {
      return this._convert$_first.startChunkedConversion$1(new A._JsonDecoderSink(this._second._reviver, sink, new A.StringBuffer("")));
    }
  };
  A.Encoding.prototype = {};
  A.JsonUnsupportedObjectError.prototype = {
    toString$0(_) {
      var safeString = A.Error_safeToString(this.unsupportedObject);
      return (this.cause != null ? "Converting object to an encodable object failed:" : "Converting object did not return an encodable object:") + " " + safeString;
    }
  };
  A.JsonCyclicError.prototype = {
    toString$0(_) {
      return "Cyclic error in JSON stringify";
    }
  };
  A.JsonCodec.prototype = {
    decode$1(_, source) {
      var t1 = A._parseJson(source, this.get$decoder()._reviver);
      return t1;
    },
    encode$1(value) {
      var t1 = A._JsonStringStringifier_stringify(value, this.get$encoder()._toEncodable, null);
      return t1;
    },
    get$encoder() {
      return B.JsonEncoder_null;
    },
    get$decoder() {
      return B.JsonDecoder_null;
    }
  };
  A.JsonEncoder.prototype = {
    startChunkedConversion$1(sink) {
      return new A._JsonEncoderSink(null, this._toEncodable, sink);
    }
  };
  A._JsonEncoderSink.prototype = {
    add$1(_, o) {
      var stringSink, _this = this;
      if (_this._isDone)
        throw A.wrapException(A.StateError$("Only one call to add allowed"));
      _this._isDone = true;
      stringSink = _this._sink.asStringSink$0();
      A._JsonStringStringifier_printOn(o, stringSink, _this._toEncodable, _this._indent);
      stringSink.close$0(0);
    },
    close$0(_) {
    }
  };
  A.JsonDecoder.prototype = {
    startChunkedConversion$1(sink) {
      return new A._JsonDecoderSink(this._reviver, sink, new A.StringBuffer(""));
    }
  };
  A._JsonStringifier.prototype = {
    writeStringContent$1(s) {
      var offset, i, charCode, t1, t2, _this = this,
        $length = s.length;
      for (offset = 0, i = 0; i < $length; ++i) {
        charCode = s.charCodeAt(i);
        if (charCode > 92) {
          if (charCode >= 55296) {
            t1 = charCode & 64512;
            if (t1 === 55296) {
              t2 = i + 1;
              t2 = !(t2 < $length && (s.charCodeAt(t2) & 64512) === 56320);
            } else
              t2 = false;
            if (!t2)
              if (t1 === 56320) {
                t1 = i - 1;
                t1 = !(t1 >= 0 && (s.charCodeAt(t1) & 64512) === 55296);
              } else
                t1 = false;
            else
              t1 = true;
            if (t1) {
              if (i > offset)
                _this.writeStringSlice$3(s, offset, i);
              offset = i + 1;
              _this.writeCharCode$1(92);
              _this.writeCharCode$1(117);
              _this.writeCharCode$1(100);
              t1 = charCode >>> 8 & 15;
              _this.writeCharCode$1(t1 < 10 ? 48 + t1 : 87 + t1);
              t1 = charCode >>> 4 & 15;
              _this.writeCharCode$1(t1 < 10 ? 48 + t1 : 87 + t1);
              t1 = charCode & 15;
              _this.writeCharCode$1(t1 < 10 ? 48 + t1 : 87 + t1);
            }
          }
          continue;
        }
        if (charCode < 32) {
          if (i > offset)
            _this.writeStringSlice$3(s, offset, i);
          offset = i + 1;
          _this.writeCharCode$1(92);
          switch (charCode) {
            case 8:
              _this.writeCharCode$1(98);
              break;
            case 9:
              _this.writeCharCode$1(116);
              break;
            case 10:
              _this.writeCharCode$1(110);
              break;
            case 12:
              _this.writeCharCode$1(102);
              break;
            case 13:
              _this.writeCharCode$1(114);
              break;
            default:
              _this.writeCharCode$1(117);
              _this.writeCharCode$1(48);
              _this.writeCharCode$1(48);
              t1 = charCode >>> 4 & 15;
              _this.writeCharCode$1(t1 < 10 ? 48 + t1 : 87 + t1);
              t1 = charCode & 15;
              _this.writeCharCode$1(t1 < 10 ? 48 + t1 : 87 + t1);
              break;
          }
        } else if (charCode === 34 || charCode === 92) {
          if (i > offset)
            _this.writeStringSlice$3(s, offset, i);
          offset = i + 1;
          _this.writeCharCode$1(92);
          _this.writeCharCode$1(charCode);
        }
      }
      if (offset === 0)
        _this.writeString$1(s);
      else if (offset < $length)
        _this.writeStringSlice$3(s, offset, $length);
    },
    _checkCycle$1(object) {
      var t1, t2, i, t3;
      for (t1 = this._seen, t2 = t1.length, i = 0; i < t2; ++i) {
        t3 = t1[i];
        if (object == null ? t3 == null : object === t3)
          throw A.wrapException(new A.JsonCyclicError(object, null));
      }
      t1.push(object);
    },
    writeObject$1(object) {
      var customJson, e, t1, exception, _this = this;
      if (_this.writeJsonValue$1(object))
        return;
      _this._checkCycle$1(object);
      try {
        customJson = _this._toEncodable.call$1(object);
        if (!_this.writeJsonValue$1(customJson)) {
          t1 = A.JsonUnsupportedObjectError$(object, null, _this.get$_partialResult());
          throw A.wrapException(t1);
        }
        _this._seen.pop();
      } catch (exception) {
        e = A.unwrapException(exception);
        t1 = A.JsonUnsupportedObjectError$(object, e, _this.get$_partialResult());
        throw A.wrapException(t1);
      }
    },
    writeJsonValue$1(object) {
      var success, _this = this;
      if (typeof object == "number") {
        if (!isFinite(object))
          return false;
        _this.writeNumber$1(object);
        return true;
      } else if (object === true) {
        _this.writeString$1("true");
        return true;
      } else if (object === false) {
        _this.writeString$1("false");
        return true;
      } else if (object == null) {
        _this.writeString$1("null");
        return true;
      } else if (typeof object == "string") {
        _this.writeString$1('"');
        _this.writeStringContent$1(object);
        _this.writeString$1('"');
        return true;
      } else if (type$.List_dynamic._is(object)) {
        _this._checkCycle$1(object);
        _this.writeList$1(object);
        _this._seen.pop();
        return true;
      } else if (type$.Map_dynamic_dynamic._is(object)) {
        _this._checkCycle$1(object);
        success = _this.writeMap$1(object);
        _this._seen.pop();
        return success;
      } else
        return false;
    },
    writeList$1(list) {
      var t1, i, _this = this;
      _this.writeString$1("[");
      t1 = J.getInterceptor$asx(list);
      if (t1.get$isNotEmpty(list)) {
        _this.writeObject$1(t1.$index(list, 0));
        for (i = 1; i < t1.get$length(list); ++i) {
          _this.writeString$1(",");
          _this.writeObject$1(t1.$index(list, i));
        }
      }
      _this.writeString$1("]");
    },
    writeMap$1(map) {
      var t2, keyValueList, i, separator, _this = this, _box_0 = {},
        t1 = J.getInterceptor$asx(map);
      if (t1.get$isEmpty(map)) {
        _this.writeString$1("{}");
        return true;
      }
      t2 = t1.get$length(map) * 2;
      keyValueList = A.List_List$filled(t2, null, false, type$.nullable_Object);
      i = _box_0.i = 0;
      _box_0.allStringKeys = true;
      t1.forEach$1(map, new A._JsonStringifier_writeMap_closure(_box_0, keyValueList));
      if (!_box_0.allStringKeys)
        return false;
      _this.writeString$1("{");
      for (separator = '"'; i < t2; i += 2, separator = ',"') {
        _this.writeString$1(separator);
        _this.writeStringContent$1(A._asString(keyValueList[i]));
        _this.writeString$1('":');
        _this.writeObject$1(keyValueList[i + 1]);
      }
      _this.writeString$1("}");
      return true;
    }
  };
  A._JsonStringifier_writeMap_closure.prototype = {
    call$2(key, value) {
      var t1, t2, t3, i;
      if (typeof key != "string")
        this._box_0.allStringKeys = false;
      t1 = this.keyValueList;
      t2 = this._box_0;
      t3 = t2.i;
      i = t2.i = t3 + 1;
      t1[t3] = key;
      t2.i = i + 1;
      t1[i] = value;
    },
    $signature: 19
  };
  A._JsonStringStringifier.prototype = {
    get$_partialResult() {
      var t1 = this._sink;
      return t1 instanceof A.StringBuffer ? t1.toString$0(0) : null;
    },
    writeNumber$1(number) {
      this._sink.write$1(0, B.JSNumber_methods.toString$0(number));
    },
    writeString$1(string) {
      this._sink.write$1(0, string);
    },
    writeStringSlice$3(string, start, end) {
      this._sink.write$1(0, B.JSString_methods.substring$2(string, start, end));
    },
    writeCharCode$1(charCode) {
      this._sink.writeCharCode$1(charCode);
    }
  };
  A.StringConversionSink.prototype = {
    add$1(_, str) {
      this.addSlice$4(str, 0, str.length, false);
    },
    asStringSink$0() {
      return new A._StringConversionSinkAsStringSinkAdapter(new A.StringBuffer(""), this);
    }
  };
  A._ClosableStringSink.prototype = {
    close$0(_) {
      this._convert$_callback.call$0();
    },
    writeCharCode$1(charCode) {
      this._sink._contents += A.Primitives_stringFromCharCode(charCode);
    },
    write$1(_, o) {
      this._sink._contents += o;
    }
  };
  A._StringConversionSinkAsStringSinkAdapter.prototype = {
    close$0(_) {
      if (this._convert$_buffer._contents.length !== 0)
        this._flush$0();
      this._chunkedSink.close$0(0);
    },
    writeCharCode$1(charCode) {
      var t1 = this._convert$_buffer._contents += A.Primitives_stringFromCharCode(charCode);
      if (t1.length > 16)
        this._flush$0();
    },
    write$1(_, o) {
      if (this._convert$_buffer._contents.length !== 0)
        this._flush$0();
      this._chunkedSink.add$1(0, o);
    },
    _flush$0() {
      var t1 = this._convert$_buffer,
        t2 = t1._contents;
      t1._contents = "";
      this._chunkedSink.add$1(0, t2.charCodeAt(0) == 0 ? t2 : t2);
    }
  };
  A._StringSinkConversionSink.prototype = {
    close$0(_) {
    },
    addSlice$4(str, start, end, isLast) {
      var t1, i;
      if (start !== 0 || end !== str.length)
        for (t1 = this._stringSink, i = start; i < end; ++i)
          t1._contents += A.Primitives_stringFromCharCode(str.charCodeAt(i));
      else
        this._stringSink._contents += str;
      if (isLast)
        this.close$0(0);
    },
    add$1(_, str) {
      this._stringSink._contents += str;
    },
    asUtf8Sink$1(allowMalformed) {
      return new A._Utf8StringSinkAdapter(new A._Utf8Decoder(allowMalformed), this, this._stringSink);
    },
    asStringSink$0() {
      return new A._ClosableStringSink(this.get$close(this), this._stringSink);
    }
  };
  A._Utf8StringSinkAdapter.prototype = {
    close$0(_) {
      this._decoder.flush$1(0, this._stringSink);
      this._sink.close$0(0);
    },
    add$1(_, chunk) {
      this.addSlice$4(chunk, 0, chunk.length, false);
    },
    addSlice$4(codeUnits, startIndex, endIndex, isLast) {
      this._stringSink._contents += this._decoder.convertGeneral$4(codeUnits, startIndex, endIndex, false);
      if (isLast)
        this.close$0(0);
    }
  };
  A.Utf8Codec.prototype = {
    decode$1(_, codeUnits) {
      return B.Utf8Decoder_false.convert$1(codeUnits);
    }
  };
  A.Utf8Encoder.prototype = {
    convert$1(string) {
      var t1, encoder,
        end = A.RangeError_checkValidRange(0, null, string.length),
        $length = end - 0;
      if ($length === 0)
        return new Uint8Array(0);
      t1 = new Uint8Array($length * 3);
      encoder = new A._Utf8Encoder(t1);
      if (encoder._fillBuffer$3(string, 0, end) !== end)
        encoder._writeReplacementCharacter$0();
      return B.NativeUint8List_methods.sublist$2(t1, 0, encoder._bufferIndex);
    },
    startChunkedConversion$1(sink) {
      return new A._Utf8EncoderSink(new A._ByteAdapterSink(sink), new Uint8Array(1024));
    }
  };
  A._Utf8Encoder.prototype = {
    _writeReplacementCharacter$0() {
      var _this = this,
        t1 = _this._convert$_buffer,
        t2 = _this._bufferIndex,
        t3 = _this._bufferIndex = t2 + 1;
      t1[t2] = 239;
      t2 = _this._bufferIndex = t3 + 1;
      t1[t3] = 191;
      _this._bufferIndex = t2 + 1;
      t1[t2] = 189;
    },
    _writeSurrogate$2(leadingSurrogate, nextCodeUnit) {
      var rune, t1, t2, t3, _this = this;
      if ((nextCodeUnit & 64512) === 56320) {
        rune = 65536 + ((leadingSurrogate & 1023) << 10) | nextCodeUnit & 1023;
        t1 = _this._convert$_buffer;
        t2 = _this._bufferIndex;
        t3 = _this._bufferIndex = t2 + 1;
        t1[t2] = rune >>> 18 | 240;
        t2 = _this._bufferIndex = t3 + 1;
        t1[t3] = rune >>> 12 & 63 | 128;
        t3 = _this._bufferIndex = t2 + 1;
        t1[t2] = rune >>> 6 & 63 | 128;
        _this._bufferIndex = t3 + 1;
        t1[t3] = rune & 63 | 128;
        return true;
      } else {
        _this._writeReplacementCharacter$0();
        return false;
      }
    },
    _fillBuffer$3(str, start, end) {
      var t1, t2, stringIndex, codeUnit, t3, stringIndex0, t4, _this = this;
      if (start !== end && (str.charCodeAt(end - 1) & 64512) === 55296)
        --end;
      for (t1 = _this._convert$_buffer, t2 = t1.length, stringIndex = start; stringIndex < end; ++stringIndex) {
        codeUnit = str.charCodeAt(stringIndex);
        if (codeUnit <= 127) {
          t3 = _this._bufferIndex;
          if (t3 >= t2)
            break;
          _this._bufferIndex = t3 + 1;
          t1[t3] = codeUnit;
        } else {
          t3 = codeUnit & 64512;
          if (t3 === 55296) {
            if (_this._bufferIndex + 4 > t2)
              break;
            stringIndex0 = stringIndex + 1;
            if (_this._writeSurrogate$2(codeUnit, str.charCodeAt(stringIndex0)))
              stringIndex = stringIndex0;
          } else if (t3 === 56320) {
            if (_this._bufferIndex + 3 > t2)
              break;
            _this._writeReplacementCharacter$0();
          } else if (codeUnit <= 2047) {
            t3 = _this._bufferIndex;
            t4 = t3 + 1;
            if (t4 >= t2)
              break;
            _this._bufferIndex = t4;
            t1[t3] = codeUnit >>> 6 | 192;
            _this._bufferIndex = t4 + 1;
            t1[t4] = codeUnit & 63 | 128;
          } else {
            t3 = _this._bufferIndex;
            if (t3 + 2 >= t2)
              break;
            t4 = _this._bufferIndex = t3 + 1;
            t1[t3] = codeUnit >>> 12 | 224;
            t3 = _this._bufferIndex = t4 + 1;
            t1[t4] = codeUnit >>> 6 & 63 | 128;
            _this._bufferIndex = t3 + 1;
            t1[t3] = codeUnit & 63 | 128;
          }
        }
      }
      return stringIndex;
    }
  };
  A._Utf8EncoderSink.prototype = {
    close$0(_) {
      if (this._carry !== 0) {
        this.addSlice$4("", 0, 0, true);
        return;
      }
      this._sink._sink.close$0(0);
    },
    addSlice$4(str, start, end, isLast) {
      var t1, t2, t3, t4, isLastSlice, _this = this;
      _this._bufferIndex = 0;
      t1 = start === end;
      if (t1 && !isLast)
        return;
      t2 = _this._carry;
      if (t2 !== 0) {
        if (_this._writeSurrogate$2(t2, !t1 ? str.charCodeAt(start) : 0))
          ++start;
        _this._carry = 0;
      }
      t1 = _this._sink;
      t2 = _this._convert$_buffer;
      t3 = end - 1;
      t4 = t2.length - 3;
      do {
        start = _this._fillBuffer$3(str, start, end);
        isLastSlice = isLast && start === end;
        if (start === t3 && (str.charCodeAt(start) & 64512) === 55296) {
          if (isLast && _this._bufferIndex < t4)
            _this._writeReplacementCharacter$0();
          else
            _this._carry = str.charCodeAt(start);
          ++start;
        }
        t1.add$1(0, B.NativeUint8List_methods.sublist$2(t2, 0, _this._bufferIndex));
        if (isLastSlice)
          t1.close$0(0);
        _this._bufferIndex = 0;
      } while (start < end);
      if (isLast)
        _this.close$0(0);
    }
  };
  A.Utf8Decoder.prototype = {
    convert$1(codeUnits) {
      var t1 = this._allowMalformed,
        result = A.Utf8Decoder__convertIntercepted(t1, codeUnits, 0, null);
      if (result != null)
        return result;
      return new A._Utf8Decoder(t1).convertGeneral$4(codeUnits, 0, null, true);
    },
    startChunkedConversion$1(sink) {
      return sink.asUtf8Sink$1(this._allowMalformed);
    }
  };
  A._Utf8Decoder.prototype = {
    convertGeneral$4(codeUnits, start, maybeEnd, single) {
      var bytes, errorOffset, result, t1, message, _this = this,
        end = A.RangeError_checkValidRange(start, maybeEnd, J.get$length$asx(codeUnits));
      if (start === end)
        return "";
      if (type$.Uint8List._is(codeUnits)) {
        bytes = codeUnits;
        errorOffset = 0;
      } else {
        bytes = A._Utf8Decoder__makeUint8List(codeUnits, start, end);
        end -= start;
        errorOffset = start;
        start = 0;
      }
      result = _this._convertRecursive$4(bytes, start, end, single);
      t1 = _this._convert$_state;
      if ((t1 & 1) !== 0) {
        message = A._Utf8Decoder_errorDescription(t1);
        _this._convert$_state = 0;
        throw A.wrapException(A.FormatException$(message, codeUnits, errorOffset + _this._charOrIndex));
      }
      return result;
    },
    _convertRecursive$4(bytes, start, end, single) {
      var mid, s1, _this = this;
      if (end - start > 1000) {
        mid = B.JSInt_methods._tdivFast$1(start + end, 2);
        s1 = _this._convertRecursive$4(bytes, start, mid, false);
        if ((_this._convert$_state & 1) !== 0)
          return s1;
        return s1 + _this._convertRecursive$4(bytes, mid, end, single);
      }
      return _this.decodeGeneral$4(bytes, start, end, single);
    },
    flush$1(_, sink) {
      var state = this._convert$_state;
      this._convert$_state = 0;
      if (state <= 32)
        return;
      if (this.allowMalformed)
        sink._contents += A.Primitives_stringFromCharCode(65533);
      else
        throw A.wrapException(A.FormatException$(A._Utf8Decoder_errorDescription(77), null, null));
    },
    decodeGeneral$4(bytes, start, end, single) {
      var t1, type, t2, i0, markEnd, i1, m, _this = this, _65533 = 65533,
        state = _this._convert$_state,
        char = _this._charOrIndex,
        buffer = new A.StringBuffer(""),
        i = start + 1,
        byte = bytes[start];
      $label0$0:
        for (t1 = _this.allowMalformed; true;) {
          for (; true; i = i0) {
            type = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFFFFFFFFFFFFFFFFGGGGGGGGGGGGGGGGHHHHHHHHHHHHHHHHHHHHHHHHHHHIHHHJEEBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBKCCCCCCCCCCCCDCLONNNMEEEEEEEEEEE".charCodeAt(byte) & 31;
            char = state <= 32 ? byte & 61694 >>> type : (byte & 63 | char << 6) >>> 0;
            state = " \x000:XECCCCCN:lDb \x000:XECCCCCNvlDb \x000:XECCCCCN:lDb AAAAA\x00\x00\x00\x00\x00AAAAA00000AAAAA:::::AAAAAGG000AAAAA00KKKAAAAAG::::AAAAA:IIIIAAAAA000\x800AAAAA\x00\x00\x00\x00 AAAAA".charCodeAt(state + type);
            if (state === 0) {
              buffer._contents += A.Primitives_stringFromCharCode(char);
              if (i === end)
                break $label0$0;
              break;
            } else if ((state & 1) !== 0) {
              if (t1)
                switch (state) {
                  case 69:
                  case 67:
                    buffer._contents += A.Primitives_stringFromCharCode(_65533);
                    break;
                  case 65:
                    buffer._contents += A.Primitives_stringFromCharCode(_65533);
                    --i;
                    break;
                  default:
                    t2 = buffer._contents += A.Primitives_stringFromCharCode(_65533);
                    buffer._contents = t2 + A.Primitives_stringFromCharCode(_65533);
                    break;
                }
              else {
                _this._convert$_state = state;
                _this._charOrIndex = i - 1;
                return "";
              }
              state = 0;
            }
            if (i === end)
              break $label0$0;
            i0 = i + 1;
            byte = bytes[i];
          }
          i0 = i + 1;
          byte = bytes[i];
          if (byte < 128) {
            while (true) {
              if (!(i0 < end)) {
                markEnd = end;
                break;
              }
              i1 = i0 + 1;
              byte = bytes[i0];
              if (byte >= 128) {
                markEnd = i1 - 1;
                i0 = i1;
                break;
              }
              i0 = i1;
            }
            if (markEnd - i < 20)
              for (m = i; m < markEnd; ++m)
                buffer._contents += A.Primitives_stringFromCharCode(bytes[m]);
            else
              buffer._contents += A.String_String$fromCharCodes(bytes, i, markEnd);
            if (markEnd === end)
              break $label0$0;
            i = i0;
          } else
            i = i0;
        }
      if (single && state > 32)
        if (t1)
          buffer._contents += A.Primitives_stringFromCharCode(_65533);
        else {
          _this._convert$_state = 77;
          _this._charOrIndex = end;
          return "";
        }
      _this._convert$_state = state;
      _this._charOrIndex = char;
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  A.__Utf8EncoderSink__Utf8Encoder_StringConversionSink.prototype = {};
  A.NoSuchMethodError_toString_closure.prototype = {
    call$2(key, value) {
      var t1 = this.sb,
        t2 = this._box_0,
        t3 = t1._contents += t2.comma;
      t3 += key._name;
      t1._contents = t3;
      t1._contents = t3 + ": ";
      t1._contents += A.Error_safeToString(value);
      t2.comma = ", ";
    },
    $signature: 72
  };
  A.DateTime.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.DateTime && this._value === other._value && this.isUtc === other.isUtc;
    },
    compareTo$1(_, other) {
      return B.JSInt_methods.compareTo$1(this._value, other._value);
    },
    get$hashCode(_) {
      var t1 = this._value;
      return (t1 ^ B.JSInt_methods._shrOtherPositive$1(t1, 30)) & 1073741823;
    },
    toString$0(_) {
      var _this = this,
        y = A.DateTime__fourDigits(A.Primitives_getYear(_this)),
        m = A.DateTime__twoDigits(A.Primitives_getMonth(_this)),
        d = A.DateTime__twoDigits(A.Primitives_getDay(_this)),
        h = A.DateTime__twoDigits(A.Primitives_getHours(_this)),
        min = A.DateTime__twoDigits(A.Primitives_getMinutes(_this)),
        sec = A.DateTime__twoDigits(A.Primitives_getSeconds(_this)),
        ms = A.DateTime__threeDigits(A.Primitives_getMilliseconds(_this)),
        t1 = y + "-" + m;
      if (_this.isUtc)
        return t1 + "-" + d + " " + h + ":" + min + ":" + sec + "." + ms + "Z";
      else
        return t1 + "-" + d + " " + h + ":" + min + ":" + sec + "." + ms;
    }
  };
  A.Duration.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.Duration && this._duration === other._duration;
    },
    get$hashCode(_) {
      return B.JSInt_methods.get$hashCode(this._duration);
    },
    compareTo$1(_, other) {
      return B.JSInt_methods.compareTo$1(this._duration, other._duration);
    },
    toString$0(_) {
      var sign, minutes, minutesPadding, seconds, secondsPadding,
        microseconds = this._duration,
        hours = B.JSInt_methods._tdivFast$1(microseconds, 3600000000),
        microseconds0 = microseconds % 3600000000;
      if (microseconds < 0) {
        hours = 0 - hours;
        microseconds = 0 - microseconds0;
        sign = "-";
      } else {
        microseconds = microseconds0;
        sign = "";
      }
      minutes = B.JSInt_methods._tdivFast$1(microseconds, 60000000);
      microseconds %= 60000000;
      minutesPadding = minutes < 10 ? "0" : "";
      seconds = B.JSInt_methods._tdivFast$1(microseconds, 1000000);
      secondsPadding = seconds < 10 ? "0" : "";
      return sign + hours + ":" + minutesPadding + minutes + ":" + secondsPadding + seconds + "." + B.JSString_methods.padLeft$2(B.JSInt_methods.toString$0(microseconds % 1000000), 6, "0");
    }
  };
  A._Enum.prototype = {
    toString$0(_) {
      return this._enumToString$0();
    }
  };
  A.Error.prototype = {
    get$stackTrace() {
      return A.getTraceFromException(this.$thrownJsError);
    }
  };
  A.AssertionError.prototype = {
    toString$0(_) {
      var t1 = this.message;
      if (t1 != null)
        return "Assertion failed: " + A.Error_safeToString(t1);
      return "Assertion failed";
    },
    get$message(receiver) {
      return this.message;
    }
  };
  A.TypeError.prototype = {};
  A.ArgumentError.prototype = {
    get$_errorName() {
      return "Invalid argument" + (!this._hasValue ? "(s)" : "");
    },
    get$_errorExplanation() {
      return "";
    },
    toString$0(_) {
      var _this = this,
        $name = _this.name,
        nameString = $name == null ? "" : " (" + $name + ")",
        message = _this.message,
        messageString = message == null ? "" : ": " + A.S(message),
        prefix = _this.get$_errorName() + nameString + messageString;
      if (!_this._hasValue)
        return prefix;
      return prefix + _this.get$_errorExplanation() + ": " + A.Error_safeToString(_this.get$invalidValue());
    },
    get$invalidValue() {
      return this.invalidValue;
    }
  };
  A.RangeError.prototype = {
    get$invalidValue() {
      return this.invalidValue;
    },
    get$_errorName() {
      return "RangeError";
    },
    get$_errorExplanation() {
      var explanation,
        start = this.start,
        end = this.end;
      if (start == null)
        explanation = end != null ? ": Not less than or equal to " + A.S(end) : "";
      else if (end == null)
        explanation = ": Not greater than or equal to " + A.S(start);
      else if (end > start)
        explanation = ": Not in inclusive range " + A.S(start) + ".." + A.S(end);
      else
        explanation = end < start ? ": Valid value range is empty" : ": Only valid value is " + A.S(start);
      return explanation;
    }
  };
  A.IndexError.prototype = {
    get$invalidValue() {
      return this.invalidValue;
    },
    get$_errorName() {
      return "RangeError";
    },
    get$_errorExplanation() {
      if (this.invalidValue < 0)
        return ": index must not be negative";
      var t1 = this.length;
      if (t1 === 0)
        return ": no indices are valid";
      return ": index should be less than " + t1;
    },
    get$length(receiver) {
      return this.length;
    }
  };
  A.NoSuchMethodError.prototype = {
    toString$0(_) {
      var $arguments, t1, _i, t2, t3, argument, receiverText, actualParameters, _this = this, _box_0 = {},
        sb = new A.StringBuffer("");
      _box_0.comma = "";
      $arguments = _this._core$_arguments;
      for (t1 = $arguments.length, _i = 0, t2 = "", t3 = ""; _i < t1; ++_i, t3 = ", ") {
        argument = $arguments[_i];
        sb._contents = t2 + t3;
        t2 = sb._contents += A.Error_safeToString(argument);
        _box_0.comma = ", ";
      }
      _this._namedArguments.forEach$1(0, new A.NoSuchMethodError_toString_closure(_box_0, sb));
      receiverText = A.Error_safeToString(_this._core$_receiver);
      actualParameters = sb.toString$0(0);
      return "NoSuchMethodError: method not found: '" + _this._memberName._name + "'\nReceiver: " + receiverText + "\nArguments: [" + actualParameters + "]";
    }
  };
  A.UnsupportedError.prototype = {
    toString$0(_) {
      return "Unsupported operation: " + this.message;
    }
  };
  A.UnimplementedError.prototype = {
    toString$0(_) {
      var message = this.message;
      return message != null ? "UnimplementedError: " + message : "UnimplementedError";
    }
  };
  A.StateError.prototype = {
    toString$0(_) {
      return "Bad state: " + this.message;
    }
  };
  A.ConcurrentModificationError.prototype = {
    toString$0(_) {
      var t1 = this.modifiedObject;
      if (t1 == null)
        return "Concurrent modification during iteration.";
      return "Concurrent modification during iteration: " + A.Error_safeToString(t1) + ".";
    }
  };
  A.OutOfMemoryError.prototype = {
    toString$0(_) {
      return "Out of Memory";
    },
    get$stackTrace() {
      return null;
    },
    $isError: 1
  };
  A.StackOverflowError.prototype = {
    toString$0(_) {
      return "Stack Overflow";
    },
    get$stackTrace() {
      return null;
    },
    $isError: 1
  };
  A._Exception.prototype = {
    toString$0(_) {
      return "Exception: " + this.message;
    },
    $isException: 1
  };
  A.FormatException.prototype = {
    toString$0(_) {
      var t1, lineNum, lineStart, previousCharWasCR, i, char, lineEnd, end, start, prefix, postfix,
        message = this.message,
        report = "" !== message ? "FormatException: " + message : "FormatException",
        offset = this.offset,
        source = this.source;
      if (typeof source == "string") {
        if (offset != null)
          t1 = offset < 0 || offset > source.length;
        else
          t1 = false;
        if (t1)
          offset = null;
        if (offset == null) {
          if (source.length > 78)
            source = B.JSString_methods.substring$2(source, 0, 75) + "...";
          return report + "\n" + source;
        }
        for (lineNum = 1, lineStart = 0, previousCharWasCR = false, i = 0; i < offset; ++i) {
          char = source.charCodeAt(i);
          if (char === 10) {
            if (lineStart !== i || !previousCharWasCR)
              ++lineNum;
            lineStart = i + 1;
            previousCharWasCR = false;
          } else if (char === 13) {
            ++lineNum;
            lineStart = i + 1;
            previousCharWasCR = true;
          }
        }
        report = lineNum > 1 ? report + (" (at line " + lineNum + ", character " + (offset - lineStart + 1) + ")\n") : report + (" (at character " + (offset + 1) + ")\n");
        lineEnd = source.length;
        for (i = offset; i < lineEnd; ++i) {
          char = source.charCodeAt(i);
          if (char === 10 || char === 13) {
            lineEnd = i;
            break;
          }
        }
        if (lineEnd - lineStart > 78)
          if (offset - lineStart < 75) {
            end = lineStart + 75;
            start = lineStart;
            prefix = "";
            postfix = "...";
          } else {
            if (lineEnd - offset < 75) {
              start = lineEnd - 75;
              end = lineEnd;
              postfix = "";
            } else {
              start = offset - 36;
              end = offset + 36;
              postfix = "...";
            }
            prefix = "...";
          }
        else {
          end = lineEnd;
          start = lineStart;
          prefix = "";
          postfix = "";
        }
        return report + prefix + B.JSString_methods.substring$2(source, start, end) + postfix + "\n" + B.JSString_methods.$mul(" ", offset - start + prefix.length) + "^\n";
      } else
        return offset != null ? report + (" (at offset " + A.S(offset) + ")") : report;
    },
    $isException: 1
  };
  A.Iterable.prototype = {
    cast$1$0(_, $R) {
      return A.CastIterable_CastIterable(this, A._instanceType(this)._eval$1("Iterable.E"), $R);
    },
    map$1$1(_, toElement, $T) {
      return A.MappedIterable_MappedIterable(this, toElement, A._instanceType(this)._eval$1("Iterable.E"), $T);
    },
    where$1(_, test) {
      return new A.WhereIterable(this, test, A._instanceType(this)._eval$1("WhereIterable<Iterable.E>"));
    },
    forEach$1(_, action) {
      var t1;
      for (t1 = this.get$iterator(this); t1.moveNext$0();)
        action.call$1(t1.get$current(t1));
    },
    join$1(_, separator) {
      var first, t1,
        iterator = this.get$iterator(this);
      if (!iterator.moveNext$0())
        return "";
      first = J.toString$0$(iterator.get$current(iterator));
      if (!iterator.moveNext$0())
        return first;
      if (separator.length === 0) {
        t1 = first;
        do
          t1 += J.toString$0$(iterator.get$current(iterator));
        while (iterator.moveNext$0());
      } else {
        t1 = first;
        do
          t1 = t1 + separator + J.toString$0$(iterator.get$current(iterator));
        while (iterator.moveNext$0());
      }
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    any$1(_, test) {
      var t1;
      for (t1 = this.get$iterator(this); t1.moveNext$0();)
        if (test.call$1(t1.get$current(t1)))
          return true;
      return false;
    },
    toList$1$growable(_, growable) {
      return A.List_List$of(this, growable, A._instanceType(this)._eval$1("Iterable.E"));
    },
    toList$0($receiver) {
      return this.toList$1$growable($receiver, true);
    },
    get$length(_) {
      var count,
        it = this.get$iterator(this);
      for (count = 0; it.moveNext$0();)
        ++count;
      return count;
    },
    get$isEmpty(_) {
      return !this.get$iterator(this).moveNext$0();
    },
    get$isNotEmpty(_) {
      return !this.get$isEmpty(this);
    },
    take$1(_, count) {
      return A.TakeIterable_TakeIterable(this, count, A._instanceType(this)._eval$1("Iterable.E"));
    },
    skip$1(_, count) {
      return A.SkipIterable_SkipIterable(this, count, A._instanceType(this)._eval$1("Iterable.E"));
    },
    get$first(_) {
      var it = this.get$iterator(this);
      if (!it.moveNext$0())
        throw A.wrapException(A.IterableElementError_noElement());
      return it.get$current(it);
    },
    get$single(_) {
      var result,
        it = this.get$iterator(this);
      if (!it.moveNext$0())
        throw A.wrapException(A.IterableElementError_noElement());
      result = it.get$current(it);
      if (it.moveNext$0())
        throw A.wrapException(A.IterableElementError_tooMany());
      return result;
    },
    elementAt$1(_, index) {
      var iterator, skipCount;
      A.RangeError_checkNotNegative(index, "index");
      iterator = this.get$iterator(this);
      for (skipCount = index; iterator.moveNext$0();) {
        if (skipCount === 0)
          return iterator.get$current(iterator);
        --skipCount;
      }
      throw A.wrapException(A.IndexError$withLength(index, index - skipCount, this, null, "index"));
    },
    toString$0(_) {
      return A.Iterable_iterableToShortString(this, "(", ")");
    }
  };
  A.MapEntry.prototype = {
    toString$0(_) {
      return "MapEntry(" + A.S(this.key) + ": " + A.S(this.value) + ")";
    }
  };
  A.Null.prototype = {
    get$hashCode(_) {
      return A.Object.prototype.get$hashCode.call(this, this);
    },
    toString$0(_) {
      return "null";
    }
  };
  A.Object.prototype = {$isObject: 1,
    $eq(_, other) {
      return this === other;
    },
    get$hashCode(_) {
      return A.Primitives_objectHashCode(this);
    },
    toString$0(_) {
      return "Instance of '" + A.Primitives_objectTypeName(this) + "'";
    },
    noSuchMethod$1(_, invocation) {
      throw A.wrapException(A.NoSuchMethodError_NoSuchMethodError$withInvocation(this, invocation));
    },
    get$runtimeType(_) {
      return A.getRuntimeTypeOfDartObject(this);
    },
    toString() {
      return this.toString$0(this);
    }
  };
  A._StringStackTrace.prototype = {
    toString$0(_) {
      return "";
    },
    $isStackTrace: 1
  };
  A.Stopwatch.prototype = {
    get$elapsedMicroseconds() {
      var ticks,
        t1 = this._stop;
      if (t1 == null)
        t1 = $.Primitives_timerTicks.call$0();
      ticks = t1 - this._core$_start;
      if ($.$get$Stopwatch__frequency() === 1000000)
        return ticks;
      return ticks * 1000;
    },
    start$0(_) {
      var _this = this,
        $stop = _this._stop;
      if ($stop != null) {
        _this._core$_start = _this._core$_start + ($.Primitives_timerTicks.call$0() - $stop);
        _this._stop = null;
      }
    }
  };
  A.StringBuffer.prototype = {
    get$length(_) {
      return this._contents.length;
    },
    write$1(_, obj) {
      this._contents += A.S(obj);
    },
    writeCharCode$1(charCode) {
      this._contents += A.Primitives_stringFromCharCode(charCode);
    },
    toString$0(_) {
      var t1 = this._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  A.Uri__parseIPv4Address_error.prototype = {
    call$2(msg, position) {
      throw A.wrapException(A.FormatException$("Illegal IPv4 address, " + msg, this.host, position));
    },
    $signature: 110
  };
  A.Uri_parseIPv6Address_error.prototype = {
    call$2(msg, position) {
      throw A.wrapException(A.FormatException$("Illegal IPv6 address, " + msg, this.host, position));
    },
    $signature: 74
  };
  A.Uri_parseIPv6Address_parseHex.prototype = {
    call$2(start, end) {
      var value;
      if (end - start > 4)
        this.error.call$2("an IPv6 part can only contain a maximum of 4 hex digits", start);
      value = A.int_parse(B.JSString_methods.substring$2(this.host, start, end), 16);
      if (value < 0 || value > 65535)
        this.error.call$2("each part must be in the range of `0x0..0xFFFF`", start);
      return value;
    },
    $signature: 75
  };
  A._Uri.prototype = {
    get$_text() {
      var t1, t2, t3, t4, _this = this,
        value = _this.___Uri__text_FI;
      if (value === $) {
        t1 = _this.scheme;
        t2 = t1.length !== 0 ? "" + t1 + ":" : "";
        t3 = _this._host;
        t4 = t3 == null;
        if (!t4 || t1 === "file") {
          t1 = t2 + "//";
          t2 = _this._userInfo;
          if (t2.length !== 0)
            t1 = t1 + t2 + "@";
          if (!t4)
            t1 += t3;
          t2 = _this._port;
          if (t2 != null)
            t1 = t1 + ":" + A.S(t2);
        } else
          t1 = t2;
        t1 += _this.path;
        t2 = _this._query;
        if (t2 != null)
          t1 = t1 + "?" + t2;
        t2 = _this._fragment;
        if (t2 != null)
          t1 = t1 + "#" + t2;
        value !== $ && A.throwUnnamedLateFieldADI();
        value = _this.___Uri__text_FI = t1.charCodeAt(0) == 0 ? t1 : t1;
      }
      return value;
    },
    get$pathSegments() {
      var pathToSplit, result, _this = this,
        value = _this.___Uri_pathSegments_FI;
      if (value === $) {
        pathToSplit = _this.path;
        if (pathToSplit.length !== 0 && pathToSplit.charCodeAt(0) === 47)
          pathToSplit = B.JSString_methods.substring$1(pathToSplit, 1);
        result = pathToSplit.length === 0 ? B.List_empty0 : A.List_List$unmodifiable(new A.MappedListIterable(A._setArrayType(pathToSplit.split("/"), type$.JSArray_String), A.core_Uri_decodeComponent$closure(), type$.MappedListIterable_String_dynamic), type$.String);
        _this.___Uri_pathSegments_FI !== $ && A.throwUnnamedLateFieldADI();
        value = _this.___Uri_pathSegments_FI = result;
      }
      return value;
    },
    get$hashCode(_) {
      var result, _this = this,
        value = _this.___Uri_hashCode_FI;
      if (value === $) {
        result = B.JSString_methods.get$hashCode(_this.get$_text());
        _this.___Uri_hashCode_FI !== $ && A.throwUnnamedLateFieldADI();
        _this.___Uri_hashCode_FI = result;
        value = result;
      }
      return value;
    },
    get$queryParametersAll() {
      var t1, result, _this = this,
        value = _this.___Uri_queryParametersAll_FI;
      if (value === $) {
        t1 = _this._query;
        result = A._Uri__computeQueryParametersAll(t1 == null ? "" : t1);
        _this.___Uri_queryParametersAll_FI !== $ && A.throwUnnamedLateFieldADI();
        _this.___Uri_queryParametersAll_FI = result;
        value = result;
      }
      return value;
    },
    get$userInfo() {
      return this._userInfo;
    },
    get$host(_) {
      var host = this._host;
      if (host == null)
        return "";
      if (B.JSString_methods.startsWith$1(host, "["))
        return B.JSString_methods.substring$2(host, 1, host.length - 1);
      return host;
    },
    get$port(_) {
      var t1 = this._port;
      return t1 == null ? A._Uri__defaultPort(this.scheme) : t1;
    },
    get$query(_) {
      var t1 = this._query;
      return t1 == null ? "" : t1;
    },
    get$fragment() {
      var t1 = this._fragment;
      return t1 == null ? "" : t1;
    },
    get$hasScheme() {
      return this.scheme.length !== 0;
    },
    get$hasAuthority() {
      return this._host != null;
    },
    get$hasQuery() {
      return this._query != null;
    },
    get$hasFragment() {
      return this._fragment != null;
    },
    toString$0(_) {
      return this.get$_text();
    },
    $eq(_, other) {
      var t1, t2, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (type$.Uri._is(other))
        if (_this.scheme === other.get$scheme())
          if (_this._host != null === other.get$hasAuthority())
            if (_this._userInfo === other.get$userInfo())
              if (_this.get$host(_this) === other.get$host(other))
                if (_this.get$port(_this) === other.get$port(other))
                  if (_this.path === other.get$path(other)) {
                    t1 = _this._query;
                    t2 = t1 == null;
                    if (!t2 === other.get$hasQuery()) {
                      if (t2)
                        t1 = "";
                      if (t1 === other.get$query(other)) {
                        t1 = _this._fragment;
                        t2 = t1 == null;
                        if (!t2 === other.get$hasFragment()) {
                          if (t2)
                            t1 = "";
                          t1 = t1 === other.get$fragment();
                        } else
                          t1 = false;
                      } else
                        t1 = false;
                    } else
                      t1 = false;
                  } else
                    t1 = false;
                else
                  t1 = false;
              else
                t1 = false;
            else
              t1 = false;
          else
            t1 = false;
        else
          t1 = false;
      else
        t1 = false;
      return t1;
    },
    $isUri: 1,
    get$scheme() {
      return this.scheme;
    },
    get$path(receiver) {
      return this.path;
    }
  };
  A._Uri__makeQuery_writeParameter.prototype = {
    call$2(key, value) {
      var t1 = this.result,
        t2 = this._box_0;
      t1._contents += t2.separator;
      t2.separator = "&";
      t2 = t1._contents += A._Uri__uriEncode(B.List_M1A, key, B.C_Utf8Codec, true);
      if (value != null && value.length !== 0) {
        t1._contents = t2 + "=";
        t1._contents += A._Uri__uriEncode(B.List_M1A, value, B.C_Utf8Codec, true);
      }
    },
    $signature: 76
  };
  A._Uri__makeQuery_closure.prototype = {
    call$2(key, value) {
      var t1, t2;
      if (value == null || typeof value == "string")
        this.writeParameter.call$2(key, value);
      else
        for (t1 = J.get$iterator$ax(value), t2 = this.writeParameter; t1.moveNext$0();)
          t2.call$2(key, t1.get$current(t1));
    },
    $signature: 4
  };
  A._Uri__splitQueryStringAll_parsePair.prototype = {
    call$3(start, equalsIndex, end) {
      var t1, t2, key, value;
      if (start === end)
        return;
      t1 = this.query;
      t2 = this.encoding;
      if (equalsIndex < 0) {
        key = A._Uri__uriDecode(t1, start, end, t2, true);
        value = "";
      } else {
        key = A._Uri__uriDecode(t1, start, equalsIndex, t2, true);
        value = A._Uri__uriDecode(t1, equalsIndex + 1, end, t2, true);
      }
      J.add$1$ax(this.result.putIfAbsent$2(0, key, A.core__Uri__createList$closure()), value);
    },
    $signature: 77
  };
  A.UriData.prototype = {
    get$uri() {
      var t2, queryIndex, end, query, _this = this, _null = null,
        t1 = _this._uriCache;
      if (t1 == null) {
        t1 = _this._text;
        t2 = _this._separatorIndices[0] + 1;
        queryIndex = B.JSString_methods.indexOf$2(t1, "?", t2);
        end = t1.length;
        if (queryIndex >= 0) {
          query = A._Uri__normalizeOrSubstring(t1, queryIndex + 1, end, B.List_oFp, false, false);
          end = queryIndex;
        } else
          query = _null;
        t1 = _this._uriCache = new A._DataUri("data", "", _null, _null, A._Uri__normalizeOrSubstring(t1, t2, end, B.List_XRg, false, false), query, _null);
      }
      return t1;
    },
    toString$0(_) {
      var t1 = this._text;
      return this._separatorIndices[0] === -1 ? "data:" + t1 : t1;
    }
  };
  A._createTables_build.prototype = {
    call$2(state, defaultTransition) {
      var t1 = this.tables[state];
      B.NativeUint8List_methods.fillRange$3(t1, 0, 96, defaultTransition);
      return t1;
    },
    $signature: 78
  };
  A._createTables_setChars.prototype = {
    call$3(target, chars, transition) {
      var t1, i;
      for (t1 = chars.length, i = 0; i < t1; ++i)
        target[chars.charCodeAt(i) ^ 96] = transition;
    },
    $signature: 31
  };
  A._createTables_setRange.prototype = {
    call$3(target, range, transition) {
      var i, n;
      for (i = range.charCodeAt(0), n = range.charCodeAt(1); i <= n; ++i)
        target[(i ^ 96) >>> 0] = transition;
    },
    $signature: 31
  };
  A._SimpleUri.prototype = {
    get$hasScheme() {
      return this._schemeEnd > 0;
    },
    get$hasAuthority() {
      return this._hostStart > 0;
    },
    get$hasQuery() {
      return this._queryStart < this._fragmentStart;
    },
    get$hasFragment() {
      return this._fragmentStart < this._uri.length;
    },
    get$scheme() {
      var t1 = this._schemeCache;
      return t1 == null ? this._schemeCache = this._computeScheme$0() : t1;
    },
    _computeScheme$0() {
      var t2, _this = this,
        t1 = _this._schemeEnd;
      if (t1 <= 0)
        return "";
      t2 = t1 === 4;
      if (t2 && B.JSString_methods.startsWith$1(_this._uri, "http"))
        return "http";
      if (t1 === 5 && B.JSString_methods.startsWith$1(_this._uri, "https"))
        return "https";
      if (t2 && B.JSString_methods.startsWith$1(_this._uri, "file"))
        return "file";
      if (t1 === 7 && B.JSString_methods.startsWith$1(_this._uri, "package"))
        return "package";
      return B.JSString_methods.substring$2(_this._uri, 0, t1);
    },
    get$userInfo() {
      var t1 = this._hostStart,
        t2 = this._schemeEnd + 3;
      return t1 > t2 ? B.JSString_methods.substring$2(this._uri, t2, t1 - 1) : "";
    },
    get$host(_) {
      var t1 = this._hostStart;
      return t1 > 0 ? B.JSString_methods.substring$2(this._uri, t1, this._portStart) : "";
    },
    get$port(_) {
      var t1, _this = this;
      if (_this._hostStart > 0 && _this._portStart + 1 < _this._pathStart)
        return A.int_parse(B.JSString_methods.substring$2(_this._uri, _this._portStart + 1, _this._pathStart), null);
      t1 = _this._schemeEnd;
      if (t1 === 4 && B.JSString_methods.startsWith$1(_this._uri, "http"))
        return 80;
      if (t1 === 5 && B.JSString_methods.startsWith$1(_this._uri, "https"))
        return 443;
      return 0;
    },
    get$path(_) {
      return B.JSString_methods.substring$2(this._uri, this._pathStart, this._queryStart);
    },
    get$query(_) {
      var t1 = this._queryStart,
        t2 = this._fragmentStart;
      return t1 < t2 ? B.JSString_methods.substring$2(this._uri, t1 + 1, t2) : "";
    },
    get$fragment() {
      var t1 = this._fragmentStart,
        t2 = this._uri;
      return t1 < t2.length ? B.JSString_methods.substring$1(t2, t1 + 1) : "";
    },
    get$pathSegments() {
      var parts, i,
        start = this._pathStart,
        end = this._queryStart,
        t1 = this._uri;
      if (B.JSString_methods.startsWith$2(t1, "/", start))
        ++start;
      if (start === end)
        return B.List_empty0;
      parts = A._setArrayType([], type$.JSArray_String);
      for (i = start; i < end; ++i)
        if (t1.charCodeAt(i) === 47) {
          parts.push(B.JSString_methods.substring$2(t1, start, i));
          start = i + 1;
        }
      parts.push(B.JSString_methods.substring$2(t1, start, end));
      return A.List_List$unmodifiable(parts, type$.String);
    },
    get$queryParametersAll() {
      var queryParameterLists, _this = this;
      if (_this._queryStart >= _this._fragmentStart)
        return B.Map_empty0;
      queryParameterLists = A._Uri__splitQueryStringAll(_this.get$query(_this));
      queryParameterLists.updateAll$1(queryParameterLists, A.core___toUnmodifiableStringList$closure());
      return A.ConstantMap_ConstantMap$from(queryParameterLists, type$.String, type$.List_String);
    },
    get$hashCode(_) {
      var t1 = this._hashCodeCache;
      return t1 == null ? this._hashCodeCache = B.JSString_methods.get$hashCode(this._uri) : t1;
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      return type$.Uri._is(other) && this._uri === other.toString$0(0);
    },
    toString$0(_) {
      return this._uri;
    },
    $isUri: 1
  };
  A._DataUri.prototype = {};
  A.Expando.prototype = {
    $index(_, object) {
      if (typeof object == "number" || typeof object == "string" || false)
        A.Expando__badExpandoKey(object);
      return this._jsWeakMap.get(object);
    },
    $indexSet(_, object, value) {
      this._jsWeakMap.set(object, value);
    },
    toString$0(_) {
      return "Expando:null";
    }
  };
  A.ServiceExtensionResponse.prototype = {};
  A.HtmlElement.prototype = {$isHtmlElement: 1};
  A.AccessibleNodeList.prototype = {
    get$length(receiver) {
      return receiver.length;
    }
  };
  A.AnchorElement.prototype = {
    toString$0(receiver) {
      var t1 = String(receiver);
      t1.toString;
      return t1;
    }
  };
  A.AreaElement.prototype = {
    toString$0(receiver) {
      var t1 = String(receiver);
      t1.toString;
      return t1;
    }
  };
  A.BaseElement.prototype = {$isBaseElement: 1};
  A.Blob.prototype = {};
  A.BodyElement.prototype = {$isBodyElement: 1};
  A.CharacterData.prototype = {
    get$length(receiver) {
      return receiver.length;
    }
  };
  A.CssPerspective.prototype = {
    get$length(receiver) {
      return receiver.length;
    }
  };
  A.CssRule.prototype = {$isCssRule: 1};
  A.CssStyleDeclaration.prototype = {
    _browserPropertyName$1(receiver, propertyName) {
      var t1 = $.$get$CssStyleDeclaration__propertyCache(),
        $name = t1[propertyName];
      if (typeof $name == "string")
        return $name;
      $name = this._supportedBrowserPropertyName$1(receiver, propertyName);
      t1[propertyName] = $name;
      return $name;
    },
    _supportedBrowserPropertyName$1(receiver, propertyName) {
      var prefixed,
        t1 = propertyName.replace(/^-ms-/, "ms-").replace(/-([\da-z])/ig, function(_, letter) {
          return letter.toUpperCase();
        });
      t1.toString;
      t1 = t1 in receiver;
      t1.toString;
      if (t1)
        return propertyName;
      prefixed = $.$get$Device_cssPrefix() + propertyName;
      t1 = prefixed in receiver;
      t1.toString;
      if (t1)
        return prefixed;
      return propertyName;
    },
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    }
  };
  A.CssStyleDeclarationBase.prototype = {};
  A.CssStyleValue.prototype = {};
  A.CssTransformComponent.prototype = {};
  A.CssTransformValue.prototype = {
    get$length(receiver) {
      return receiver.length;
    }
  };
  A.CssUnparsedValue.prototype = {
    get$length(receiver) {
      return receiver.length;
    }
  };
  A.DataTransferItemList.prototype = {
    get$length(receiver) {
      return receiver.length;
    },
    $index(receiver, index) {
      var t1 = receiver[index];
      t1.toString;
      return t1;
    }
  };
  A.DomException0.prototype = {
    toString$0(receiver) {
      var t1 = String(receiver);
      t1.toString;
      return t1;
    }
  };
  A.DomRectList.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1;
      if (receiver.length > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    elementAt$1(receiver, index) {
      return receiver[index];
    },
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.DomRectReadOnly0.prototype = {
    toString$0(receiver) {
      var t2,
        t1 = receiver.left;
      t1.toString;
      t2 = receiver.top;
      t2.toString;
      return "Rectangle (" + A.S(t1) + ", " + A.S(t2) + ") " + A.S(this.get$width(receiver)) + " x " + A.S(this.get$height(receiver));
    },
    $eq(receiver, other) {
      var t1, t2;
      if (other == null)
        return false;
      if (type$.Rectangle_num._is(other)) {
        t1 = receiver.left;
        t1.toString;
        t2 = other.left;
        t2.toString;
        if (t1 === t2) {
          t1 = receiver.top;
          t1.toString;
          t2 = other.top;
          t2.toString;
          if (t1 === t2) {
            t1 = J.getInterceptor$x(other);
            t1 = this.get$width(receiver) === t1.get$width(other) && this.get$height(receiver) === t1.get$height(other);
          } else
            t1 = false;
        } else
          t1 = false;
      } else
        t1 = false;
      return t1;
    },
    get$hashCode(receiver) {
      var t2,
        t1 = receiver.left;
      t1.toString;
      t2 = receiver.top;
      t2.toString;
      return A.Object_hash(t1, t2, this.get$width(receiver), this.get$height(receiver), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    get$_height(receiver) {
      return receiver.height;
    },
    get$height(receiver) {
      var t1 = this.get$_height(receiver);
      t1.toString;
      return t1;
    },
    get$_width(receiver) {
      return receiver.width;
    },
    get$width(receiver) {
      var t1 = this.get$_width(receiver);
      t1.toString;
      return t1;
    },
    $isRectangle: 1
  };
  A.DomStringList.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1;
      if (receiver.length > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    elementAt$1(receiver, index) {
      return receiver[index];
    },
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.DomTokenList0.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    }
  };
  A._ChildrenElementList.prototype = {
    get$isEmpty(_) {
      return this._html$_element.firstElementChild == null;
    },
    get$length(_) {
      return this._childElements.length;
    },
    $index(_, index) {
      return type$.Element._as(this._childElements[index]);
    },
    $indexSet(_, index, value) {
      this._html$_element.replaceChild(value, this._childElements[index]).toString;
    },
    set$length(_, newLength) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize element lists"));
    },
    add$1(_, value) {
      this._html$_element.appendChild(value).toString;
      return value;
    },
    get$iterator(_) {
      var t1 = this.toList$0(this);
      return new J.ArrayIterator(t1, t1.length);
    },
    addAll$1(_, iterable) {
      A._ChildrenElementList__addAll(this._html$_element, iterable);
    },
    get$first(_) {
      return A._ChildrenElementList__first(this._html$_element);
    }
  };
  A.Element.prototype = {
    get$attributes(receiver) {
      return new A._ElementAttributeMap(receiver);
    },
    set$attributes(receiver, value) {
      var t1, t2, t3;
      new A._ElementAttributeMap(receiver).clear$0(0);
      for (t1 = A.LinkedHashMapKeyIterator$(value, value._modifications); t1.moveNext$0();) {
        t2 = t1.__js_helper$_current;
        t3 = value.$index(0, t2);
        t3.toString;
        receiver.setAttribute(t2, t3);
      }
    },
    get$children(receiver) {
      var t1 = receiver.children;
      t1.toString;
      return new A._ChildrenElementList(receiver, t1);
    },
    toString$0(receiver) {
      var t1 = receiver.localName;
      t1.toString;
      return t1;
    },
    createFragment$3$treeSanitizer$validator(receiver, html, treeSanitizer, validator) {
      var t1, t2, contextElement, fragment;
      if (treeSanitizer == null) {
        t1 = $.Element__defaultValidator;
        if (t1 == null) {
          t1 = A._setArrayType([], type$.JSArray_NodeValidator);
          t2 = new A.NodeValidatorBuilder(t1);
          t1.push(A._Html5NodeValidator$(null));
          t1.push(A._TemplatingNodeValidator$());
          $.Element__defaultValidator = t2;
          validator = t2;
        } else
          validator = t1;
        t1 = $.Element__defaultSanitizer;
        if (t1 == null) {
          validator.toString;
          t1 = new A._ValidatingTreeSanitizer(validator);
          $.Element__defaultSanitizer = t1;
          treeSanitizer = t1;
        } else {
          validator.toString;
          t1.validator = validator;
          treeSanitizer = t1;
        }
      }
      if ($.Element__parseDocument == null) {
        t1 = document;
        t2 = t1.implementation.createHTMLDocument("");
        t2.toString;
        $.Element__parseDocument = t2;
        t2 = t2.createRange();
        t2.toString;
        $.Element__parseRange = t2;
        t2 = $.Element__parseDocument.createElement("base");
        type$.BaseElement._as(t2);
        t1 = t1.baseURI;
        t1.toString;
        t2.href = t1;
        $.Element__parseDocument.head.appendChild(t2).toString;
      }
      t1 = $.Element__parseDocument;
      if (t1.body == null) {
        t2 = t1.createElement("body");
        t1.body = type$.BodyElement._as(t2);
      }
      t1 = $.Element__parseDocument;
      if (type$.BodyElement._is(receiver)) {
        t1 = t1.body;
        t1.toString;
        contextElement = t1;
      } else {
        t1.toString;
        t2 = receiver.tagName;
        t2.toString;
        contextElement = t1.createElement(t2);
        $.Element__parseDocument.body.appendChild(contextElement).toString;
      }
      t1 = "createContextualFragment" in window.Range.prototype;
      t1.toString;
      if (t1) {
        t1 = receiver.tagName;
        t1.toString;
        t1 = !B.JSArray_methods.contains$1(B.List_ME0, t1);
      } else
        t1 = false;
      if (t1) {
        $.Element__parseRange.selectNodeContents(contextElement);
        t1 = $.Element__parseRange;
        t1 = t1.createContextualFragment(html);
        t1.toString;
        fragment = t1;
      } else {
        contextElement.innerHTML = html;
        t1 = $.Element__parseDocument.createDocumentFragment();
        t1.toString;
        for (; t2 = contextElement.firstChild, t2 != null;)
          t1.appendChild(t2).toString;
        fragment = t1;
      }
      if (contextElement !== $.Element__parseDocument.body)
        J.remove$0$ax(contextElement);
      treeSanitizer.sanitizeTree$1(fragment);
      document.adoptNode(fragment).toString;
      return fragment;
    },
    createFragment$2$treeSanitizer($receiver, html, treeSanitizer) {
      return this.createFragment$3$treeSanitizer$validator($receiver, html, treeSanitizer, null);
    },
    setInnerHtml$1(receiver, html) {
      receiver.textContent = null;
      receiver.appendChild(this.createFragment$3$treeSanitizer$validator(receiver, html, null, null)).toString;
    },
    $isElement: 1
  };
  A.Element_Element$html_closure.prototype = {
    call$1(e) {
      return type$.Element._is(e);
    },
    $signature: 32
  };
  A.Event.prototype = {$isEvent: 1};
  A.EventTarget.prototype = {
    addEventListener$3(receiver, type, listener, useCapture) {
      if (listener != null)
        this._html$_addEventListener$3(receiver, type, listener, false);
    },
    _html$_addEventListener$3(receiver, type, listener, options) {
      return receiver.addEventListener(type, A.convertDartClosureToJS(listener, 1), false);
    },
    _removeEventListener$3(receiver, type, listener, options) {
      return receiver.removeEventListener(type, A.convertDartClosureToJS(listener, 1), false);
    }
  };
  A.File.prototype = {$isFile: 1};
  A.FileList.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1;
      if (receiver.length > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    elementAt$1(receiver, index) {
      return receiver[index];
    },
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.FileWriter.prototype = {
    get$length(receiver) {
      return receiver.length;
    }
  };
  A.FormElement.prototype = {
    get$length(receiver) {
      return receiver.length;
    }
  };
  A.Gamepad.prototype = {$isGamepad: 1};
  A.History.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    }
  };
  A.HtmlCollection.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1;
      if (receiver.length > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    elementAt$1(receiver, index) {
      return receiver[index];
    },
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.LinkElement.prototype = {};
  A.Location.prototype = {
    toString$0(receiver) {
      var t1 = String(receiver);
      t1.toString;
      return t1;
    }
  };
  A.MediaList.prototype = {
    get$length(receiver) {
      return receiver.length;
    }
  };
  A.MidiInputMap.prototype = {
    containsKey$1(receiver, key) {
      return A.convertNativeToDart_Dictionary(receiver.get(key)) != null;
    },
    $index(receiver, key) {
      return A.convertNativeToDart_Dictionary(receiver.get(key));
    },
    forEach$1(receiver, f) {
      var entry, t1,
        entries = receiver.entries();
      for (; true;) {
        entry = entries.next();
        t1 = entry.done;
        t1.toString;
        if (t1)
          return;
        t1 = entry.value[0];
        t1.toString;
        f.call$2(t1, A.convertNativeToDart_Dictionary(entry.value[1]));
      }
    },
    get$keys(receiver) {
      var keys = A._setArrayType([], type$.JSArray_String);
      this.forEach$1(receiver, new A.MidiInputMap_keys_closure(keys));
      return keys;
    },
    get$length(receiver) {
      var t1 = receiver.size;
      t1.toString;
      return t1;
    },
    get$isEmpty(receiver) {
      var t1 = receiver.size;
      t1.toString;
      return t1 === 0;
    },
    $indexSet(receiver, key, value) {
      throw A.wrapException(A.UnsupportedError$("Not supported"));
    },
    remove$1(receiver, key) {
      throw A.wrapException(A.UnsupportedError$("Not supported"));
    },
    $isMap: 1
  };
  A.MidiInputMap_keys_closure.prototype = {
    call$2(k, v) {
      return this.keys.push(k);
    },
    $signature: 4
  };
  A.MidiOutputMap.prototype = {
    containsKey$1(receiver, key) {
      return A.convertNativeToDart_Dictionary(receiver.get(key)) != null;
    },
    $index(receiver, key) {
      return A.convertNativeToDart_Dictionary(receiver.get(key));
    },
    forEach$1(receiver, f) {
      var entry, t1,
        entries = receiver.entries();
      for (; true;) {
        entry = entries.next();
        t1 = entry.done;
        t1.toString;
        if (t1)
          return;
        t1 = entry.value[0];
        t1.toString;
        f.call$2(t1, A.convertNativeToDart_Dictionary(entry.value[1]));
      }
    },
    get$keys(receiver) {
      var keys = A._setArrayType([], type$.JSArray_String);
      this.forEach$1(receiver, new A.MidiOutputMap_keys_closure(keys));
      return keys;
    },
    get$length(receiver) {
      var t1 = receiver.size;
      t1.toString;
      return t1;
    },
    get$isEmpty(receiver) {
      var t1 = receiver.size;
      t1.toString;
      return t1 === 0;
    },
    $indexSet(receiver, key, value) {
      throw A.wrapException(A.UnsupportedError$("Not supported"));
    },
    remove$1(receiver, key) {
      throw A.wrapException(A.UnsupportedError$("Not supported"));
    },
    $isMap: 1
  };
  A.MidiOutputMap_keys_closure.prototype = {
    call$2(k, v) {
      return this.keys.push(k);
    },
    $signature: 4
  };
  A.MimeType.prototype = {$isMimeType: 1};
  A.MimeTypeArray.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1;
      if (receiver.length > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    elementAt$1(receiver, index) {
      return receiver[index];
    },
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A._ChildNodeListLazy.prototype = {
    get$first(_) {
      var result = this._this.firstChild;
      if (result == null)
        throw A.wrapException(A.StateError$("No elements"));
      return result;
    },
    get$single(_) {
      var t1 = this._this,
        l = t1.childNodes.length;
      if (l === 0)
        throw A.wrapException(A.StateError$("No elements"));
      if (l > 1)
        throw A.wrapException(A.StateError$("More than one element"));
      t1 = t1.firstChild;
      t1.toString;
      return t1;
    },
    add$1(_, value) {
      this._this.appendChild(value).toString;
    },
    addAll$1(_, iterable) {
      var t1, t2, len, i, t3;
      if (iterable instanceof A._ChildNodeListLazy) {
        t1 = iterable._this;
        t2 = this._this;
        if (t1 !== t2)
          for (len = t1.childNodes.length, i = 0; i < len; ++i) {
            t3 = t1.firstChild;
            t3.toString;
            t2.appendChild(t3).toString;
          }
        return;
      }
      for (t1 = iterable.get$iterator(iterable), t2 = this._this; t1.moveNext$0();)
        t2.appendChild(t1.get$current(t1)).toString;
    },
    $indexSet(_, index, value) {
      var t1 = this._this;
      t1.replaceChild(value, t1.childNodes[index]).toString;
    },
    get$iterator(_) {
      var t1 = this._this.childNodes;
      return new A.FixedSizeListIterator(t1, t1.length);
    },
    get$length(_) {
      return this._this.childNodes.length;
    },
    set$length(_, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot set length on immutable List."));
    },
    $index(_, index) {
      return this._this.childNodes[index];
    }
  };
  A.Node.prototype = {
    remove$0(receiver) {
      var t1 = receiver.parentNode;
      if (t1 != null)
        t1.removeChild(receiver).toString;
    },
    replaceWith$1(receiver, otherNode) {
      var $parent, t1, exception;
      try {
        t1 = receiver.parentNode;
        t1.toString;
        $parent = t1;
        J._replaceChild$2$x($parent, otherNode, receiver);
      } catch (exception) {
      }
      return receiver;
    },
    toString$0(receiver) {
      var value = receiver.nodeValue;
      return value == null ? this.super$Interceptor$toString(receiver) : value;
    },
    _replaceChild$2(receiver, node, child) {
      var t1 = receiver.replaceChild(node, child);
      t1.toString;
      return t1;
    },
    $isNode: 1
  };
  A.NodeList.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1;
      if (receiver.length > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    elementAt$1(receiver, index) {
      return receiver[index];
    },
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.Plugin.prototype = {
    get$length(receiver) {
      return receiver.length;
    },
    $isPlugin: 1
  };
  A.PluginArray.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1;
      if (receiver.length > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    elementAt$1(receiver, index) {
      return receiver[index];
    },
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.RtcStatsReport.prototype = {
    containsKey$1(receiver, key) {
      return A.convertNativeToDart_Dictionary(receiver.get(key)) != null;
    },
    $index(receiver, key) {
      return A.convertNativeToDart_Dictionary(receiver.get(key));
    },
    forEach$1(receiver, f) {
      var entry, t1,
        entries = receiver.entries();
      for (; true;) {
        entry = entries.next();
        t1 = entry.done;
        t1.toString;
        if (t1)
          return;
        t1 = entry.value[0];
        t1.toString;
        f.call$2(t1, A.convertNativeToDart_Dictionary(entry.value[1]));
      }
    },
    get$keys(receiver) {
      var keys = A._setArrayType([], type$.JSArray_String);
      this.forEach$1(receiver, new A.RtcStatsReport_keys_closure(keys));
      return keys;
    },
    get$length(receiver) {
      var t1 = receiver.size;
      t1.toString;
      return t1;
    },
    get$isEmpty(receiver) {
      var t1 = receiver.size;
      t1.toString;
      return t1 === 0;
    },
    $indexSet(receiver, key, value) {
      throw A.wrapException(A.UnsupportedError$("Not supported"));
    },
    remove$1(receiver, key) {
      throw A.wrapException(A.UnsupportedError$("Not supported"));
    },
    $isMap: 1
  };
  A.RtcStatsReport_keys_closure.prototype = {
    call$2(k, v) {
      return this.keys.push(k);
    },
    $signature: 4
  };
  A.ScriptElement.prototype = {};
  A.SelectElement.prototype = {
    get$length(receiver) {
      return receiver.length;
    }
  };
  A.SourceBuffer.prototype = {$isSourceBuffer: 1};
  A.SourceBufferList.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1;
      if (receiver.length > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    elementAt$1(receiver, index) {
      return receiver[index];
    },
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.SpeechGrammar.prototype = {$isSpeechGrammar: 1};
  A.SpeechGrammarList.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1;
      if (receiver.length > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    elementAt$1(receiver, index) {
      return receiver[index];
    },
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.SpeechRecognitionResult.prototype = {
    get$length(receiver) {
      return receiver.length;
    },
    $isSpeechRecognitionResult: 1
  };
  A.Storage.prototype = {
    containsKey$1(receiver, key) {
      return receiver.getItem(key) != null;
    },
    $index(receiver, key) {
      return receiver.getItem(A._asString(key));
    },
    $indexSet(receiver, key, value) {
      receiver.setItem(key, value);
    },
    remove$1(receiver, key) {
      var value;
      A._asString(key);
      value = receiver.getItem(key);
      receiver.removeItem(key);
      return value;
    },
    forEach$1(receiver, f) {
      var i, key, t1;
      for (i = 0; true; ++i) {
        key = receiver.key(i);
        if (key == null)
          return;
        t1 = receiver.getItem(key);
        t1.toString;
        f.call$2(key, t1);
      }
    },
    get$keys(receiver) {
      var keys = A._setArrayType([], type$.JSArray_String);
      this.forEach$1(receiver, new A.Storage_keys_closure(keys));
      return keys;
    },
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    get$isEmpty(receiver) {
      return receiver.key(0) == null;
    },
    $isMap: 1
  };
  A.Storage_keys_closure.prototype = {
    call$2(k, v) {
      return this.keys.push(k);
    },
    $signature: 81
  };
  A.StyleSheet.prototype = {$isStyleSheet: 1};
  A.TableElement.prototype = {
    createFragment$3$treeSanitizer$validator(receiver, html, treeSanitizer, validator) {
      var table,
        t1 = "createContextualFragment" in window.Range.prototype;
      t1.toString;
      if (t1)
        return this.super$Element$createFragment(receiver, html, treeSanitizer, validator);
      table = A.Element_Element$html("<table>" + html + "</table>", treeSanitizer, validator);
      t1 = document.createDocumentFragment();
      t1.toString;
      new A._ChildNodeListLazy(t1).addAll$1(0, new A._ChildNodeListLazy(table));
      return t1;
    }
  };
  A.TableRowElement.prototype = {
    createFragment$3$treeSanitizer$validator(receiver, html, treeSanitizer, validator) {
      var t2,
        t1 = "createContextualFragment" in window.Range.prototype;
      t1.toString;
      if (t1)
        return this.super$Element$createFragment(receiver, html, treeSanitizer, validator);
      t1 = document;
      t2 = t1.createDocumentFragment();
      t2.toString;
      t1 = t1.createElement("table");
      t1.toString;
      t1 = new A._ChildNodeListLazy(B.TableElement_methods.createFragment$3$treeSanitizer$validator(t1, html, treeSanitizer, validator));
      t1 = new A._ChildNodeListLazy(t1.get$single(t1));
      new A._ChildNodeListLazy(t2).addAll$1(0, new A._ChildNodeListLazy(t1.get$single(t1)));
      return t2;
    }
  };
  A.TableSectionElement.prototype = {
    createFragment$3$treeSanitizer$validator(receiver, html, treeSanitizer, validator) {
      var t2,
        t1 = "createContextualFragment" in window.Range.prototype;
      t1.toString;
      if (t1)
        return this.super$Element$createFragment(receiver, html, treeSanitizer, validator);
      t1 = document;
      t2 = t1.createDocumentFragment();
      t2.toString;
      t1 = t1.createElement("table");
      t1.toString;
      t1 = new A._ChildNodeListLazy(B.TableElement_methods.createFragment$3$treeSanitizer$validator(t1, html, treeSanitizer, validator));
      new A._ChildNodeListLazy(t2).addAll$1(0, new A._ChildNodeListLazy(t1.get$single(t1)));
      return t2;
    }
  };
  A.TemplateElement.prototype = {$isTemplateElement: 1};
  A.TextTrack.prototype = {$isTextTrack: 1};
  A.TextTrackCue.prototype = {$isTextTrackCue: 1};
  A.TextTrackCueList.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1;
      if (receiver.length > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    elementAt$1(receiver, index) {
      return receiver[index];
    },
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.TextTrackList.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1;
      if (receiver.length > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    elementAt$1(receiver, index) {
      return receiver[index];
    },
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.TimeRanges.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    }
  };
  A.Touch.prototype = {$isTouch: 1};
  A.TouchList.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1;
      if (receiver.length > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    elementAt$1(receiver, index) {
      return receiver[index];
    },
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.TrackDefaultList.prototype = {
    get$length(receiver) {
      return receiver.length;
    }
  };
  A.Url.prototype = {
    toString$0(receiver) {
      var t1 = String(receiver);
      t1.toString;
      return t1;
    }
  };
  A.VideoTrackList.prototype = {
    get$length(receiver) {
      return receiver.length;
    }
  };
  A._Attr.prototype = {$is_Attr: 1};
  A._CssRuleList.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1;
      if (receiver.length > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    elementAt$1(receiver, index) {
      return receiver[index];
    },
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A._DomRect.prototype = {
    toString$0(receiver) {
      var t2, t3, t4,
        t1 = receiver.left;
      t1.toString;
      t2 = receiver.top;
      t2.toString;
      t3 = receiver.width;
      t3.toString;
      t4 = receiver.height;
      t4.toString;
      return "Rectangle (" + A.S(t1) + ", " + A.S(t2) + ") " + A.S(t3) + " x " + A.S(t4);
    },
    $eq(receiver, other) {
      var t1, t2;
      if (other == null)
        return false;
      if (type$.Rectangle_num._is(other)) {
        t1 = receiver.left;
        t1.toString;
        t2 = other.left;
        t2.toString;
        if (t1 === t2) {
          t1 = receiver.top;
          t1.toString;
          t2 = other.top;
          t2.toString;
          if (t1 === t2) {
            t1 = receiver.width;
            t1.toString;
            t2 = J.getInterceptor$x(other);
            if (t1 === t2.get$width(other)) {
              t1 = receiver.height;
              t1.toString;
              t2 = t1 === t2.get$height(other);
              t1 = t2;
            } else
              t1 = false;
          } else
            t1 = false;
        } else
          t1 = false;
      } else
        t1 = false;
      return t1;
    },
    get$hashCode(receiver) {
      var t2, t3, t4,
        t1 = receiver.left;
      t1.toString;
      t2 = receiver.top;
      t2.toString;
      t3 = receiver.width;
      t3.toString;
      t4 = receiver.height;
      t4.toString;
      return A.Object_hash(t1, t2, t3, t4, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    get$_height(receiver) {
      return receiver.height;
    },
    get$height(receiver) {
      var t1 = receiver.height;
      t1.toString;
      return t1;
    },
    get$_width(receiver) {
      return receiver.width;
    },
    get$width(receiver) {
      var t1 = receiver.width;
      t1.toString;
      return t1;
    }
  };
  A._GamepadList.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null, null));
      return receiver[index];
    },
    $indexSet(receiver, index, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      if (receiver.length > 0)
        return receiver[0];
      throw A.wrapException(A.StateError$("No elements"));
    },
    elementAt$1(receiver, index) {
      return receiver[index];
    },
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A._NamedNodeMap.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1;
      if (receiver.length > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    elementAt$1(receiver, index) {
      return receiver[index];
    },
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A._SpeechRecognitionResultList.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1;
      if (receiver.length > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    elementAt$1(receiver, index) {
      return receiver[index];
    },
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A._StyleSheetList.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1;
      if (receiver.length > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    elementAt$1(receiver, index) {
      return receiver[index];
    },
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A._AttributeMap.prototype = {
    clear$0(_) {
      var t1, t2, t3, _i;
      for (t1 = this.get$keys(this), t2 = t1.length, t3 = this._html$_element, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i)
        t3.removeAttribute(t1[_i]);
    },
    forEach$1(_, f) {
      var t1, t2, t3, _i, key, value;
      for (t1 = this.get$keys(this), t2 = t1.length, t3 = this._html$_element, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        key = t1[_i];
        value = t3.getAttribute(key);
        f.call$2(key, value == null ? A._asString(value) : value);
      }
    },
    get$keys(_) {
      var keys, len, t2, i, attr, t3,
        t1 = this._html$_element.attributes;
      t1.toString;
      keys = A._setArrayType([], type$.JSArray_String);
      for (len = t1.length, t2 = type$._Attr, i = 0; i < len; ++i) {
        attr = t2._as(t1[i]);
        if (attr.namespaceURI == null) {
          t3 = attr.name;
          t3.toString;
          keys.push(t3);
        }
      }
      return keys;
    },
    get$isEmpty(_) {
      return this.get$keys(this).length === 0;
    }
  };
  A._ElementAttributeMap.prototype = {
    containsKey$1(_, key) {
      var t1 = this._html$_element.hasAttribute(key);
      t1.toString;
      return t1;
    },
    $index(_, key) {
      return this._html$_element.getAttribute(A._asString(key));
    },
    $indexSet(_, key, value) {
      this._html$_element.setAttribute(key, value);
    },
    remove$1(_, key) {
      var t1, value;
      if (typeof key == "string") {
        t1 = this._html$_element;
        value = t1.getAttribute(key);
        t1.removeAttribute(key);
        t1 = value;
      } else
        t1 = null;
      return t1;
    },
    get$length(_) {
      return this.get$keys(this).length;
    }
  };
  A.EventStreamProvider.prototype = {};
  A._EventStream.prototype = {
    listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, onError) {
      return A._EventStreamSubscription$(this._target, this._eventType, onData, false);
    }
  };
  A._ElementEventStreamImpl.prototype = {};
  A._EventStreamSubscription.prototype = {
    cancel$0(_) {
      var _this = this;
      if (_this._target == null)
        return $.$get$nullFuture();
      _this._unlisten$0();
      _this._html$_onData = _this._target = null;
      return $.$get$nullFuture();
    },
    onData$1(handleData) {
      var t1, _this = this;
      if (_this._target == null)
        throw A.wrapException(A.StateError$("Subscription has been canceled."));
      _this._unlisten$0();
      t1 = A._wrapZone(new A._EventStreamSubscription_onData_closure(handleData), type$.Event);
      _this._html$_onData = t1;
      _this._tryResume$0();
    },
    _tryResume$0() {
      var t2,
        t1 = this._html$_onData;
      if (t1 != null && true) {
        t2 = this._target;
        t2.toString;
        J.addEventListener$3$x(t2, this._eventType, t1, false);
      }
    },
    _unlisten$0() {
      var t2,
        t1 = this._html$_onData;
      if (t1 != null) {
        t2 = this._target;
        t2.toString;
        J._removeEventListener$3$x(t2, this._eventType, t1, false);
      }
    }
  };
  A._EventStreamSubscription_closure.prototype = {
    call$1(e) {
      return this.onData.call$1(e);
    },
    $signature: 33
  };
  A._EventStreamSubscription_onData_closure.prototype = {
    call$1(e) {
      return this.handleData.call$1(e);
    },
    $signature: 33
  };
  A._Html5NodeValidator.prototype = {
    _Html5NodeValidator$1$uriPolicy(uriPolicy) {
      var _i;
      if ($._Html5NodeValidator__attributeValidators.__js_helper$_length === 0) {
        for (_i = 0; _i < 262; ++_i)
          $._Html5NodeValidator__attributeValidators.$indexSet(0, B.List_uzK[_i], A.html__Html5NodeValidator__standardAttributeValidator$closure());
        for (_i = 0; _i < 12; ++_i)
          $._Html5NodeValidator__attributeValidators.$indexSet(0, B.List_Jwp[_i], A.html__Html5NodeValidator__uriAttributeValidator$closure());
      }
    },
    allowsElement$1(element) {
      return $.$get$_Html5NodeValidator__allowedElements().contains$1(0, A.Element__safeTagName(element));
    },
    allowsAttribute$3(element, attributeName, value) {
      var validator = $._Html5NodeValidator__attributeValidators.$index(0, A.Element__safeTagName(element) + "::" + attributeName);
      if (validator == null)
        validator = $._Html5NodeValidator__attributeValidators.$index(0, "*::" + attributeName);
      if (validator == null)
        return false;
      return validator.call$4(element, attributeName, value, this);
    },
    $isNodeValidator: 1
  };
  A.ImmutableListMixin.prototype = {
    get$iterator(receiver) {
      return new A.FixedSizeListIterator(receiver, this.get$length(receiver));
    },
    add$1(receiver, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot add to immutable List."));
    }
  };
  A.NodeValidatorBuilder.prototype = {
    allowsElement$1(element) {
      return B.JSArray_methods.any$1(this._validators, new A.NodeValidatorBuilder_allowsElement_closure(element));
    },
    allowsAttribute$3(element, attributeName, value) {
      return B.JSArray_methods.any$1(this._validators, new A.NodeValidatorBuilder_allowsAttribute_closure(element, attributeName, value));
    },
    $isNodeValidator: 1
  };
  A.NodeValidatorBuilder_allowsElement_closure.prototype = {
    call$1(v) {
      return v.allowsElement$1(this.element);
    },
    $signature: 34
  };
  A.NodeValidatorBuilder_allowsAttribute_closure.prototype = {
    call$1(v) {
      return v.allowsAttribute$3(this.element, this.attributeName, this.value);
    },
    $signature: 34
  };
  A._SimpleNodeValidator.prototype = {
    _SimpleNodeValidator$4$allowedAttributes$allowedElements$allowedUriAttributes(uriPolicy, allowedAttributes, allowedElements, allowedUriAttributes) {
      var legalAttributes, extraUriAttributes, t1;
      this.allowedElements.addAll$1(0, allowedElements);
      legalAttributes = allowedAttributes.where$1(0, new A._SimpleNodeValidator_closure());
      extraUriAttributes = allowedAttributes.where$1(0, new A._SimpleNodeValidator_closure0());
      this.allowedAttributes.addAll$1(0, legalAttributes);
      t1 = this.allowedUriAttributes;
      t1.addAll$1(0, B.List_empty0);
      t1.addAll$1(0, extraUriAttributes);
    },
    allowsElement$1(element) {
      return this.allowedElements.contains$1(0, A.Element__safeTagName(element));
    },
    allowsAttribute$3(element, attributeName, value) {
      var t3, _this = this,
        tagName = A.Element__safeTagName(element),
        t1 = _this.allowedUriAttributes,
        t2 = tagName + "::" + attributeName;
      if (t1.contains$1(0, t2))
        return _this.uriPolicy.allowsUri$1(value);
      else {
        t3 = "*::" + attributeName;
        if (t1.contains$1(0, t3))
          return _this.uriPolicy.allowsUri$1(value);
        else {
          t1 = _this.allowedAttributes;
          if (t1.contains$1(0, t2))
            return true;
          else if (t1.contains$1(0, t3))
            return true;
          else if (t1.contains$1(0, tagName + "::*"))
            return true;
          else if (t1.contains$1(0, "*::*"))
            return true;
        }
      }
      return false;
    },
    $isNodeValidator: 1
  };
  A._SimpleNodeValidator_closure.prototype = {
    call$1(x) {
      return !B.JSArray_methods.contains$1(B.List_Jwp, x);
    },
    $signature: 9
  };
  A._SimpleNodeValidator_closure0.prototype = {
    call$1(x) {
      return B.JSArray_methods.contains$1(B.List_Jwp, x);
    },
    $signature: 9
  };
  A._TemplatingNodeValidator.prototype = {
    allowsAttribute$3(element, attributeName, value) {
      if (this.super$_SimpleNodeValidator$allowsAttribute(element, attributeName, value))
        return true;
      if (attributeName === "template" && value === "")
        return true;
      if (element.getAttribute("template") === "")
        return this._templateAttrs.contains$1(0, attributeName);
      return false;
    }
  };
  A._TemplatingNodeValidator_closure.prototype = {
    call$1(attr) {
      return "TEMPLATE::" + attr;
    },
    $signature: 15
  };
  A._SvgNodeValidator.prototype = {
    allowsElement$1(element) {
      var t1;
      if (type$.ScriptElement._is(element))
        return false;
      t1 = type$.SvgElement._is(element);
      if (t1 && A.Element__safeTagName(element) === "foreignObject")
        return false;
      if (t1)
        return true;
      return false;
    },
    allowsAttribute$3(element, attributeName, value) {
      if (attributeName === "is" || B.JSString_methods.startsWith$1(attributeName, "on"))
        return false;
      return this.allowsElement$1(element);
    },
    $isNodeValidator: 1
  };
  A.FixedSizeListIterator.prototype = {
    moveNext$0() {
      var _this = this,
        nextPosition = _this._position + 1,
        t1 = _this._length;
      if (nextPosition < t1) {
        _this._current = J.$index$asx(_this._array, nextPosition);
        _this._position = nextPosition;
        return true;
      }
      _this._current = null;
      _this._position = t1;
      return false;
    },
    get$current(_) {
      var t1 = this._current;
      return t1 == null ? A._instanceType(this)._precomputed1._as(t1) : t1;
    }
  };
  A._SameOriginUriPolicy.prototype = {};
  A._ValidatingTreeSanitizer.prototype = {
    sanitizeTree$1(node) {
      var previousTreeModifications,
        walk = new A._ValidatingTreeSanitizer_sanitizeTree_walk(this);
      do {
        previousTreeModifications = this.numTreeModifications;
        walk.call$2(node, null);
      } while (previousTreeModifications !== this.numTreeModifications);
    },
    _removeNode$2(node, $parent) {
      ++this.numTreeModifications;
      if ($parent == null || $parent !== node.parentNode)
        J.remove$0$ax(node);
      else
        $parent.removeChild(node).toString;
    },
    _sanitizeUntrustedElement$2(element, $parent) {
      var corruptedTest1, elementText, elementTagName, t1, corrupted0, exception, t2,
        corrupted = true,
        attrs = null, isAttr = null;
      try {
        attrs = J.get$attributes$x(element);
        isAttr = attrs._html$_element.getAttribute("is");
        t1 = function(element) {
          if (!(element.attributes instanceof NamedNodeMap))
            return true;
          if (element.id == "lastChild" || element.name == "lastChild" || element.id == "previousSibling" || element.name == "previousSibling" || element.id == "children" || element.name == "children")
            return true;
          var childNodes = element.childNodes;
          if (element.lastChild && element.lastChild !== childNodes[childNodes.length - 1])
            return true;
          if (element.children)
            if (!(element.children instanceof HTMLCollection || element.children instanceof NodeList))
              return true;
          var length = 0;
          if (element.children)
            length = element.children.length;
          for (var i = 0; i < length; i++) {
            var child = element.children[i];
            if (child.id == "attributes" || child.name == "attributes" || child.id == "lastChild" || child.name == "lastChild" || child.id == "previousSibling" || child.name == "previousSibling" || child.id == "children" || child.name == "children")
              return true;
          }
          return false;
        }(element);
        t1.toString;
        corruptedTest1 = t1;
        if (corruptedTest1)
          corrupted0 = true;
        else {
          t1 = !(element.attributes instanceof NamedNodeMap);
          t1.toString;
          corrupted0 = t1;
        }
        corrupted = corrupted0;
      } catch (exception) {
      }
      elementText = "element unprintable";
      try {
        elementText = J.toString$0$(element);
      } catch (exception) {
      }
      try {
        elementTagName = A.Element__safeTagName(element);
        this._sanitizeElement$7(element, $parent, corrupted, elementText, elementTagName, attrs, isAttr);
      } catch (exception) {
        if (A.unwrapException(exception) instanceof A.ArgumentError)
          throw exception;
        else {
          this._removeNode$2(element, $parent);
          window.toString;
          t1 = A.S(elementText);
          t2 = typeof console != "undefined";
          t2.toString;
          if (t2)
            window.console.warn("Removing corrupted element " + t1);
        }
      }
    },
    _sanitizeElement$7(element, $parent, corrupted, text, tag, attrs, isAttr) {
      var t1, t2, keys, i, $name, t3, t4, _this = this;
      if (corrupted) {
        _this._removeNode$2(element, $parent);
        window.toString;
        t1 = typeof console != "undefined";
        t1.toString;
        if (t1)
          window.console.warn("Removing element due to corrupted attributes on <" + text + ">");
        return;
      }
      if (!_this.validator.allowsElement$1(element)) {
        _this._removeNode$2(element, $parent);
        window.toString;
        t1 = A.S($parent);
        t2 = typeof console != "undefined";
        t2.toString;
        if (t2)
          window.console.warn("Removing disallowed element <" + tag + "> from " + t1);
        return;
      }
      if (isAttr != null)
        if (!_this.validator.allowsAttribute$3(element, "is", isAttr)) {
          _this._removeNode$2(element, $parent);
          window.toString;
          t1 = typeof console != "undefined";
          t1.toString;
          if (t1)
            window.console.warn("Removing disallowed type extension <" + tag + ' is="' + isAttr + '">');
          return;
        }
      t1 = attrs.get$keys(attrs);
      keys = A._setArrayType(t1.slice(0), A._arrayInstanceType(t1));
      for (i = attrs.get$keys(attrs).length - 1, t1 = attrs._html$_element, t2 = "Removing disallowed attribute <" + tag + " "; i >= 0; --i) {
        $name = keys[i];
        t3 = _this.validator;
        t4 = J.toLowerCase$0$s($name);
        A._asString($name);
        if (!t3.allowsAttribute$3(element, t4, t1.getAttribute($name))) {
          window.toString;
          t3 = t1.getAttribute($name);
          t4 = typeof console != "undefined";
          t4.toString;
          if (t4)
            window.console.warn(t2 + $name + '="' + A.S(t3) + '">');
          t1.removeAttribute($name);
        }
      }
      if (type$.TemplateElement._is(element)) {
        t1 = element.content;
        t1.toString;
        _this.sanitizeTree$1(t1);
      }
    },
    sanitizeNode$2(node, $parent) {
      var t1 = node.nodeType;
      t1.toString;
      switch (t1) {
        case 1:
          this._sanitizeUntrustedElement$2(node, $parent);
          break;
        case 8:
        case 11:
        case 3:
        case 4:
          break;
        default:
          this._removeNode$2(node, $parent);
      }
    }
  };
  A._ValidatingTreeSanitizer_sanitizeTree_walk.prototype = {
    call$2(node, $parent) {
      var child, nextChild, t2, t3, exception,
        t1 = this.$this;
      t1.sanitizeNode$2(node, $parent);
      child = node.lastChild;
      for (; child != null;) {
        nextChild = null;
        try {
          nextChild = child.previousSibling;
          if (nextChild != null) {
            t2 = nextChild.nextSibling;
            t3 = child;
            t3 = t2 == null ? t3 != null : t2 !== t3;
            t2 = t3;
          } else
            t2 = false;
          if (t2) {
            t2 = A.StateError$("Corrupt HTML");
            throw A.wrapException(t2);
          }
        } catch (exception) {
          t2 = child;
          ++t1.numTreeModifications;
          t3 = t2.parentNode;
          if (node !== t3) {
            if (t3 != null)
              t3.removeChild(t2).toString;
          } else
            node.removeChild(t2).toString;
          child = null;
          nextChild = node.lastChild;
        }
        if (child != null)
          this.call$2(child, node);
        child = nextChild;
      }
    },
    $signature: 85
  };
  A._CssStyleDeclaration_JavaScriptObject_CssStyleDeclarationBase.prototype = {};
  A._DomRectList_JavaScriptObject_ListMixin.prototype = {};
  A._DomRectList_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A._DomStringList_JavaScriptObject_ListMixin.prototype = {};
  A._DomStringList_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A._FileList_JavaScriptObject_ListMixin.prototype = {};
  A._FileList_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A._HtmlCollection_JavaScriptObject_ListMixin.prototype = {};
  A._HtmlCollection_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A._MidiInputMap_JavaScriptObject_MapMixin.prototype = {};
  A._MidiOutputMap_JavaScriptObject_MapMixin.prototype = {};
  A._MimeTypeArray_JavaScriptObject_ListMixin.prototype = {};
  A._MimeTypeArray_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A._NodeList_JavaScriptObject_ListMixin.prototype = {};
  A._NodeList_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A._PluginArray_JavaScriptObject_ListMixin.prototype = {};
  A._PluginArray_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A._RtcStatsReport_JavaScriptObject_MapMixin.prototype = {};
  A._SourceBufferList_EventTarget_ListMixin.prototype = {};
  A._SourceBufferList_EventTarget_ListMixin_ImmutableListMixin.prototype = {};
  A._SpeechGrammarList_JavaScriptObject_ListMixin.prototype = {};
  A._SpeechGrammarList_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A._Storage_JavaScriptObject_MapMixin.prototype = {};
  A._TextTrackCueList_JavaScriptObject_ListMixin.prototype = {};
  A._TextTrackCueList_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A._TextTrackList_EventTarget_ListMixin.prototype = {};
  A._TextTrackList_EventTarget_ListMixin_ImmutableListMixin.prototype = {};
  A._TouchList_JavaScriptObject_ListMixin.prototype = {};
  A._TouchList_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A.__CssRuleList_JavaScriptObject_ListMixin.prototype = {};
  A.__CssRuleList_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A.__GamepadList_JavaScriptObject_ListMixin.prototype = {};
  A.__GamepadList_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A.__NamedNodeMap_JavaScriptObject_ListMixin.prototype = {};
  A.__NamedNodeMap_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A.__SpeechRecognitionResultList_JavaScriptObject_ListMixin.prototype = {};
  A.__SpeechRecognitionResultList_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A.__StyleSheetList_JavaScriptObject_ListMixin.prototype = {};
  A.__StyleSheetList_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A.FilteredElementList.prototype = {
    get$_html_common$_iterable() {
      var t1 = this._childNodes,
        t2 = A._instanceType(t1);
      return new A.MappedIterable(new A.WhereIterable(t1, new A.FilteredElementList__iterable_closure(), t2._eval$1("WhereIterable<ListBase.E>")), new A.FilteredElementList__iterable_closure0(), t2._eval$1("MappedIterable<ListBase.E,Element>"));
    },
    $indexSet(_, index, value) {
      var t1 = this.get$_html_common$_iterable();
      J.replaceWith$1$x(t1._f.call$1(J.elementAt$1$ax(t1.__internal$_iterable, index)), value);
    },
    set$length(_, newLength) {
      var len = J.get$length$asx(this.get$_html_common$_iterable().__internal$_iterable);
      if (newLength >= len)
        return;
      else if (newLength < 0)
        throw A.wrapException(A.ArgumentError$("Invalid list length", null));
      this.removeRange$2(0, newLength, len);
    },
    add$1(_, value) {
      this._childNodes._this.appendChild(value).toString;
    },
    addAll$1(_, iterable) {
      var t1, t2;
      for (t1 = J.get$iterator$ax(iterable), t2 = this._childNodes._this; t1.moveNext$0();)
        t2.appendChild(t1.get$current(t1)).toString;
    },
    removeRange$2(_, start, end) {
      var t1 = this.get$_html_common$_iterable();
      t1 = A.SkipIterable_SkipIterable(t1, start, t1.$ti._eval$1("Iterable.E"));
      B.JSArray_methods.forEach$1(A.List_List$from(A.TakeIterable_TakeIterable(t1, end - start, A._instanceType(t1)._eval$1("Iterable.E")), true, type$.Element), new A.FilteredElementList_removeRange_closure());
    },
    get$length(_) {
      return J.get$length$asx(this.get$_html_common$_iterable().__internal$_iterable);
    },
    $index(_, index) {
      var t1 = this.get$_html_common$_iterable();
      return t1._f.call$1(J.elementAt$1$ax(t1.__internal$_iterable, index));
    },
    get$iterator(_) {
      var t1 = A.List_List$from(this.get$_html_common$_iterable(), false, type$.Element);
      return new J.ArrayIterator(t1, t1.length);
    }
  };
  A.FilteredElementList__iterable_closure.prototype = {
    call$1(n) {
      return type$.Element._is(n);
    },
    $signature: 32
  };
  A.FilteredElementList__iterable_closure0.prototype = {
    call$1(n) {
      return type$.Element._as(n);
    },
    $signature: 86
  };
  A.FilteredElementList_removeRange_closure.prototype = {
    call$1(el) {
      return J.remove$0$ax(el);
    },
    $signature: 87
  };
  A.jsify__convert.prototype = {
    call$1(o) {
      var t1, convertedMap, t2, key, convertedList;
      if (A._noJsifyRequired(o))
        return o;
      t1 = this._convertedObjects;
      if (t1.containsKey$1(0, o))
        return t1.$index(0, o);
      if (type$.Map_of_nullable_Object_and_nullable_Object._is(o)) {
        convertedMap = {};
        t1.$indexSet(0, o, convertedMap);
        for (t1 = J.getInterceptor$x(o), t2 = J.get$iterator$ax(t1.get$keys(o)); t2.moveNext$0();) {
          key = t2.get$current(t2);
          convertedMap[key] = this.call$1(t1.$index(o, key));
        }
        return convertedMap;
      } else if (type$.Iterable_nullable_Object._is(o)) {
        convertedList = [];
        t1.$indexSet(0, o, convertedList);
        B.JSArray_methods.addAll$1(convertedList, J.map$1$1$ax(o, this, type$.dynamic));
        return convertedList;
      } else
        return o;
    },
    $signature: 36
  };
  A.promiseToFuture_closure.prototype = {
    call$1(r) {
      return this.completer.complete$1(0, r);
    },
    $signature: 8
  };
  A.promiseToFuture_closure0.prototype = {
    call$1(e) {
      if (e == null)
        return this.completer.completeError$1(new A.NullRejectionException(e === undefined));
      return this.completer.completeError$1(e);
    },
    $signature: 8
  };
  A.dartify_convert.prototype = {
    call$1(o) {
      var t1, proto, t2, dartObject, originalKeys, dartKeys, i, jsKey, dartKey, l, $length;
      if (A._noDartifyRequired(o))
        return o;
      t1 = this._convertedObjects;
      o.toString;
      if (t1.containsKey$1(0, o))
        return t1.$index(0, o);
      if (o instanceof Date)
        return A.DateTime$fromMillisecondsSinceEpoch(o.getTime(), true);
      if (o instanceof RegExp)
        throw A.wrapException(A.ArgumentError$("structured clone of RegExp", null));
      if (typeof Promise != "undefined" && o instanceof Promise)
        return A.promiseToFuture(o, type$.nullable_Object);
      proto = Object.getPrototypeOf(o);
      if (proto === Object.prototype || proto === null) {
        t2 = type$.nullable_Object;
        dartObject = A.LinkedHashMap_LinkedHashMap$_empty(t2, t2);
        t1.$indexSet(0, o, dartObject);
        originalKeys = Object.keys(o);
        dartKeys = [];
        for (t1 = J.getInterceptor$ax(originalKeys), t2 = t1.get$iterator(originalKeys); t2.moveNext$0();)
          dartKeys.push(A.dartify(t2.get$current(t2)));
        for (i = 0; i < t1.get$length(originalKeys); ++i) {
          jsKey = t1.$index(originalKeys, i);
          dartKey = dartKeys[i];
          if (jsKey != null)
            dartObject.$indexSet(0, dartKey, this.call$1(o[jsKey]));
        }
        return dartObject;
      }
      if (o instanceof Array) {
        l = o;
        dartObject = [];
        t1.$indexSet(0, o, dartObject);
        $length = o.length;
        for (t1 = J.getInterceptor$asx(l), i = 0; i < $length; ++i)
          dartObject.push(this.call$1(t1.$index(l, i)));
        return dartObject;
      }
      return o;
    },
    $signature: 36
  };
  A.NullRejectionException.prototype = {
    toString$0(_) {
      return "Promise was rejected with a value of `" + (this.isUndefined ? "undefined" : "null") + "`.";
    },
    $isException: 1
  };
  A.Length.prototype = {$isLength: 1};
  A.LengthList.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length;
      t1.toString;
      t1 = index >>> 0 !== index || index >= t1;
      t1.toString;
      if (t1)
        throw A.wrapException(A.IndexError$withLength(index, this.get$length(receiver), receiver, null, null));
      t1 = receiver.getItem(index);
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1 = receiver.length;
      t1.toString;
      if (t1 > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    elementAt$1(receiver, index) {
      return this.$index(receiver, index);
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.Number.prototype = {$isNumber: 1};
  A.NumberList.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length;
      t1.toString;
      t1 = index >>> 0 !== index || index >= t1;
      t1.toString;
      if (t1)
        throw A.wrapException(A.IndexError$withLength(index, this.get$length(receiver), receiver, null, null));
      t1 = receiver.getItem(index);
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1 = receiver.length;
      t1.toString;
      if (t1 > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    elementAt$1(receiver, index) {
      return this.$index(receiver, index);
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.PointList.prototype = {
    get$length(receiver) {
      return receiver.length;
    }
  };
  A.ScriptElement0.prototype = {$isScriptElement0: 1};
  A.StringList.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length;
      t1.toString;
      t1 = index >>> 0 !== index || index >= t1;
      t1.toString;
      if (t1)
        throw A.wrapException(A.IndexError$withLength(index, this.get$length(receiver), receiver, null, null));
      t1 = receiver.getItem(index);
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1 = receiver.length;
      t1.toString;
      if (t1 > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    elementAt$1(receiver, index) {
      return this.$index(receiver, index);
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.SvgElement.prototype = {
    get$children(receiver) {
      return new A.FilteredElementList(receiver, new A._ChildNodeListLazy(receiver));
    },
    createFragment$3$treeSanitizer$validator(receiver, svg, treeSanitizer, validator) {
      var t2, fragment, root,
        t1 = A._setArrayType([], type$.JSArray_NodeValidator);
      t1.push(A._Html5NodeValidator$(null));
      t1.push(A._TemplatingNodeValidator$());
      t1.push(new A._SvgNodeValidator());
      treeSanitizer = new A._ValidatingTreeSanitizer(new A.NodeValidatorBuilder(t1));
      t1 = document;
      t2 = t1.body;
      t2.toString;
      fragment = B.BodyElement_methods.createFragment$2$treeSanitizer(t2, '<svg version="1.1">' + svg + "</svg>", treeSanitizer);
      t1 = t1.createDocumentFragment();
      t1.toString;
      t2 = new A._ChildNodeListLazy(fragment);
      root = t2.get$single(t2);
      for (; t2 = root.firstChild, t2 != null;)
        t1.appendChild(t2).toString;
      return t1;
    },
    $isSvgElement: 1
  };
  A.Transform.prototype = {$isTransform: 1};
  A.TransformList.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length;
      t1.toString;
      t1 = index >>> 0 !== index || index >= t1;
      t1.toString;
      if (t1)
        throw A.wrapException(A.IndexError$withLength(index, this.get$length(receiver), receiver, null, null));
      t1 = receiver.getItem(index);
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1 = receiver.length;
      t1.toString;
      if (t1 > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    elementAt$1(receiver, index) {
      return this.$index(receiver, index);
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  A._LengthList_JavaScriptObject_ListMixin.prototype = {};
  A._LengthList_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A._NumberList_JavaScriptObject_ListMixin.prototype = {};
  A._NumberList_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A._StringList_JavaScriptObject_ListMixin.prototype = {};
  A._StringList_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A._TransformList_JavaScriptObject_ListMixin.prototype = {};
  A._TransformList_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A.Endian.prototype = {};
  A._StoredMessage.prototype = {};
  A._Channel.prototype = {
    get$length(_) {
      var t1 = this._queue;
      return t1.get$length(t1);
    },
    push$1(message) {
      var result,
        t1 = this._capacity;
      if (t1 <= 0)
        return true;
      result = this._dropOverflowMessages$1(t1 - 1);
      this._queue._add$1(0, message);
      return result;
    },
    _dropOverflowMessages$1(lengthLimit) {
      var t1, result, message;
      for (t1 = this._queue, result = false; (t1._tail - t1._head & t1._table.length - 1) >>> 0 > lengthLimit; result = true) {
        message = t1.removeFirst$0();
        A.invoke1(message._callback, message._ui$_zone, null);
      }
      return result;
    }
  };
  A.ChannelBuffers.prototype = {
    push$3($name, data, callback) {
      this._channels.putIfAbsent$2(0, $name, new A.ChannelBuffers_push_closure()).push$1(new A._StoredMessage(data, callback, $.Zone__current));
    },
    handleMessage$1(data) {
      var methodNameLength, t1, methodName, index, channelNameLength, channelName, parts,
        _s143_ = "Invalid arguments for 'resize' method sent to dev.flutter/channel-buffers (arguments must be a two-element list, channel name and new capacity)",
        _s143_0 = "Invalid arguments for 'overflow' method sent to dev.flutter/channel-buffers (arguments must be a two-element list, channel name and flag state)",
        bytes = A.NativeUint8List_NativeUint8List$view(data.buffer, data.byteOffset, data.byteLength);
      if (bytes[0] === 7) {
        methodNameLength = bytes[1];
        if (methodNameLength >= 254)
          throw A.wrapException(A.Exception_Exception("Unrecognized message sent to dev.flutter/channel-buffers (method name too long)"));
        t1 = 2 + methodNameLength;
        methodName = B.C_Utf8Codec.decode$1(0, B.NativeUint8List_methods.sublist$2(bytes, 2, t1));
        switch (methodName) {
          case "resize":
            if (bytes[t1] !== 12)
              throw A.wrapException(A.Exception_Exception(_s143_));
            index = t1 + 1;
            if (bytes[index] < 2)
              throw A.wrapException(A.Exception_Exception(_s143_));
            ++index;
            if (bytes[index] !== 7)
              throw A.wrapException(A.Exception_Exception("Invalid arguments for 'resize' method sent to dev.flutter/channel-buffers (first argument must be a string)"));
            ++index;
            channelNameLength = bytes[index];
            if (channelNameLength >= 254)
              throw A.wrapException(A.Exception_Exception("Invalid arguments for 'resize' method sent to dev.flutter/channel-buffers (channel name must be less than 254 characters long)"));
            ++index;
            t1 = index + channelNameLength;
            channelName = B.C_Utf8Codec.decode$1(0, B.NativeUint8List_methods.sublist$2(bytes, index, t1));
            if (bytes[t1] !== 3)
              throw A.wrapException(A.Exception_Exception("Invalid arguments for 'resize' method sent to dev.flutter/channel-buffers (second argument must be an integer in the range 0 to 2147483647)"));
            this.resize$2(0, channelName, data.getUint32(t1 + 1, B.C_Endian === $.$get$Endian_host()));
            break;
          case "overflow":
            if (bytes[t1] !== 12)
              throw A.wrapException(A.Exception_Exception(_s143_0));
            index = t1 + 1;
            if (bytes[index] < 2)
              throw A.wrapException(A.Exception_Exception(_s143_0));
            ++index;
            if (bytes[index] !== 7)
              throw A.wrapException(A.Exception_Exception("Invalid arguments for 'overflow' method sent to dev.flutter/channel-buffers (first argument must be a string)"));
            ++index;
            channelNameLength = bytes[index];
            if (channelNameLength >= 254)
              throw A.wrapException(A.Exception_Exception("Invalid arguments for 'overflow' method sent to dev.flutter/channel-buffers (channel name must be less than 254 characters long)"));
            ++index;
            t1 = index + channelNameLength;
            B.C_Utf8Codec.decode$1(0, B.NativeUint8List_methods.sublist$2(bytes, index, t1));
            t1 = bytes[t1];
            if (t1 !== 1 && t1 !== 2)
              throw A.wrapException(A.Exception_Exception("Invalid arguments for 'overflow' method sent to dev.flutter/channel-buffers (second argument must be a boolean)"));
            break;
          default:
            throw A.wrapException(A.Exception_Exception("Unrecognized method '" + methodName + "' sent to dev.flutter/channel-buffers"));
        }
      } else {
        parts = A._setArrayType(B.C_Utf8Codec.decode$1(0, bytes).split("\r"), type$.JSArray_String);
        if (parts.length === 3 && J.$eq$(parts[0], "resize"))
          this.resize$2(0, parts[1], A.int_parse(parts[2], null));
        else
          throw A.wrapException(A.Exception_Exception("Unrecognized message " + A.S(parts) + " sent to dev.flutter/channel-buffers."));
      }
    },
    resize$2(_, $name, newSize) {
      var t1 = this._channels,
        channel = t1.$index(0, $name);
      if (channel == null)
        t1.$indexSet(0, $name, new A._Channel(A.ListQueue$(newSize, type$._StoredMessage), newSize));
      else {
        channel._capacity = newSize;
        channel._dropOverflowMessages$1(newSize);
      }
    }
  };
  A.ChannelBuffers_push_closure.prototype = {
    call$0() {
      return new A._Channel(A.ListQueue$(1, type$._StoredMessage), 1);
    },
    $signature: 89
  };
  A.OffsetBase.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.OffsetBase && other._dx === this._dx && other._dy === this._dy;
    },
    get$hashCode(_) {
      return A.Object_hash(this._dx, this._dy, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "OffsetBase(" + B.JSNumber_methods.toStringAsFixed$1(this._dx, 1) + ", " + B.JSNumber_methods.toStringAsFixed$1(this._dy, 1) + ")";
    }
  };
  A.Offset.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.Offset && other._dx === this._dx && other._dy === this._dy;
    },
    get$hashCode(_) {
      return A.Object_hash(this._dx, this._dy, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "Offset(" + B.JSNumber_methods.toStringAsFixed$1(this._dx, 1) + ", " + B.JSNumber_methods.toStringAsFixed$1(this._dy, 1) + ")";
    }
  };
  A.Size.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.Size && other._dx === this._dx && other._dy === this._dy;
    },
    get$hashCode(_) {
      return A.Object_hash(this._dx, this._dy, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "Size(" + B.JSNumber_methods.toStringAsFixed$1(this._dx, 1) + ", " + B.JSNumber_methods.toStringAsFixed$1(this._dy, 1) + ")";
    }
  };
  A.Rect.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (A.getRuntimeTypeOfDartObject(this) !== J.get$runtimeType$(other))
        return false;
      if (other instanceof A.Rect)
        t1 = true;
      else
        t1 = false;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(0, 0, 0, 0, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "Rect.fromLTRB(" + B.JSInt_methods.toStringAsFixed$1(0, 1) + ", " + B.JSInt_methods.toStringAsFixed$1(0, 1) + ", " + B.JSInt_methods.toStringAsFixed$1(0, 1) + ", " + B.JSInt_methods.toStringAsFixed$1(0, 1) + ")";
    }
  };
  A.KeyEventType.prototype = {
    _enumToString$0() {
      return "KeyEventType." + this._core$_name;
    }
  };
  A.KeyData.prototype = {
    _logicalToString$0() {
      var t1 = this.logical;
      return "0x" + B.JSInt_methods.toRadixString$1(t1, 16) + new A.KeyData__logicalToString_closure(B.JSNumber_methods.floor$0(t1 / 4294967296)).call$0();
    },
    _escapeCharacter$0() {
      var t1 = this.character;
      if (t1 == null)
        return "<none>";
      switch (t1) {
        case "\n":
          return '"\\n"';
        case "\t":
          return '"\\t"';
        case "\r":
          return '"\\r"';
        case "\b":
          return '"\\b"';
        case "\f":
          return '"\\f"';
        default:
          return '"' + t1 + '"';
      }
    },
    _quotedCharCode$0() {
      var t1 = this.character;
      if (t1 == null)
        return "";
      return " (0x" + new A.MappedListIterable(new A.CodeUnits(t1), new A.KeyData__quotedCharCode_closure(), type$.CodeUnits._eval$1("MappedListIterable<ListBase.E,String>")).join$1(0, " ") + ")";
    },
    toString$0(_) {
      var _this = this,
        t1 = A.KeyData__typeToString(_this.type),
        t2 = B.JSInt_methods.toRadixString$1(_this.physical, 16),
        t3 = _this._logicalToString$0(),
        t4 = _this._escapeCharacter$0(),
        t5 = _this._quotedCharCode$0(),
        t6 = _this.synthesized ? ", synthesized" : "";
      return "KeyData(type: " + t1 + ", physical: 0x" + t2 + ", logical: " + t3 + ", character: " + t4 + t5 + t6 + ")";
    }
  };
  A.KeyData__logicalToString_closure.prototype = {
    call$0() {
      switch (this.planeNum) {
        case 0:
          return " (Unicode)";
        case 1:
          return " (Unprintable)";
        case 2:
          return " (Flutter)";
        case 23:
          return " (Web)";
      }
      return "";
    },
    $signature: 10
  };
  A.KeyData__quotedCharCode_closure.prototype = {
    call$1(code) {
      return B.JSString_methods.padLeft$2(B.JSInt_methods.toRadixString$1(code, 16), 2, "0");
    },
    $signature: 90
  };
  A.Color.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(this))
        return false;
      return other instanceof A.Color && other.value === this.value;
    },
    get$hashCode(_) {
      return B.JSInt_methods.get$hashCode(this.value);
    },
    toString$0(_) {
      return "Color(0x" + B.JSString_methods.padLeft$2(B.JSInt_methods.toRadixString$1(this.value, 16), 8, "0") + ")";
    }
  };
  A.PlatformDispatcher.prototype = {};
  A.AppLifecycleState.prototype = {
    _enumToString$0() {
      return "AppLifecycleState." + this._core$_name;
    }
  };
  A.Locale.prototype = {
    get$languageCode(_) {
      var t1 = this._languageCode,
        t2 = B.Map_oFQ7B.$index(0, t1);
      return t2 == null ? t1 : t2;
    },
    get$countryCode() {
      var t1 = this._countryCode,
        t2 = B.Map_GxYRK.$index(0, t1);
      return t2 == null ? t1 : t2;
    },
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (other instanceof A.Locale)
        if (other.get$languageCode(other) === _this.get$languageCode(_this))
          t1 = other.get$countryCode() == _this.get$countryCode();
        else
          t1 = false;
      else
        t1 = false;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(this.get$languageCode(this), null, this.get$countryCode(), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this,
        t1 = _this.get$languageCode(_this);
      if (_this._countryCode != null)
        t1 += "_" + A.S(_this.get$countryCode());
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  A.PointerChange.prototype = {
    _enumToString$0() {
      return "PointerChange." + this._core$_name;
    }
  };
  A.PointerDeviceKind.prototype = {
    _enumToString$0() {
      return "PointerDeviceKind." + this._core$_name;
    }
  };
  A.PointerSignalKind.prototype = {
    _enumToString$0() {
      return "PointerSignalKind." + this._core$_name;
    }
  };
  A.PointerData.prototype = {
    toString$0(_) {
      return "PointerData(x: " + A.S(this.physicalX) + ", y: " + A.S(this.physicalY) + ")";
    }
  };
  A.PointerDataPacket.prototype = {};
  A.TextAlign.prototype = {
    _enumToString$0() {
      return "TextAlign." + this._core$_name;
    }
  };
  A.TextDirection.prototype = {
    _enumToString$0() {
      return "TextDirection." + this._core$_name;
    }
  };
  A.TextRange.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      return other instanceof A.TextRange && other.start === this.start && other.end === this.end;
    },
    get$hashCode(_) {
      return A.Object_hash(B.JSInt_methods.get$hashCode(this.start), B.JSInt_methods.get$hashCode(this.end), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "TextRange(start: " + this.start + ", end: " + this.end + ")";
    }
  };
  A.Display.prototype = {};
  A.FlutterView.prototype = {};
  A.SingletonFlutterWindow.prototype = {};
  A.Brightness.prototype = {
    _enumToString$0() {
      return "Brightness." + this._core$_name;
    }
  };
  A.GestureSettings.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(this))
        return false;
      if (other instanceof A.GestureSettings)
        t1 = true;
      else
        t1 = false;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(null, null, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "GestureSettings(physicalTouchSlop: null, physicalDoubleTapSlop: null)";
    }
  };
  A.AssetManager.prototype = {
    getAssetUrl$1(asset) {
      var t1, fallbackBaseUrl, t2;
      if (A.Uri_parse(asset).get$hasScheme())
        return A._Uri__uriEncode(B.List_5Q7, asset, B.C_Utf8Codec, false);
      t1 = this._assetBase;
      if (t1 == null) {
        t1 = self.window.document.querySelector("meta[name=assetBase]");
        fallbackBaseUrl = t1 == null ? null : t1.content;
        t1 = fallbackBaseUrl == null;
        if (!t1)
          self.window.console.warn("The `assetBase` meta tag is now deprecated.\nUse engineInitializer.initializeEngine(config) instead.\nSee: https://docs.flutter.dev/development/platform-integration/web/initialization");
        t2 = this._assetBase = t1 ? "" : fallbackBaseUrl;
        t1 = t2;
      }
      return A._Uri__uriEncode(B.List_5Q7, t1 + "assets/" + asset, B.C_Utf8Codec, false);
    }
  };
  A.bootstrapEngine_closure.prototype = {
    call$1(configuration) {
      return this.$call$body$bootstrapEngine_closure(configuration);
    },
    call$0() {
      return this.call$1(null);
    },
    "call*": "call$1",
    $requiredArgCount: 0,
    $defaultValues() {
      return [null];
    },
    $call$body$bootstrapEngine_closure(configuration) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void);
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return A._asyncAwait(A.initializeEngineServices(configuration), $async$call$1);
            case 2:
              // returning from await.
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 91
  };
  A.bootstrapEngine_closure0.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$self.registerPlugins.call$0();
              $async$goto = 2;
              return A._asyncAwait(A.initializeEngineUi(), $async$call$0);
            case 2:
              // returning from await.
              $async$self.runApp.call$0();
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 12
  };
  A.BrowserPlatformLocation.prototype = {
    getOrCreateDomEventListener$1(fn) {
      return $._popStateListenersCache.putIfAbsent$2(0, fn, new A.BrowserPlatformLocation_getOrCreateDomEventListener_closure(fn));
    }
  };
  A.BrowserPlatformLocation_getOrCreateDomEventListener_closure.prototype = {
    call$0() {
      return type$.JavaScriptObject._as(A.allowInterop(this.fn));
    },
    $signature: 26
  };
  A.HashUrlStrategy.prototype = {
    addPopStateListener$1(fn) {
      var t1 = new A.HashUrlStrategy_addPopStateListener_wrappedFn(fn);
      A.DomEventTargetExtension_addEventListener(self.window, "popstate", B.C_BrowserPlatformLocation.getOrCreateDomEventListener$1(t1), null);
      return new A.HashUrlStrategy_addPopStateListener_closure(this, t1);
    },
    getPath$0() {
      var t1 = self.window.location.hash;
      if (t1.length === 0 || t1 === "#")
        return "/";
      return B.JSString_methods.substring$1(t1, 1);
    },
    getState$0(_) {
      return A.DomHistoryExtension_get_state(self.window.history);
    },
    prepareExternalUrl$1(internalUrl) {
      var t2,
        hash = internalUrl.length === 0 || internalUrl === "/" ? "" : "#" + internalUrl,
        t1 = self.window.location.pathname;
      if (t1 == null)
        t1 = null;
      t1.toString;
      t2 = self.window.location.search;
      if (t2 == null)
        t2 = null;
      t2.toString;
      return t1 + t2 + hash;
    },
    pushState$3(_, state, title, url) {
      var t1 = this.prepareExternalUrl$1(url),
        t2 = self.window.history,
        t3 = A.jsify(state);
      if (t3 == null)
        t3 = type$.Object._as(t3);
      t2.pushState(t3, title, t1);
    },
    replaceState$3(_, state, title, url) {
      var t3,
        t1 = this.prepareExternalUrl$1(url),
        t2 = self.window.history;
      if (state == null)
        t3 = null;
      else {
        t3 = A.jsify(state);
        if (t3 == null)
          t3 = type$.Object._as(t3);
      }
      t2.replaceState(t3, title, t1);
    },
    go$1(_, count) {
      var t1 = self.window.history;
      t1.go(count);
      return this._waitForPopState$0();
    },
    _waitForPopState$0() {
      var t1 = new A._Future($.Zone__current, type$._Future_void),
        unsubscribe = A._Cell$named("unsubscribe");
      unsubscribe.__late_helper$_value = this.addPopStateListener$1(new A.HashUrlStrategy__waitForPopState_closure(unsubscribe, new A._AsyncCompleter(t1, type$._AsyncCompleter_void)));
      return t1;
    }
  };
  A.HashUrlStrategy_addPopStateListener_wrappedFn.prototype = {
    call$1($event) {
      var t1 = type$.JavaScriptObject._as($event).state;
      if (t1 == null)
        t1 = null;
      else {
        t1 = A.dartify(t1);
        t1.toString;
      }
      this.fn.call$1(t1);
    },
    $signature: 92
  };
  A.HashUrlStrategy_addPopStateListener_closure.prototype = {
    call$0() {
      var t1 = this.wrappedFn;
      A.DomEventTargetExtension_removeEventListener(self.window, "popstate", B.C_BrowserPlatformLocation.getOrCreateDomEventListener$1(t1), null);
      $._popStateListenersCache.remove$1(0, t1);
      return null;
    },
    $signature: 0
  };
  A.HashUrlStrategy__waitForPopState_closure.prototype = {
    call$1(_) {
      this.unsubscribe._readLocal$0().call$0();
      this.completer.complete$0(0);
    },
    $signature: 11
  };
  A.AudioBuffer.prototype = {
    get$length(receiver) {
      return receiver.length;
    }
  };
  A.AudioParamMap.prototype = {
    containsKey$1(receiver, key) {
      return A.convertNativeToDart_Dictionary(receiver.get(key)) != null;
    },
    $index(receiver, key) {
      return A.convertNativeToDart_Dictionary(receiver.get(key));
    },
    forEach$1(receiver, f) {
      var entry, t1,
        entries = receiver.entries();
      for (; true;) {
        entry = entries.next();
        t1 = entry.done;
        t1.toString;
        if (t1)
          return;
        t1 = entry.value[0];
        t1.toString;
        f.call$2(t1, A.convertNativeToDart_Dictionary(entry.value[1]));
      }
    },
    get$keys(receiver) {
      var keys = A._setArrayType([], type$.JSArray_String);
      this.forEach$1(receiver, new A.AudioParamMap_keys_closure(keys));
      return keys;
    },
    get$length(receiver) {
      var t1 = receiver.size;
      t1.toString;
      return t1;
    },
    get$isEmpty(receiver) {
      var t1 = receiver.size;
      t1.toString;
      return t1 === 0;
    },
    $indexSet(receiver, key, value) {
      throw A.wrapException(A.UnsupportedError$("Not supported"));
    },
    remove$1(receiver, key) {
      throw A.wrapException(A.UnsupportedError$("Not supported"));
    },
    $isMap: 1
  };
  A.AudioParamMap_keys_closure.prototype = {
    call$2(k, v) {
      return this.keys.push(k);
    },
    $signature: 4
  };
  A.AudioTrackList.prototype = {
    get$length(receiver) {
      return receiver.length;
    }
  };
  A.BaseAudioContext.prototype = {};
  A.OfflineAudioContext.prototype = {
    get$length(receiver) {
      return receiver.length;
    }
  };
  A._AudioParamMap_JavaScriptObject_MapMixin.prototype = {};
  A.AudioplayersPlatformInterface.prototype = {};
  A.GlobalAudioplayersPlatformInterface.prototype = {};
  A.WebAudioplayersPlatform.prototype = {};
  A.WebGlobalAudioplayersPlatform.prototype = {};
  A._ErrorDiagnostic.prototype = {
    toString$1$minLevel(_, minLevel) {
      var t1 = A.DiagnosticsProperty.prototype.get$value.call(this, this);
      t1.toString;
      return B.JSArray_methods.join$0(t1);
    },
    toString$0($receiver) {
      return this.toString$1$minLevel($receiver, B.DiagnosticLevel_3);
    },
    get$value(_) {
      var t1 = A.DiagnosticsProperty.prototype.get$value.call(this, this);
      t1.toString;
      return t1;
    }
  };
  A.ErrorDescription.prototype = {};
  A.ErrorSummary.prototype = {};
  A.ErrorSpacer.prototype = {};
  A.FlutterErrorDetails.prototype = {
    exceptionAsString$0() {
      var message, fullMessage, t1, t2, position, body, splitPoint,
        longMessage = this.exception;
      if (type$.AssertionError._is(longMessage)) {
        message = longMessage.get$message(longMessage);
        fullMessage = longMessage.toString$0(0);
        if (typeof message == "string" && message !== fullMessage) {
          t1 = fullMessage.length;
          t2 = J.getInterceptor$asx(message);
          if (t1 > t2.get$length(message)) {
            position = B.JSString_methods.lastIndexOf$1(fullMessage, message);
            if (position === t1 - t2.get$length(message) && position > 2 && B.JSString_methods.substring$2(fullMessage, position - 2, position) === ": ") {
              body = B.JSString_methods.substring$2(fullMessage, 0, position - 2);
              splitPoint = B.JSString_methods.indexOf$1(body, " Failed assertion:");
              if (splitPoint >= 0)
                body = B.JSString_methods.substring$2(body, 0, splitPoint) + "\n" + B.JSString_methods.substring$1(body, splitPoint + 1);
              longMessage = t2.trimRight$0(message) + "\n" + body;
            } else
              longMessage = null;
          } else
            longMessage = null;
        } else
          longMessage = null;
        if (longMessage == null)
          longMessage = fullMessage;
      } else if (!(typeof longMessage == "string"))
        longMessage = type$.Error._is(longMessage) || type$.Exception._is(longMessage) ? J.toString$0$(longMessage) : "  " + A.S(longMessage);
      longMessage = B.JSString_methods.trimRight$0(longMessage);
      return longMessage.length === 0 ? "  <no message available>" : longMessage;
    },
    _exceptionToDiagnosticable$0() {
      var t1,
        exception = this.exception;
      if (exception instanceof A.FlutterError)
        return exception;
      if (type$.AssertionError._is(exception) && exception.get$message(exception) instanceof A.FlutterError) {
        t1 = J.get$message$z(exception);
        t1.toString;
        return type$.FlutterError._as(t1);
      }
      return null;
    },
    get$summary() {
      var t1, summary;
      if (this._exceptionToDiagnosticable$0() != null) {
        t1 = A._setArrayType([], type$.JSArray_DiagnosticsNode);
        this.debugFillProperties$1(new A.DiagnosticPropertiesBuilder(t1));
        t1 = new A.CastList(t1, type$.CastList_of_DiagnosticsNode_and_nullable_DiagnosticsNode);
        summary = t1.firstWhere$2$orElse(t1, new A.FlutterErrorDetails_summary_closure(), new A.FlutterErrorDetails_summary_closure0());
      } else
        summary = null;
      return summary == null ? A.ErrorSummary$(new A.FlutterErrorDetails_summary_formatException(this).call$0()) : summary;
    },
    debugFillProperties$1(properties) {
      var t1, verb, diagnosticable, errorName, t2, t3, prefix, message, stackFrames, _this = this;
      _this.super$Diagnosticable$debugFillProperties(properties);
      t1 = A.ErrorDescription$(" " + _this.context.toString$0(0));
      verb = A.ErrorDescription$("thrown" + t1.toString$0(0));
      diagnosticable = _this._exceptionToDiagnosticable$0();
      t1 = _this.exception;
      if (typeof t1 == "number")
        A.ErrorDescription$("The number " + A.S(t1) + " was " + verb.toString$0(0) + ".");
      else {
        if (type$.AssertionError._is(t1))
          errorName = A.ErrorDescription$("assertion");
        else if (typeof t1 == "string")
          errorName = A.ErrorDescription$("message");
        else {
          t2 = type$.Error._is(t1) || type$.Exception._is(t1);
          t3 = J.getInterceptor$(t1);
          errorName = t2 ? A.ErrorDescription$(t3.get$runtimeType(t1).toString$0(0)) : A.ErrorDescription$(t3.get$runtimeType(t1).toString$0(0) + " object");
        }
        A.ErrorDescription$("The following " + errorName.toString$0(0) + " was " + verb.toString$0(0) + ":");
        if (diagnosticable != null)
          diagnosticable.diagnostics.forEach$1(0, properties.get$add(properties));
        else {
          prefix = J.get$runtimeType$(t1).toString$0(0) + ": ";
          message = _this.exceptionAsString$0();
          A.ErrorSummary$(B.JSString_methods.startsWith$1(message, prefix) ? B.JSString_methods.substring$1(message, prefix.length) : message);
        }
      }
      t2 = _this.stack;
      if (t2 != null) {
        if (type$.AssertionError._is(t1) && diagnosticable == null) {
          t1 = A.StackFrame_fromStackString(A.FlutterError__defaultStackTraceDemangler(t2).toString$0(0));
          t3 = A._arrayInstanceType(t1)._eval$1("SkipWhileIterable<1>");
          stackFrames = A.List_List$of(new A.SkipWhileIterable(t1, new A.FlutterErrorDetails_debugFillProperties_closure(), t3), true, t3._eval$1("Iterable.E"));
          if (stackFrames.length >= 2 && stackFrames[0].$package === "flutter" && stackFrames[1].$package === "flutter")
            A.ErrorSpacer$();
        }
        A.ErrorSpacer$();
        A.DiagnosticsStackTrace__applyStackFilter(t2, null);
      }
    },
    toStringShort$0() {
      return "Exception caught by " + this.library;
    },
    toString$0(_) {
      A._FlutterErrorDetailsNode$(null, B.DiagnosticsTreeStyle_5, this);
      return "";
    }
  };
  A.FlutterErrorDetails_summary_formatException.prototype = {
    call$0() {
      return J.trimLeft$0$s(this.$this.exceptionAsString$0().split("\n")[0]);
    },
    $signature: 10
  };
  A.FlutterErrorDetails_summary_closure.prototype = {
    call$1(node) {
      return node.get$level(node) === B.DiagnosticLevel_6;
    },
    $signature: 93
  };
  A.FlutterErrorDetails_summary_closure0.prototype = {
    call$0() {
      return null;
    },
    $signature: 17
  };
  A.FlutterErrorDetails_debugFillProperties_closure.prototype = {
    call$1(frame) {
      return frame.packageScheme === "dart";
    },
    $signature: 94
  };
  A.FlutterError.prototype = {$isFlutterError: 1};
  A.FlutterError_defaultStackFilter_closure.prototype = {
    call$1(value) {
      return value + 1;
    },
    $signature: 37
  };
  A.FlutterError_defaultStackFilter_closure0.prototype = {
    call$1(value) {
      return value + 1;
    },
    $signature: 37
  };
  A.debugPrintStack_closure.prototype = {
    call$1(line) {
      return B.JSString_methods.contains$1(line, "StackTrace.current") || B.JSString_methods.contains$1(line, "dart-sdk/lib/_internal") || B.JSString_methods.contains$1(line, "dart:sdk_internal");
    },
    $signature: 9
  };
  A.DiagnosticsStackTrace.prototype = {};
  A._FlutterErrorDetailsNode.prototype = {};
  A._FlutterErrorDetails_Object_Diagnosticable.prototype = {};
  A.DiagnosticLevel.prototype = {
    _enumToString$0() {
      return "DiagnosticLevel." + this._core$_name;
    }
  };
  A.DiagnosticsTreeStyle.prototype = {
    _enumToString$0() {
      return "DiagnosticsTreeStyle." + this._core$_name;
    }
  };
  A._NoDefaultValue.prototype = {};
  A.DiagnosticsNode.prototype = {
    get$level(_) {
      return B.DiagnosticLevel_3;
    },
    toString$1$minLevel(_, minLevel) {
      return this.super$Object$toString(0);
    },
    toString$0($receiver) {
      return this.toString$1$minLevel($receiver, B.DiagnosticLevel_3);
    }
  };
  A.DiagnosticsProperty.prototype = {
    get$value(_) {
      this._maybeCacheValue$0();
      return this._diagnostics$_value;
    },
    _maybeCacheValue$0() {
      return;
    },
    get$level(_) {
      var t2, t3, _this = this,
        t1 = _this._defaultLevel;
      if (t1 === B.DiagnosticLevel_0)
        return t1;
      _this._maybeCacheValue$0();
      if (_this._diagnostics$_exception != null)
        return B.DiagnosticLevel_7;
      _this.get$value(_this);
      t2 = _this.defaultValue;
      if (t2 !== B.C__NoDefaultValue) {
        t3 = _this.get$value(_this);
        t2 = t3 == null ? t2 != null : t3 !== t2;
      } else
        t2 = true;
      if (!t2)
        return B.DiagnosticLevel_1;
      return t1;
    }
  };
  A.DiagnosticableNode.prototype = {};
  A.DiagnosticPropertiesBuilder.prototype = {
    add$1(_, property) {
    }
  };
  A.Diagnosticable.prototype = {
    toStringShort$0() {
      return "<optimized out>#" + A.shortHash(this);
    },
    toString$0(_) {
      var t1 = this.toStringShort$0();
      return t1;
    },
    debugFillProperties$1(properties) {
    }
  };
  A.DiagnosticsBlock.prototype = {
    get$level() {
      return B.DiagnosticLevel_3;
    }
  };
  A.WriteBuffer0.prototype = {
    _serialization$_add$1(_, byte) {
      var t1, t2, _this = this;
      if (_this._currentSize === _this._serialization$_buffer.length)
        _this._resize$0();
      t1 = _this._serialization$_buffer;
      t2 = _this._currentSize;
      t1[t2] = byte;
      _this._currentSize = t2 + 1;
    },
    _append$1(other) {
      var _this = this,
        t1 = other.length,
        newSize = _this._currentSize + t1;
      if (newSize >= _this._serialization$_buffer.length)
        _this._resize$1(newSize);
      B.NativeUint8List_methods.setRange$3(_this._serialization$_buffer, _this._currentSize, newSize, other);
      _this._currentSize += t1;
    },
    _serialization$_addAll$3(data, start, end) {
      var _this = this,
        newEnd = end == null ? _this._serialization$_eightBytesAsList.length : end,
        newSize = _this._currentSize + (newEnd - start);
      if (newSize >= _this._serialization$_buffer.length)
        _this._resize$1(newSize);
      B.NativeUint8List_methods.setRange$3(_this._serialization$_buffer, _this._currentSize, newSize, data);
      _this._currentSize = newSize;
    },
    _serialization$_addAll$1(data) {
      return this._serialization$_addAll$3(data, 0, null);
    },
    _resize$1(requiredLength) {
      var t1 = this._serialization$_buffer,
        t2 = t1.length,
        t3 = requiredLength == null ? 0 : requiredLength,
        newLength = Math.max(t3, t2 * 2),
        newBuffer = new Uint8Array(newLength);
      B.NativeUint8List_methods.setRange$3(newBuffer, 0, t2, t1);
      this._serialization$_buffer = newBuffer;
    },
    _resize$0() {
      return this._resize$1(null);
    },
    _serialization$_alignTo$1(alignment) {
      var mod = B.JSInt_methods.$mod(this._currentSize, alignment);
      if (mod !== 0)
        this._serialization$_addAll$3($.$get$WriteBuffer__zeroBuffer(), 0, alignment - mod);
    },
    done$0() {
      var result, _this = this;
      if (_this._serialization$_isDone)
        throw A.wrapException(A.StateError$("done() must not be called more than once on the same " + A.getRuntimeTypeOfDartObject(_this).toString$0(0) + "."));
      result = A.NativeByteData_NativeByteData$view(_this._serialization$_buffer.buffer, 0, _this._currentSize);
      _this._serialization$_buffer = new Uint8Array(0);
      _this._serialization$_isDone = true;
      return result;
    }
  };
  A.ReadBuffer0.prototype = {
    getUint8$0(_) {
      return this.data.getUint8(this._serialization$_position++);
    },
    getInt64$0(_) {
      var t1 = this._serialization$_position,
        t2 = $.$get$Endian_host();
      B.NativeByteData_methods.getInt64$2(this.data, t1, t2);
    },
    getUint8List$1($length) {
      var t1 = this.data,
        list = A.NativeUint8List_NativeUint8List$view(t1.buffer, t1.byteOffset + this._serialization$_position, $length);
      this._serialization$_position += $length;
      return list;
    },
    getInt64List$1($length) {
      var t1;
      this._serialization$_alignTo$1(8);
      t1 = this.data;
      B.NativeByteBuffer_methods.asInt64List$2(t1.buffer, t1.byteOffset + this._serialization$_position, $length);
    },
    _serialization$_alignTo$1(alignment) {
      var t1 = this._serialization$_position,
        mod = B.JSInt_methods.$mod(t1, alignment);
      if (mod !== 0)
        this._serialization$_position = t1 + (alignment - mod);
    }
  };
  A.StackFrame.prototype = {
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.number, _this.$package, _this.line, _this.column, _this.className, _this.method, _this.source);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      return other instanceof A.StackFrame && other.number === _this.number && other.$package === _this.$package && other.line === _this.line && other.column === _this.column && other.className === _this.className && other.method === _this.method && other.source === _this.source;
    },
    toString$0(_) {
      var _this = this;
      return "StackFrame(#" + _this.number + ", " + _this.packageScheme + ":" + _this.$package + "/" + _this.packagePath + ":" + _this.line + ":" + _this.column + ", className: " + _this.className + ", method: " + _this.method + ")";
    }
  };
  A.StackFrame_fromStackString_closure.prototype = {
    call$1(line) {
      return line.length !== 0;
    },
    $signature: 9
  };
  A.BinaryMessenger.prototype = {};
  A.MethodCall0.prototype = {
    toString$0(_) {
      return "MethodCall(" + this.method + ", " + A.S(this.$arguments) + ")";
    }
  };
  A.PlatformException.prototype = {
    toString$0(_) {
      return "PlatformException(" + this.code + ", null, " + this.details + ", null)";
    },
    $isException: 1
  };
  A.StandardMessageCodec0.prototype = {
    writeValue$2(_, buffer, value) {
      var t1, t2, asciiBytes, utf8Bytes, utf8Offset, i, char, elementSize, end, _this = this;
      if (value == null)
        buffer._serialization$_add$1(0, 0);
      else if (A._isBool(value))
        buffer._serialization$_add$1(0, value ? 1 : 2);
      else if (typeof value == "number") {
        buffer._serialization$_add$1(0, 6);
        buffer._serialization$_alignTo$1(8);
        t1 = $.$get$Endian_host();
        buffer._serialization$_eightBytes.setFloat64(0, value, B.C_Endian === t1);
        buffer._serialization$_addAll$1(buffer._serialization$_eightBytesAsList);
      } else if (A._isInt(value)) {
        t1 = -2147483648 <= value && value <= 2147483647;
        t2 = buffer._serialization$_eightBytes;
        if (t1) {
          buffer._serialization$_add$1(0, 3);
          t1 = $.$get$Endian_host();
          t2.setInt32(0, value, B.C_Endian === t1);
          buffer._serialization$_addAll$3(buffer._serialization$_eightBytesAsList, 0, 4);
        } else {
          buffer._serialization$_add$1(0, 4);
          t1 = $.$get$Endian_host();
          B.NativeByteData_methods.setInt64$3(t2, 0, value, t1);
        }
      } else if (typeof value == "string") {
        buffer._serialization$_add$1(0, 7);
        t1 = value.length;
        asciiBytes = new Uint8Array(t1);
        i = 0;
        while (true) {
          if (!(i < t1)) {
            utf8Bytes = null;
            utf8Offset = 0;
            break;
          }
          char = value.charCodeAt(i);
          if (char <= 127)
            asciiBytes[i] = char;
          else {
            utf8Bytes = B.C_Utf8Encoder.convert$1(B.JSString_methods.substring$1(value, i));
            utf8Offset = i;
            break;
          }
          ++i;
        }
        if (utf8Bytes != null) {
          _this.writeSize$2(buffer, utf8Offset + utf8Bytes.length);
          elementSize = asciiBytes.BYTES_PER_ELEMENT;
          end = A.RangeError_checkValidRange(0, utf8Offset, B.JSInt_methods.$tdiv(asciiBytes.byteLength, elementSize));
          buffer._append$1(A.NativeUint8List_NativeUint8List$view(asciiBytes.buffer, asciiBytes.byteOffset + 0 * elementSize, (end - 0) * elementSize));
          buffer._append$1(utf8Bytes);
        } else {
          _this.writeSize$2(buffer, t1);
          buffer._append$1(asciiBytes);
        }
      } else if (type$.Uint8List._is(value)) {
        buffer._serialization$_add$1(0, 8);
        _this.writeSize$2(buffer, value.length);
        buffer._append$1(value);
      } else if (type$.Int32List._is(value)) {
        buffer._serialization$_add$1(0, 9);
        t1 = value.length;
        _this.writeSize$2(buffer, t1);
        buffer._serialization$_alignTo$1(4);
        buffer._append$1(A.NativeUint8List_NativeUint8List$view(value.buffer, value.byteOffset, 4 * t1));
      } else if (type$.Float32List._is(value)) {
        buffer._serialization$_add$1(0, 14);
        t1 = value.length;
        _this.writeSize$2(buffer, t1);
        buffer._serialization$_alignTo$1(4);
        buffer._append$1(A.NativeUint8List_NativeUint8List$view(value.buffer, value.byteOffset, 4 * t1));
      } else if (type$.Float64List._is(value)) {
        buffer._serialization$_add$1(0, 11);
        t1 = value.length;
        _this.writeSize$2(buffer, t1);
        buffer._serialization$_alignTo$1(8);
        buffer._append$1(A.NativeUint8List_NativeUint8List$view(value.buffer, value.byteOffset, 8 * t1));
      } else if (type$.List_dynamic._is(value)) {
        buffer._serialization$_add$1(0, 12);
        t1 = J.getInterceptor$asx(value);
        _this.writeSize$2(buffer, t1.get$length(value));
        for (t1 = t1.get$iterator(value); t1.moveNext$0();)
          _this.writeValue$2(0, buffer, t1.get$current(t1));
      } else if (type$.Map_dynamic_dynamic._is(value)) {
        buffer._serialization$_add$1(0, 13);
        t1 = J.getInterceptor$asx(value);
        _this.writeSize$2(buffer, t1.get$length(value));
        t1.forEach$1(value, new A.StandardMessageCodec_writeValue_closure0(_this, buffer));
      } else
        throw A.wrapException(A.ArgumentError$value(value, null, null));
    },
    readValue$1(_, buffer) {
      if (buffer._serialization$_position >= buffer.data.byteLength)
        throw A.wrapException(B.FormatException_oCg);
      return this.readValueOfType$2(buffer.getUint8$0(0), buffer);
    },
    readValueOfType$2(type, buffer) {
      var t1, t2, value, $length, list, result, i, t3, _this = this;
      switch (type) {
        case 0:
          return null;
        case 1:
          return true;
        case 2:
          return false;
        case 3:
          t1 = buffer._serialization$_position;
          t2 = $.$get$Endian_host();
          value = buffer.data.getInt32(t1, B.C_Endian === t2);
          buffer._serialization$_position += 4;
          return value;
        case 4:
          return buffer.getInt64$0(0);
        case 6:
          buffer._serialization$_alignTo$1(8);
          t1 = buffer._serialization$_position;
          t2 = $.$get$Endian_host();
          value = buffer.data.getFloat64(t1, B.C_Endian === t2);
          buffer._serialization$_position += 8;
          return value;
        case 5:
        case 7:
          $length = _this.readSize$1(buffer);
          return B.Utf8Decoder_false.convert$1(buffer.getUint8List$1($length));
        case 8:
          return buffer.getUint8List$1(_this.readSize$1(buffer));
        case 9:
          $length = _this.readSize$1(buffer);
          buffer._serialization$_alignTo$1(4);
          t1 = buffer.data;
          list = A.NativeInt32List_NativeInt32List$view(t1.buffer, t1.byteOffset + buffer._serialization$_position, $length);
          buffer._serialization$_position = buffer._serialization$_position + 4 * $length;
          return list;
        case 10:
          return buffer.getInt64List$1(_this.readSize$1(buffer));
        case 14:
          $length = _this.readSize$1(buffer);
          buffer._serialization$_alignTo$1(4);
          t1 = buffer.data;
          t2 = t1.buffer;
          t1 = t1.byteOffset + buffer._serialization$_position;
          A._checkViewArguments(t2, t1, $length);
          list = new Float32Array(t2, t1, $length);
          buffer._serialization$_position = buffer._serialization$_position + 4 * $length;
          return list;
        case 11:
          $length = _this.readSize$1(buffer);
          buffer._serialization$_alignTo$1(8);
          t1 = buffer.data;
          list = A.NativeFloat64List_NativeFloat64List$view(t1.buffer, t1.byteOffset + buffer._serialization$_position, $length);
          buffer._serialization$_position = buffer._serialization$_position + 8 * $length;
          return list;
        case 12:
          $length = _this.readSize$1(buffer);
          result = A.List_List$filled($length, null, false, type$.nullable_Object);
          for (t1 = buffer.data, i = 0; i < $length; ++i) {
            t2 = buffer._serialization$_position;
            if (t2 >= t1.byteLength)
              A.throwExpression(B.FormatException_oCg);
            buffer._serialization$_position = t2 + 1;
            result[i] = _this.readValueOfType$2(t1.getUint8(t2), buffer);
          }
          return result;
        case 13:
          $length = _this.readSize$1(buffer);
          t1 = type$.nullable_Object;
          result = A.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
          for (t1 = buffer.data, i = 0; i < $length; ++i) {
            t2 = buffer._serialization$_position;
            if (t2 >= t1.byteLength)
              A.throwExpression(B.FormatException_oCg);
            buffer._serialization$_position = t2 + 1;
            t2 = _this.readValueOfType$2(t1.getUint8(t2), buffer);
            t3 = buffer._serialization$_position;
            if (t3 >= t1.byteLength)
              A.throwExpression(B.FormatException_oCg);
            buffer._serialization$_position = t3 + 1;
            result.$indexSet(0, t2, _this.readValueOfType$2(t1.getUint8(t3), buffer));
          }
          return result;
        default:
          throw A.wrapException(B.FormatException_oCg);
      }
    },
    writeSize$2(buffer, value) {
      var t1, t2;
      if (value < 254)
        buffer._serialization$_add$1(0, value);
      else {
        t1 = buffer._serialization$_eightBytes;
        if (value <= 65535) {
          buffer._serialization$_add$1(0, 254);
          t2 = $.$get$Endian_host();
          t1.setUint16(0, value, B.C_Endian === t2);
          buffer._serialization$_addAll$3(buffer._serialization$_eightBytesAsList, 0, 2);
        } else {
          buffer._serialization$_add$1(0, 255);
          t2 = $.$get$Endian_host();
          t1.setUint32(0, value, B.C_Endian === t2);
          buffer._serialization$_addAll$3(buffer._serialization$_eightBytesAsList, 0, 4);
        }
      }
    },
    readSize$1(buffer) {
      var t1, t2,
        value = buffer.getUint8$0(0);
      switch (value) {
        case 254:
          t1 = buffer._serialization$_position;
          t2 = $.$get$Endian_host();
          value = buffer.data.getUint16(t1, B.C_Endian === t2);
          buffer._serialization$_position += 2;
          return value;
        case 255:
          t1 = buffer._serialization$_position;
          t2 = $.$get$Endian_host();
          value = buffer.data.getUint32(t1, B.C_Endian === t2);
          buffer._serialization$_position += 4;
          return value;
        default:
          return value;
      }
    }
  };
  A.StandardMessageCodec_writeValue_closure0.prototype = {
    call$2(key, value) {
      var t1 = this.$this,
        t2 = this.buffer;
      t1.writeValue$2(0, t2, key);
      t1.writeValue$2(0, t2, value);
    },
    $signature: 19
  };
  A.StandardMethodCodec0.prototype = {
    decodeMethodCall$1(methodCall) {
      var buffer, method, $arguments;
      methodCall.toString;
      buffer = new A.ReadBuffer0(methodCall);
      method = B.C_StandardMessageCodec0.readValue$1(0, buffer);
      $arguments = B.C_StandardMessageCodec0.readValue$1(0, buffer);
      if (typeof method == "string" && buffer._serialization$_position >= methodCall.byteLength)
        return new A.MethodCall0(method, $arguments);
      else
        throw A.wrapException(B.FormatException_Qi2);
    },
    encodeErrorEnvelope$3$code$details$message(code, details, message) {
      var buffer = A.WriteBuffer_WriteBuffer0(64);
      buffer._serialization$_add$1(0, 1);
      B.C_StandardMessageCodec0.writeValue$2(0, buffer, code);
      B.C_StandardMessageCodec0.writeValue$2(0, buffer, message);
      B.C_StandardMessageCodec0.writeValue$2(0, buffer, details);
      return buffer.done$0();
    },
    encodeErrorEnvelope$2$code$message(code, message) {
      return this.encodeErrorEnvelope$3$code$details$message(code, null, message);
    }
  };
  A.MethodChannel.prototype = {
    setMethodCallHandler$1(handler) {
      this._binaryMessenger._handlers.$indexSet(0, this.name, new A.MethodChannel_setMethodCallHandler_closure(this, handler));
    },
    _handleAsMethodCall$2(message, handler) {
      return this._handleAsMethodCall$body$MethodChannel(message, handler);
    },
    _handleAsMethodCall$body$MethodChannel(message, handler) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.nullable_ByteData),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$self = this, e, error, t2, buffer, exception, t1, $call, $async$exception;
      var $async$_handleAsMethodCall$2 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.codec;
              $call = t1.decodeMethodCall$1(message);
              $async$handler = 4;
              $async$goto = 7;
              return A._asyncAwait(handler.call$1($call), $async$_handleAsMethodCall$2);
            case 7:
              // returning from await.
              t2 = $async$result;
              buffer = A.WriteBuffer_WriteBuffer0(64);
              buffer._serialization$_add$1(0, 0);
              B.C_StandardMessageCodec0.writeValue$2(0, buffer, t2);
              t2 = buffer.done$0();
              $async$returnValue = t2;
              // goto return
              $async$goto = 1;
              break;
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              t2 = A.unwrapException($async$exception);
              if (t2 instanceof A.PlatformException) {
                e = t2;
                t2 = e.code;
                e.toString;
                $async$returnValue = t1.encodeErrorEnvelope$3$code$details$message(t2, e.details, null);
                // goto return
                $async$goto = 1;
                break;
              } else {
                error = t2;
                t1 = t1.encodeErrorEnvelope$2$code$message("error", J.toString$0$(error));
                $async$returnValue = t1;
                // goto return
                $async$goto = 1;
                break;
              }
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return A._asyncStartSync($async$_handleAsMethodCall$2, $async$completer);
    }
  };
  A.MethodChannel_setMethodCallHandler_closure.prototype = {
    call$1(message) {
      return this.$this._handleAsMethodCall$2(message, this.handler);
    },
    $signature: 97
  };
  A.FlutterNativeSplashWeb.prototype = {
    handleMethodCall$1($call) {
      return this.handleMethodCall$body$FlutterNativeSplashWeb($call);
    },
    handleMethodCall$body$FlutterNativeSplashWeb($call) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, exception, t1;
      var $async$handleMethodCall$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          $async$outer:
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = $call.method;
                switch (t1) {
                  case "remove":
                    try {
                      self.removeSplashFromWeb();
                    } catch (exception) {
                      t1 = A.Exception_Exception('Did you forget to run "dart run flutter_native_splash:create"? \n Could not run the JS command removeSplashFromWeb()');
                      throw A.wrapException(t1);
                    }
                    // goto return
                    $async$goto = 1;
                    break $async$outer;
                  default:
                    throw A.wrapException(A.PlatformException$("Unimplemented", "flutter_native_splash for web doesn't implement '" + t1 + "'"));
                }
              case 1:
                // return
                return A._asyncReturn($async$returnValue, $async$completer);
            }
      });
      return A._asyncStartSync($async$handleMethodCall$1, $async$completer);
    }
  };
  A.Registrar.prototype = {
    handleFrameworkMessage$3(channel, data, callback) {
      return this.handleFrameworkMessage$body$Registrar(channel, data, callback);
    },
    handleFrameworkMessage$body$Registrar(channel, data, callback) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$handler = 1, $async$currentError, $async$next = [], $async$self = this, handler, exception, stack, t1, exception0, t2, response, $async$exception0;
      var $async$handleFrameworkMessage$3 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              response = null;
              $async$handler = 3;
              handler = $async$self._handlers.$index(0, channel);
              $async$goto = handler != null ? 6 : 7;
              break;
            case 6:
              // then
              t1 = handler.call$1(data);
              $async$goto = 8;
              return A._asyncAwait(type$.Future_nullable_ByteData._is(t1) ? t1 : A._Future$value(t1, type$.nullable_ByteData), $async$handleFrameworkMessage$3);
            case 8:
              // returning from await.
              response = $async$result;
            case 7:
              // join
              $async$next.push(5);
              // goto finally
              $async$goto = 4;
              break;
            case 3:
              // catch
              $async$handler = 2;
              $async$exception0 = $async$currentError;
              exception = A.unwrapException($async$exception0);
              stack = A.getTraceFromException($async$exception0);
              t1 = A.ErrorDescription$("during a framework-to-plugin message");
              t2 = $.FlutterError_onError;
              if (t2 != null)
                t2.call$1(new A.FlutterErrorDetails(exception, stack, "flutter web plugins", t1));
              $async$next.push(5);
              // goto finally
              $async$goto = 4;
              break;
            case 2:
              // uncaught
              $async$next = [1];
            case 4:
              // finally
              $async$handler = 1;
              if (callback != null)
                callback.call$1(response);
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 5:
              // after finally
              // implicit return
              return A._asyncReturn(null, $async$completer);
            case 1:
              // rethrow
              return A._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return A._asyncStartSync($async$handleFrameworkMessage$3, $async$completer);
    }
  };
  A.PluginRegistry.prototype = {};
  A.FluttertoastWebPlugin.prototype = {
    handleMethodCall$1($call) {
      return this.handleMethodCall$body$FluttertoastWebPlugin($call);
    },
    handleMethodCall$body$FluttertoastWebPlugin($call) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, t2, msg, gravity, position, bgColor, textColor, time, showClose, m, ele, scriptText, tcRadix, t3, t4, t1;
      var $async$handleMethodCall$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          $async$outer:
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = $call.method;
                switch (t1) {
                  case "showToast":
                    t1 = $call.$arguments;
                    t2 = J.getInterceptor$asx(t1);
                    msg = t2.$index(t1, "msg");
                    gravity = J.$eq$(t2.$index(t1, "gravity"), "top") || J.$eq$(t2.$index(t1, "gravity"), "bottom") ? t2.$index(t1, "gravity") : "top";
                    position = t2.$index(t1, "webPosition");
                    if (position == null)
                      position = "right";
                    bgColor = t2.$index(t1, "webBgColor");
                    if (bgColor == null)
                      bgColor = "linear-gradient(to right, #00b09b, #96c93d)";
                    textColor = t2.$index(t1, "textcolor");
                    time = t2.$index(t1, "time") == null ? 3000 : A.int_parse(J.toString$0$(t2.$index(t1, "time")), null) * 1000;
                    showClose = t2.$index(t1, "webShowClose");
                    if (showClose == null)
                      showClose = false;
                    t1 = A.stringReplaceAllUnchecked(msg, "'", "\\'");
                    m = A.stringReplaceAllUnchecked(t1, "\n", "<br />");
                    t1 = document;
                    ele = t1.querySelector("#toast-content");
                    if (t1.querySelector("#toast-content") != null) {
                      ele.toString;
                      J.remove$0$ax(ele);
                    }
                    scriptText = t1.createElement("script");
                    scriptText.id = "toast-content";
                    B.ScriptElement_methods.setInnerHtml$1(scriptText, "          var toastElement = Toastify({\n            text: '" + m + "',\n            gravity: '" + A.S(gravity) + "',\n            position: '" + position + "',\n            duration: " + time + ",\n            close: " + A.S(showClose) + ',\n            backgroundColor: "' + bgColor + '",\n          });\n          toastElement.showToast();\n        ');
                    t2 = t1.querySelector("head");
                    t2.toString;
                    J.get$children$x(t2).add$1(0, scriptText);
                    if (textColor != null) {
                      t1 = t1.querySelector(".toastify");
                      t1.toString;
                      tcRadix = B.JSInt_methods.toRadixString$1(textColor, 16);
                      t2 = B.JSString_methods.substring$1(tcRadix, 2);
                      t3 = B.JSString_methods.substring$2(tcRadix, 0, 2);
                      t1 = t1.style;
                      t1.toString;
                      t4 = B.CssStyleDeclaration_methods._browserPropertyName$1(t1, "color");
                      t1.setProperty(t4, "#" + (t2 + t3), "");
                    }
                    $async$returnValue = true;
                    // goto return
                    $async$goto = 1;
                    break $async$outer;
                  default:
                    throw A.wrapException(A.PlatformException$("Unimplemented", "The fluttertoast plugin for web doesn't implement the method '" + t1 + "'"));
                }
              case 1:
                // return
                return A._asyncReturn($async$returnValue, $async$completer);
            }
      });
      return A._asyncStartSync($async$handleMethodCall$1, $async$completer);
    },
    injectCssAndJSLibraries$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        t2, jsUrl, script, loading, tags, cssUrl, t1, css;
      var $async$injectCssAndJSLibraries$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              loading = A._setArrayType([], type$.JSArray_Future_void);
              tags = A._setArrayType([], type$.JSArray_HtmlElement);
              cssUrl = $._assetManager.getAssetUrl$1("packages/fluttertoast/assets/toastify.css");
              t1 = document;
              css = t1.createElement("link");
              css.id = "toast-css";
              t2 = type$.String;
              B.LinkElement_methods.set$attributes(css, A.LinkedHashMap_LinkedHashMap$_literal(["rel", "stylesheet"], t2, t2));
              css.href = cssUrl;
              tags.push(css);
              jsUrl = $._assetManager.getAssetUrl$1("packages/fluttertoast/assets/toastify.js");
              script = t1.createElement("script");
              script.async = true;
              script.src = jsUrl;
              t2 = new A._ElementEventStreamImpl(script, "load", false, type$._ElementEventStreamImpl_Event);
              loading.push(t2.get$first(t2));
              tags.push(script);
              t1 = t1.querySelector("head");
              t1.toString;
              J.get$children$x(t1).addAll$1(0, tags);
              $async$goto = 2;
              return A._asyncAwait(A.Future_wait(loading, type$.void), $async$injectCssAndJSLibraries$0);
            case 2:
              // returning from await.
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$injectCssAndJSLibraries$0, $async$completer);
    }
  };
  A.PlatformInterface.prototype = {};
  A.SharedPreferencesStorePlatform.prototype = {};
  A.SharedPreferencesPlugin.prototype = {};
  A.main_closure0.prototype = {
    call$0() {
      return A.main0();
    },
    $signature: 0
  };
  A.main_closure.prototype = {
    call$0() {
      var instance, t3,
        registrar = $.$get$webPluginRegistrar(),
        t1 = $.$get$AudioplayersPlatformInterface__token(),
        t2 = $.$get$PlatformInterface__instanceTokens();
      t2.$indexSet(0, new A.WebAudioplayersPlatform(A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.WrappedPlayer)), t1);
      A.StreamController_StreamController$broadcast(type$.GlobalAudioEvent);
      new A.MethodChannel("flutter_native_splash", B.C_StandardMethodCodec0, registrar).setMethodCallHandler$1(new A.FlutterNativeSplashWeb().get$handleMethodCall());
      instance = new A.FluttertoastWebPlugin();
      instance.injectCssAndJSLibraries$0();
      new A.MethodChannel("PonnamKarthik/fluttertoast", B.C_StandardMethodCodec0, registrar).setMethodCallHandler$1(instance.get$handleMethodCall());
      t1 = $.$get$SharedPreferencesStorePlatform__token();
      t3 = new A.SharedPreferencesPlugin();
      t2.$indexSet(0, t3, t1);
      A.PlatformInterface__verify(t3, t1, true);
      $.pluginMessageCallHandler = registrar.get$handleFrameworkMessage();
    },
    $signature: 0
  };
  (function aliases() {
    var _ = A.DefaultTextEditingStrategy.prototype;
    _.super$DefaultTextEditingStrategy$initializeTextEditing = _.initializeTextEditing$3$onAction$onChange;
    _.super$DefaultTextEditingStrategy$updateElementStyle = _.updateElementStyle$1;
    _.super$DefaultTextEditingStrategy$disable = _.disable$0;
    _ = J.Interceptor.prototype;
    _.super$Interceptor$toString = _.toString$0;
    _ = J.LegacyJavaScriptObject.prototype;
    _.super$LegacyJavaScriptObject$toString = _.toString$0;
    _ = A.ListBase.prototype;
    _.super$ListBase$setRange = _.setRange$4;
    _ = A.Converter.prototype;
    _.super$Converter$fuse = _.fuse$1$1;
    _ = A._StringSinkConversionSink.prototype;
    _.super$_StringSinkConversionSink$close = _.close$0;
    _ = A.Iterable.prototype;
    _.super$Iterable$where = _.where$1;
    _ = A.Object.prototype;
    _.super$Object$toString = _.toString$0;
    _ = A.Element.prototype;
    _.super$Element$createFragment = _.createFragment$3$treeSanitizer$validator;
    _ = A._SimpleNodeValidator.prototype;
    _.super$_SimpleNodeValidator$allowsAttribute = _.allowsAttribute$3;
    _ = A.Diagnosticable.prototype;
    _.super$Diagnosticable$debugFillProperties = _.debugFillProperties$1;
  })();
  (function installTearOffs() {
    var _static_2 = hunkHelpers._static_2,
      _static = hunkHelpers.installStaticTearOff,
      _static_1 = hunkHelpers._static_1,
      _instance_0_u = hunkHelpers._instance_0u,
      _instance_1_u = hunkHelpers._instance_1u,
      _instance_1_i = hunkHelpers._instance_1i,
      _static_0 = hunkHelpers._static_0,
      _instance_2_u = hunkHelpers._instance_2u,
      _instance_0_i = hunkHelpers._instance_0i,
      _instance = hunkHelpers.installInstanceTearOff;
    _static_2(A, "_engine__canvasKitWasmModuleUrl$closure", "canvasKitWasmModuleUrl", 100);
    _static(A, "_engine___defaultFactory$closure", 1, function() {
      return {params: null};
    }, ["call$2$params", "call$1"], ["_defaultFactory", function(viewId) {
      return A._defaultFactory(viewId, null);
    }], 101, 0);
    _static_1(A, "_engine___noopCallback$closure", "_noopCallback", 5);
    _static_1(A, "_engine___emptyCallback$closure", "_emptyCallback", 8);
    _instance_0_u(A.AlarmClock.prototype, "get$_timerDidFire", "_timerDidFire$0", 0);
    _instance_1_u(A.FlutterViewEmbedder.prototype, "get$_metricsDidChange", "_metricsDidChange$1", 55);
    _instance_1_u(A.KeyboardBinding.prototype, "get$_onKeyData", "_onKeyData$1", 21);
    _instance_1_i(A.MultiEntriesBrowserHistory.prototype, "get$onPopState", "onPopState$1", 11);
    _instance_1_i(A.SingleEntryBrowserHistory.prototype, "get$onPopState", "onPopState$1", 11);
    _instance_1_u(A.HighContrastSupport.prototype, "get$_onHighContrastChange", "_onHighContrastChange$1", 1);
    var _;
    _instance_0_u(_ = A.EnginePlatformDispatcher.prototype, "get$dispose", "dispose$0", 0);
    _instance_1_u(_, "get$_updateHighContrast", "_updateHighContrast$1", 22);
    _instance_1_u(A.PointerBinding.prototype, "get$_onPointerData", "_onPointerData$1", 103);
    _instance_1_u(_ = A.CompositionAwareMixin.prototype, "get$_handleCompositionStart", "_handleCompositionStart$1", 1);
    _instance_1_u(_, "get$_handleCompositionUpdate", "_handleCompositionUpdate$1", 1);
    _instance_1_u(_, "get$_handleCompositionEnd", "_handleCompositionEnd$1", 1);
    _instance_1_u(_ = A.DefaultTextEditingStrategy.prototype, "get$handleChange", "handleChange$1", 1);
    _instance_1_u(_, "get$handleBeforeInput", "handleBeforeInput$1", 1);
    _instance_1_u(_, "get$maybeSendAction", "maybeSendAction$1", 1);
    _instance_1_u(A.CustomElementDimensionsProvider.prototype, "get$_broadcastSize", "_broadcastSize$1", 52);
    _instance_1_u(A.FullPageDimensionsProvider.prototype, "get$_onVisualViewportResize", "_onVisualViewportResize$1", 1);
    _static_2(J, "_interceptors_JSArray__compareAny$closure", "JSArray__compareAny", 102);
    _static_0(A, "_js_helper_Primitives_dateNow$closure", "Primitives_dateNow", 14);
    _static_1(A, "async__AsyncRun__scheduleImmediateJsOverride$closure", "_AsyncRun__scheduleImmediateJsOverride", 16);
    _static_1(A, "async__AsyncRun__scheduleImmediateWithSetImmediate$closure", "_AsyncRun__scheduleImmediateWithSetImmediate", 16);
    _static_1(A, "async__AsyncRun__scheduleImmediateWithTimer$closure", "_AsyncRun__scheduleImmediateWithTimer", 16);
    _static_0(A, "async___startMicrotaskLoop$closure", "_startMicrotaskLoop", 0);
    _static_1(A, "async___nullDataHandler$closure", "_nullDataHandler", 8);
    _static_2(A, "async___nullErrorHandler$closure", "_nullErrorHandler", 18);
    _static_0(A, "async___nullDoneHandler$closure", "_nullDoneHandler", 0);
    _instance_2_u(A._Future.prototype, "get$_completeError", "_completeError$2", 18);
    _instance_0_u(A._DoneStreamSubscription.prototype, "get$_onMicrotask", "_onMicrotask$0", 0);
    _static_1(A, "convert___defaultToEncodable$closure", "_defaultToEncodable", 39);
    _instance_0_i(A._JsonDecoderSink.prototype, "get$close", "close$0", 0);
    _static_1(A, "core_Uri_decodeComponent$closure", "Uri_decodeComponent", 15);
    _static_0(A, "core__Uri__createList$closure", "_Uri__createList", 104);
    _static_2(A, "core___toUnmodifiableStringList$closure", "_toUnmodifiableStringList", 105);
    _static(A, "html__Html5NodeValidator__standardAttributeValidator$closure", 4, null, ["call$4"], ["_Html5NodeValidator__standardAttributeValidator"], 20, 0);
    _static(A, "html__Html5NodeValidator__uriAttributeValidator$closure", 4, null, ["call$4"], ["_Html5NodeValidator__uriAttributeValidator"], 20, 0);
    _static(A, "assertions_FlutterError_dumpErrorToConsole$closure", 1, null, ["call$2$forceReport", "call$1"], ["FlutterError_dumpErrorToConsole", function(details) {
      return A.FlutterError_dumpErrorToConsole(details, false);
    }], 107, 0);
    _static_1(A, "assertions_DiagnosticsStackTrace__createStackFrame$closure", "DiagnosticsStackTrace__createStackFrame", 108);
    _instance_1_i(A.DiagnosticPropertiesBuilder.prototype, "get$add", "add$1", 96);
    _static_1(A, "stack_frame_StackFrame_fromStackTraceLine$closure", "StackFrame_fromStackTraceLine", 109);
    _instance_1_u(A.FlutterNativeSplashWeb.prototype, "get$handleMethodCall", "handleMethodCall$1", 38);
    _instance(A.Registrar.prototype, "get$handleFrameworkMessage", 0, 3, null, ["call$3"], ["handleFrameworkMessage$3"], 99, 0, 0);
    _instance_1_u(A.FluttertoastWebPlugin.prototype, "get$handleMethodCall", "handleMethodCall$1", 38);
    _static(A, "print__debugPrintThrottled$closure", 1, null, ["call$2$wrapWidth", "call$1"], ["debugPrintThrottled", function(message) {
      return A.debugPrintThrottled(message, null);
    }], 73, 0);
    _static_0(A, "print___debugPrintTask$closure", "_debugPrintTask", 0);
  })();
  (function inheritance() {
    var _mixin = hunkHelpers.mixin,
      _inheritMany = hunkHelpers.inheritMany,
      _inherit = hunkHelpers.inherit;
    _inheritMany(null, [A.Object, A.FlutterError]);
    _inheritMany(A.Object, [A.AlarmClock, A.AppBootstrap, A.Closure, A._Enum, A.SkiaFontCollection, A.RegisteredFont, A.UnregisteredFont, A.FontDownloadResult, A.CompositorContext, A.Rasterizer, A.CanvasKitRenderer, A.Surface, A.SurfaceFactory, A.ClipboardMessageHandler, A.ClipboardAPICopyStrategy, A.ClipboardAPIPasteStrategy, A.ExecCommandCopyStrategy, A.ExecCommandPasteStrategy, A.FlutterConfiguration, A.Display, A.ScreenOrientation, A.HttpFetchResponseImpl, A.HttpFetchPayloadImpl, A.HttpFetchNoPayloadError, A.HttpFetchError, A.DomSubscription, A.DomPoint, A._DomListIterator, A.Iterable, A._DomTouchListIterator, A.FlutterViewEmbedder, A.FontAsset, A.FontFamily, A.FontManifest, A.Error, A.AssetFontsResult, A.HtmlRenderer, A.KeyboardBinding, A.FlutterHtmlKeyboardEvent, A.KeyboardConverter, A.ContextMenu, A.MouseCursor, A.BrowserHistory, A.HighContrastSupport, A.PlatformDispatcher, A.ViewConfiguration, A.PlatformConfiguration, A.PlatformViewManager, A.PlatformViewMessageHandler, A.SafariPointerEventWorkaround, A.PointerBinding, A.PointerSupportDetector, A._Listener, A._BaseAdapter, A._WheelEventListenerMixin, A._SanitizedDetails, A._ButtonSanitizer, A._PointerState, A.PointerDataConverter, A.Profiler, A.RawKeyboard, A.AccessibilityAnnouncements, A.EngineAccessibilityFeatures, A.EngineAccessibilityFeaturesBuilder, A.EngineSemanticsOwner, A.SemanticsHelper, A.SemanticsEnabler, A._DefaultTextEditingStrategy_Object_CompositionAwareMixin, A.ListBase, A.MethodCall, A.JSONMessageCodec, A.JSONMethodCodec, A.StandardMessageCodec, A.StandardMethodCodec, A.WriteBuffer, A.ReadBuffer, A.HtmlFontCollection, A.UnicodeRange, A.UnicodePropertyLookup, A.BrowserAutofillHints, A.CompositionAwareMixin, A.EngineInputAction, A.EngineInputType, A.TextCapitalizationConfig, A.EngineAutofillForm, A.AutofillInfo, A.TextEditingDeltaState, A.EditingState, A.InputConfiguration, A.TextInputCommand, A.TextEditingChannel, A.HybridTextEditing, A.EditableTextStyle, A.EditableTextGeometry, A.DimensionsProvider, A.EmbeddingStrategy, A.FlutterView, A.ViewPadding, A.JS_CONST, J.Interceptor, J.ArrayIterator, A.CastIterator, A.SentinelValue, A.ListIterator, A.MappedIterator, A.WhereIterator, A.TakeIterator, A.SkipIterator, A.SkipWhileIterator, A.EmptyIterator, A.WhereTypeIterator, A.FixedLengthListMixin, A.UnmodifiableListMixin, A.Symbol, A._Record, A.MapView, A.ConstantMap, A._KeysOrValuesOrElementsIterator, A.SetBase, A.JSInvocationMirror, A.TypeErrorDecoder, A.NullThrownFromJavaScriptException, A.ExceptionAndStackTrace, A._StackTrace, A._Required, A.MapBase, A.LinkedHashMapCell, A.LinkedHashMapKeyIterator, A.JSSyntaxRegExp, A._MatchImplementation, A._AllMatchesIterator, A.StringMatch, A._StringAllMatchesIterator, A._Cell, A._InitializedCell, A.Rti, A._FunctionParameters, A._Type, A._StringStream, A.LocaleKeymap, A._TimerImpl, A._AsyncAwaitCompleter, A._SyncStarIterator, A.AsyncError, A.Stream, A._BufferingStreamSubscription, A._BroadcastStreamController, A._Completer, A._FutureListener, A._Future, A._AsyncCallbackEntry, A._DelayedEvent, A._DelayedDone, A._PendingEvents, A._DoneStreamSubscription, A._StreamIterator, A._Zone, A._HashMapKeyIterator, A._LinkedHashSetCell, A._LinkedHashSetIterator, A._UnmodifiableMapMixin, A._ListQueueIterator, A.StringConversionSink, A.Codec, A.Converter, A._Base64Encoder, A.ByteConversionSink, A.ChunkedConversionSink, A._SimpleCallbackSink, A._JsonStringifier, A._ClosableStringSink, A._StringConversionSinkAsStringSinkAdapter, A._Utf8Encoder, A._Utf8Decoder, A.DateTime, A.Duration, A.OutOfMemoryError, A.StackOverflowError, A._Exception, A.FormatException, A.MapEntry, A.Null, A._StringStackTrace, A.Stopwatch, A.StringBuffer, A._Uri, A.UriData, A._SimpleUri, A.Expando, A.ServiceExtensionResponse, A.CssStyleDeclarationBase, A.EventStreamProvider, A._EventStreamSubscription, A._Html5NodeValidator, A.ImmutableListMixin, A.NodeValidatorBuilder, A._SimpleNodeValidator, A._SvgNodeValidator, A.FixedSizeListIterator, A._SameOriginUriPolicy, A._ValidatingTreeSanitizer, A.NullRejectionException, A.Endian, A._StoredMessage, A._Channel, A.ChannelBuffers, A.OffsetBase, A.Rect, A.KeyData, A.Color, A.Locale, A.PointerData, A.PointerDataPacket, A.TextRange, A.GestureSettings, A.AssetManager, A.BrowserPlatformLocation, A.HashUrlStrategy, A.PlatformInterface, A.GlobalAudioplayersPlatformInterface, A.DiagnosticsNode, A._FlutterErrorDetails_Object_Diagnosticable, A._NoDefaultValue, A.DiagnosticPropertiesBuilder, A.Diagnosticable, A.WriteBuffer0, A.ReadBuffer0, A.StackFrame, A.BinaryMessenger, A.MethodCall0, A.PlatformException, A.StandardMessageCodec0, A.StandardMethodCodec0, A.MethodChannel, A.FlutterNativeSplashWeb, A.FluttertoastWebPlugin]);
    _inheritMany(A.Closure, [A.Closure0Args, A.AppBootstrap_prepareEngineInitializer_closure0, A.AppBootstrap__prepareAppRunner_closure, A._canvasKitJsUrls_closure, A._downloadCanvasKitJs_loadEventHandler, A._downloadCanvasKitJs_errorEventHandler, A.SkiaFontCollection_registerDownloadedFonts_makeRegisterFont, A.ClipboardMessageHandler_setDataMethodCall_closure, A.ClipboardMessageHandler_setDataMethodCall_closure0, A.ClipboardMessageHandler_getDataMethodCall_closure, A.ClipboardMessageHandler_getDataMethodCall_closure0, A.ClipboardMessageHandler_getDataMethodCall__closure, A.ClipboardMessageHandler_hasStringsMethodCall_closure, A.ClipboardMessageHandler_hasStringsMethodCall_closure0, A.ClipboardMessageHandler_hasStringsMethodCall__closure, A.DomConsoleExtension_get_warn_closure, A.DomNavigatorExtension_get_languages_closure, A.Closure2Args, A._ttPolicy_closure, A.fetchFontManifest_closure, A.fetchFontManifest_closure0, A.fetchFontManifest_closure1, A.fetchFontManifest__closure, A.FlutterEngineInitializer__staticInteropFactoryStub_closure, A.FlutterAppRunner__staticInteropFactoryStub_closure, A.futureToPromise__closure, A.futureToPromise__closure0, A._kLogicalKeyToModifierGetter_closure, A._kLogicalKeyToModifierGetter_closure0, A._kLogicalKeyToModifierGetter_closure1, A._kLogicalKeyToModifierGetter_closure2, A._kLogicalKeyToModifierGetter_closure3, A._kLogicalKeyToModifierGetter_closure4, A._kLogicalKeyToModifierGetter_closure5, A._kLogicalKeyToModifierGetter_closure6, A.KeyboardBinding$__closure, A.KeyboardBinding$__closure0, A.KeyboardBinding__addEventListener_loggedHandler, A.KeyboardBinding__onKeyData_closure, A.KeyboardConverter__scheduleAsyncEvent_closure, A.KeyboardConverter_handleEvent_closure, A.preventDefaultListener_closure, A.MultiEntriesBrowserHistory_onPopState_closure, A.SingleEntryBrowserHistory_onPopState_closure, A.SingleEntryBrowserHistory_onPopState_closure0, A.EnginePlatformDispatcher__sendPlatformMessage_closure, A.EnginePlatformDispatcher__sendPlatformMessage_closure0, A.EnginePlatformDispatcher__sendPlatformMessage_closure1, A.EnginePlatformDispatcher__sendPlatformMessage_closure2, A.EnginePlatformDispatcher__addLocaleChangedListener_closure, A.EnginePlatformDispatcher__addBrightnessMediaQueryListener_closure, A.EnginePlatformDispatcher_replyToPlatformMessage_closure, A.SafariPointerEventWorkaround_workAroundMissingPointerEvents_closure, A._BaseAdapter_addEventListener_loggedHandler, A._PointerAdapter__addPointerEventListener_closure, A._PointerAdapter_setup_closure, A._PointerAdapter_setup_closure0, A._PointerAdapter_setup_closure1, A._PointerAdapter_setup_closure2, A._PointerAdapter_setup_closure3, A._PointerAdapter_setup_closure4, A._TouchAdapter__addTouchEventListener_closure, A._TouchAdapter_setup_closure, A._TouchAdapter_setup_closure0, A._TouchAdapter_setup_closure1, A._TouchAdapter_setup_closure2, A._MouseAdapter__addMouseEventListener_closure, A._MouseAdapter_setup_closure, A._MouseAdapter_setup_closure0, A._MouseAdapter_setup_closure1, A._MouseAdapter_setup_closure2, A._MouseAdapter_setup_closure3, A.RawKeyboard$__closure, A.RawKeyboard$__closure0, A.RawKeyboard__handleHtmlEvent_closure0, A.DesktopSemanticsEnabler_prepareAccessibilityPlaceholder_closure, A.MobileSemanticsEnabler_prepareAccessibilityPlaceholder_closure, A.EngineAutofillForm_addInputEventListeners_addSubscriptionForKey, A.EngineAutofillForm_addInputEventListeners_addSubscriptionForKey_closure, A.DefaultTextEditingStrategy_addEventHandlers_closure, A.DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure, A.DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure0, A.DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure1, A.IOSTextEditingStrategy_addEventHandlers_closure, A.IOSTextEditingStrategy_addEventHandlers_closure0, A.IOSTextEditingStrategy__addTapListener_closure, A.AndroidTextEditingStrategy_addEventHandlers_closure, A.FirefoxTextEditingStrategy_addEventHandlers_closure, A.FirefoxTextEditingStrategy_addEventHandlers_closure0, A.HybridTextEditing__startEditing_closure, A.EditableTextGeometry_EditableTextGeometry$fromFrameworkMessage_closure, A.CustomElementDimensionsProvider__closure, A.CustomElementEmbeddingStrategy_initialize_closure, A.FullPageEmbeddingStrategy_initialize_closure, A.TearOffClosure, A.JsLinkedHashMap_values_closure, A.JsLinkedHashMap_containsValue_closure, A.initHooks_closure, A.initHooks_closure1, A._StringStream__goalToEventCode_closure, A._AsyncRun__initializeScheduleImmediate_internalCallback, A._AsyncRun__initializeScheduleImmediate_closure, A._awaitOnObject_closure, A.Future_wait_closure, A._Future__chainForeignFuture_closure, A._Future__propagateToListeners_handleWhenCompleteCallback_closure, A.Stream_length_closure, A.Stream_first_closure0, A._RootZone_bindUnaryCallbackGuarded_closure, A.MapBase_entries_closure, A._Uri__splitQueryStringAll_parsePair, A._createTables_setChars, A._createTables_setRange, A.Element_Element$html_closure, A._EventStreamSubscription_closure, A._EventStreamSubscription_onData_closure, A.NodeValidatorBuilder_allowsElement_closure, A.NodeValidatorBuilder_allowsAttribute_closure, A._SimpleNodeValidator_closure, A._SimpleNodeValidator_closure0, A._TemplatingNodeValidator_closure, A.FilteredElementList__iterable_closure, A.FilteredElementList__iterable_closure0, A.FilteredElementList_removeRange_closure, A.jsify__convert, A.promiseToFuture_closure, A.promiseToFuture_closure0, A.dartify_convert, A.KeyData__quotedCharCode_closure, A.bootstrapEngine_closure, A.HashUrlStrategy_addPopStateListener_wrappedFn, A.HashUrlStrategy__waitForPopState_closure, A.FlutterErrorDetails_summary_closure, A.FlutterErrorDetails_debugFillProperties_closure, A.FlutterError_defaultStackFilter_closure, A.FlutterError_defaultStackFilter_closure0, A.debugPrintStack_closure, A.StackFrame_fromStackString_closure, A.MethodChannel_setMethodCallHandler_closure]);
    _inheritMany(A.Closure0Args, [A.AppBootstrap_prepareEngineInitializer_closure, A.SkiaFontCollection__registerWithFontProvider_closure, A.SkiaFontCollection__registerWithFontProvider_closure0, A.SkiaFontCollection_loadAssetFonts_closure, A.SkiaFontCollection_loadAssetFonts_closure0, A.CanvasKitRenderer_initialize_closure, A.HtmlRenderer_initialize_closure, A.initializeEngineServices_initializeRendererCallback, A.FlutterEngineInitializer__staticInteropFactoryStub_closure0, A._cached_closure, A.KeyboardConverter__scheduleAsyncEvent_closure0, A.KeyboardConverter__startGuardingKey_closure, A.KeyboardConverter__startGuardingKey_closure0, A.KeyboardConverter__handleEvent_closure, A.KeyboardConverter__handleEvent_closure0, A.KeyboardConverter__handleEvent_closure1, A.PlatformViewManager_renderContent_closure, A._PointerAdapter__ensureSanitizer_closure, A.PointerDataConverter__ensureStateForPointer_closure, A.RawKeyboard$__closure1, A.RawKeyboard__handleHtmlEvent_closure, A.AccessibilityAnnouncements_announce_closure, A.EngineSemanticsOwner$__closure, A.EngineSemanticsOwner__now_closure, A.EngineSemanticsOwner__getGestureModeClock_closure, A.MobileSemanticsEnabler_tryEnableSemantics_closure, A.HtmlFontCollection_loadAssetFonts_closure, A.HtmlFontCollection_loadAssetFonts_closure0, A.HtmlFontCollection_loadAssetFonts_closure1, A.SafariDesktopTextEditingStrategy_placeElement_closure, A.IOSTextEditingStrategy__schedulePlacement_closure, A.FirefoxTextEditingStrategy__postponeFocus_closure, A.TextEditingChannel_handleTextInput_closure, A.EngineFlutterWindow_closure, A.EngineFlutterWindow_handleNavigationMessage_closure, A.nullFuture_closure, A.Primitives_initTicker_closure, A._AsyncRun__scheduleImmediateJsOverride_internalCallback, A._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback, A._TimerImpl_internalCallback, A.Future_Future$delayed_closure, A._Future__addListener_closure, A._Future__prependListeners_closure, A._Future__chainForeignFuture_closure1, A._Future__chainCoreFutureAsync_closure, A._Future__asyncCompleteWithValue_closure, A._Future__asyncCompleteError_closure, A._Future__propagateToListeners_handleWhenCompleteCallback, A._Future__propagateToListeners_handleValueCallback, A._Future__propagateToListeners_handleError, A.Stream_length_closure0, A.Stream_first_closure, A._BufferingStreamSubscription__sendDone_sendDone, A._PendingEvents_schedule_closure, A._cancelAndValue_closure, A._rootHandleError_closure, A._RootZone_bindCallbackGuarded_closure, A.Utf8Decoder__decoder_closure, A.Utf8Decoder__decoderNonfatal_closure, A.ChannelBuffers_push_closure, A.KeyData__logicalToString_closure, A.bootstrapEngine_closure0, A.BrowserPlatformLocation_getOrCreateDomEventListener_closure, A.HashUrlStrategy_addPopStateListener_closure, A.FlutterErrorDetails_summary_formatException, A.FlutterErrorDetails_summary_closure0, A.main_closure0, A.main_closure]);
    _inheritMany(A._Enum, [A.BrowserEngine, A.OperatingSystem, A.CanvasKitVariant, A.DebugEngineInitializationState, A.Assertiveness, A.GestureMode, A.TextCapitalization, A.TransformKind, A.LineCharProperty, A.KeyEventType, A.AppLifecycleState, A.PointerChange, A.PointerDeviceKind, A.PointerSignalKind, A.TextAlign, A.TextDirection, A.Brightness, A.DiagnosticLevel, A.DiagnosticsTreeStyle]);
    _inherit(A.EngineFlutterDisplay, A.Display);
    _inheritMany(A.Closure2Args, [A.createDomResizeObserver_closure, A.initializeEngineServices_closure, A.futureToPromise_closure, A.KeyboardConverter__handleEvent_closure2, A.KeyboardConverter__handleEvent__closure, A.EnginePlatformDispatcher__addFontSizeObserver_closure, A.StandardMessageCodec_writeValue_closure, A.saveForms_closure, A.HybridTextEditing__startEditing_closure0, A.CustomElementDimensionsProvider_closure, A.Primitives_functionNoSuchMethod_closure, A.initHooks_closure0, A._awaitOnObject_closure0, A._wrapJsFunctionForAsync_closure, A.Future_wait_handleError, A._Future__chainForeignFuture_closure0, A._RootZone_bindBinaryCallback_closure, A.LinkedHashMap_LinkedHashMap$from_closure, A.MapBase_mapToString_closure, A._JsonStringifier_writeMap_closure, A.NoSuchMethodError_toString_closure, A.Uri__parseIPv4Address_error, A.Uri_parseIPv6Address_error, A.Uri_parseIPv6Address_parseHex, A._Uri__makeQuery_writeParameter, A._Uri__makeQuery_closure, A._createTables_build, A.MidiInputMap_keys_closure, A.MidiOutputMap_keys_closure, A.RtcStatsReport_keys_closure, A.Storage_keys_closure, A._ValidatingTreeSanitizer_sanitizeTree_walk, A.AudioParamMap_keys_closure, A.StandardMessageCodec_writeValue_closure0]);
    _inheritMany(A.Iterable, [A._DomListWrapper, A._DomTouchListWrapper, A._CastIterableBase, A.EfficientLengthIterable, A.MappedIterable, A.WhereIterable, A.TakeIterable, A.SkipIterable, A.SkipWhileIterable, A.WhereTypeIterable, A._KeysOrValues, A._SyncStarIterable]);
    _inheritMany(A.Error, [A.FontLoadError, A.LateError, A.TypeError, A.JsNoSuchMethodError, A.UnknownJsTypeError, A._CyclicInitializationError, A.RuntimeError, A._Error, A.JsonUnsupportedObjectError, A.AssertionError, A.ArgumentError, A.NoSuchMethodError, A.UnsupportedError, A.UnimplementedError, A.StateError, A.ConcurrentModificationError]);
    _inheritMany(A.FontLoadError, [A.FontNotFoundError, A.FontDownloadError, A.FontInvalidDataError]);
    _inheritMany(A.BrowserHistory, [A.MultiEntriesBrowserHistory, A.SingleEntryBrowserHistory]);
    _inherit(A.EnginePlatformDispatcher, A.PlatformDispatcher);
    _inheritMany(A._BaseAdapter, [A.__PointerAdapter__BaseAdapter__WheelEventListenerMixin, A._TouchAdapter, A.__MouseAdapter__BaseAdapter__WheelEventListenerMixin]);
    _inherit(A._PointerAdapter, A.__PointerAdapter__BaseAdapter__WheelEventListenerMixin);
    _inherit(A._MouseAdapter, A.__MouseAdapter__BaseAdapter__WheelEventListenerMixin);
    _inheritMany(A.SemanticsEnabler, [A.DesktopSemanticsEnabler, A.MobileSemanticsEnabler]);
    _inherit(A.DefaultTextEditingStrategy, A._DefaultTextEditingStrategy_Object_CompositionAwareMixin);
    _inheritMany(A.DefaultTextEditingStrategy, [A.SemanticsTextEditingStrategy, A.GloballyPositionedTextEditingStrategy, A.SafariDesktopTextEditingStrategy]);
    _inheritMany(A.ListBase, [A._TypedDataBuffer, A.UnmodifiableListBase, A._ChildrenElementList, A._ChildNodeListLazy, A.FilteredElementList]);
    _inherit(A._IntBuffer, A._TypedDataBuffer);
    _inherit(A.Uint8Buffer, A._IntBuffer);
    _inheritMany(A.EngineInputAction, [A.NoInputAction, A.EnterInputAction, A.DoneInputAction, A.GoInputAction, A.NextInputAction, A.PreviousInputAction, A.SearchInputAction, A.SendInputAction]);
    _inheritMany(A.EngineInputType, [A.NoTextInputType, A.TextInputType, A.NumberInputType, A.DecimalInputType, A.PhoneInputType, A.EmailInputType, A.UrlInputType, A.MultilineInputType]);
    _inheritMany(A.GloballyPositionedTextEditingStrategy, [A.IOSTextEditingStrategy, A.AndroidTextEditingStrategy, A.FirefoxTextEditingStrategy]);
    _inheritMany(A.TextInputCommand, [A.TextInputSetClient, A.TextInputUpdateConfig, A.TextInputSetEditingState, A.TextInputShow, A.TextInputSetEditableSizeAndTransform, A.TextInputSetStyle, A.TextInputClearClient, A.TextInputHide, A.TextInputSetMarkedTextRect, A.TextInputSetCaretRect, A.TextInputRequestAutofill, A.TextInputFinishAutofillContext]);
    _inheritMany(A.DimensionsProvider, [A.CustomElementDimensionsProvider, A.FullPageDimensionsProvider]);
    _inheritMany(A.EmbeddingStrategy, [A.CustomElementEmbeddingStrategy, A.FullPageEmbeddingStrategy]);
    _inherit(A.SingletonFlutterWindow, A.FlutterView);
    _inherit(A.EngineFlutterWindow, A.SingletonFlutterWindow);
    _inheritMany(J.Interceptor, [J.JSBool, J.JSNull, J.JavaScriptObject, J.JavaScriptBigInt, J.JavaScriptSymbol, J.JSNumber, J.JSString]);
    _inheritMany(J.JavaScriptObject, [J.LegacyJavaScriptObject, J.JSArray, A.NativeByteBuffer, A.NativeTypedData, A.EventTarget, A.AccessibleNodeList, A.Blob, A.CssTransformComponent, A.CssRule, A._CssStyleDeclaration_JavaScriptObject_CssStyleDeclarationBase, A.CssStyleValue, A.DataTransferItemList, A.DomException0, A._DomRectList_JavaScriptObject_ListMixin, A.DomRectReadOnly0, A._DomStringList_JavaScriptObject_ListMixin, A.DomTokenList0, A.Event, A._FileList_JavaScriptObject_ListMixin, A.Gamepad, A.History, A._HtmlCollection_JavaScriptObject_ListMixin, A.Location, A.MediaList, A._MidiInputMap_JavaScriptObject_MapMixin, A._MidiOutputMap_JavaScriptObject_MapMixin, A.MimeType, A._MimeTypeArray_JavaScriptObject_ListMixin, A._NodeList_JavaScriptObject_ListMixin, A.Plugin, A._PluginArray_JavaScriptObject_ListMixin, A._RtcStatsReport_JavaScriptObject_MapMixin, A.SpeechGrammar, A._SpeechGrammarList_JavaScriptObject_ListMixin, A.SpeechRecognitionResult, A._Storage_JavaScriptObject_MapMixin, A.StyleSheet, A._TextTrackCueList_JavaScriptObject_ListMixin, A.TimeRanges, A.Touch, A._TouchList_JavaScriptObject_ListMixin, A.TrackDefaultList, A.Url, A.__CssRuleList_JavaScriptObject_ListMixin, A.__GamepadList_JavaScriptObject_ListMixin, A.__NamedNodeMap_JavaScriptObject_ListMixin, A.__SpeechRecognitionResultList_JavaScriptObject_ListMixin, A.__StyleSheetList_JavaScriptObject_ListMixin, A.Length, A._LengthList_JavaScriptObject_ListMixin, A.Number, A._NumberList_JavaScriptObject_ListMixin, A.PointList, A._StringList_JavaScriptObject_ListMixin, A.Transform, A._TransformList_JavaScriptObject_ListMixin, A.AudioBuffer, A._AudioParamMap_JavaScriptObject_MapMixin]);
    _inheritMany(J.LegacyJavaScriptObject, [J.PlainJavaScriptObject, J.UnknownJavaScriptObject, J.JavaScriptFunction]);
    _inherit(J.JSUnmodifiableArray, J.JSArray);
    _inheritMany(J.JSNumber, [J.JSInt, J.JSNumNotInt]);
    _inheritMany(A._CastIterableBase, [A.CastIterable, A.__CastListBase__CastIterableBase_ListMixin]);
    _inherit(A._EfficientLengthCastIterable, A.CastIterable);
    _inherit(A._CastListBase, A.__CastListBase__CastIterableBase_ListMixin);
    _inherit(A.CastList, A._CastListBase);
    _inherit(A.CodeUnits, A.UnmodifiableListBase);
    _inheritMany(A.EfficientLengthIterable, [A.ListIterable, A.EmptyIterable, A.LinkedHashMapKeyIterable, A._HashMapKeyIterable]);
    _inheritMany(A.ListIterable, [A.SubListIterable, A.MappedListIterable, A.ListQueue, A._JsonMapKeyIterable]);
    _inherit(A.EfficientLengthMappedIterable, A.MappedIterable);
    _inherit(A.EfficientLengthTakeIterable, A.TakeIterable);
    _inherit(A.EfficientLengthSkipIterable, A.SkipIterable);
    _inheritMany(A._Record, [A._Record2, A._EmptyRecord]);
    _inherit(A._Record_2, A._Record2);
    _inherit(A._UnmodifiableMapView_MapView__UnmodifiableMapMixin, A.MapView);
    _inherit(A.UnmodifiableMapView, A._UnmodifiableMapView_MapView__UnmodifiableMapMixin);
    _inherit(A.ConstantMapView, A.UnmodifiableMapView);
    _inheritMany(A.ConstantMap, [A.ConstantStringMap, A.GeneralConstantMap]);
    _inheritMany(A.SetBase, [A.ConstantSet, A._SetBase]);
    _inheritMany(A.ConstantSet, [A.ConstantStringSet, A.GeneralConstantSet]);
    _inherit(A.NullError, A.TypeError);
    _inheritMany(A.TearOffClosure, [A.StaticClosure, A.BoundClosure]);
    _inheritMany(A.MapBase, [A.JsLinkedHashMap, A._HashMap, A._JsonMap, A._AttributeMap]);
    _inherit(A.JsConstantLinkedHashMap, A.JsLinkedHashMap);
    _inheritMany(A.NativeTypedData, [A.NativeByteData, A.NativeTypedArray]);
    _inheritMany(A.NativeTypedArray, [A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin, A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin]);
    _inherit(A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin, A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin);
    _inherit(A.NativeTypedArrayOfDouble, A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin);
    _inherit(A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin, A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin);
    _inherit(A.NativeTypedArrayOfInt, A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin);
    _inheritMany(A.NativeTypedArrayOfDouble, [A.NativeFloat32List, A.NativeFloat64List]);
    _inheritMany(A.NativeTypedArrayOfInt, [A.NativeInt16List, A.NativeInt32List, A.NativeInt8List, A.NativeUint16List, A.NativeUint32List, A.NativeUint8ClampedList, A.NativeUint8List]);
    _inherit(A._TypeError, A._Error);
    _inheritMany(A.Stream, [A._StreamImpl, A._EventStream]);
    _inherit(A._ControllerStream, A._StreamImpl);
    _inherit(A._BroadcastStream, A._ControllerStream);
    _inherit(A._ControllerSubscription, A._BufferingStreamSubscription);
    _inherit(A._BroadcastSubscription, A._ControllerSubscription);
    _inherit(A._AsyncBroadcastStreamController, A._BroadcastStreamController);
    _inherit(A._AsyncCompleter, A._Completer);
    _inherit(A._DelayedData, A._DelayedEvent);
    _inherit(A._RootZone, A._Zone);
    _inherit(A._IdentityHashMap, A._HashMap);
    _inherit(A._LinkedHashSet, A._SetBase);
    _inherit(A._StringSinkConversionSink, A.StringConversionSink);
    _inherit(A._JsonDecoderSink, A._StringSinkConversionSink);
    _inheritMany(A.Codec, [A.Base64Codec, A.Encoding, A.JsonCodec]);
    _inheritMany(A.Converter, [A.Base64Encoder, A._FusedConverter, A.JsonEncoder, A.JsonDecoder, A.Utf8Encoder, A.Utf8Decoder]);
    _inheritMany(A.ByteConversionSink, [A._Base64EncoderSink, A._ByteAdapterSink, A._Utf8StringSinkAdapter]);
    _inherit(A._Utf8Base64EncoderSink, A._Base64EncoderSink);
    _inherit(A.JsonCyclicError, A.JsonUnsupportedObjectError);
    _inherit(A._JsonEncoderSink, A.ChunkedConversionSink);
    _inherit(A._JsonStringStringifier, A._JsonStringifier);
    _inherit(A.Utf8Codec, A.Encoding);
    _inherit(A.__Utf8EncoderSink__Utf8Encoder_StringConversionSink, A._Utf8Encoder);
    _inherit(A._Utf8EncoderSink, A.__Utf8EncoderSink__Utf8Encoder_StringConversionSink);
    _inheritMany(A.ArgumentError, [A.RangeError, A.IndexError]);
    _inherit(A._DataUri, A._Uri);
    _inheritMany(A.EventTarget, [A.Node, A.FileWriter, A.SourceBuffer, A._SourceBufferList_EventTarget_ListMixin, A.TextTrack, A.TextTrackCue, A._TextTrackList_EventTarget_ListMixin, A.VideoTrackList, A.AudioTrackList, A.BaseAudioContext]);
    _inheritMany(A.Node, [A.Element, A.CharacterData, A._Attr]);
    _inheritMany(A.Element, [A.HtmlElement, A.SvgElement]);
    _inheritMany(A.HtmlElement, [A.AnchorElement, A.AreaElement, A.BaseElement, A.BodyElement, A.FormElement, A.LinkElement, A.ScriptElement, A.SelectElement, A.TableElement, A.TableRowElement, A.TableSectionElement, A.TemplateElement]);
    _inherit(A.CssPerspective, A.CssTransformComponent);
    _inherit(A.CssStyleDeclaration, A._CssStyleDeclaration_JavaScriptObject_CssStyleDeclarationBase);
    _inheritMany(A.CssStyleValue, [A.CssTransformValue, A.CssUnparsedValue]);
    _inherit(A._DomRectList_JavaScriptObject_ListMixin_ImmutableListMixin, A._DomRectList_JavaScriptObject_ListMixin);
    _inherit(A.DomRectList, A._DomRectList_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A._DomStringList_JavaScriptObject_ListMixin_ImmutableListMixin, A._DomStringList_JavaScriptObject_ListMixin);
    _inherit(A.DomStringList, A._DomStringList_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A.File, A.Blob);
    _inherit(A._FileList_JavaScriptObject_ListMixin_ImmutableListMixin, A._FileList_JavaScriptObject_ListMixin);
    _inherit(A.FileList, A._FileList_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A._HtmlCollection_JavaScriptObject_ListMixin_ImmutableListMixin, A._HtmlCollection_JavaScriptObject_ListMixin);
    _inherit(A.HtmlCollection, A._HtmlCollection_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A.MidiInputMap, A._MidiInputMap_JavaScriptObject_MapMixin);
    _inherit(A.MidiOutputMap, A._MidiOutputMap_JavaScriptObject_MapMixin);
    _inherit(A._MimeTypeArray_JavaScriptObject_ListMixin_ImmutableListMixin, A._MimeTypeArray_JavaScriptObject_ListMixin);
    _inherit(A.MimeTypeArray, A._MimeTypeArray_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A._NodeList_JavaScriptObject_ListMixin_ImmutableListMixin, A._NodeList_JavaScriptObject_ListMixin);
    _inherit(A.NodeList, A._NodeList_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A._PluginArray_JavaScriptObject_ListMixin_ImmutableListMixin, A._PluginArray_JavaScriptObject_ListMixin);
    _inherit(A.PluginArray, A._PluginArray_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A.RtcStatsReport, A._RtcStatsReport_JavaScriptObject_MapMixin);
    _inherit(A._SourceBufferList_EventTarget_ListMixin_ImmutableListMixin, A._SourceBufferList_EventTarget_ListMixin);
    _inherit(A.SourceBufferList, A._SourceBufferList_EventTarget_ListMixin_ImmutableListMixin);
    _inherit(A._SpeechGrammarList_JavaScriptObject_ListMixin_ImmutableListMixin, A._SpeechGrammarList_JavaScriptObject_ListMixin);
    _inherit(A.SpeechGrammarList, A._SpeechGrammarList_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A.Storage, A._Storage_JavaScriptObject_MapMixin);
    _inherit(A._TextTrackCueList_JavaScriptObject_ListMixin_ImmutableListMixin, A._TextTrackCueList_JavaScriptObject_ListMixin);
    _inherit(A.TextTrackCueList, A._TextTrackCueList_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A._TextTrackList_EventTarget_ListMixin_ImmutableListMixin, A._TextTrackList_EventTarget_ListMixin);
    _inherit(A.TextTrackList, A._TextTrackList_EventTarget_ListMixin_ImmutableListMixin);
    _inherit(A._TouchList_JavaScriptObject_ListMixin_ImmutableListMixin, A._TouchList_JavaScriptObject_ListMixin);
    _inherit(A.TouchList, A._TouchList_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A.__CssRuleList_JavaScriptObject_ListMixin_ImmutableListMixin, A.__CssRuleList_JavaScriptObject_ListMixin);
    _inherit(A._CssRuleList, A.__CssRuleList_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A._DomRect, A.DomRectReadOnly0);
    _inherit(A.__GamepadList_JavaScriptObject_ListMixin_ImmutableListMixin, A.__GamepadList_JavaScriptObject_ListMixin);
    _inherit(A._GamepadList, A.__GamepadList_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A.__NamedNodeMap_JavaScriptObject_ListMixin_ImmutableListMixin, A.__NamedNodeMap_JavaScriptObject_ListMixin);
    _inherit(A._NamedNodeMap, A.__NamedNodeMap_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A.__SpeechRecognitionResultList_JavaScriptObject_ListMixin_ImmutableListMixin, A.__SpeechRecognitionResultList_JavaScriptObject_ListMixin);
    _inherit(A._SpeechRecognitionResultList, A.__SpeechRecognitionResultList_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A.__StyleSheetList_JavaScriptObject_ListMixin_ImmutableListMixin, A.__StyleSheetList_JavaScriptObject_ListMixin);
    _inherit(A._StyleSheetList, A.__StyleSheetList_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A._ElementAttributeMap, A._AttributeMap);
    _inherit(A._ElementEventStreamImpl, A._EventStream);
    _inherit(A._TemplatingNodeValidator, A._SimpleNodeValidator);
    _inherit(A._LengthList_JavaScriptObject_ListMixin_ImmutableListMixin, A._LengthList_JavaScriptObject_ListMixin);
    _inherit(A.LengthList, A._LengthList_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A._NumberList_JavaScriptObject_ListMixin_ImmutableListMixin, A._NumberList_JavaScriptObject_ListMixin);
    _inherit(A.NumberList, A._NumberList_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A.ScriptElement0, A.SvgElement);
    _inherit(A._StringList_JavaScriptObject_ListMixin_ImmutableListMixin, A._StringList_JavaScriptObject_ListMixin);
    _inherit(A.StringList, A._StringList_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A._TransformList_JavaScriptObject_ListMixin_ImmutableListMixin, A._TransformList_JavaScriptObject_ListMixin);
    _inherit(A.TransformList, A._TransformList_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inheritMany(A.OffsetBase, [A.Offset, A.Size]);
    _inherit(A.AudioParamMap, A._AudioParamMap_JavaScriptObject_MapMixin);
    _inherit(A.OfflineAudioContext, A.BaseAudioContext);
    _inheritMany(A.PlatformInterface, [A.AudioplayersPlatformInterface, A.SharedPreferencesStorePlatform]);
    _inherit(A.WebAudioplayersPlatform, A.AudioplayersPlatformInterface);
    _inherit(A.WebGlobalAudioplayersPlatform, A.GlobalAudioplayersPlatformInterface);
    _inheritMany(A.DiagnosticsNode, [A.DiagnosticsProperty, A.DiagnosticsBlock, A.DiagnosticableNode]);
    _inheritMany(A.DiagnosticsProperty, [A._ErrorDiagnostic, A.ErrorSpacer]);
    _inheritMany(A._ErrorDiagnostic, [A.ErrorDescription, A.ErrorSummary]);
    _inherit(A.FlutterErrorDetails, A._FlutterErrorDetails_Object_Diagnosticable);
    _inherit(A.DiagnosticsStackTrace, A.DiagnosticsBlock);
    _inherit(A._FlutterErrorDetailsNode, A.DiagnosticableNode);
    _inherit(A.Registrar, A.BinaryMessenger);
    _inherit(A.PluginRegistry, A.Registrar);
    _inherit(A.SharedPreferencesPlugin, A.SharedPreferencesStorePlatform);
    _mixin(A._DefaultTextEditingStrategy_Object_CompositionAwareMixin, A.CompositionAwareMixin);
    _mixin(A.__MouseAdapter__BaseAdapter__WheelEventListenerMixin, A._WheelEventListenerMixin);
    _mixin(A.__PointerAdapter__BaseAdapter__WheelEventListenerMixin, A._WheelEventListenerMixin);
    _mixin(A.UnmodifiableListBase, A.UnmodifiableListMixin);
    _mixin(A.__CastListBase__CastIterableBase_ListMixin, A.ListBase);
    _mixin(A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin, A.ListBase);
    _mixin(A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin, A.FixedLengthListMixin);
    _mixin(A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin, A.ListBase);
    _mixin(A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin, A.FixedLengthListMixin);
    _mixin(A._UnmodifiableMapView_MapView__UnmodifiableMapMixin, A._UnmodifiableMapMixin);
    _mixin(A.__Utf8EncoderSink__Utf8Encoder_StringConversionSink, A.StringConversionSink);
    _mixin(A._CssStyleDeclaration_JavaScriptObject_CssStyleDeclarationBase, A.CssStyleDeclarationBase);
    _mixin(A._DomRectList_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A._DomRectList_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A._DomStringList_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A._DomStringList_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A._FileList_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A._FileList_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A._HtmlCollection_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A._HtmlCollection_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A._MidiInputMap_JavaScriptObject_MapMixin, A.MapBase);
    _mixin(A._MidiOutputMap_JavaScriptObject_MapMixin, A.MapBase);
    _mixin(A._MimeTypeArray_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A._MimeTypeArray_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A._NodeList_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A._NodeList_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A._PluginArray_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A._PluginArray_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A._RtcStatsReport_JavaScriptObject_MapMixin, A.MapBase);
    _mixin(A._SourceBufferList_EventTarget_ListMixin, A.ListBase);
    _mixin(A._SourceBufferList_EventTarget_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A._SpeechGrammarList_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A._SpeechGrammarList_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A._Storage_JavaScriptObject_MapMixin, A.MapBase);
    _mixin(A._TextTrackCueList_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A._TextTrackCueList_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A._TextTrackList_EventTarget_ListMixin, A.ListBase);
    _mixin(A._TextTrackList_EventTarget_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A._TouchList_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A._TouchList_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A.__CssRuleList_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A.__CssRuleList_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A.__GamepadList_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A.__GamepadList_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A.__NamedNodeMap_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A.__NamedNodeMap_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A.__SpeechRecognitionResultList_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A.__SpeechRecognitionResultList_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A.__StyleSheetList_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A.__StyleSheetList_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A._LengthList_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A._LengthList_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A._NumberList_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A._NumberList_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A._StringList_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A._StringList_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A._TransformList_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A._TransformList_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A._AudioParamMap_JavaScriptObject_MapMixin, A.MapBase);
    _mixin(A._FlutterErrorDetails_Object_Diagnosticable, A.Diagnosticable);
  })();
  var init = {
    typeUniverse: {eC: new Map(), tR: {}, eT: {}, tPV: {}, sEA: []},
    mangledGlobalNames: {int: "int", double: "double", num: "num", String: "String", bool: "bool", Null: "Null", List: "List"},
    mangledNames: {},
    types: ["~()", "~(JavaScriptObject)", "Null(JavaScriptObject)", "bool(FlutterHtmlKeyboardEvent)", "~(String,@)", "~(ByteData?)", "Null(@)", "Null(~)", "~(@)", "bool(String)", "String()", "~(Object?)", "Future<Null>()", "Null(bool)", "int()", "String(String)", "~(~())", "Null()", "~(Object,StackTrace)", "~(Object?,Object?)", "bool(Element,String,String,_Html5NodeValidator)", "bool(KeyData)", "~(bool)", "KeyData()", "JSObject([JavaScriptObject?])", "List<JavaScriptObject>()", "JavaScriptObject()", "Null(String)", "~(@,@)", "Future<JavaScriptObject>([JavaScriptObject?])", "@()", "~(Uint8List,String,int)", "bool(Node)", "~(Event)", "bool(NodeValidator)", "~(MapEntry<String,String>)", "Object?(Object?)", "int(int)", "Future<@>(MethodCall0)", "@(@)", "~(List<Object?>,JavaScriptObject)", "FontAsset(@)", "_PointerState()", "DateTime()", "Future<ServiceExtensionResponse>(String,Map<String,String>)", "Future<+(String,FontLoadError?)>()", "FontLoadError?()", "~(String)", "~(String,JavaScriptObject)", "~(EditingState?,TextEditingDeltaState?)", "~(String?)", "double(@)", "~(Size)", "~(List<JavaScriptObject>,JavaScriptObject)", "Size(JavaScriptObject)", "~(Size?)", "Future<bool>()", "Future<~>()", "UnregisteredFont()", "@(@,String)", "@(String)", "MapEntry<int,String>(MapEntry<String,String>)", "Null(~())", "JSObject()", "Null(Function,Function)", "Null(@,StackTrace)", "~(int,@)", "Null(Object?)", "Null(Object,StackTrace)", "_Future<@>(@)", "RegisteredFont?(ByteBuffer,String,String)", "String(Object?)", "~(Symbol0,@)", "~(String?{wrapWidth:int?})", "~(String,int?)", "int(int,int)", "~(String,String?)", "~(int,int,int)", "Uint8List(@,@)", "Null(List<Object?>,JavaScriptObject)", "String?(String)", "~(String,String)", "Future<JavaScriptObject>()", "~(int,bool(FlutterHtmlKeyboardEvent))", "bool(int,int)", "~(Node,Node?)", "Element(Node)", "~(Element)", "~(List<Object?>)", "_Channel()", "String(int)", "Future<~>([JavaScriptObject?])", "~(Object)", "bool(DiagnosticsNode?)", "bool(StackFrame)", "~(Uint8List)", "~(DiagnosticsNode)", "Future<ByteData?>(ByteData?)", "FontFamily(@)", "Future<~>(String,ByteData?,~(ByteData?)?)", "String(String,String)", "JavaScriptObject(int{params:Object?})", "int(@,@)", "~(Iterable<PointerData>)", "List<String>()", "List<String>(String,List<String>)", "_ButtonSanitizer()", "~(FlutterErrorDetails{forceReport:bool})", "DiagnosticsNode(String)", "StackFrame?(String)", "~(String,int)"],
    interceptorsByTag: null,
    leafTags: null,
    arrayRti: Symbol("$ti"),
    rttc: {
      "0;": o => o instanceof A._EmptyRecord,
      "2;": (t1, t2) => o => o instanceof A._Record_2 && t1._is(o._0) && t2._is(o._1)
    }
  };
  A._Universe_addRules(init.typeUniverse, JSON.parse('{"PlainJavaScriptObject":"LegacyJavaScriptObject","UnknownJavaScriptObject":"LegacyJavaScriptObject","JavaScriptFunction":"LegacyJavaScriptObject","KeyframeEffect":"JavaScriptObject","KeyframeEffectReadOnly":"JavaScriptObject","AnimationEffectReadOnly":"JavaScriptObject","AbortPaymentEvent":"Event","ExtendableEvent":"Event","AudioContext":"BaseAudioContext","AbsoluteOrientationSensor":"EventTarget","OrientationSensor":"EventTarget","Sensor":"EventTarget","AElement":"SvgElement","GraphicsElement":"SvgElement","AudioElement":"HtmlElement","MediaElement":"HtmlElement","HtmlDocument":"Node","Document":"Node","VttCue":"TextTrackCue","CDataSection":"CharacterData","Text":"CharacterData","MathMLElement":"Element","HtmlFormControlsCollection":"HtmlCollection","CssCharsetRule":"CssRule","CssMatrixComponent":"CssTransformComponent","CssStyleSheet":"StyleSheet","CssurlImageValue":"CssStyleValue","CssImageValue":"CssStyleValue","CssResourceValue":"CssStyleValue","FontLoadError":{"Error":[]},"HttpFetchResponseImpl":{"HttpFetchResponse":[]},"HttpFetchNoPayloadError":{"Exception":[]},"HttpFetchError":{"Exception":[]},"_DomListWrapper":{"Iterable":["1"],"Iterable.E":"1"},"_DomTouchListWrapper":{"Iterable":["1"],"Iterable.E":"1"},"FontNotFoundError":{"FontLoadError":[],"Error":[]},"FontDownloadError":{"FontLoadError":[],"Error":[]},"FontInvalidDataError":{"FontLoadError":[],"Error":[]},"_TypedDataBuffer":{"ListBase":["1"],"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"_IntBuffer":{"_TypedDataBuffer":["int"],"ListBase":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"]},"Uint8Buffer":{"_TypedDataBuffer":["int"],"ListBase":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"_TypedDataBuffer.E":"int","ListBase.E":"int"},"EngineFlutterWindow":{"FlutterView":[]},"JSBool":{"bool":[],"TrustedGetRuntimeType":[]},"JSNull":{"Null":[],"TrustedGetRuntimeType":[]},"LegacyJavaScriptObject":{"JavaScriptObject":[]},"JSArray":{"List":["1"],"JavaScriptObject":[],"EfficientLengthIterable":["1"],"Iterable":["1"]},"JSUnmodifiableArray":{"JSArray":["1"],"List":["1"],"JavaScriptObject":[],"EfficientLengthIterable":["1"],"Iterable":["1"]},"JSNumber":{"double":[],"num":[]},"JSInt":{"double":[],"int":[],"num":[],"TrustedGetRuntimeType":[]},"JSNumNotInt":{"double":[],"num":[],"TrustedGetRuntimeType":[]},"JSString":{"String":[],"TrustedGetRuntimeType":[]},"_CastIterableBase":{"Iterable":["2"]},"CastIterable":{"_CastIterableBase":["1","2"],"Iterable":["2"],"Iterable.E":"2"},"_EfficientLengthCastIterable":{"CastIterable":["1","2"],"_CastIterableBase":["1","2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"Iterable.E":"2"},"_CastListBase":{"ListBase":["2"],"List":["2"],"_CastIterableBase":["1","2"],"EfficientLengthIterable":["2"],"Iterable":["2"]},"CastList":{"_CastListBase":["1","2"],"ListBase":["2"],"List":["2"],"_CastIterableBase":["1","2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"Iterable.E":"2","ListBase.E":"2"},"LateError":{"Error":[]},"CodeUnits":{"ListBase":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"ListBase.E":"int"},"EfficientLengthIterable":{"Iterable":["1"]},"ListIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"]},"SubListIterable":{"ListIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1","ListIterable.E":"1"},"MappedIterable":{"Iterable":["2"],"Iterable.E":"2"},"EfficientLengthMappedIterable":{"MappedIterable":["1","2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"Iterable.E":"2"},"MappedListIterable":{"ListIterable":["2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"Iterable.E":"2","ListIterable.E":"2"},"WhereIterable":{"Iterable":["1"],"Iterable.E":"1"},"TakeIterable":{"Iterable":["1"],"Iterable.E":"1"},"EfficientLengthTakeIterable":{"TakeIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"SkipIterable":{"Iterable":["1"],"Iterable.E":"1"},"EfficientLengthSkipIterable":{"SkipIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"SkipWhileIterable":{"Iterable":["1"],"Iterable.E":"1"},"EmptyIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"WhereTypeIterable":{"Iterable":["1"],"Iterable.E":"1"},"UnmodifiableListBase":{"ListBase":["1"],"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"Symbol":{"Symbol0":[]},"ConstantMapView":{"Map":["1","2"]},"ConstantMap":{"Map":["1","2"]},"ConstantStringMap":{"ConstantMap":["1","2"],"Map":["1","2"]},"_KeysOrValues":{"Iterable":["1"],"Iterable.E":"1"},"GeneralConstantMap":{"ConstantMap":["1","2"],"Map":["1","2"]},"ConstantSet":{"SetBase":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"ConstantStringSet":{"SetBase":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"GeneralConstantSet":{"SetBase":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"NullError":{"TypeError":[],"Error":[]},"JsNoSuchMethodError":{"Error":[]},"UnknownJsTypeError":{"Error":[]},"NullThrownFromJavaScriptException":{"Exception":[]},"_StackTrace":{"StackTrace":[]},"Closure":{"Function":[]},"Closure0Args":{"Function":[]},"Closure2Args":{"Function":[]},"TearOffClosure":{"Function":[]},"StaticClosure":{"Function":[]},"BoundClosure":{"Function":[]},"_CyclicInitializationError":{"Error":[]},"RuntimeError":{"Error":[]},"JsLinkedHashMap":{"MapBase":["1","2"],"Map":["1","2"],"MapBase.V":"2","MapBase.K":"1"},"LinkedHashMapKeyIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"JsConstantLinkedHashMap":{"JsLinkedHashMap":["1","2"],"MapBase":["1","2"],"Map":["1","2"],"MapBase.V":"2","MapBase.K":"1"},"_MatchImplementation":{"RegExpMatch":[]},"NativeByteBuffer":{"JavaScriptObject":[],"ByteBuffer":[],"TrustedGetRuntimeType":[]},"NativeTypedData":{"JavaScriptObject":[]},"NativeByteData":{"JavaScriptObject":[],"ByteData":[],"TrustedGetRuntimeType":[]},"NativeTypedArray":{"JavaScriptIndexingBehavior":["1"],"JavaScriptObject":[]},"NativeTypedArrayOfDouble":{"ListBase":["double"],"List":["double"],"JavaScriptIndexingBehavior":["double"],"JavaScriptObject":[],"EfficientLengthIterable":["double"],"Iterable":["double"]},"NativeTypedArrayOfInt":{"ListBase":["int"],"List":["int"],"JavaScriptIndexingBehavior":["int"],"JavaScriptObject":[],"EfficientLengthIterable":["int"],"Iterable":["int"]},"NativeFloat32List":{"ListBase":["double"],"Float32List":[],"List":["double"],"JavaScriptIndexingBehavior":["double"],"JavaScriptObject":[],"EfficientLengthIterable":["double"],"Iterable":["double"],"TrustedGetRuntimeType":[],"ListBase.E":"double"},"NativeFloat64List":{"ListBase":["double"],"Float64List":[],"List":["double"],"JavaScriptIndexingBehavior":["double"],"JavaScriptObject":[],"EfficientLengthIterable":["double"],"Iterable":["double"],"TrustedGetRuntimeType":[],"ListBase.E":"double"},"NativeInt16List":{"NativeTypedArrayOfInt":[],"ListBase":["int"],"Int16List":[],"List":["int"],"JavaScriptIndexingBehavior":["int"],"JavaScriptObject":[],"EfficientLengthIterable":["int"],"Iterable":["int"],"TrustedGetRuntimeType":[],"ListBase.E":"int"},"NativeInt32List":{"NativeTypedArrayOfInt":[],"ListBase":["int"],"Int32List":[],"List":["int"],"JavaScriptIndexingBehavior":["int"],"JavaScriptObject":[],"EfficientLengthIterable":["int"],"Iterable":["int"],"TrustedGetRuntimeType":[],"ListBase.E":"int"},"NativeInt8List":{"NativeTypedArrayOfInt":[],"ListBase":["int"],"Int8List":[],"List":["int"],"JavaScriptIndexingBehavior":["int"],"JavaScriptObject":[],"EfficientLengthIterable":["int"],"Iterable":["int"],"TrustedGetRuntimeType":[],"ListBase.E":"int"},"NativeUint16List":{"NativeTypedArrayOfInt":[],"ListBase":["int"],"Uint16List":[],"List":["int"],"JavaScriptIndexingBehavior":["int"],"JavaScriptObject":[],"EfficientLengthIterable":["int"],"Iterable":["int"],"TrustedGetRuntimeType":[],"ListBase.E":"int"},"NativeUint32List":{"NativeTypedArrayOfInt":[],"ListBase":["int"],"Uint32List":[],"List":["int"],"JavaScriptIndexingBehavior":["int"],"JavaScriptObject":[],"EfficientLengthIterable":["int"],"Iterable":["int"],"TrustedGetRuntimeType":[],"ListBase.E":"int"},"NativeUint8ClampedList":{"NativeTypedArrayOfInt":[],"ListBase":["int"],"Uint8ClampedList":[],"List":["int"],"JavaScriptIndexingBehavior":["int"],"JavaScriptObject":[],"EfficientLengthIterable":["int"],"Iterable":["int"],"TrustedGetRuntimeType":[],"ListBase.E":"int"},"NativeUint8List":{"NativeTypedArrayOfInt":[],"ListBase":["int"],"Uint8List":[],"List":["int"],"JavaScriptIndexingBehavior":["int"],"JavaScriptObject":[],"EfficientLengthIterable":["int"],"Iterable":["int"],"TrustedGetRuntimeType":[],"ListBase.E":"int"},"_Error":{"Error":[]},"_TypeError":{"TypeError":[],"Error":[]},"_Future":{"Future":["1"]},"_TimerImpl":{"Timer":[]},"_SyncStarIterable":{"Iterable":["1"],"Iterable.E":"1"},"AsyncError":{"Error":[]},"_BroadcastStream":{"Stream":["1"]},"_AsyncBroadcastStreamController":{"_BroadcastStreamController":["1"]},"_AsyncCompleter":{"_Completer":["1"]},"_ControllerStream":{"Stream":["1"]},"_StreamImpl":{"Stream":["1"]},"_HashMap":{"MapBase":["1","2"],"Map":["1","2"]},"_IdentityHashMap":{"_HashMap":["1","2"],"MapBase":["1","2"],"Map":["1","2"],"MapBase.V":"2","MapBase.K":"1"},"_HashMapKeyIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"_LinkedHashSet":{"_SetBase":["1"],"SetBase":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"ListBase":{"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"MapBase":{"Map":["1","2"]},"MapView":{"Map":["1","2"]},"UnmodifiableMapView":{"Map":["1","2"]},"ListQueue":{"ListIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1","ListIterable.E":"1"},"SetBase":{"EfficientLengthIterable":["1"],"Iterable":["1"]},"_SetBase":{"SetBase":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"_JsonMap":{"MapBase":["String","@"],"Map":["String","@"],"MapBase.V":"@","MapBase.K":"String"},"_JsonMapKeyIterable":{"ListIterable":["String"],"EfficientLengthIterable":["String"],"Iterable":["String"],"Iterable.E":"String","ListIterable.E":"String"},"JsonUnsupportedObjectError":{"Error":[]},"JsonCyclicError":{"Error":[]},"double":{"num":[]},"int":{"num":[]},"List":{"EfficientLengthIterable":["1"],"Iterable":["1"]},"AssertionError":{"Error":[]},"TypeError":{"Error":[]},"ArgumentError":{"Error":[]},"RangeError":{"Error":[]},"IndexError":{"Error":[]},"NoSuchMethodError":{"Error":[]},"UnsupportedError":{"Error":[]},"UnimplementedError":{"Error":[]},"StateError":{"Error":[]},"ConcurrentModificationError":{"Error":[]},"OutOfMemoryError":{"Error":[]},"StackOverflowError":{"Error":[]},"_Exception":{"Exception":[]},"FormatException":{"Exception":[]},"_StringStackTrace":{"StackTrace":[]},"_Uri":{"Uri":[]},"_SimpleUri":{"Uri":[]},"_DataUri":{"Uri":[]},"HtmlElement":{"Element":[],"Node":[],"JavaScriptObject":[]},"CssRule":{"JavaScriptObject":[]},"Element":{"Node":[],"JavaScriptObject":[]},"Event":{"JavaScriptObject":[]},"File":{"JavaScriptObject":[]},"Gamepad":{"JavaScriptObject":[]},"MimeType":{"JavaScriptObject":[]},"Node":{"JavaScriptObject":[]},"Plugin":{"JavaScriptObject":[]},"SourceBuffer":{"JavaScriptObject":[]},"SpeechGrammar":{"JavaScriptObject":[]},"SpeechRecognitionResult":{"JavaScriptObject":[]},"StyleSheet":{"JavaScriptObject":[]},"TextTrack":{"JavaScriptObject":[]},"TextTrackCue":{"JavaScriptObject":[]},"Touch":{"JavaScriptObject":[]},"_Html5NodeValidator":{"NodeValidator":[]},"AccessibleNodeList":{"JavaScriptObject":[]},"AnchorElement":{"HtmlElement":[],"Element":[],"Node":[],"JavaScriptObject":[]},"AreaElement":{"HtmlElement":[],"Element":[],"Node":[],"JavaScriptObject":[]},"BaseElement":{"HtmlElement":[],"Element":[],"Node":[],"JavaScriptObject":[]},"Blob":{"JavaScriptObject":[]},"BodyElement":{"HtmlElement":[],"Element":[],"Node":[],"JavaScriptObject":[]},"CharacterData":{"Node":[],"JavaScriptObject":[]},"CssPerspective":{"JavaScriptObject":[]},"CssStyleDeclaration":{"JavaScriptObject":[]},"CssStyleValue":{"JavaScriptObject":[]},"CssTransformComponent":{"JavaScriptObject":[]},"CssTransformValue":{"JavaScriptObject":[]},"CssUnparsedValue":{"JavaScriptObject":[]},"DataTransferItemList":{"JavaScriptObject":[]},"DomException0":{"JavaScriptObject":[]},"DomRectList":{"ListBase":["Rectangle<num>"],"List":["Rectangle<num>"],"JavaScriptIndexingBehavior":["Rectangle<num>"],"JavaScriptObject":[],"EfficientLengthIterable":["Rectangle<num>"],"Iterable":["Rectangle<num>"],"ListBase.E":"Rectangle<num>"},"DomRectReadOnly0":{"JavaScriptObject":[],"Rectangle":["num"]},"DomStringList":{"ListBase":["String"],"List":["String"],"JavaScriptIndexingBehavior":["String"],"JavaScriptObject":[],"EfficientLengthIterable":["String"],"Iterable":["String"],"ListBase.E":"String"},"DomTokenList0":{"JavaScriptObject":[]},"_ChildrenElementList":{"ListBase":["Element"],"List":["Element"],"EfficientLengthIterable":["Element"],"Iterable":["Element"],"ListBase.E":"Element"},"EventTarget":{"JavaScriptObject":[]},"FileList":{"ListBase":["File"],"List":["File"],"JavaScriptIndexingBehavior":["File"],"JavaScriptObject":[],"EfficientLengthIterable":["File"],"Iterable":["File"],"ListBase.E":"File"},"FileWriter":{"JavaScriptObject":[]},"FormElement":{"HtmlElement":[],"Element":[],"Node":[],"JavaScriptObject":[]},"History":{"JavaScriptObject":[]},"HtmlCollection":{"ListBase":["Node"],"List":["Node"],"JavaScriptIndexingBehavior":["Node"],"JavaScriptObject":[],"EfficientLengthIterable":["Node"],"Iterable":["Node"],"ListBase.E":"Node"},"LinkElement":{"HtmlElement":[],"Element":[],"Node":[],"JavaScriptObject":[]},"Location":{"JavaScriptObject":[]},"MediaList":{"JavaScriptObject":[]},"MidiInputMap":{"JavaScriptObject":[],"MapBase":["String","@"],"Map":["String","@"],"MapBase.V":"@","MapBase.K":"String"},"MidiOutputMap":{"JavaScriptObject":[],"MapBase":["String","@"],"Map":["String","@"],"MapBase.V":"@","MapBase.K":"String"},"MimeTypeArray":{"ListBase":["MimeType"],"List":["MimeType"],"JavaScriptIndexingBehavior":["MimeType"],"JavaScriptObject":[],"EfficientLengthIterable":["MimeType"],"Iterable":["MimeType"],"ListBase.E":"MimeType"},"_ChildNodeListLazy":{"ListBase":["Node"],"List":["Node"],"EfficientLengthIterable":["Node"],"Iterable":["Node"],"ListBase.E":"Node"},"NodeList":{"ListBase":["Node"],"List":["Node"],"JavaScriptIndexingBehavior":["Node"],"JavaScriptObject":[],"EfficientLengthIterable":["Node"],"Iterable":["Node"],"ListBase.E":"Node"},"PluginArray":{"ListBase":["Plugin"],"List":["Plugin"],"JavaScriptIndexingBehavior":["Plugin"],"JavaScriptObject":[],"EfficientLengthIterable":["Plugin"],"Iterable":["Plugin"],"ListBase.E":"Plugin"},"RtcStatsReport":{"JavaScriptObject":[],"MapBase":["String","@"],"Map":["String","@"],"MapBase.V":"@","MapBase.K":"String"},"ScriptElement":{"HtmlElement":[],"Element":[],"Node":[],"JavaScriptObject":[]},"SelectElement":{"HtmlElement":[],"Element":[],"Node":[],"JavaScriptObject":[]},"SourceBufferList":{"ListBase":["SourceBuffer"],"List":["SourceBuffer"],"JavaScriptIndexingBehavior":["SourceBuffer"],"JavaScriptObject":[],"EfficientLengthIterable":["SourceBuffer"],"Iterable":["SourceBuffer"],"ListBase.E":"SourceBuffer"},"SpeechGrammarList":{"ListBase":["SpeechGrammar"],"List":["SpeechGrammar"],"JavaScriptIndexingBehavior":["SpeechGrammar"],"JavaScriptObject":[],"EfficientLengthIterable":["SpeechGrammar"],"Iterable":["SpeechGrammar"],"ListBase.E":"SpeechGrammar"},"Storage":{"JavaScriptObject":[],"MapBase":["String","String"],"Map":["String","String"],"MapBase.V":"String","MapBase.K":"String"},"TableElement":{"HtmlElement":[],"Element":[],"Node":[],"JavaScriptObject":[]},"TableRowElement":{"HtmlElement":[],"Element":[],"Node":[],"JavaScriptObject":[]},"TableSectionElement":{"HtmlElement":[],"Element":[],"Node":[],"JavaScriptObject":[]},"TemplateElement":{"HtmlElement":[],"Element":[],"Node":[],"JavaScriptObject":[]},"TextTrackCueList":{"ListBase":["TextTrackCue"],"List":["TextTrackCue"],"JavaScriptIndexingBehavior":["TextTrackCue"],"JavaScriptObject":[],"EfficientLengthIterable":["TextTrackCue"],"Iterable":["TextTrackCue"],"ListBase.E":"TextTrackCue"},"TextTrackList":{"ListBase":["TextTrack"],"List":["TextTrack"],"JavaScriptIndexingBehavior":["TextTrack"],"JavaScriptObject":[],"EfficientLengthIterable":["TextTrack"],"Iterable":["TextTrack"],"ListBase.E":"TextTrack"},"TimeRanges":{"JavaScriptObject":[]},"TouchList":{"ListBase":["Touch"],"List":["Touch"],"JavaScriptIndexingBehavior":["Touch"],"JavaScriptObject":[],"EfficientLengthIterable":["Touch"],"Iterable":["Touch"],"ListBase.E":"Touch"},"TrackDefaultList":{"JavaScriptObject":[]},"Url":{"JavaScriptObject":[]},"VideoTrackList":{"JavaScriptObject":[]},"_Attr":{"Node":[],"JavaScriptObject":[]},"_CssRuleList":{"ListBase":["CssRule"],"List":["CssRule"],"JavaScriptIndexingBehavior":["CssRule"],"JavaScriptObject":[],"EfficientLengthIterable":["CssRule"],"Iterable":["CssRule"],"ListBase.E":"CssRule"},"_DomRect":{"JavaScriptObject":[],"Rectangle":["num"]},"_GamepadList":{"ListBase":["Gamepad?"],"List":["Gamepad?"],"JavaScriptIndexingBehavior":["Gamepad?"],"JavaScriptObject":[],"EfficientLengthIterable":["Gamepad?"],"Iterable":["Gamepad?"],"ListBase.E":"Gamepad?"},"_NamedNodeMap":{"ListBase":["Node"],"List":["Node"],"JavaScriptIndexingBehavior":["Node"],"JavaScriptObject":[],"EfficientLengthIterable":["Node"],"Iterable":["Node"],"ListBase.E":"Node"},"_SpeechRecognitionResultList":{"ListBase":["SpeechRecognitionResult"],"List":["SpeechRecognitionResult"],"JavaScriptIndexingBehavior":["SpeechRecognitionResult"],"JavaScriptObject":[],"EfficientLengthIterable":["SpeechRecognitionResult"],"Iterable":["SpeechRecognitionResult"],"ListBase.E":"SpeechRecognitionResult"},"_StyleSheetList":{"ListBase":["StyleSheet"],"List":["StyleSheet"],"JavaScriptIndexingBehavior":["StyleSheet"],"JavaScriptObject":[],"EfficientLengthIterable":["StyleSheet"],"Iterable":["StyleSheet"],"ListBase.E":"StyleSheet"},"_AttributeMap":{"MapBase":["String","String"],"Map":["String","String"]},"_ElementAttributeMap":{"MapBase":["String","String"],"Map":["String","String"],"MapBase.V":"String","MapBase.K":"String"},"_EventStream":{"Stream":["1"]},"_ElementEventStreamImpl":{"_EventStream":["1"],"Stream":["1"]},"NodeValidatorBuilder":{"NodeValidator":[]},"_SimpleNodeValidator":{"NodeValidator":[]},"_TemplatingNodeValidator":{"NodeValidator":[]},"_SvgNodeValidator":{"NodeValidator":[]},"FilteredElementList":{"ListBase":["Element"],"List":["Element"],"EfficientLengthIterable":["Element"],"Iterable":["Element"],"ListBase.E":"Element"},"NullRejectionException":{"Exception":[]},"Length":{"JavaScriptObject":[]},"Number":{"JavaScriptObject":[]},"Transform":{"JavaScriptObject":[]},"LengthList":{"ListBase":["Length"],"List":["Length"],"JavaScriptObject":[],"EfficientLengthIterable":["Length"],"Iterable":["Length"],"ListBase.E":"Length"},"NumberList":{"ListBase":["Number"],"List":["Number"],"JavaScriptObject":[],"EfficientLengthIterable":["Number"],"Iterable":["Number"],"ListBase.E":"Number"},"PointList":{"JavaScriptObject":[]},"ScriptElement0":{"SvgElement":[],"Element":[],"Node":[],"JavaScriptObject":[]},"StringList":{"ListBase":["String"],"List":["String"],"JavaScriptObject":[],"EfficientLengthIterable":["String"],"Iterable":["String"],"ListBase.E":"String"},"SvgElement":{"Element":[],"Node":[],"JavaScriptObject":[]},"TransformList":{"ListBase":["Transform"],"List":["Transform"],"JavaScriptObject":[],"EfficientLengthIterable":["Transform"],"Iterable":["Transform"],"ListBase.E":"Transform"},"Int8List":{"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"]},"Uint8List":{"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"]},"Uint8ClampedList":{"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"]},"Int16List":{"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"]},"Uint16List":{"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"]},"Int32List":{"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"]},"Uint32List":{"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"]},"Float32List":{"List":["double"],"EfficientLengthIterable":["double"],"Iterable":["double"]},"Float64List":{"List":["double"],"EfficientLengthIterable":["double"],"Iterable":["double"]},"SingletonFlutterWindow":{"FlutterView":[]},"AudioBuffer":{"JavaScriptObject":[]},"AudioParamMap":{"JavaScriptObject":[],"MapBase":["String","@"],"Map":["String","@"],"MapBase.V":"@","MapBase.K":"String"},"AudioTrackList":{"JavaScriptObject":[]},"BaseAudioContext":{"JavaScriptObject":[]},"OfflineAudioContext":{"JavaScriptObject":[]},"_ErrorDiagnostic":{"DiagnosticsNode":[]},"ErrorDescription":{"DiagnosticsNode":[]},"ErrorSummary":{"DiagnosticsNode":[]},"ErrorSpacer":{"DiagnosticsNode":[]},"DiagnosticsStackTrace":{"DiagnosticsNode":[]},"_FlutterErrorDetailsNode":{"DiagnosticsNode":[]},"DiagnosticsProperty":{"DiagnosticsNode":[]},"DiagnosticableNode":{"DiagnosticsNode":[]},"DiagnosticsBlock":{"DiagnosticsNode":[]},"PlatformException":{"Exception":[]}}'));
  A._Universe_addErasedTypes(init.typeUniverse, JSON.parse('{"ArrayIterator":1,"ListIterator":1,"MappedIterator":2,"WhereIterator":1,"TakeIterator":1,"SkipIterator":1,"SkipWhileIterator":1,"EmptyIterator":1,"FixedLengthListMixin":1,"UnmodifiableListMixin":1,"UnmodifiableListBase":1,"__CastListBase__CastIterableBase_ListMixin":2,"_KeysOrValuesOrElementsIterator":1,"ConstantSet":1,"LinkedHashMapKeyIterator":1,"NativeTypedArray":1,"_SyncStarIterator":1,"_ControllerStream":1,"_ControllerSubscription":1,"_BufferingStreamSubscription":1,"_StreamImpl":1,"_DelayedEvent":1,"_DelayedData":1,"_PendingEvents":1,"_DoneStreamSubscription":1,"_StreamIterator":1,"_HashMapKeyIterator":1,"_LinkedHashSetIterator":1,"_UnmodifiableMapMixin":2,"MapView":2,"UnmodifiableMapView":2,"_ListQueueIterator":1,"_UnmodifiableMapView_MapView__UnmodifiableMapMixin":2,"ChunkedConversionSink":1,"Codec":2,"Converter":2,"_FusedConverter":3,"_StringSinkConversionSink":1,"Expando":1,"_EventStreamSubscription":1,"ImmutableListMixin":1,"FixedSizeListIterator":1,"DiagnosticsProperty":1,"DiagnosticableNode":1}'));
  var string$ = {
    __has_: "' has been assigned during initialization.",
    ABCDEF: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
    Error_: "Error handler must accept one Object or one Object and a StackTrace as arguments, and return a value of the returned future's type",
    There_: "There was a problem trying to load FontManifest.json"
  };
  var type$ = (function rtii() {
    var findType = A.findType;
    return {
      AssertionError: findType("AssertionError"),
      AssetFontsResult: findType("AssetFontsResult"),
      AutofillInfo: findType("AutofillInfo"),
      BaseElement: findType("BaseElement"),
      BodyElement: findType("BodyElement"),
      ByteBuffer: findType("ByteBuffer"),
      ByteData: findType("ByteData"),
      CastList_of_DiagnosticsNode_and_nullable_DiagnosticsNode: findType("CastList<DiagnosticsNode,DiagnosticsNode?>"),
      CodeUnits: findType("CodeUnits"),
      ConstantMapView_Symbol_dynamic: findType("ConstantMapView<Symbol0,@>"),
      ConstantStringMap_String_String: findType("ConstantStringMap<String,String>"),
      ConstantStringMap_String_int: findType("ConstantStringMap<String,int>"),
      ConstantStringSet_String: findType("ConstantStringSet<String>"),
      DiagnosticsNode: findType("DiagnosticsNode"),
      EfficientLengthIterable_dynamic: findType("EfficientLengthIterable<@>"),
      Element: findType("Element"),
      Error: findType("Error"),
      Event: findType("Event"),
      Exception: findType("Exception"),
      Float32List: findType("Float32List"),
      Float64List: findType("Float64List"),
      FlutterError: findType("FlutterError"),
      FontAsset: findType("FontAsset"),
      FontDownloadResult: findType("FontDownloadResult"),
      FontFamily: findType("FontFamily"),
      FontLoadError: findType("FontLoadError"),
      FontManifest: findType("FontManifest"),
      Function: findType("Function"),
      Future_Record_0: findType("Future<+()>"),
      Future_ServiceExtensionResponse: findType("Future<ServiceExtensionResponse>"),
      Future_ServiceExtensionResponse_Function_2_String_and_Map_String_String: findType("Future<ServiceExtensionResponse>(String,Map<String,String>)"),
      Future_nullable_ByteData: findType("Future<ByteData?>"),
      GlobalAudioEvent: findType("GlobalAudioEvent"),
      HttpFetchResponse: findType("HttpFetchResponse"),
      Int16List: findType("Int16List"),
      Int32List: findType("Int32List"),
      Int8List: findType("Int8List"),
      Iterable_nullable_Object: findType("Iterable<Object?>"),
      JSArray_DiagnosticsNode: findType("JSArray<DiagnosticsNode>"),
      JSArray_DomSubscription: findType("JSArray<DomSubscription>"),
      JSArray_FontFamily: findType("JSArray<FontFamily>"),
      JSArray_FontLoadError: findType("JSArray<FontLoadError>"),
      JSArray_Future_FontDownloadResult: findType("JSArray<Future<FontDownloadResult>>"),
      JSArray_Future_Record_2_String_and_nullable_FontLoadError: findType("JSArray<Future<+(String,FontLoadError?)>>"),
      JSArray_Future_void: findType("JSArray<Future<~>>"),
      JSArray_HtmlElement: findType("JSArray<HtmlElement>"),
      JSArray_JavaScriptObject: findType("JSArray<JavaScriptObject>"),
      JSArray_Locale: findType("JSArray<Locale>"),
      JSArray_Map_String_dynamic: findType("JSArray<Map<String,@>>"),
      JSArray_NodeValidator: findType("JSArray<NodeValidator>"),
      JSArray_Object: findType("JSArray<Object>"),
      JSArray_PointerData: findType("JSArray<PointerData>"),
      JSArray_Record_2_String_and_UnregisteredFont: findType("JSArray<+(String,UnregisteredFont)>"),
      JSArray_RegisteredFont: findType("JSArray<RegisteredFont>"),
      JSArray_SemanticsObject: findType("JSArray<SemanticsObject>"),
      JSArray_String: findType("JSArray<String>"),
      JSArray_Surface: findType("JSArray<Surface>"),
      JSArray_UnregisteredFont: findType("JSArray<UnregisteredFont>"),
      JSArray__Listener: findType("JSArray<_Listener>"),
      JSArray_bool: findType("JSArray<bool>"),
      JSArray_dynamic: findType("JSArray<@>"),
      JSArray_int: findType("JSArray<int>"),
      JSArray_nullable_int: findType("JSArray<int?>"),
      JSArray_of_nullable_void_Function_GestureMode: findType("JSArray<~(GestureMode)?>"),
      JSArray_of_void_Function: findType("JSArray<~()>"),
      JSNull: findType("JSNull"),
      JavaScriptFunction: findType("JavaScriptFunction"),
      JavaScriptIndexingBehavior_dynamic: findType("JavaScriptIndexingBehavior<@>"),
      JavaScriptObject: findType("JavaScriptObject"),
      JsLinkedHashMap_Symbol_dynamic: findType("JsLinkedHashMap<Symbol0,@>"),
      LineCharProperty: findType("LineCharProperty"),
      List_JavaScriptObject: findType("List<JavaScriptObject>"),
      List_String: findType("List<String>"),
      List_dynamic: findType("List<@>"),
      MapEntry_int_String: findType("MapEntry<int,String>"),
      Map_String_String: findType("Map<String,String>"),
      Map_String_dynamic: findType("Map<String,@>"),
      Map_String_int: findType("Map<String,int>"),
      Map_dynamic_dynamic: findType("Map<@,@>"),
      Map_of_String_and_nullable_Object: findType("Map<String,Object?>"),
      Map_of_nullable_Object_and_nullable_Object: findType("Map<Object?,Object?>"),
      MappedIterable_of_String_and_nullable_StackFrame: findType("MappedIterable<String,StackFrame?>"),
      MappedListIterable_String_String: findType("MappedListIterable<String,String>"),
      MappedListIterable_String_dynamic: findType("MappedListIterable<String,@>"),
      NativeTypedArrayOfInt: findType("NativeTypedArrayOfInt"),
      NativeUint8List: findType("NativeUint8List"),
      Null: findType("Null"),
      Object: findType("Object"),
      Object_Function_int: findType("Object(int)"),
      Object_Function_int_$named_params_nullable_Object: findType("Object(int{params:Object?})"),
      Record: findType("Record"),
      Record_0: findType("+()"),
      Record_2_String_and_nullable_FontLoadError: findType("+(String,FontLoadError?)"),
      Rectangle_num: findType("Rectangle<num>"),
      RegExpMatch: findType("RegExpMatch"),
      ScriptElement: findType("ScriptElement0"),
      SemanticsObject: findType("SemanticsObject"),
      ServiceExtensionResponse: findType("ServiceExtensionResponse"),
      Size: findType("Size"),
      SkipWhileIterable_String: findType("SkipWhileIterable<String>"),
      StackTrace: findType("StackTrace"),
      String: findType("String"),
      SvgElement: findType("SvgElement"),
      TemplateElement: findType("TemplateElement"),
      Timer: findType("Timer"),
      TrustedGetRuntimeType: findType("TrustedGetRuntimeType"),
      TypeError: findType("TypeError"),
      Uint16List: findType("Uint16List"),
      Uint32List: findType("Uint32List"),
      Uint8ClampedList: findType("Uint8ClampedList"),
      Uint8List: findType("Uint8List"),
      UnicodePropertyLookup_LineCharProperty: findType("UnicodePropertyLookup<LineCharProperty>"),
      UnknownJavaScriptObject: findType("UnknownJavaScriptObject"),
      Uri: findType("Uri"),
      WhereIterable_String: findType("WhereIterable<String>"),
      WhereTypeIterable_StackFrame: findType("WhereTypeIterable<StackFrame>"),
      WrappedPlayer: findType("WrappedPlayer"),
      _AsyncCompleter_bool: findType("_AsyncCompleter<bool>"),
      _AsyncCompleter_void: findType("_AsyncCompleter<~>"),
      _Attr: findType("_Attr"),
      _ButtonSanitizer: findType("_ButtonSanitizer"),
      _ChildNodeListLazy: findType("_ChildNodeListLazy"),
      _DomListWrapper_JavaScriptObject: findType("_DomListWrapper<JavaScriptObject>"),
      _DomTouchListWrapper_JavaScriptObject: findType("_DomTouchListWrapper<JavaScriptObject>"),
      _ElementEventStreamImpl_Event: findType("_ElementEventStreamImpl<Event>"),
      _Future_bool: findType("_Future<bool>"),
      _Future_dynamic: findType("_Future<@>"),
      _Future_int: findType("_Future<int>"),
      _Future_void: findType("_Future<~>"),
      _IdentityHashMap_of_nullable_Object_and_nullable_Object: findType("_IdentityHashMap<Object?,Object?>"),
      _PointerState: findType("_PointerState"),
      _SimpleCallbackSink_nullable_Object: findType("_SimpleCallbackSink<Object?>"),
      _StoredMessage: findType("_StoredMessage"),
      bool: findType("bool"),
      double: findType("double"),
      dynamic: findType("@"),
      dynamic_Function_Object: findType("@(Object)"),
      dynamic_Function_Object_StackTrace: findType("@(Object,StackTrace)"),
      int: findType("int"),
      legacy_Never: findType("0&*"),
      legacy_Object: findType("Object*"),
      nullable_ByteData: findType("ByteData?"),
      nullable_FontLoadError: findType("FontLoadError?"),
      nullable_Future_Null: findType("Future<Null>?"),
      nullable_List_dynamic: findType("List<@>?"),
      nullable_Map_String_dynamic: findType("Map<String,@>?"),
      nullable_Map_dynamic_dynamic: findType("Map<@,@>?"),
      nullable_Object: findType("Object?"),
      nullable_Size: findType("Size?"),
      nullable_String: findType("String?"),
      num: findType("num"),
      void: findType("~"),
      void_Function: findType("~()"),
      void_Function_Object: findType("~(Object)"),
      void_Function_Object_StackTrace: findType("~(Object,StackTrace)")
    };
  })();
  (function constants() {
    var makeConstList = hunkHelpers.makeConstList;
    B.BodyElement_methods = A.BodyElement.prototype;
    B.CssStyleDeclaration_methods = A.CssStyleDeclaration.prototype;
    B.Interceptor_methods = J.Interceptor.prototype;
    B.JSArray_methods = J.JSArray.prototype;
    B.JSInt_methods = J.JSInt.prototype;
    B.JSNumber_methods = J.JSNumber.prototype;
    B.JSString_methods = J.JSString.prototype;
    B.JavaScriptFunction_methods = J.JavaScriptFunction.prototype;
    B.JavaScriptObject_methods = J.JavaScriptObject.prototype;
    B.LinkElement_methods = A.LinkElement.prototype;
    B.NativeByteBuffer_methods = A.NativeByteBuffer.prototype;
    B.NativeByteData_methods = A.NativeByteData.prototype;
    B.NativeUint8List_methods = A.NativeUint8List.prototype;
    B.PlainJavaScriptObject_methods = J.PlainJavaScriptObject.prototype;
    B.ScriptElement_methods = A.ScriptElement.prototype;
    B.TableElement_methods = A.TableElement.prototype;
    B.UnknownJavaScriptObject_methods = J.UnknownJavaScriptObject.prototype;
    B.AppLifecycleState_1 = new A.AppLifecycleState(1, "resumed");
    B.Assertiveness_0 = new A.Assertiveness(0, "polite");
    B.Assertiveness_1 = new A.Assertiveness(1, "assertive");
    B.Brightness_0 = new A.Brightness(0, "dark");
    B.Brightness_1 = new A.Brightness(1, "light");
    B.BrowserEngine_0 = new A.BrowserEngine(0, "blink");
    B.BrowserEngine_1 = new A.BrowserEngine(1, "webkit");
    B.BrowserEngine_2 = new A.BrowserEngine(2, "firefox");
    B.C_Base64Encoder = new A.Base64Encoder();
    B.C_Base64Codec = new A.Base64Codec();
    B.C_BrowserPlatformLocation = new A.BrowserPlatformLocation();
    B.C_DecimalInputType = new A.DecimalInputType();
    B.C_DoneInputAction = new A.DoneInputAction();
    B.C_EmailInputType = new A.EmailInputType();
    B.C_EmptyIterator = new A.EmptyIterator();
    B.C_Endian0 = new A.Endian();
    B.C_Endian = new A.Endian();
    B.C_EnterInputAction = new A.EnterInputAction();
    B.C_GoInputAction = new A.GoInputAction();
    B.C_HashUrlStrategy = new A.HashUrlStrategy();
    B.C_JSONMessageCodec = new A.JSONMessageCodec();
    B.C_JSONMethodCodec = new A.JSONMethodCodec();
    B.C_JS_CONST = function getTagFallback(o) {
  var s = Object.prototype.toString.call(o);
  return s.substring(8, s.length - 1);
};
    B.C_JS_CONST0 = function() {
  var toStringFunction = Object.prototype.toString;
  function getTag(o) {
    var s = toStringFunction.call(o);
    return s.substring(8, s.length - 1);
  }
  function getUnknownTag(object, tag) {
    if (/^HTML[A-Z].*Element$/.test(tag)) {
      var name = toStringFunction.call(object);
      if (name == "[object Object]") return null;
      return "HTMLElement";
    }
  }
  function getUnknownTagGenericBrowser(object, tag) {
    if (self.HTMLElement && object instanceof HTMLElement) return "HTMLElement";
    return getUnknownTag(object, tag);
  }
  function prototypeForTag(tag) {
    if (typeof window == "undefined") return null;
    if (typeof window[tag] == "undefined") return null;
    var constructor = window[tag];
    if (typeof constructor != "function") return null;
    return constructor.prototype;
  }
  function discriminator(tag) { return null; }
  var isBrowser = typeof navigator == "object";
  return {
    getTag: getTag,
    getUnknownTag: isBrowser ? getUnknownTagGenericBrowser : getUnknownTag,
    prototypeForTag: prototypeForTag,
    discriminator: discriminator };
};
    B.C_JS_CONST6 = function(getTagFallback) {
  return function(hooks) {
    if (typeof navigator != "object") return hooks;
    var ua = navigator.userAgent;
    if (ua.indexOf("DumpRenderTree") >= 0) return hooks;
    if (ua.indexOf("Chrome") >= 0) {
      function confirm(p) {
        return typeof window == "object" && window[p] && window[p].name == p;
      }
      if (confirm("Window") && confirm("HTMLElement")) return hooks;
    }
    hooks.getTag = getTagFallback;
  };
};
    B.C_JS_CONST1 = function(hooks) {
  if (typeof dartExperimentalFixupGetTag != "function") return hooks;
  hooks.getTag = dartExperimentalFixupGetTag(hooks.getTag);
};
    B.C_JS_CONST2 = function(hooks) {
  var getTag = hooks.getTag;
  var prototypeForTag = hooks.prototypeForTag;
  function getTagFixed(o) {
    var tag = getTag(o);
    if (tag == "Document") {
      if (!!o.xmlVersion) return "!Document";
      return "!HTMLDocument";
    }
    return tag;
  }
  function prototypeForTagFixed(tag) {
    if (tag == "Document") return null;
    return prototypeForTag(tag);
  }
  hooks.getTag = getTagFixed;
  hooks.prototypeForTag = prototypeForTagFixed;
};
    B.C_JS_CONST5 = function(hooks) {
  var userAgent = typeof navigator == "object" ? navigator.userAgent : "";
  if (userAgent.indexOf("Firefox") == -1) return hooks;
  var getTag = hooks.getTag;
  var quickMap = {
    "BeforeUnloadEvent": "Event",
    "DataTransfer": "Clipboard",
    "GeoGeolocation": "Geolocation",
    "Location": "!Location",
    "WorkerMessageEvent": "MessageEvent",
    "XMLDocument": "!Document"};
  function getTagFirefox(o) {
    var tag = getTag(o);
    return quickMap[tag] || tag;
  }
  hooks.getTag = getTagFirefox;
};
    B.C_JS_CONST4 = function(hooks) {
  var userAgent = typeof navigator == "object" ? navigator.userAgent : "";
  if (userAgent.indexOf("Trident/") == -1) return hooks;
  var getTag = hooks.getTag;
  var quickMap = {
    "BeforeUnloadEvent": "Event",
    "DataTransfer": "Clipboard",
    "HTMLDDElement": "HTMLElement",
    "HTMLDTElement": "HTMLElement",
    "HTMLPhraseElement": "HTMLElement",
    "Position": "Geoposition"
  };
  function getTagIE(o) {
    var tag = getTag(o);
    var newTag = quickMap[tag];
    if (newTag) return newTag;
    if (tag == "Object") {
      if (window.DataView && (o instanceof window.DataView)) return "DataView";
    }
    return tag;
  }
  function prototypeForTagIE(tag) {
    var constructor = window[tag];
    if (constructor == null) return null;
    return constructor.prototype;
  }
  hooks.getTag = getTagIE;
  hooks.prototypeForTag = prototypeForTagIE;
};
    B.C_JS_CONST3 = function(hooks) { return hooks; }
;
    B.C_JsonCodec = new A.JsonCodec();
    B.C_MultilineInputType = new A.MultilineInputType();
    B.C_NextInputAction = new A.NextInputAction();
    B.C_NoInputAction = new A.NoInputAction();
    B.C_NoTextInputType = new A.NoTextInputType();
    B.C_NumberInputType = new A.NumberInputType();
    B.C_Object = new A.Object();
    B.C_OutOfMemoryError = new A.OutOfMemoryError();
    B.C_PhoneInputType = new A.PhoneInputType();
    B.C_PointerSupportDetector = new A.PointerSupportDetector();
    B.C_PreviousInputAction = new A.PreviousInputAction();
    B.C_Record0 = new A._EmptyRecord();
    B.C_Rect = new A.Rect();
    B.C_ScreenOrientation = new A.ScreenOrientation();
    B.C_SearchInputAction = new A.SearchInputAction();
    B.C_SendInputAction = new A.SendInputAction();
    B.C_SentinelValue = new A.SentinelValue();
    B.C_StandardMessageCodec = new A.StandardMessageCodec();
    B.C_StandardMessageCodec0 = new A.StandardMessageCodec0();
    B.C_StandardMethodCodec = new A.StandardMethodCodec();
    B.C_StandardMethodCodec0 = new A.StandardMethodCodec0();
    B.C_TextInputClearClient = new A.TextInputClearClient();
    B.C_TextInputHide = new A.TextInputHide();
    B.C_TextInputRequestAutofill = new A.TextInputRequestAutofill();
    B.C_TextInputSetCaretRect = new A.TextInputSetCaretRect();
    B.C_TextInputSetMarkedTextRect = new A.TextInputSetMarkedTextRect();
    B.C_TextInputShow = new A.TextInputShow();
    B.C_TextInputType = new A.TextInputType();
    B.C_TextInputUpdateConfig = new A.TextInputUpdateConfig();
    B.C_UrlInputType = new A.UrlInputType();
    B.C_Utf8Codec = new A.Utf8Codec();
    B.C_Utf8Encoder = new A.Utf8Encoder();
    B.C_ViewPadding = new A.ViewPadding();
    B.C_GestureSettings = new A.GestureSettings();
    B.List_empty3 = A._setArrayType(makeConstList([]), A.findType("JSArray<DisplayFeature>"));
    B.C_ViewConfiguration = new A.ViewConfiguration();
    B.C__DelayedDone = new A._DelayedDone();
    B.C__NoDefaultValue = new A._NoDefaultValue();
    B.C__Required = new A._Required();
    B.C__RootZone = new A._RootZone();
    B.C__StringStackTrace = new A._StringStackTrace();
    B.DebugEngineInitializationState_0 = new A.DebugEngineInitializationState(0, "uninitialized");
    B.DebugEngineInitializationState_1 = new A.DebugEngineInitializationState(1, "initializingServices");
    B.DebugEngineInitializationState_2 = new A.DebugEngineInitializationState(2, "initializedServices");
    B.DebugEngineInitializationState_3 = new A.DebugEngineInitializationState(3, "initializingUi");
    B.DebugEngineInitializationState_4 = new A.DebugEngineInitializationState(4, "initialized");
    B.DiagnosticLevel_0 = new A.DiagnosticLevel(0, "hidden");
    B.DiagnosticLevel_1 = new A.DiagnosticLevel(1, "fine");
    B.DiagnosticLevel_3 = new A.DiagnosticLevel(3, "info");
    B.DiagnosticLevel_6 = new A.DiagnosticLevel(6, "summary");
    B.DiagnosticLevel_7 = new A.DiagnosticLevel(7, "error");
    B.DiagnosticsTreeStyle_1 = new A.DiagnosticsTreeStyle(1, "sparse");
    B.DiagnosticsTreeStyle_5 = new A.DiagnosticsTreeStyle(5, "error");
    B.DiagnosticsTreeStyle_7 = new A.DiagnosticsTreeStyle(7, "flat");
    B.DiagnosticsTreeStyle_8 = new A.DiagnosticsTreeStyle(8, "singleLine");
    B.Duration_0 = new A.Duration(0);
    B.Duration_100000 = new A.Duration(100000);
    B.Duration_1000000 = new A.Duration(1000000);
    B.Duration_2000000 = new A.Duration(2000000);
    B.Duration_300000 = new A.Duration(300000);
    B.EngineAccessibilityFeatures_0 = new A.EngineAccessibilityFeatures(0);
    B.FormatException_Qi2 = new A.FormatException("Invalid method call", null, null);
    B.FormatException_oCg = new A.FormatException("Message corrupted", null, null);
    B.GestureMode_0 = new A.GestureMode(0, "pointerEvents");
    B.GestureMode_1 = new A.GestureMode(1, "browserGestures");
    B.JsonDecoder_null = new A.JsonDecoder(null);
    B.JsonEncoder_null = new A.JsonEncoder(null);
    B.KeyEventType_0 = new A.KeyEventType(0, "down");
    B.KeyData_EKW = new A.KeyData(B.KeyEventType_0, 0, 0, null, false);
    B.KeyEventType_1 = new A.KeyEventType(1, "up");
    B.KeyEventType_2 = new A.KeyEventType(2, "repeat");
    B.List_5Q7 = A._setArrayType(makeConstList([0, 0, 65498, 45055, 65535, 34815, 65534, 18431]), type$.JSArray_int);
    B.CanvasKitVariant_0 = new A.CanvasKitVariant(0, "auto");
    B.CanvasKitVariant_1 = new A.CanvasKitVariant(1, "full");
    B.CanvasKitVariant_2 = new A.CanvasKitVariant(2, "chromium");
    B.List_66y = A._setArrayType(makeConstList([B.CanvasKitVariant_0, B.CanvasKitVariant_1, B.CanvasKitVariant_2]), A.findType("JSArray<CanvasKitVariant>"));
    B.LineCharProperty_0 = new A.LineCharProperty(0, "CM");
    B.LineCharProperty_1 = new A.LineCharProperty(1, "BA");
    B.LineCharProperty_2 = new A.LineCharProperty(2, "LF");
    B.LineCharProperty_3 = new A.LineCharProperty(3, "BK");
    B.LineCharProperty_4 = new A.LineCharProperty(4, "CR");
    B.LineCharProperty_5 = new A.LineCharProperty(5, "SP");
    B.LineCharProperty_6 = new A.LineCharProperty(6, "EX");
    B.LineCharProperty_7 = new A.LineCharProperty(7, "QU");
    B.LineCharProperty_8 = new A.LineCharProperty(8, "AL");
    B.LineCharProperty_9 = new A.LineCharProperty(9, "PR");
    B.LineCharProperty_10 = new A.LineCharProperty(10, "PO");
    B.LineCharProperty_11 = new A.LineCharProperty(11, "OP");
    B.LineCharProperty_12 = new A.LineCharProperty(12, "CP");
    B.LineCharProperty_13 = new A.LineCharProperty(13, "IS");
    B.LineCharProperty_14 = new A.LineCharProperty(14, "HY");
    B.LineCharProperty_15 = new A.LineCharProperty(15, "SY");
    B.LineCharProperty_16 = new A.LineCharProperty(16, "NU");
    B.LineCharProperty_17 = new A.LineCharProperty(17, "CL");
    B.LineCharProperty_18 = new A.LineCharProperty(18, "GL");
    B.LineCharProperty_19 = new A.LineCharProperty(19, "BB");
    B.LineCharProperty_20 = new A.LineCharProperty(20, "HL");
    B.LineCharProperty_21 = new A.LineCharProperty(21, "JL");
    B.LineCharProperty_22 = new A.LineCharProperty(22, "JV");
    B.LineCharProperty_23 = new A.LineCharProperty(23, "JT");
    B.LineCharProperty_24 = new A.LineCharProperty(24, "NS");
    B.LineCharProperty_25 = new A.LineCharProperty(25, "ZW");
    B.LineCharProperty_26 = new A.LineCharProperty(26, "ZWJ");
    B.LineCharProperty_27 = new A.LineCharProperty(27, "B2");
    B.LineCharProperty_28 = new A.LineCharProperty(28, "IN");
    B.LineCharProperty_29 = new A.LineCharProperty(29, "WJ");
    B.LineCharProperty_30 = new A.LineCharProperty(30, "ID");
    B.LineCharProperty_31 = new A.LineCharProperty(31, "EB");
    B.LineCharProperty_32 = new A.LineCharProperty(32, "H2");
    B.LineCharProperty_33 = new A.LineCharProperty(33, "H3");
    B.LineCharProperty_34 = new A.LineCharProperty(34, "CB");
    B.LineCharProperty_35 = new A.LineCharProperty(35, "RI");
    B.LineCharProperty_36 = new A.LineCharProperty(36, "EM");
    B.List_83u = A._setArrayType(makeConstList([B.LineCharProperty_0, B.LineCharProperty_1, B.LineCharProperty_2, B.LineCharProperty_3, B.LineCharProperty_4, B.LineCharProperty_5, B.LineCharProperty_6, B.LineCharProperty_7, B.LineCharProperty_8, B.LineCharProperty_9, B.LineCharProperty_10, B.LineCharProperty_11, B.LineCharProperty_12, B.LineCharProperty_13, B.LineCharProperty_14, B.LineCharProperty_15, B.LineCharProperty_16, B.LineCharProperty_17, B.LineCharProperty_18, B.LineCharProperty_19, B.LineCharProperty_20, B.LineCharProperty_21, B.LineCharProperty_22, B.LineCharProperty_23, B.LineCharProperty_24, B.LineCharProperty_25, B.LineCharProperty_26, B.LineCharProperty_27, B.LineCharProperty_28, B.LineCharProperty_29, B.LineCharProperty_30, B.LineCharProperty_31, B.LineCharProperty_32, B.LineCharProperty_33, B.LineCharProperty_34, B.LineCharProperty_35, B.LineCharProperty_36]), A.findType("JSArray<LineCharProperty>"));
    B.List_Assertiveness_0_Assertiveness_1 = A._setArrayType(makeConstList([B.Assertiveness_0, B.Assertiveness_1]), A.findType("JSArray<Assertiveness>"));
    B.List_AuK = A._setArrayType(makeConstList(["bind", "if", "ref", "repeat", "syntax"]), type$.JSArray_String);
    B.List_CEh = A._setArrayType(makeConstList(["pointerdown", "pointermove", "pointerleave", "pointerup", "pointercancel", "touchstart", "touchend", "touchmove", "touchcancel", "mousedown", "mousemove", "mouseleave", "mouseup", "keyup", "keydown"]), type$.JSArray_String);
    B.List_Jwp = A._setArrayType(makeConstList(["A::href", "AREA::href", "BLOCKQUOTE::cite", "BODY::background", "COMMAND::icon", "DEL::cite", "FORM::action", "IMG::src", "INPUT::src", "INS::cite", "Q::cite", "VIDEO::poster"]), type$.JSArray_String);
    B.Locale_en_US = new A.Locale("en", "US");
    B.List_Locale_en_US = A._setArrayType(makeConstList([B.Locale_en_US]), type$.JSArray_Locale);
    B.List_M1A = A._setArrayType(makeConstList([0, 0, 24576, 1023, 65534, 34815, 65534, 18431]), type$.JSArray_int);
    B.List_ME0 = A._setArrayType(makeConstList(["HEAD", "AREA", "BASE", "BASEFONT", "BR", "COL", "COLGROUP", "EMBED", "FRAME", "FRAMESET", "HR", "IMAGE", "IMG", "INPUT", "ISINDEX", "LINK", "META", "PARAM", "SOURCE", "STYLE", "TITLE", "WBR"]), type$.JSArray_String);
    B.List_MMm = A._setArrayType(makeConstList([0, 0, 26624, 1023, 65534, 2047, 65534, 2047]), type$.JSArray_int);
    B.List_OL3 = A._setArrayType(makeConstList([0, 0, 32722, 12287, 65534, 34815, 65534, 18431]), type$.JSArray_int);
    B.TextDirection_0 = new A.TextDirection(0, "rtl");
    B.TextDirection_1 = new A.TextDirection(1, "ltr");
    B.List_TextDirection_0_TextDirection_1 = A._setArrayType(makeConstList([B.TextDirection_0, B.TextDirection_1]), A.findType("JSArray<TextDirection>"));
    B.List_XRg = A._setArrayType(makeConstList([0, 0, 65490, 12287, 65535, 34815, 65534, 18431]), type$.JSArray_int);
    B.List_YmH = A._setArrayType(makeConstList([0, 0, 32776, 33792, 1, 10240, 0, 0]), type$.JSArray_int);
    B.List_ejq = A._setArrayType(makeConstList([0, 0, 32754, 11263, 65534, 34815, 65534, 18431]), type$.JSArray_int);
    B.List_empty4 = A._setArrayType(makeConstList([]), type$.JSArray_DiagnosticsNode);
    B.List_empty5 = A._setArrayType(makeConstList([]), type$.JSArray_Locale);
    B.List_empty0 = A._setArrayType(makeConstList([]), type$.JSArray_String);
    B.List_empty1 = A._setArrayType(makeConstList([]), type$.JSArray_int);
    B.List_empty = A._setArrayType(makeConstList([]), type$.JSArray_dynamic);
    B.List_empty2 = A._setArrayType(makeConstList([]), A.findType("JSArray<Object?>"));
    B.TextAlign_0 = new A.TextAlign(0, "left");
    B.TextAlign_1 = new A.TextAlign(1, "right");
    B.TextAlign_2 = new A.TextAlign(2, "center");
    B.TextAlign_3 = new A.TextAlign(3, "justify");
    B.TextAlign_4 = new A.TextAlign(4, "start");
    B.TextAlign_5 = new A.TextAlign(5, "end");
    B.List_jfs = A._setArrayType(makeConstList([B.TextAlign_0, B.TextAlign_1, B.TextAlign_2, B.TextAlign_3, B.TextAlign_4, B.TextAlign_5]), A.findType("JSArray<TextAlign>"));
    B.List_oFp = A._setArrayType(makeConstList([0, 0, 65490, 45055, 65535, 34815, 65534, 18431]), type$.JSArray_int);
    B.List_uzK = A._setArrayType(makeConstList(["*::class", "*::dir", "*::draggable", "*::hidden", "*::id", "*::inert", "*::itemprop", "*::itemref", "*::itemscope", "*::lang", "*::spellcheck", "*::title", "*::translate", "A::accesskey", "A::coords", "A::hreflang", "A::name", "A::shape", "A::tabindex", "A::target", "A::type", "AREA::accesskey", "AREA::alt", "AREA::coords", "AREA::nohref", "AREA::shape", "AREA::tabindex", "AREA::target", "AUDIO::controls", "AUDIO::loop", "AUDIO::mediagroup", "AUDIO::muted", "AUDIO::preload", "BDO::dir", "BODY::alink", "BODY::bgcolor", "BODY::link", "BODY::text", "BODY::vlink", "BR::clear", "BUTTON::accesskey", "BUTTON::disabled", "BUTTON::name", "BUTTON::tabindex", "BUTTON::type", "BUTTON::value", "CANVAS::height", "CANVAS::width", "CAPTION::align", "COL::align", "COL::char", "COL::charoff", "COL::span", "COL::valign", "COL::width", "COLGROUP::align", "COLGROUP::char", "COLGROUP::charoff", "COLGROUP::span", "COLGROUP::valign", "COLGROUP::width", "COMMAND::checked", "COMMAND::command", "COMMAND::disabled", "COMMAND::label", "COMMAND::radiogroup", "COMMAND::type", "DATA::value", "DEL::datetime", "DETAILS::open", "DIR::compact", "DIV::align", "DL::compact", "FIELDSET::disabled", "FONT::color", "FONT::face", "FONT::size", "FORM::accept", "FORM::autocomplete", "FORM::enctype", "FORM::method", "FORM::name", "FORM::novalidate", "FORM::target", "FRAME::name", "H1::align", "H2::align", "H3::align", "H4::align", "H5::align", "H6::align", "HR::align", "HR::noshade", "HR::size", "HR::width", "HTML::version", "IFRAME::align", "IFRAME::frameborder", "IFRAME::height", "IFRAME::marginheight", "IFRAME::marginwidth", "IFRAME::width", "IMG::align", "IMG::alt", "IMG::border", "IMG::height", "IMG::hspace", "IMG::ismap", "IMG::name", "IMG::usemap", "IMG::vspace", "IMG::width", "INPUT::accept", "INPUT::accesskey", "INPUT::align", "INPUT::alt", "INPUT::autocomplete", "INPUT::autofocus", "INPUT::checked", "INPUT::disabled", "INPUT::inputmode", "INPUT::ismap", "INPUT::list", "INPUT::max", "INPUT::maxlength", "INPUT::min", "INPUT::multiple", "INPUT::name", "INPUT::placeholder", "INPUT::readonly", "INPUT::required", "INPUT::size", "INPUT::step", "INPUT::tabindex", "INPUT::type", "INPUT::usemap", "INPUT::value", "INS::datetime", "KEYGEN::disabled", "KEYGEN::keytype", "KEYGEN::name", "LABEL::accesskey", "LABEL::for", "LEGEND::accesskey", "LEGEND::align", "LI::type", "LI::value", "LINK::sizes", "MAP::name", "MENU::compact", "MENU::label", "MENU::type", "METER::high", "METER::low", "METER::max", "METER::min", "METER::value", "OBJECT::typemustmatch", "OL::compact", "OL::reversed", "OL::start", "OL::type", "OPTGROUP::disabled", "OPTGROUP::label", "OPTION::disabled", "OPTION::label", "OPTION::selected", "OPTION::value", "OUTPUT::for", "OUTPUT::name", "P::align", "PRE::width", "PROGRESS::max", "PROGRESS::min", "PROGRESS::value", "SELECT::autocomplete", "SELECT::disabled", "SELECT::multiple", "SELECT::name", "SELECT::required", "SELECT::size", "SELECT::tabindex", "SOURCE::type", "TABLE::align", "TABLE::bgcolor", "TABLE::border", "TABLE::cellpadding", "TABLE::cellspacing", "TABLE::frame", "TABLE::rules", "TABLE::summary", "TABLE::width", "TBODY::align", "TBODY::char", "TBODY::charoff", "TBODY::valign", "TD::abbr", "TD::align", "TD::axis", "TD::bgcolor", "TD::char", "TD::charoff", "TD::colspan", "TD::headers", "TD::height", "TD::nowrap", "TD::rowspan", "TD::scope", "TD::valign", "TD::width", "TEXTAREA::accesskey", "TEXTAREA::autocomplete", "TEXTAREA::cols", "TEXTAREA::disabled", "TEXTAREA::inputmode", "TEXTAREA::name", "TEXTAREA::placeholder", "TEXTAREA::readonly", "TEXTAREA::required", "TEXTAREA::rows", "TEXTAREA::tabindex", "TEXTAREA::wrap", "TFOOT::align", "TFOOT::char", "TFOOT::charoff", "TFOOT::valign", "TH::abbr", "TH::align", "TH::axis", "TH::bgcolor", "TH::char", "TH::charoff", "TH::colspan", "TH::headers", "TH::height", "TH::nowrap", "TH::rowspan", "TH::scope", "TH::valign", "TH::width", "THEAD::align", "THEAD::char", "THEAD::charoff", "THEAD::valign", "TR::align", "TR::bgcolor", "TR::char", "TR::charoff", "TR::valign", "TRACK::default", "TRACK::kind", "TRACK::label", "TRACK::srclang", "UL::compact", "UL::type", "VIDEO::controls", "VIDEO::height", "VIDEO::loop", "VIDEO::mediagroup", "VIDEO::muted", "VIDEO::preload", "VIDEO::width"]), type$.JSArray_String);
    B.Object_uPw = {BU: 0, DD: 1, FX: 2, TP: 3, YD: 4, ZR: 5};
    B.Map_GxYRK = new A.ConstantStringMap(B.Object_uPw, ["MM", "DE", "FR", "TL", "YE", "CD"], type$.ConstantStringMap_String_String);
    B.Object_3pJ = {alias: 0, allScroll: 1, basic: 2, cell: 3, click: 4, contextMenu: 5, copy: 6, forbidden: 7, grab: 8, grabbing: 9, help: 10, move: 11, none: 12, noDrop: 13, precise: 14, progress: 15, text: 16, resizeColumn: 17, resizeDown: 18, resizeDownLeft: 19, resizeDownRight: 20, resizeLeft: 21, resizeLeftRight: 22, resizeRight: 23, resizeRow: 24, resizeUp: 25, resizeUpDown: 26, resizeUpLeft: 27, resizeUpRight: 28, resizeUpLeftDownRight: 29, resizeUpRightDownLeft: 30, verticalText: 31, wait: 32, zoomIn: 33, zoomOut: 34};
    B.Map_JwQic = new A.ConstantStringMap(B.Object_3pJ, ["alias", "all-scroll", "default", "cell", "pointer", "context-menu", "copy", "not-allowed", "grab", "grabbing", "help", "move", "none", "no-drop", "crosshair", "progress", "text", "col-resize", "s-resize", "sw-resize", "se-resize", "w-resize", "ew-resize", "e-resize", "row-resize", "n-resize", "ns-resize", "nw-resize", "ne-resize", "nwse-resize", "nesw-resize", "vertical-text", "wait", "zoom-in", "zoom-out"], type$.ConstantStringMap_String_String);
    B.Object_U8c = {AVRInput: 0, AVRPower: 1, Accel: 2, Accept: 3, Again: 4, AllCandidates: 5, Alphanumeric: 6, AltGraph: 7, AppSwitch: 8, ArrowDown: 9, ArrowLeft: 10, ArrowRight: 11, ArrowUp: 12, Attn: 13, AudioBalanceLeft: 14, AudioBalanceRight: 15, AudioBassBoostDown: 16, AudioBassBoostToggle: 17, AudioBassBoostUp: 18, AudioFaderFront: 19, AudioFaderRear: 20, AudioSurroundModeNext: 21, AudioTrebleDown: 22, AudioTrebleUp: 23, AudioVolumeDown: 24, AudioVolumeMute: 25, AudioVolumeUp: 26, Backspace: 27, BrightnessDown: 28, BrightnessUp: 29, BrowserBack: 30, BrowserFavorites: 31, BrowserForward: 32, BrowserHome: 33, BrowserRefresh: 34, BrowserSearch: 35, BrowserStop: 36, Call: 37, Camera: 38, CameraFocus: 39, Cancel: 40, CapsLock: 41, ChannelDown: 42, ChannelUp: 43, Clear: 44, Close: 45, ClosedCaptionToggle: 46, CodeInput: 47, ColorF0Red: 48, ColorF1Green: 49, ColorF2Yellow: 50, ColorF3Blue: 51, ColorF4Grey: 52, ColorF5Brown: 53, Compose: 54, ContextMenu: 55, Convert: 56, Copy: 57, CrSel: 58, Cut: 59, DVR: 60, Delete: 61, Dimmer: 62, DisplaySwap: 63, Eisu: 64, Eject: 65, End: 66, EndCall: 67, Enter: 68, EraseEof: 69, Esc: 70, Escape: 71, ExSel: 72, Execute: 73, Exit: 74, F1: 75, F10: 76, F11: 77, F12: 78, F13: 79, F14: 80, F15: 81, F16: 82, F17: 83, F18: 84, F19: 85, F2: 86, F20: 87, F21: 88, F22: 89, F23: 90, F24: 91, F3: 92, F4: 93, F5: 94, F6: 95, F7: 96, F8: 97, F9: 98, FavoriteClear0: 99, FavoriteClear1: 100, FavoriteClear2: 101, FavoriteClear3: 102, FavoriteRecall0: 103, FavoriteRecall1: 104, FavoriteRecall2: 105, FavoriteRecall3: 106, FavoriteStore0: 107, FavoriteStore1: 108, FavoriteStore2: 109, FavoriteStore3: 110, FinalMode: 111, Find: 112, Fn: 113, FnLock: 114, GoBack: 115, GoHome: 116, GroupFirst: 117, GroupLast: 118, GroupNext: 119, GroupPrevious: 120, Guide: 121, GuideNextDay: 122, GuidePreviousDay: 123, HangulMode: 124, HanjaMode: 125, Hankaku: 126, HeadsetHook: 127, Help: 128, Hibernate: 129, Hiragana: 130, HiraganaKatakana: 131, Home: 132, Hyper: 133, Info: 134, Insert: 135, InstantReplay: 136, JunjaMode: 137, KanaMode: 138, KanjiMode: 139, Katakana: 140, Key11: 141, Key12: 142, LastNumberRedial: 143, LaunchApplication1: 144, LaunchApplication2: 145, LaunchAssistant: 146, LaunchCalendar: 147, LaunchContacts: 148, LaunchControlPanel: 149, LaunchMail: 150, LaunchMediaPlayer: 151, LaunchMusicPlayer: 152, LaunchPhone: 153, LaunchScreenSaver: 154, LaunchSpreadsheet: 155, LaunchWebBrowser: 156, LaunchWebCam: 157, LaunchWordProcessor: 158, Link: 159, ListProgram: 160, LiveContent: 161, Lock: 162, LogOff: 163, MailForward: 164, MailReply: 165, MailSend: 166, MannerMode: 167, MediaApps: 168, MediaAudioTrack: 169, MediaClose: 170, MediaFastForward: 171, MediaLast: 172, MediaPause: 173, MediaPlay: 174, MediaPlayPause: 175, MediaRecord: 176, MediaRewind: 177, MediaSkip: 178, MediaSkipBackward: 179, MediaSkipForward: 180, MediaStepBackward: 181, MediaStepForward: 182, MediaStop: 183, MediaTopMenu: 184, MediaTrackNext: 185, MediaTrackPrevious: 186, MicrophoneToggle: 187, MicrophoneVolumeDown: 188, MicrophoneVolumeMute: 189, MicrophoneVolumeUp: 190, ModeChange: 191, NavigateIn: 192, NavigateNext: 193, NavigateOut: 194, NavigatePrevious: 195, New: 196, NextCandidate: 197, NextFavoriteChannel: 198, NextUserProfile: 199, NonConvert: 200, Notification: 201, NumLock: 202, OnDemand: 203, Open: 204, PageDown: 205, PageUp: 206, Pairing: 207, Paste: 208, Pause: 209, PinPDown: 210, PinPMove: 211, PinPToggle: 212, PinPUp: 213, Play: 214, PlaySpeedDown: 215, PlaySpeedReset: 216, PlaySpeedUp: 217, Power: 218, PowerOff: 219, PreviousCandidate: 220, Print: 221, PrintScreen: 222, Process: 223, Props: 224, RandomToggle: 225, RcLowBattery: 226, RecordSpeedNext: 227, Redo: 228, RfBypass: 229, Romaji: 230, STBInput: 231, STBPower: 232, Save: 233, ScanChannelsToggle: 234, ScreenModeNext: 235, ScrollLock: 236, Select: 237, Settings: 238, ShiftLevel5: 239, SingleCandidate: 240, Soft1: 241, Soft2: 242, Soft3: 243, Soft4: 244, Soft5: 245, Soft6: 246, Soft7: 247, Soft8: 248, SpeechCorrectionList: 249, SpeechInputToggle: 250, SpellCheck: 251, SplitScreenToggle: 252, Standby: 253, Subtitle: 254, Super: 255, Symbol: 256, SymbolLock: 257, TV: 258, TV3DMode: 259, TVAntennaCable: 260, TVAudioDescription: 261, TVAudioDescriptionMixDown: 262, TVAudioDescriptionMixUp: 263, TVContentsMenu: 264, TVDataService: 265, TVInput: 266, TVInputComponent1: 267, TVInputComponent2: 268, TVInputComposite1: 269, TVInputComposite2: 270, TVInputHDMI1: 271, TVInputHDMI2: 272, TVInputHDMI3: 273, TVInputHDMI4: 274, TVInputVGA1: 275, TVMediaContext: 276, TVNetwork: 277, TVNumberEntry: 278, TVPower: 279, TVRadioService: 280, TVSatellite: 281, TVSatelliteBS: 282, TVSatelliteCS: 283, TVSatelliteToggle: 284, TVTerrestrialAnalog: 285, TVTerrestrialDigital: 286, TVTimer: 287, Tab: 288, Teletext: 289, Undo: 290, Unidentified: 291, VideoModeNext: 292, VoiceDial: 293, WakeUp: 294, Wink: 295, Zenkaku: 296, ZenkakuHankaku: 297, ZoomIn: 298, ZoomOut: 299, ZoomToggle: 300};
    B.Map_OKwAg = new A.ConstantStringMap(B.Object_U8c, [4294970632, 4294970633, 4294967553, 4294968577, 4294968578, 4294969089, 4294969090, 4294967555, 4294971393, 4294968065, 4294968066, 4294968067, 4294968068, 4294968579, 4294970625, 4294970626, 4294970627, 4294970882, 4294970628, 4294970629, 4294970630, 4294970631, 4294970884, 4294970885, 4294969871, 4294969873, 4294969872, 4294967304, 4294968833, 4294968834, 4294970369, 4294970370, 4294970371, 4294970372, 4294970373, 4294970374, 4294970375, 4294971394, 4294968835, 4294971395, 4294968580, 4294967556, 4294970634, 4294970635, 4294968321, 4294969857, 4294970642, 4294969091, 4294970636, 4294970637, 4294970638, 4294970639, 4294970640, 4294970641, 4294969092, 4294968581, 4294969093, 4294968322, 4294968323, 4294968324, 4294970703, 4294967423, 4294970643, 4294970644, 4294969108, 4294968836, 4294968069, 4294971396, 4294967309, 4294968325, 4294967323, 4294967323, 4294968326, 4294968582, 4294970645, 4294969345, 4294969354, 4294969355, 4294969356, 4294969357, 4294969358, 4294969359, 4294969360, 4294969361, 4294969362, 4294969363, 4294969346, 4294969364, 4294969365, 4294969366, 4294969367, 4294969368, 4294969347, 4294969348, 4294969349, 4294969350, 4294969351, 4294969352, 4294969353, 4294970646, 4294970647, 4294970648, 4294970649, 4294970650, 4294970651, 4294970652, 4294970653, 4294970654, 4294970655, 4294970656, 4294970657, 4294969094, 4294968583, 4294967558, 4294967559, 4294971397, 4294971398, 4294969095, 4294969096, 4294969097, 4294969098, 4294970658, 4294970659, 4294970660, 4294969105, 4294969106, 4294969109, 4294971399, 4294968584, 4294968841, 4294969110, 4294969111, 4294968070, 4294967560, 4294970661, 4294968327, 4294970662, 4294969107, 4294969112, 4294969113, 4294969114, 4294971905, 4294971906, 4294971400, 4294970118, 4294970113, 4294970126, 4294970114, 4294970124, 4294970127, 4294970115, 4294970116, 4294970117, 4294970125, 4294970119, 4294970120, 4294970121, 4294970122, 4294970123, 4294970663, 4294970664, 4294970665, 4294970666, 4294968837, 4294969858, 4294969859, 4294969860, 4294971402, 4294970667, 4294970704, 4294970715, 4294970668, 4294970669, 4294970670, 4294970671, 4294969861, 4294970672, 4294970673, 4294970674, 4294970705, 4294970706, 4294970707, 4294970708, 4294969863, 4294970709, 4294969864, 4294969865, 4294970886, 4294970887, 4294970889, 4294970888, 4294969099, 4294970710, 4294970711, 4294970712, 4294970713, 4294969866, 4294969100, 4294970675, 4294970676, 4294969101, 4294971401, 4294967562, 4294970677, 4294969867, 4294968071, 4294968072, 4294970714, 4294968328, 4294968585, 4294970678, 4294970679, 4294970680, 4294970681, 4294968586, 4294970682, 4294970683, 4294970684, 4294968838, 4294968839, 4294969102, 4294969868, 4294968840, 4294969103, 4294968587, 4294970685, 4294970686, 4294970687, 4294968329, 4294970688, 4294969115, 4294970693, 4294970694, 4294969869, 4294970689, 4294970690, 4294967564, 4294968588, 4294970691, 4294967569, 4294969104, 4294969601, 4294969602, 4294969603, 4294969604, 4294969605, 4294969606, 4294969607, 4294969608, 4294971137, 4294971138, 4294969870, 4294970692, 4294968842, 4294970695, 4294967566, 4294967567, 4294967568, 4294970697, 4294971649, 4294971650, 4294971651, 4294971652, 4294971653, 4294971654, 4294971655, 4294970698, 4294971656, 4294971657, 4294971658, 4294971659, 4294971660, 4294971661, 4294971662, 4294971663, 4294971664, 4294971665, 4294971666, 4294971667, 4294970699, 4294971668, 4294971669, 4294971670, 4294971671, 4294971672, 4294971673, 4294971674, 4294971675, 4294967305, 4294970696, 4294968330, 4294967297, 4294970700, 4294971403, 4294968843, 4294970701, 4294969116, 4294969117, 4294968589, 4294968590, 4294970702], type$.ConstantStringMap_String_int);
    B.Object_wwi = {Abort: 0, Again: 1, AltLeft: 2, AltRight: 3, ArrowDown: 4, ArrowLeft: 5, ArrowRight: 6, ArrowUp: 7, AudioVolumeDown: 8, AudioVolumeMute: 9, AudioVolumeUp: 10, Backquote: 11, Backslash: 12, Backspace: 13, BracketLeft: 14, BracketRight: 15, BrightnessDown: 16, BrightnessUp: 17, BrowserBack: 18, BrowserFavorites: 19, BrowserForward: 20, BrowserHome: 21, BrowserRefresh: 22, BrowserSearch: 23, BrowserStop: 24, CapsLock: 25, Comma: 26, ContextMenu: 27, ControlLeft: 28, ControlRight: 29, Convert: 30, Copy: 31, Cut: 32, Delete: 33, Digit0: 34, Digit1: 35, Digit2: 36, Digit3: 37, Digit4: 38, Digit5: 39, Digit6: 40, Digit7: 41, Digit8: 42, Digit9: 43, DisplayToggleIntExt: 44, Eject: 45, End: 46, Enter: 47, Equal: 48, Esc: 49, Escape: 50, F1: 51, F10: 52, F11: 53, F12: 54, F13: 55, F14: 56, F15: 57, F16: 58, F17: 59, F18: 60, F19: 61, F2: 62, F20: 63, F21: 64, F22: 65, F23: 66, F24: 67, F3: 68, F4: 69, F5: 70, F6: 71, F7: 72, F8: 73, F9: 74, Find: 75, Fn: 76, FnLock: 77, GameButton1: 78, GameButton10: 79, GameButton11: 80, GameButton12: 81, GameButton13: 82, GameButton14: 83, GameButton15: 84, GameButton16: 85, GameButton2: 86, GameButton3: 87, GameButton4: 88, GameButton5: 89, GameButton6: 90, GameButton7: 91, GameButton8: 92, GameButton9: 93, GameButtonA: 94, GameButtonB: 95, GameButtonC: 96, GameButtonLeft1: 97, GameButtonLeft2: 98, GameButtonMode: 99, GameButtonRight1: 100, GameButtonRight2: 101, GameButtonSelect: 102, GameButtonStart: 103, GameButtonThumbLeft: 104, GameButtonThumbRight: 105, GameButtonX: 106, GameButtonY: 107, GameButtonZ: 108, Help: 109, Home: 110, Hyper: 111, Insert: 112, IntlBackslash: 113, IntlRo: 114, IntlYen: 115, KanaMode: 116, KeyA: 117, KeyB: 118, KeyC: 119, KeyD: 120, KeyE: 121, KeyF: 122, KeyG: 123, KeyH: 124, KeyI: 125, KeyJ: 126, KeyK: 127, KeyL: 128, KeyM: 129, KeyN: 130, KeyO: 131, KeyP: 132, KeyQ: 133, KeyR: 134, KeyS: 135, KeyT: 136, KeyU: 137, KeyV: 138, KeyW: 139, KeyX: 140, KeyY: 141, KeyZ: 142, KeyboardLayoutSelect: 143, Lang1: 144, Lang2: 145, Lang3: 146, Lang4: 147, Lang5: 148, LaunchApp1: 149, LaunchApp2: 150, LaunchAssistant: 151, LaunchControlPanel: 152, LaunchMail: 153, LaunchScreenSaver: 154, MailForward: 155, MailReply: 156, MailSend: 157, MediaFastForward: 158, MediaPause: 159, MediaPlay: 160, MediaPlayPause: 161, MediaRecord: 162, MediaRewind: 163, MediaSelect: 164, MediaStop: 165, MediaTrackNext: 166, MediaTrackPrevious: 167, MetaLeft: 168, MetaRight: 169, MicrophoneMuteToggle: 170, Minus: 171, NonConvert: 172, NumLock: 173, Numpad0: 174, Numpad1: 175, Numpad2: 176, Numpad3: 177, Numpad4: 178, Numpad5: 179, Numpad6: 180, Numpad7: 181, Numpad8: 182, Numpad9: 183, NumpadAdd: 184, NumpadBackspace: 185, NumpadClear: 186, NumpadClearEntry: 187, NumpadComma: 188, NumpadDecimal: 189, NumpadDivide: 190, NumpadEnter: 191, NumpadEqual: 192, NumpadMemoryAdd: 193, NumpadMemoryClear: 194, NumpadMemoryRecall: 195, NumpadMemoryStore: 196, NumpadMemorySubtract: 197, NumpadMultiply: 198, NumpadParenLeft: 199, NumpadParenRight: 200, NumpadSubtract: 201, Open: 202, PageDown: 203, PageUp: 204, Paste: 205, Pause: 206, Period: 207, Power: 208, PrintScreen: 209, PrivacyScreenToggle: 210, Props: 211, Quote: 212, Resume: 213, ScrollLock: 214, Select: 215, SelectTask: 216, Semicolon: 217, ShiftLeft: 218, ShiftRight: 219, ShowAllWindows: 220, Slash: 221, Sleep: 222, Space: 223, Super: 224, Suspend: 225, Tab: 226, Turbo: 227, Undo: 228, WakeUp: 229, ZoomToggle: 230};
    B.Map_PogD3 = new A.ConstantStringMap(B.Object_wwi, [458907, 458873, 458978, 458982, 458833, 458832, 458831, 458834, 458881, 458879, 458880, 458805, 458801, 458794, 458799, 458800, 786544, 786543, 786980, 786986, 786981, 786979, 786983, 786977, 786982, 458809, 458806, 458853, 458976, 458980, 458890, 458876, 458875, 458828, 458791, 458782, 458783, 458784, 458785, 458786, 458787, 458788, 458789, 458790, 65717, 786616, 458829, 458792, 458798, 458793, 458793, 458810, 458819, 458820, 458821, 458856, 458857, 458858, 458859, 458860, 458861, 458862, 458811, 458863, 458864, 458865, 458866, 458867, 458812, 458813, 458814, 458815, 458816, 458817, 458818, 458878, 18, 19, 392961, 392970, 392971, 392972, 392973, 392974, 392975, 392976, 392962, 392963, 392964, 392965, 392966, 392967, 392968, 392969, 392977, 392978, 392979, 392980, 392981, 392982, 392983, 392984, 392985, 392986, 392987, 392988, 392989, 392990, 392991, 458869, 458826, 16, 458825, 458852, 458887, 458889, 458888, 458756, 458757, 458758, 458759, 458760, 458761, 458762, 458763, 458764, 458765, 458766, 458767, 458768, 458769, 458770, 458771, 458772, 458773, 458774, 458775, 458776, 458777, 458778, 458779, 458780, 458781, 787101, 458896, 458897, 458898, 458899, 458900, 786836, 786834, 786891, 786847, 786826, 786865, 787083, 787081, 787084, 786611, 786609, 786608, 786637, 786610, 786612, 786819, 786615, 786613, 786614, 458979, 458983, 24, 458797, 458891, 458835, 458850, 458841, 458842, 458843, 458844, 458845, 458846, 458847, 458848, 458849, 458839, 458939, 458968, 458969, 458885, 458851, 458836, 458840, 458855, 458963, 458962, 458961, 458960, 458964, 458837, 458934, 458935, 458838, 458868, 458830, 458827, 458877, 458824, 458807, 458854, 458822, 23, 458915, 458804, 21, 458823, 458871, 786850, 458803, 458977, 458981, 787103, 458808, 65666, 458796, 17, 20, 458795, 22, 458874, 65667, 786994], type$.ConstantStringMap_String_int);
    B.Object_empty = {};
    B.Map_empty0 = new A.ConstantStringMap(B.Object_empty, [], A.findType("ConstantStringMap<String,List<String>>"));
    B.Map_empty = new A.ConstantStringMap(B.Object_empty, [], A.findType("ConstantStringMap<Symbol0,@>"));
    B.Object_csx = {in: 0, iw: 1, ji: 2, jw: 3, mo: 4, aam: 5, adp: 6, aue: 7, ayx: 8, bgm: 9, bjd: 10, ccq: 11, cjr: 12, cka: 13, cmk: 14, coy: 15, cqu: 16, drh: 17, drw: 18, gav: 19, gfx: 20, ggn: 21, gti: 22, guv: 23, hrr: 24, ibi: 25, ilw: 26, jeg: 27, kgc: 28, kgh: 29, koj: 30, krm: 31, ktr: 32, kvs: 33, kwq: 34, kxe: 35, kzj: 36, kzt: 37, lii: 38, lmm: 39, meg: 40, mst: 41, mwj: 42, myt: 43, nad: 44, ncp: 45, nnx: 46, nts: 47, oun: 48, pcr: 49, pmc: 50, pmu: 51, ppa: 52, ppr: 53, pry: 54, puz: 55, sca: 56, skk: 57, tdu: 58, thc: 59, thx: 60, tie: 61, tkk: 62, tlw: 63, tmp: 64, tne: 65, tnf: 66, tsf: 67, uok: 68, xba: 69, xia: 70, xkh: 71, xsj: 72, ybd: 73, yma: 74, ymt: 75, yos: 76, yuu: 77};
    B.Map_oFQ7B = new A.ConstantStringMap(B.Object_csx, ["id", "he", "yi", "jv", "ro", "aas", "dz", "ktz", "nun", "bcg", "drl", "rki", "mom", "cmr", "xch", "pij", "quh", "khk", "prs", "dev", "vaj", "gvr", "nyc", "duz", "jal", "opa", "gal", "oyb", "tdf", "kml", "kwv", "bmf", "dtp", "gdj", "yam", "tvd", "dtp", "dtp", "raq", "rmx", "cir", "mry", "vaj", "mry", "xny", "kdz", "ngv", "pij", "vaj", "adx", "huw", "phr", "bfy", "lcq", "prt", "pub", "hle", "oyb", "dtp", "tpo", "oyb", "ras", "twm", "weo", "tyj", "kak", "prs", "taj", "ema", "cax", "acn", "waw", "suj", "rki", "lrr", "mtm", "zom", "yug"], type$.ConstantStringMap_String_String);
    B.Object_UL9 = {KeyA: 0, KeyB: 1, KeyC: 2, KeyD: 3, KeyE: 4, KeyF: 5, KeyG: 6, KeyH: 7, KeyI: 8, KeyJ: 9, KeyK: 10, KeyL: 11, KeyM: 12, KeyN: 13, KeyO: 14, KeyP: 15, KeyQ: 16, KeyR: 17, KeyS: 18, KeyT: 19, KeyU: 20, KeyV: 21, KeyW: 22, KeyX: 23, KeyY: 24, KeyZ: 25, Digit1: 26, Digit2: 27, Digit3: 28, Digit4: 29, Digit5: 30, Digit6: 31, Digit7: 32, Digit8: 33, Digit9: 34, Digit0: 35, Minus: 36, Equal: 37, BracketLeft: 38, BracketRight: 39, Backslash: 40, Semicolon: 41, Quote: 42, Backquote: 43, Comma: 44, Period: 45, Slash: 46};
    B.Map_skkUy = new A.ConstantStringMap(B.Object_UL9, ["a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "1", "2", "3", "4", "5", "6", "7", "8", "9", "0", "-", "=", "[", "]", "\\", ";", "'", "`", ",", ".", "/"], type$.ConstantStringMap_String_String);
    B.List_42_null_null_8589935146 = A._setArrayType(makeConstList([42, null, null, 8589935146]), type$.JSArray_nullable_int);
    B.List_43_null_null_8589935147 = A._setArrayType(makeConstList([43, null, null, 8589935147]), type$.JSArray_nullable_int);
    B.List_45_null_null_8589935149 = A._setArrayType(makeConstList([45, null, null, 8589935149]), type$.JSArray_nullable_int);
    B.List_46_null_null_8589935150 = A._setArrayType(makeConstList([46, null, null, 8589935150]), type$.JSArray_nullable_int);
    B.List_47_null_null_8589935151 = A._setArrayType(makeConstList([47, null, null, 8589935151]), type$.JSArray_nullable_int);
    B.List_48_null_null_8589935152 = A._setArrayType(makeConstList([48, null, null, 8589935152]), type$.JSArray_nullable_int);
    B.List_49_null_null_8589935153 = A._setArrayType(makeConstList([49, null, null, 8589935153]), type$.JSArray_nullable_int);
    B.List_50_null_null_8589935154 = A._setArrayType(makeConstList([50, null, null, 8589935154]), type$.JSArray_nullable_int);
    B.List_51_null_null_8589935155 = A._setArrayType(makeConstList([51, null, null, 8589935155]), type$.JSArray_nullable_int);
    B.List_52_null_null_8589935156 = A._setArrayType(makeConstList([52, null, null, 8589935156]), type$.JSArray_nullable_int);
    B.List_53_null_null_8589935157 = A._setArrayType(makeConstList([53, null, null, 8589935157]), type$.JSArray_nullable_int);
    B.List_54_null_null_8589935158 = A._setArrayType(makeConstList([54, null, null, 8589935158]), type$.JSArray_nullable_int);
    B.List_55_null_null_8589935159 = A._setArrayType(makeConstList([55, null, null, 8589935159]), type$.JSArray_nullable_int);
    B.List_56_null_null_8589935160 = A._setArrayType(makeConstList([56, null, null, 8589935160]), type$.JSArray_nullable_int);
    B.List_57_null_null_8589935161 = A._setArrayType(makeConstList([57, null, null, 8589935161]), type$.JSArray_nullable_int);
    B.List_EGT = A._setArrayType(makeConstList([8589934852, 8589934852, 8589934853, null]), type$.JSArray_nullable_int);
    B.List_4294967555_null_4294967555_null = A._setArrayType(makeConstList([4294967555, null, 4294967555, null]), type$.JSArray_nullable_int);
    B.List_4294968065_null_null_8589935154 = A._setArrayType(makeConstList([4294968065, null, null, 8589935154]), type$.JSArray_nullable_int);
    B.List_4294968066_null_null_8589935156 = A._setArrayType(makeConstList([4294968066, null, null, 8589935156]), type$.JSArray_nullable_int);
    B.List_4294968067_null_null_8589935158 = A._setArrayType(makeConstList([4294968067, null, null, 8589935158]), type$.JSArray_nullable_int);
    B.List_4294968068_null_null_8589935160 = A._setArrayType(makeConstList([4294968068, null, null, 8589935160]), type$.JSArray_nullable_int);
    B.List_4294968321_null_null_8589935157 = A._setArrayType(makeConstList([4294968321, null, null, 8589935157]), type$.JSArray_nullable_int);
    B.List_EGT0 = A._setArrayType(makeConstList([8589934848, 8589934848, 8589934849, null]), type$.JSArray_nullable_int);
    B.List_4294967423_null_null_8589935150 = A._setArrayType(makeConstList([4294967423, null, null, 8589935150]), type$.JSArray_nullable_int);
    B.List_4294968069_null_null_8589935153 = A._setArrayType(makeConstList([4294968069, null, null, 8589935153]), type$.JSArray_nullable_int);
    B.List_4294967309_null_null_8589935117 = A._setArrayType(makeConstList([4294967309, null, null, 8589935117]), type$.JSArray_nullable_int);
    B.List_4294968070_null_null_8589935159 = A._setArrayType(makeConstList([4294968070, null, null, 8589935159]), type$.JSArray_nullable_int);
    B.List_4294968327_null_null_8589935152 = A._setArrayType(makeConstList([4294968327, null, null, 8589935152]), type$.JSArray_nullable_int);
    B.List_EGT1 = A._setArrayType(makeConstList([8589934854, 8589934854, 8589934855, null]), type$.JSArray_nullable_int);
    B.List_4294968071_null_null_8589935155 = A._setArrayType(makeConstList([4294968071, null, null, 8589935155]), type$.JSArray_nullable_int);
    B.List_4294968072_null_null_8589935161 = A._setArrayType(makeConstList([4294968072, null, null, 8589935161]), type$.JSArray_nullable_int);
    B.List_EGT2 = A._setArrayType(makeConstList([8589934850, 8589934850, 8589934851, null]), type$.JSArray_nullable_int);
    B.Map_wskGA = new A.GeneralConstantMap(["*", B.List_42_null_null_8589935146, "+", B.List_43_null_null_8589935147, "-", B.List_45_null_null_8589935149, ".", B.List_46_null_null_8589935150, "/", B.List_47_null_null_8589935151, "0", B.List_48_null_null_8589935152, "1", B.List_49_null_null_8589935153, "2", B.List_50_null_null_8589935154, "3", B.List_51_null_null_8589935155, "4", B.List_52_null_null_8589935156, "5", B.List_53_null_null_8589935157, "6", B.List_54_null_null_8589935158, "7", B.List_55_null_null_8589935159, "8", B.List_56_null_null_8589935160, "9", B.List_57_null_null_8589935161, "Alt", B.List_EGT, "AltGraph", B.List_4294967555_null_4294967555_null, "ArrowDown", B.List_4294968065_null_null_8589935154, "ArrowLeft", B.List_4294968066_null_null_8589935156, "ArrowRight", B.List_4294968067_null_null_8589935158, "ArrowUp", B.List_4294968068_null_null_8589935160, "Clear", B.List_4294968321_null_null_8589935157, "Control", B.List_EGT0, "Delete", B.List_4294967423_null_null_8589935150, "End", B.List_4294968069_null_null_8589935153, "Enter", B.List_4294967309_null_null_8589935117, "Home", B.List_4294968070_null_null_8589935159, "Insert", B.List_4294968327_null_null_8589935152, "Meta", B.List_EGT1, "PageDown", B.List_4294968071_null_null_8589935155, "PageUp", B.List_4294968072_null_null_8589935161, "Shift", B.List_EGT2], A.findType("GeneralConstantMap<String,List<int?>>"));
    B.MethodCall_popRoute_null = new A.MethodCall("popRoute", null);
    B.OperatingSystem_0 = new A.OperatingSystem(0, "iOs");
    B.OperatingSystem_1 = new A.OperatingSystem(1, "android");
    B.OperatingSystem_2 = new A.OperatingSystem(2, "linux");
    B.OperatingSystem_3 = new A.OperatingSystem(3, "windows");
    B.OperatingSystem_4 = new A.OperatingSystem(4, "macOs");
    B.OperatingSystem_5 = new A.OperatingSystem(5, "unknown");
    B.PointerChange_0 = new A.PointerChange(0, "cancel");
    B.PointerChange_1 = new A.PointerChange(1, "add");
    B.PointerChange_2 = new A.PointerChange(2, "remove");
    B.PointerChange_3 = new A.PointerChange(3, "hover");
    B.PointerChange_4 = new A.PointerChange(4, "down");
    B.PointerChange_5 = new A.PointerChange(5, "move");
    B.PointerChange_6 = new A.PointerChange(6, "up");
    B.PointerDeviceKind_0 = new A.PointerDeviceKind(0, "touch");
    B.PointerDeviceKind_1 = new A.PointerDeviceKind(1, "mouse");
    B.PointerDeviceKind_2 = new A.PointerDeviceKind(2, "stylus");
    B.PointerDeviceKind_4 = new A.PointerDeviceKind(4, "trackpad");
    B.PointerDeviceKind_5 = new A.PointerDeviceKind(5, "unknown");
    B.PointerSignalKind_0 = new A.PointerSignalKind(0, "none");
    B.PointerSignalKind_1 = new A.PointerSignalKind(1, "scroll");
    B.PointerSignalKind_3 = new A.PointerSignalKind(3, "scale");
    B.Object_VMO = {click: 0, keyup: 1, keydown: 2, mouseup: 3, mousedown: 4, pointerdown: 5, pointerup: 6};
    B.Set_8Gl9 = new A.ConstantStringSet(B.Object_VMO, 7, type$.ConstantStringSet_String);
    B.Object_4CA = {click: 0, touchstart: 1, touchend: 2, pointerdown: 3, pointermove: 4, pointerup: 5};
    B.Set_EGZpe = new A.ConstantStringSet(B.Object_4CA, 6, type$.ConstantStringSet_String);
    B.Object_EVN = {"canvaskit.js": 0};
    B.Set_Vvc75 = new A.ConstantStringSet(B.Object_EVN, 1, type$.ConstantStringSet_String);
    B.Object_ztr = {serif: 0, "sans-serif": 1, monospace: 2, cursive: 3, fantasy: 4, "system-ui": 5, math: 6, emoji: 7, fangsong: 8};
    B.Set_qbjuj = new A.ConstantStringSet(B.Object_ztr, 9, type$.ConstantStringSet_String);
    B.Set_uTMs5 = new A.GeneralConstantSet([B.OperatingSystem_4, B.OperatingSystem_2, B.OperatingSystem_3], A.findType("GeneralConstantSet<OperatingSystem>"));
    B.StackFrame_8sg = new A.StackFrame("...", -1, "", "", "", -1, -1, "", "...");
    B.StackFrame_SOW = new A.StackFrame("<asynchronous suspension>", -1, "", "", "", -1, -1, "", "asynchronous suspension");
    B.Symbol_call = new A.Symbol("call");
    B.TextCapitalization_3 = new A.TextCapitalization(3, "none");
    B.TextCapitalizationConfig_TextCapitalization_3 = new A.TextCapitalizationConfig(B.TextCapitalization_3);
    B.TextCapitalization_0 = new A.TextCapitalization(0, "words");
    B.TextCapitalization_1 = new A.TextCapitalization(1, "sentences");
    B.TextCapitalization_2 = new A.TextCapitalization(2, "characters");
    B.TransformKind_0 = new A.TransformKind(0, "identity");
    B.TransformKind_1 = new A.TransformKind(1, "transform2d");
    B.TransformKind_2 = new A.TransformKind(2, "complex");
    B.Type_ByteBuffer_RkP = A.typeLiteral("ByteBuffer");
    B.Type_ByteData_zNC = A.typeLiteral("ByteData");
    B.Type_Float32List_LB7 = A.typeLiteral("Float32List");
    B.Type_Float64List_LB7 = A.typeLiteral("Float64List");
    B.Type_Int16List_uXf = A.typeLiteral("Int16List");
    B.Type_Int32List_O50 = A.typeLiteral("Int32List");
    B.Type_Int8List_ekJ = A.typeLiteral("Int8List");
    B.Type_JSObject_8k0 = A.typeLiteral("JSObject");
    B.Type_Object_xQ6 = A.typeLiteral("Object");
    B.Type_Uint16List_2bx = A.typeLiteral("Uint16List");
    B.Type_Uint32List_2bx = A.typeLiteral("Uint32List");
    B.Type_Uint8ClampedList_Jik = A.typeLiteral("Uint8ClampedList");
    B.Type_Uint8List_WLA = A.typeLiteral("Uint8List");
    B.Utf8Decoder_false = new A.Utf8Decoder(false);
  })();
  (function staticFields() {
    $.__canvasKit = A._Cell$named("canvasKit");
    $.CanvasKitRenderer____instance = A._Cell$named("_instance");
    $.CanvasKitRenderer__programs = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, A.findType("Future<FragmentProgram>"));
    $.SurfaceFactory__instance = null;
    $._configuration = null;
    $._flutterViewEmbedder = null;
    $.HtmlRenderer____instance = A._Cell$named("_instance");
    $._hotRestartListeners = A._setArrayType([], type$.JSArray_of_void_Function);
    $._initializationState = B.DebugEngineInitializationState_0;
    $._assetManager = null;
    $.KeyboardBinding__instance = null;
    $.pluginMessageCallHandler = null;
    $.PointerBinding__instance = null;
    $._WheelEventListenerMixin__defaultScrollLineHeight = null;
    $._PointerState__pointerCount = 0;
    $.RawKeyboard__instance = null;
    $.EngineSemanticsOwner__instance = null;
    $.SemanticsTextEditingStrategy__instance = null;
    $._lineLookup = null;
    $.formsOnTheDom = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.JavaScriptObject);
    $._JS_INTEROP_INTERCEPTOR_TAG = null;
    $.toStringVisiting = A._setArrayType([], type$.JSArray_Object);
    $.Primitives__identityHashCodeProperty = null;
    $.Primitives_timerFrequency = 0;
    $.Primitives_timerTicks = A._js_helper_Primitives_dateNow$closure();
    $.BoundClosure__receiverFieldNameCache = null;
    $.BoundClosure__interceptorFieldNameCache = null;
    $.getTagFunction = null;
    $.alternateTagFunction = null;
    $.prototypeForTagFunction = null;
    $.dispatchRecordsForInstanceTags = null;
    $.interceptorsForUncacheableTags = null;
    $.initNativeDispatchFlag = null;
    $._Record__computedFieldKeys = A._setArrayType([], A.findType("JSArray<List<Object>?>"));
    $._nextCallback = null;
    $._lastCallback = null;
    $._lastPriorityCallback = null;
    $._isInCallbackLoop = false;
    $.Zone__current = B.C__RootZone;
    $._extensions = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.Future_ServiceExtensionResponse_Function_2_String_and_Map_String_String);
    $.Element__parseDocument = null;
    $.Element__parseRange = null;
    $.Element__defaultValidator = null;
    $.Element__defaultSanitizer = null;
    $._Html5NodeValidator__attributeValidators = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.Function);
    $._popStateListenersCache = A.LinkedHashMap_LinkedHashMap$_empty(type$.dynamic_Function_Object, type$.JavaScriptObject);
    $.FlutterError_onError = A.assertions_FlutterError_dumpErrorToConsole$closure();
    $.FlutterError__errorCount = 0;
    $.FlutterError__stackFilters = A._setArrayType([], A.findType("JSArray<StackFilter>"));
    $._debugPrintedCharacters = 0;
    $._debugPrintCompleter = null;
    $._debugPrintScheduled = false;
  })();
  (function lazyInitializers() {
    var _lazyFinal = hunkHelpers.lazyFinal,
      _lazy = hunkHelpers.lazy;
    _lazyFinal($, "_browserEngine", "$get$_browserEngine", () => {
      var _s9_ = "navigator";
      return A.detectBrowserEngineByVendorAgent(A.JSStringToString_get_toDart(A.getProperty(A.getProperty(self.window, _s9_), "vendor")), B.JSString_methods.toLowerCase$0(A.DomNavigatorExtension_get_userAgent(A.getProperty(self.window, _s9_))));
    });
    _lazyFinal($, "_operatingSystem", "$get$_operatingSystem", () => A.detectOperatingSystem());
    _lazyFinal($, "EngineFlutterDisplay__instance", "$get$EngineFlutterDisplay__instance", () => {
      var t2,
        t1 = A.getProperty(self.window, "screen");
      t1 = t1 == null ? null : A.getProperty(t1, "width");
      if (t1 == null)
        t1 = 0;
      t2 = A.getProperty(self.window, "screen");
      t2 = t2 == null ? null : A.getProperty(t2, "height");
      A.Size$(t1, t2 == null ? 0 : t2);
      return new A.EngineFlutterDisplay();
    });
    _lazyFinal($, "_ttPolicy", "$get$_ttPolicy", () => {
      var t1 = A.getProperty(self.window, "trustedTypes");
      t1.toString;
      return A._callMethodUnchecked2(t1, "createPolicy", A.StringToJSString_get_toJS("flutter-engine"), type$.JavaScriptObject._as({createScriptURL: A.FunctionToJSExportedDartFunction_get_toJS(new A._ttPolicy_closure())}));
    });
    _lazyFinal($, "_kLogicalAltLeft", "$get$_kLogicalAltLeft", () => 8589934852);
    _lazyFinal($, "_kLogicalAltRight", "$get$_kLogicalAltRight", () => 8589934853);
    _lazyFinal($, "_kLogicalControlLeft", "$get$_kLogicalControlLeft", () => 8589934848);
    _lazyFinal($, "_kLogicalControlRight", "$get$_kLogicalControlRight", () => 8589934849);
    _lazyFinal($, "_kLogicalShiftLeft", "$get$_kLogicalShiftLeft", () => 8589934850);
    _lazyFinal($, "_kLogicalShiftRight", "$get$_kLogicalShiftRight", () => 8589934851);
    _lazyFinal($, "_kLogicalMetaLeft", "$get$_kLogicalMetaLeft", () => 8589934854);
    _lazyFinal($, "_kLogicalMetaRight", "$get$_kLogicalMetaRight", () => 8589934855);
    _lazyFinal($, "_kPhysicalAltLeft", "$get$_kPhysicalAltLeft", () => 458978);
    _lazyFinal($, "_kPhysicalAltRight", "$get$_kPhysicalAltRight", () => 458982);
    _lazyFinal($, "kPhysicalControlLeft", "$get$kPhysicalControlLeft", () => 458976);
    _lazyFinal($, "kPhysicalControlRight", "$get$kPhysicalControlRight", () => 458980);
    _lazyFinal($, "_kPhysicalShiftLeft", "$get$_kPhysicalShiftLeft", () => 458977);
    _lazyFinal($, "_kPhysicalShiftRight", "$get$_kPhysicalShiftRight", () => 458981);
    _lazyFinal($, "_kPhysicalMetaLeft", "$get$_kPhysicalMetaLeft", () => 458979);
    _lazyFinal($, "_kPhysicalMetaRight", "$get$_kPhysicalMetaRight", () => 458983);
    _lazyFinal($, "_kLogicalKeyToModifierGetter", "$get$_kLogicalKeyToModifierGetter", () => A.LinkedHashMap_LinkedHashMap$_literal([$.$get$_kLogicalAltLeft(), new A._kLogicalKeyToModifierGetter_closure(), $.$get$_kLogicalAltRight(), new A._kLogicalKeyToModifierGetter_closure0(), $.$get$_kLogicalControlLeft(), new A._kLogicalKeyToModifierGetter_closure1(), $.$get$_kLogicalControlRight(), new A._kLogicalKeyToModifierGetter_closure2(), $.$get$_kLogicalShiftLeft(), new A._kLogicalKeyToModifierGetter_closure3(), $.$get$_kLogicalShiftRight(), new A._kLogicalKeyToModifierGetter_closure4(), $.$get$_kLogicalMetaLeft(), new A._kLogicalKeyToModifierGetter_closure5(), $.$get$_kLogicalMetaRight(), new A._kLogicalKeyToModifierGetter_closure6()], type$.int, A.findType("bool(FlutterHtmlKeyboardEvent)")));
    _lazyFinal($, "preventDefaultListener", "$get$preventDefaultListener", () => A.createDomEventListener(new A.preventDefaultListener_closure()));
    _lazy($, "HighContrastSupport_instance", "$get$HighContrastSupport_instance", () => new A.HighContrastSupport(A._setArrayType([], A.findType("JSArray<~(bool)>")), A.DomWindowExtension_matchMedia(self.window, "(forced-colors: active)")));
    _lazyFinal($, "EnginePlatformDispatcher__instance", "$get$EnginePlatformDispatcher__instance", () => {
      var t3, elementSize, end,
        t1 = A.EnginePlatformDispatcher_parseBrowserLanguages(),
        t2 = A.findBrowserTextScaleFactor(),
        builder = A.EngineAccessibilityFeaturesBuilder$(0);
      if (A.DomMediaQueryListExtension_get_matches($.$get$HighContrastSupport_instance()._highContrastMediaQuery))
        builder.set$highContrast(true);
      t1 = A.PlatformConfiguration$(builder.build$0(), false, "/", t1, B.Brightness_1, false, null, t2);
      t2 = A._setArrayType([$.$get$EngineFlutterDisplay__instance()], A.findType("JSArray<EngineFlutterDisplay>"));
      t3 = A.DomWindowExtension_matchMedia(self.window, "(prefers-color-scheme: dark)");
      A.createSentinel();
      t3 = new A.EnginePlatformDispatcher(t1, t2, A.LinkedHashMap_LinkedHashMap$_empty(type$.int, A.findType("FlutterView")), A.LinkedHashMap_LinkedHashMap$_empty(type$.Object, A.findType("ViewConfiguration")), t3);
      t3._addBrightnessMediaQueryListener$0();
      t2 = $.$get$HighContrastSupport_instance();
      t1 = t2._listeners;
      if (B.JSArray_methods.get$isEmpty(t1))
        A._callMethodUnchecked1(t2._highContrastMediaQuery, "addListener", t2.get$_onHighContrastChangeListener());
      t1.push(t3.get$_updateHighContrast());
      t3._addFontSizeObserver$0();
      t3._addLocaleChangedListener$0();
      A.registerHotRestartListener(t3.get$dispose());
      t1 = B.C_Utf8Encoder.convert$1(B.AppLifecycleState_1._enumToString$0());
      elementSize = t1.BYTES_PER_ELEMENT;
      end = A.RangeError_checkValidRange(0, null, B.JSInt_methods.$tdiv(t1.byteLength, elementSize));
      t3._sendPlatformMessage$3("flutter/lifecycle", A.NativeByteData_NativeByteData$view(t1.buffer, t1.byteOffset + 0 * elementSize, (end - 0) * elementSize), A.EnginePlatformDispatcher__zonedPlatformMessageResponseCallback(null));
      return t3;
    });
    _lazyFinal($, "PlatformViewManager_instance", "$get$PlatformViewManager_instance", () => {
      var t1 = type$.String,
        t2 = type$.int;
      t1 = new A.PlatformViewManager(A.LinkedHashMap_LinkedHashMap$_empty(t1, type$.Function), A.LinkedHashMap_LinkedHashMap$_empty(t2, type$.JavaScriptObject), A.LinkedHashSet_LinkedHashSet$_empty(t1), A.LinkedHashMap_LinkedHashMap$_empty(t2, t1));
      t1.registerFactory$2("_default_document_create_element_visible", A._engine___defaultFactory$closure());
      t1.registerFactory$3$isVisible("_default_document_create_element_invisible", A._engine___defaultFactory$closure(), false);
      return t1;
    });
    _lazy($, "SafariPointerEventWorkaround_instance", "$get$SafariPointerEventWorkaround_instance", () => new A.SafariPointerEventWorkaround());
    _lazyFinal($, "_renderer", "$get$_renderer", () => {
      if (A.configuration().get$requestedRendererType() != null ? A.configuration().get$requestedRendererType() === "canvaskit" : A.isDesktop())
        var t1 = new A.CanvasKitRenderer();
      else {
        A.createSentinel();
        t1 = new A.HtmlRenderer();
      }
      return t1;
    });
    _lazyFinal($, "HtmlFontCollection_notPunctuation", "$get$HtmlFontCollection_notPunctuation", () => A.RegExp_RegExp("[a-z0-9\\s]+", false));
    _lazyFinal($, "HtmlFontCollection_startWithDigit", "$get$HtmlFontCollection_startWithDigit", () => A.RegExp_RegExp("\\b\\d", true));
    _lazyFinal($, "BrowserAutofillHints__singletonInstance", "$get$BrowserAutofillHints__singletonInstance", () => {
      var t1 = type$.String;
      return new A.BrowserAutofillHints(A.LinkedHashMap_LinkedHashMap$_literal(["birthday", "bday", "birthdayDay", "bday-day", "birthdayMonth", "bday-month", "birthdayYear", "bday-year", "countryCode", "country", "countryName", "country-name", "creditCardExpirationDate", "cc-exp", "creditCardExpirationMonth", "cc-exp-month", "creditCardExpirationYear", "cc-exp-year", "creditCardFamilyName", "cc-family-name", "creditCardGivenName", "cc-given-name", "creditCardMiddleName", "cc-additional-name", "creditCardName", "cc-name", "creditCardNumber", "cc-number", "creditCardSecurityCode", "cc-csc", "creditCardType", "cc-type", "email", "email", "familyName", "family-name", "fullStreetAddress", "street-address", "gender", "sex", "givenName", "given-name", "impp", "impp", "jobTitle", "organization-title", "language", "language", "middleName", "middleName", "name", "name", "namePrefix", "honorific-prefix", "nameSuffix", "honorific-suffix", "newPassword", "new-password", "nickname", "nickname", "oneTimeCode", "one-time-code", "organizationName", "organization", "password", "current-password", "photo", "photo", "postalCode", "postal-code", "streetAddressLevel1", "address-level1", "streetAddressLevel2", "address-level2", "streetAddressLevel3", "address-level3", "streetAddressLevel4", "address-level4", "streetAddressLine1", "address-line1", "streetAddressLine2", "address-line2", "streetAddressLine3", "address-line3", "telephoneNumber", "tel", "telephoneNumberAreaCode", "tel-area-code", "telephoneNumberCountryCode", "tel-country-code", "telephoneNumberExtension", "tel-extension", "telephoneNumberLocal", "tel-local", "telephoneNumberLocalPrefix", "tel-local-prefix", "telephoneNumberLocalSuffix", "tel-local-suffix", "telephoneNumberNational", "tel-national", "transactionAmount", "transaction-amount", "transactionCurrency", "transaction-currency", "url", "url", "username", "username"], t1, t1));
    });
    _lazyFinal($, "textEditing", "$get$textEditing", () => new A.HybridTextEditing());
    _lazy($, "printWarning", "$get$printWarning", () => A.DomConsoleExtension_get_warn(A.getProperty(self.window, "console")));
    _lazyFinal($, "window", "$get$window", () => A.EngineFlutterWindow$(0, $.$get$EnginePlatformDispatcher__instance()));
    _lazyFinal($, "DART_CLOSURE_PROPERTY_NAME", "$get$DART_CLOSURE_PROPERTY_NAME", () => A.getIsolateAffinityTag("_$dart_dartClosure"));
    _lazyFinal($, "nullFuture", "$get$nullFuture", () => B.C__RootZone.run$1(new A.nullFuture_closure()));
    _lazyFinal($, "TypeErrorDecoder_noSuchMethodPattern", "$get$TypeErrorDecoder_noSuchMethodPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokeCallErrorOn({
      toString: function() {
        return "$receiver$";
      }
    })));
    _lazyFinal($, "TypeErrorDecoder_notClosurePattern", "$get$TypeErrorDecoder_notClosurePattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokeCallErrorOn({$method$: null,
      toString: function() {
        return "$receiver$";
      }
    })));
    _lazyFinal($, "TypeErrorDecoder_nullCallPattern", "$get$TypeErrorDecoder_nullCallPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokeCallErrorOn(null)));
    _lazyFinal($, "TypeErrorDecoder_nullLiteralCallPattern", "$get$TypeErrorDecoder_nullLiteralCallPattern", () => A.TypeErrorDecoder_extractPattern(function() {
      var $argumentsExpr$ = "$arguments$";
      try {
        null.$method$($argumentsExpr$);
      } catch (e) {
        return e.message;
      }
    }()));
    _lazyFinal($, "TypeErrorDecoder_undefinedCallPattern", "$get$TypeErrorDecoder_undefinedCallPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokeCallErrorOn(void 0)));
    _lazyFinal($, "TypeErrorDecoder_undefinedLiteralCallPattern", "$get$TypeErrorDecoder_undefinedLiteralCallPattern", () => A.TypeErrorDecoder_extractPattern(function() {
      var $argumentsExpr$ = "$arguments$";
      try {
        (void 0).$method$($argumentsExpr$);
      } catch (e) {
        return e.message;
      }
    }()));
    _lazyFinal($, "TypeErrorDecoder_nullPropertyPattern", "$get$TypeErrorDecoder_nullPropertyPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokePropertyErrorOn(null)));
    _lazyFinal($, "TypeErrorDecoder_nullLiteralPropertyPattern", "$get$TypeErrorDecoder_nullLiteralPropertyPattern", () => A.TypeErrorDecoder_extractPattern(function() {
      try {
        null.$method$;
      } catch (e) {
        return e.message;
      }
    }()));
    _lazyFinal($, "TypeErrorDecoder_undefinedPropertyPattern", "$get$TypeErrorDecoder_undefinedPropertyPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokePropertyErrorOn(void 0)));
    _lazyFinal($, "TypeErrorDecoder_undefinedLiteralPropertyPattern", "$get$TypeErrorDecoder_undefinedLiteralPropertyPattern", () => A.TypeErrorDecoder_extractPattern(function() {
      try {
        (void 0).$method$;
      } catch (e) {
        return e.message;
      }
    }()));
    _lazyFinal($, "_kUseDead", "$get$_kUseDead", () => A.String_String$fromCharCode(254));
    _lazyFinal($, "_kLowerA", "$get$_kLowerA", () => 97);
    _lazyFinal($, "_kUpperA", "$get$_kUpperA", () => 65);
    _lazyFinal($, "_kLowerZ", "$get$_kLowerZ", () => 122);
    _lazyFinal($, "_kUpperZ", "$get$_kUpperZ", () => 90);
    _lazyFinal($, "_kMarshallIntBase", "$get$_kMarshallIntBase", () => 48);
    _lazyFinal($, "_AsyncRun__scheduleImmediateClosure", "$get$_AsyncRun__scheduleImmediateClosure", () => A._AsyncRun__initializeScheduleImmediate());
    _lazyFinal($, "Future__nullFuture", "$get$Future__nullFuture", () => A.findType("_Future<Null>")._as($.$get$nullFuture()));
    _lazyFinal($, "Utf8Decoder__decoder", "$get$Utf8Decoder__decoder", () => new A.Utf8Decoder__decoder_closure().call$0());
    _lazyFinal($, "Utf8Decoder__decoderNonfatal", "$get$Utf8Decoder__decoderNonfatal", () => new A.Utf8Decoder__decoderNonfatal_closure().call$0());
    _lazyFinal($, "_Base64Decoder__inverseAlphabet", "$get$_Base64Decoder__inverseAlphabet", () => A.NativeInt8List__create1(A._ensureNativeList(A._setArrayType([-2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, -2, -2, -2, -2, -2, 62, -2, 62, -2, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -2, -2, -2, -1, -2, -2, -2, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -2, -2, -2, -2, 63, -2, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, -2, -2, -2, -2, -2], type$.JSArray_int))));
    _lazyFinal($, "_Uri__needsNoEncoding", "$get$_Uri__needsNoEncoding", () => A.RegExp_RegExp("^[\\-\\.0-9A-Z_a-z~]*$", true));
    _lazyFinal($, "_hashSeed", "$get$_hashSeed", () => A.objectHashCode(B.Type_Object_xQ6));
    _lazyFinal($, "Stopwatch__frequency", "$get$Stopwatch__frequency", () => {
      A.Primitives_initTicker();
      return $.Primitives_timerFrequency;
    });
    _lazyFinal($, "_scannerTables", "$get$_scannerTables", () => A._createTables());
    _lazyFinal($, "CssStyleDeclaration__propertyCache", "$get$CssStyleDeclaration__propertyCache", () => ({}));
    _lazyFinal($, "_Html5NodeValidator__allowedElements", "$get$_Html5NodeValidator__allowedElements", () => A.LinkedHashSet_LinkedHashSet$from(["A", "ABBR", "ACRONYM", "ADDRESS", "AREA", "ARTICLE", "ASIDE", "AUDIO", "B", "BDI", "BDO", "BIG", "BLOCKQUOTE", "BR", "BUTTON", "CANVAS", "CAPTION", "CENTER", "CITE", "CODE", "COL", "COLGROUP", "COMMAND", "DATA", "DATALIST", "DD", "DEL", "DETAILS", "DFN", "DIR", "DIV", "DL", "DT", "EM", "FIELDSET", "FIGCAPTION", "FIGURE", "FONT", "FOOTER", "FORM", "H1", "H2", "H3", "H4", "H5", "H6", "HEADER", "HGROUP", "HR", "I", "IFRAME", "IMG", "INPUT", "INS", "KBD", "LABEL", "LEGEND", "LI", "MAP", "MARK", "MENU", "METER", "NAV", "NOBR", "OL", "OPTGROUP", "OPTION", "OUTPUT", "P", "PRE", "PROGRESS", "Q", "S", "SAMP", "SECTION", "SELECT", "SMALL", "SOURCE", "SPAN", "STRIKE", "STRONG", "SUB", "SUMMARY", "SUP", "TABLE", "TBODY", "TD", "TEXTAREA", "TFOOT", "TH", "THEAD", "TIME", "TR", "TRACK", "TT", "U", "UL", "VAR", "VIDEO", "WBR"], type$.String));
    _lazyFinal($, "Device_isOpera", "$get$Device_isOpera", () => B.JSString_methods.contains$2(A.Device_userAgent(), "Opera", 0));
    _lazyFinal($, "Device_isIE", "$get$Device_isIE", () => !$.$get$Device_isOpera() && B.JSString_methods.contains$2(A.Device_userAgent(), "Trident/", 0));
    _lazyFinal($, "Device_isFirefox", "$get$Device_isFirefox", () => B.JSString_methods.contains$2(A.Device_userAgent(), "Firefox", 0));
    _lazyFinal($, "Device_cssPrefix", "$get$Device_cssPrefix", () => "-" + $.$get$Device_propertyPrefix() + "-");
    _lazyFinal($, "Device_propertyPrefix", "$get$Device_propertyPrefix", () => {
      if ($.$get$Device_isFirefox())
        var t1 = "moz";
      else if ($.$get$Device_isIE())
        t1 = "ms";
      else
        t1 = $.$get$Device_isOpera() ? "o" : "webkit";
      return t1;
    });
    _lazyFinal($, "Endian_host", "$get$Endian_host", () => A.NativeByteData_NativeByteData$view(A.NativeUint16List__create1(A._ensureNativeList(A._setArrayType([1], type$.JSArray_int))).buffer, 0, null).getInt8(0) === 1 ? B.C_Endian : B.C_Endian0);
    _lazyFinal($, "channelBuffers", "$get$channelBuffers", () => new A.ChannelBuffers(A.LinkedHashMap_LinkedHashMap$_empty(type$.String, A.findType("_Channel"))));
    _lazy($, "_realDefaultUrlStrategy", "$get$_realDefaultUrlStrategy", () => B.C_HashUrlStrategy);
    _lazyFinal($, "AudioplayersPlatformInterface__token", "$get$AudioplayersPlatformInterface__token", () => new A.Object());
    _lazyFinal($, "_debugPrintBuffer", "$get$_debugPrintBuffer", () => A.ListQueue$(null, type$.String));
    _lazyFinal($, "_debugPrintStopwatch", "$get$_debugPrintStopwatch", () => A.Stopwatch$());
    _lazyFinal($, "WriteBuffer__zeroBuffer", "$get$WriteBuffer__zeroBuffer", () => A.NativeUint8List_NativeUint8List(8));
    _lazyFinal($, "StackFrame__webNonDebugFramePattern", "$get$StackFrame__webNonDebugFramePattern", () => A.RegExp_RegExp("^\\s*at ([^\\s]+).*$", true));
    _lazyFinal($, "webPluginRegistrar", "$get$webPluginRegistrar", () => new A.PluginRegistry(A.LinkedHashMap_LinkedHashMap$_empty(type$.String, A.findType("Future<ByteData?>?(ByteData?)"))));
    _lazyFinal($, "PlatformInterface__instanceTokens", "$get$PlatformInterface__instanceTokens", () => new A.Expando(new WeakMap()));
    _lazyFinal($, "SharedPreferencesStorePlatform__token", "$get$SharedPreferencesStorePlatform__token", () => new A.Object());
  })();
  (function nativeSupport() {
    !function() {
      var intern = function(s) {
        var o = {};
        o[s] = 1;
        return Object.keys(hunkHelpers.convertToFastObject(o))[0];
      };
      init.getIsolateTag = function(name) {
        return intern("___dart_" + name + init.isolateTag);
      };
      var tableProperty = "___dart_isolate_tags_";
      var usedProperties = Object[tableProperty] || (Object[tableProperty] = Object.create(null));
      var rootProperty = "_ZxYxX";
      for (var i = 0;; i++) {
        var property = intern(rootProperty + "_" + i + "_");
        if (!(property in usedProperties)) {
          usedProperties[property] = 1;
          init.isolateTag = property;
          break;
        }
      }
      init.dispatchPropertyName = init.getIsolateTag("dispatch_record");
    }();
    hunkHelpers.setOrUpdateInterceptorsByTag({WebGL: J.Interceptor, AnimationEffectReadOnly: J.JavaScriptObject, AnimationEffectTiming: J.JavaScriptObject, AnimationEffectTimingReadOnly: J.JavaScriptObject, AnimationTimeline: J.JavaScriptObject, AnimationWorkletGlobalScope: J.JavaScriptObject, AuthenticatorAssertionResponse: J.JavaScriptObject, AuthenticatorAttestationResponse: J.JavaScriptObject, AuthenticatorResponse: J.JavaScriptObject, BackgroundFetchFetch: J.JavaScriptObject, BackgroundFetchManager: J.JavaScriptObject, BackgroundFetchSettledFetch: J.JavaScriptObject, BarProp: J.JavaScriptObject, BarcodeDetector: J.JavaScriptObject, BluetoothRemoteGATTDescriptor: J.JavaScriptObject, Body: J.JavaScriptObject, BudgetState: J.JavaScriptObject, CacheStorage: J.JavaScriptObject, CanvasGradient: J.JavaScriptObject, CanvasPattern: J.JavaScriptObject, CanvasRenderingContext2D: J.JavaScriptObject, Client: J.JavaScriptObject, Clients: J.JavaScriptObject, CookieStore: J.JavaScriptObject, Coordinates: J.JavaScriptObject, Credential: J.JavaScriptObject, CredentialUserData: J.JavaScriptObject, CredentialsContainer: J.JavaScriptObject, Crypto: J.JavaScriptObject, CryptoKey: J.JavaScriptObject, CSS: J.JavaScriptObject, CSSVariableReferenceValue: J.JavaScriptObject, CustomElementRegistry: J.JavaScriptObject, DataTransfer: J.JavaScriptObject, DataTransferItem: J.JavaScriptObject, DeprecatedStorageInfo: J.JavaScriptObject, DeprecatedStorageQuota: J.JavaScriptObject, DeprecationReport: J.JavaScriptObject, DetectedBarcode: J.JavaScriptObject, DetectedFace: J.JavaScriptObject, DetectedText: J.JavaScriptObject, DeviceAcceleration: J.JavaScriptObject, DeviceRotationRate: J.JavaScriptObject, DirectoryEntry: J.JavaScriptObject, webkitFileSystemDirectoryEntry: J.JavaScriptObject, FileSystemDirectoryEntry: J.JavaScriptObject, DirectoryReader: J.JavaScriptObject, WebKitDirectoryReader: J.JavaScriptObject, webkitFileSystemDirectoryReader: J.JavaScriptObject, FileSystemDirectoryReader: J.JavaScriptObject, DocumentOrShadowRoot: J.JavaScriptObject, DocumentTimeline: J.JavaScriptObject, DOMError: J.JavaScriptObject, DOMImplementation: J.JavaScriptObject, Iterator: J.JavaScriptObject, DOMMatrix: J.JavaScriptObject, DOMMatrixReadOnly: J.JavaScriptObject, DOMParser: J.JavaScriptObject, DOMPoint: J.JavaScriptObject, DOMPointReadOnly: J.JavaScriptObject, DOMQuad: J.JavaScriptObject, DOMStringMap: J.JavaScriptObject, Entry: J.JavaScriptObject, webkitFileSystemEntry: J.JavaScriptObject, FileSystemEntry: J.JavaScriptObject, External: J.JavaScriptObject, FaceDetector: J.JavaScriptObject, FederatedCredential: J.JavaScriptObject, FileEntry: J.JavaScriptObject, webkitFileSystemFileEntry: J.JavaScriptObject, FileSystemFileEntry: J.JavaScriptObject, DOMFileSystem: J.JavaScriptObject, WebKitFileSystem: J.JavaScriptObject, webkitFileSystem: J.JavaScriptObject, FileSystem: J.JavaScriptObject, FontFace: J.JavaScriptObject, FontFaceSource: J.JavaScriptObject, FormData: J.JavaScriptObject, GamepadButton: J.JavaScriptObject, GamepadPose: J.JavaScriptObject, Geolocation: J.JavaScriptObject, Position: J.JavaScriptObject, GeolocationPosition: J.JavaScriptObject, Headers: J.JavaScriptObject, HTMLHyperlinkElementUtils: J.JavaScriptObject, IdleDeadline: J.JavaScriptObject, ImageBitmap: J.JavaScriptObject, ImageBitmapRenderingContext: J.JavaScriptObject, ImageCapture: J.JavaScriptObject, ImageData: J.JavaScriptObject, InputDeviceCapabilities: J.JavaScriptObject, IntersectionObserver: J.JavaScriptObject, IntersectionObserverEntry: J.JavaScriptObject, InterventionReport: J.JavaScriptObject, KeyframeEffect: J.JavaScriptObject, KeyframeEffectReadOnly: J.JavaScriptObject, MediaCapabilities: J.JavaScriptObject, MediaCapabilitiesInfo: J.JavaScriptObject, MediaDeviceInfo: J.JavaScriptObject, MediaError: J.JavaScriptObject, MediaKeyStatusMap: J.JavaScriptObject, MediaKeySystemAccess: J.JavaScriptObject, MediaKeys: J.JavaScriptObject, MediaKeysPolicy: J.JavaScriptObject, MediaMetadata: J.JavaScriptObject, MediaSession: J.JavaScriptObject, MediaSettingsRange: J.JavaScriptObject, MemoryInfo: J.JavaScriptObject, MessageChannel: J.JavaScriptObject, Metadata: J.JavaScriptObject, MutationObserver: J.JavaScriptObject, WebKitMutationObserver: J.JavaScriptObject, MutationRecord: J.JavaScriptObject, NavigationPreloadManager: J.JavaScriptObject, Navigator: J.JavaScriptObject, NavigatorAutomationInformation: J.JavaScriptObject, NavigatorConcurrentHardware: J.JavaScriptObject, NavigatorCookies: J.JavaScriptObject, NavigatorUserMediaError: J.JavaScriptObject, NodeFilter: J.JavaScriptObject, NodeIterator: J.JavaScriptObject, NonDocumentTypeChildNode: J.JavaScriptObject, NonElementParentNode: J.JavaScriptObject, NoncedElement: J.JavaScriptObject, OffscreenCanvasRenderingContext2D: J.JavaScriptObject, OverconstrainedError: J.JavaScriptObject, PaintRenderingContext2D: J.JavaScriptObject, PaintSize: J.JavaScriptObject, PaintWorkletGlobalScope: J.JavaScriptObject, PasswordCredential: J.JavaScriptObject, Path2D: J.JavaScriptObject, PaymentAddress: J.JavaScriptObject, PaymentInstruments: J.JavaScriptObject, PaymentManager: J.JavaScriptObject, PaymentResponse: J.JavaScriptObject, PerformanceEntry: J.JavaScriptObject, PerformanceLongTaskTiming: J.JavaScriptObject, PerformanceMark: J.JavaScriptObject, PerformanceMeasure: J.JavaScriptObject, PerformanceNavigation: J.JavaScriptObject, PerformanceNavigationTiming: J.JavaScriptObject, PerformanceObserver: J.JavaScriptObject, PerformanceObserverEntryList: J.JavaScriptObject, PerformancePaintTiming: J.JavaScriptObject, PerformanceResourceTiming: J.JavaScriptObject, PerformanceServerTiming: J.JavaScriptObject, PerformanceTiming: J.JavaScriptObject, Permissions: J.JavaScriptObject, PhotoCapabilities: J.JavaScriptObject, PositionError: J.JavaScriptObject, GeolocationPositionError: J.JavaScriptObject, Presentation: J.JavaScriptObject, PresentationReceiver: J.JavaScriptObject, PublicKeyCredential: J.JavaScriptObject, PushManager: J.JavaScriptObject, PushMessageData: J.JavaScriptObject, PushSubscription: J.JavaScriptObject, PushSubscriptionOptions: J.JavaScriptObject, Range: J.JavaScriptObject, RelatedApplication: J.JavaScriptObject, ReportBody: J.JavaScriptObject, ReportingObserver: J.JavaScriptObject, ResizeObserver: J.JavaScriptObject, ResizeObserverEntry: J.JavaScriptObject, RTCCertificate: J.JavaScriptObject, RTCIceCandidate: J.JavaScriptObject, mozRTCIceCandidate: J.JavaScriptObject, RTCLegacyStatsReport: J.JavaScriptObject, RTCRtpContributingSource: J.JavaScriptObject, RTCRtpReceiver: J.JavaScriptObject, RTCRtpSender: J.JavaScriptObject, RTCSessionDescription: J.JavaScriptObject, mozRTCSessionDescription: J.JavaScriptObject, RTCStatsResponse: J.JavaScriptObject, Screen: J.JavaScriptObject, ScrollState: J.JavaScriptObject, ScrollTimeline: J.JavaScriptObject, Selection: J.JavaScriptObject, SharedArrayBuffer: J.JavaScriptObject, SpeechRecognitionAlternative: J.JavaScriptObject, SpeechSynthesisVoice: J.JavaScriptObject, StaticRange: J.JavaScriptObject, StorageManager: J.JavaScriptObject, StyleMedia: J.JavaScriptObject, StylePropertyMap: J.JavaScriptObject, StylePropertyMapReadonly: J.JavaScriptObject, SyncManager: J.JavaScriptObject, TaskAttributionTiming: J.JavaScriptObject, TextDetector: J.JavaScriptObject, TextMetrics: J.JavaScriptObject, TrackDefault: J.JavaScriptObject, TreeWalker: J.JavaScriptObject, TrustedHTML: J.JavaScriptObject, TrustedScriptURL: J.JavaScriptObject, TrustedURL: J.JavaScriptObject, UnderlyingSourceBase: J.JavaScriptObject, URLSearchParams: J.JavaScriptObject, VRCoordinateSystem: J.JavaScriptObject, VRDisplayCapabilities: J.JavaScriptObject, VREyeParameters: J.JavaScriptObject, VRFrameData: J.JavaScriptObject, VRFrameOfReference: J.JavaScriptObject, VRPose: J.JavaScriptObject, VRStageBounds: J.JavaScriptObject, VRStageBoundsPoint: J.JavaScriptObject, VRStageParameters: J.JavaScriptObject, ValidityState: J.JavaScriptObject, VideoPlaybackQuality: J.JavaScriptObject, VideoTrack: J.JavaScriptObject, VTTRegion: J.JavaScriptObject, WindowClient: J.JavaScriptObject, WorkletAnimation: J.JavaScriptObject, WorkletGlobalScope: J.JavaScriptObject, XPathEvaluator: J.JavaScriptObject, XPathExpression: J.JavaScriptObject, XPathNSResolver: J.JavaScriptObject, XPathResult: J.JavaScriptObject, XMLSerializer: J.JavaScriptObject, XSLTProcessor: J.JavaScriptObject, Bluetooth: J.JavaScriptObject, BluetoothCharacteristicProperties: J.JavaScriptObject, BluetoothRemoteGATTServer: J.JavaScriptObject, BluetoothRemoteGATTService: J.JavaScriptObject, BluetoothUUID: J.JavaScriptObject, BudgetService: J.JavaScriptObject, Cache: J.JavaScriptObject, DOMFileSystemSync: J.JavaScriptObject, DirectoryEntrySync: J.JavaScriptObject, DirectoryReaderSync: J.JavaScriptObject, EntrySync: J.JavaScriptObject, FileEntrySync: J.JavaScriptObject, FileReaderSync: J.JavaScriptObject, FileWriterSync: J.JavaScriptObject, HTMLAllCollection: J.JavaScriptObject, Mojo: J.JavaScriptObject, MojoHandle: J.JavaScriptObject, MojoWatcher: J.JavaScriptObject, NFC: J.JavaScriptObject, PagePopupController: J.JavaScriptObject, Report: J.JavaScriptObject, Request: J.JavaScriptObject, Response: J.JavaScriptObject, SubtleCrypto: J.JavaScriptObject, USBAlternateInterface: J.JavaScriptObject, USBConfiguration: J.JavaScriptObject, USBDevice: J.JavaScriptObject, USBEndpoint: J.JavaScriptObject, USBInTransferResult: J.JavaScriptObject, USBInterface: J.JavaScriptObject, USBIsochronousInTransferPacket: J.JavaScriptObject, USBIsochronousInTransferResult: J.JavaScriptObject, USBIsochronousOutTransferPacket: J.JavaScriptObject, USBIsochronousOutTransferResult: J.JavaScriptObject, USBOutTransferResult: J.JavaScriptObject, WorkerLocation: J.JavaScriptObject, WorkerNavigator: J.JavaScriptObject, Worklet: J.JavaScriptObject, IDBCursor: J.JavaScriptObject, IDBCursorWithValue: J.JavaScriptObject, IDBFactory: J.JavaScriptObject, IDBIndex: J.JavaScriptObject, IDBKeyRange: J.JavaScriptObject, IDBObjectStore: J.JavaScriptObject, IDBObservation: J.JavaScriptObject, IDBObserver: J.JavaScriptObject, IDBObserverChanges: J.JavaScriptObject, SVGAngle: J.JavaScriptObject, SVGAnimatedAngle: J.JavaScriptObject, SVGAnimatedBoolean: J.JavaScriptObject, SVGAnimatedEnumeration: J.JavaScriptObject, SVGAnimatedInteger: J.JavaScriptObject, SVGAnimatedLength: J.JavaScriptObject, SVGAnimatedLengthList: J.JavaScriptObject, SVGAnimatedNumber: J.JavaScriptObject, SVGAnimatedNumberList: J.JavaScriptObject, SVGAnimatedPreserveAspectRatio: J.JavaScriptObject, SVGAnimatedRect: J.JavaScriptObject, SVGAnimatedString: J.JavaScriptObject, SVGAnimatedTransformList: J.JavaScriptObject, SVGMatrix: J.JavaScriptObject, SVGPoint: J.JavaScriptObject, SVGPreserveAspectRatio: J.JavaScriptObject, SVGRect: J.JavaScriptObject, SVGUnitTypes: J.JavaScriptObject, AudioListener: J.JavaScriptObject, AudioParam: J.JavaScriptObject, AudioTrack: J.JavaScriptObject, AudioWorkletGlobalScope: J.JavaScriptObject, AudioWorkletProcessor: J.JavaScriptObject, PeriodicWave: J.JavaScriptObject, WebGLActiveInfo: J.JavaScriptObject, ANGLEInstancedArrays: J.JavaScriptObject, ANGLE_instanced_arrays: J.JavaScriptObject, WebGLBuffer: J.JavaScriptObject, WebGLCanvas: J.JavaScriptObject, WebGLColorBufferFloat: J.JavaScriptObject, WebGLCompressedTextureASTC: J.JavaScriptObject, WebGLCompressedTextureATC: J.JavaScriptObject, WEBGL_compressed_texture_atc: J.JavaScriptObject, WebGLCompressedTextureETC1: J.JavaScriptObject, WEBGL_compressed_texture_etc1: J.JavaScriptObject, WebGLCompressedTextureETC: J.JavaScriptObject, WebGLCompressedTexturePVRTC: J.JavaScriptObject, WEBGL_compressed_texture_pvrtc: J.JavaScriptObject, WebGLCompressedTextureS3TC: J.JavaScriptObject, WEBGL_compressed_texture_s3tc: J.JavaScriptObject, WebGLCompressedTextureS3TCsRGB: J.JavaScriptObject, WebGLDebugRendererInfo: J.JavaScriptObject, WEBGL_debug_renderer_info: J.JavaScriptObject, WebGLDebugShaders: J.JavaScriptObject, WEBGL_debug_shaders: J.JavaScriptObject, WebGLDepthTexture: J.JavaScriptObject, WEBGL_depth_texture: J.JavaScriptObject, WebGLDrawBuffers: J.JavaScriptObject, WEBGL_draw_buffers: J.JavaScriptObject, EXTsRGB: J.JavaScriptObject, EXT_sRGB: J.JavaScriptObject, EXTBlendMinMax: J.JavaScriptObject, EXT_blend_minmax: J.JavaScriptObject, EXTColorBufferFloat: J.JavaScriptObject, EXTColorBufferHalfFloat: J.JavaScriptObject, EXTDisjointTimerQuery: J.JavaScriptObject, EXTDisjointTimerQueryWebGL2: J.JavaScriptObject, EXTFragDepth: J.JavaScriptObject, EXT_frag_depth: J.JavaScriptObject, EXTShaderTextureLOD: J.JavaScriptObject, EXT_shader_texture_lod: J.JavaScriptObject, EXTTextureFilterAnisotropic: J.JavaScriptObject, EXT_texture_filter_anisotropic: J.JavaScriptObject, WebGLFramebuffer: J.JavaScriptObject, WebGLGetBufferSubDataAsync: J.JavaScriptObject, WebGLLoseContext: J.JavaScriptObject, WebGLExtensionLoseContext: J.JavaScriptObject, WEBGL_lose_context: J.JavaScriptObject, OESElementIndexUint: J.JavaScriptObject, OES_element_index_uint: J.JavaScriptObject, OESStandardDerivatives: J.JavaScriptObject, OES_standard_derivatives: J.JavaScriptObject, OESTextureFloat: J.JavaScriptObject, OES_texture_float: J.JavaScriptObject, OESTextureFloatLinear: J.JavaScriptObject, OES_texture_float_linear: J.JavaScriptObject, OESTextureHalfFloat: J.JavaScriptObject, OES_texture_half_float: J.JavaScriptObject, OESTextureHalfFloatLinear: J.JavaScriptObject, OES_texture_half_float_linear: J.JavaScriptObject, OESVertexArrayObject: J.JavaScriptObject, OES_vertex_array_object: J.JavaScriptObject, WebGLProgram: J.JavaScriptObject, WebGLQuery: J.JavaScriptObject, WebGLRenderbuffer: J.JavaScriptObject, WebGLRenderingContext: J.JavaScriptObject, WebGL2RenderingContext: J.JavaScriptObject, WebGLSampler: J.JavaScriptObject, WebGLShader: J.JavaScriptObject, WebGLShaderPrecisionFormat: J.JavaScriptObject, WebGLSync: J.JavaScriptObject, WebGLTexture: J.JavaScriptObject, WebGLTimerQueryEXT: J.JavaScriptObject, WebGLTransformFeedback: J.JavaScriptObject, WebGLUniformLocation: J.JavaScriptObject, WebGLVertexArrayObject: J.JavaScriptObject, WebGLVertexArrayObjectOES: J.JavaScriptObject, WebGL2RenderingContextBase: J.JavaScriptObject, ArrayBuffer: A.NativeByteBuffer, ArrayBufferView: A.NativeTypedData, DataView: A.NativeByteData, Float32Array: A.NativeFloat32List, Float64Array: A.NativeFloat64List, Int16Array: A.NativeInt16List, Int32Array: A.NativeInt32List, Int8Array: A.NativeInt8List, Uint16Array: A.NativeUint16List, Uint32Array: A.NativeUint32List, Uint8ClampedArray: A.NativeUint8ClampedList, CanvasPixelArray: A.NativeUint8ClampedList, Uint8Array: A.NativeUint8List, HTMLAudioElement: A.HtmlElement, HTMLBRElement: A.HtmlElement, HTMLButtonElement: A.HtmlElement, HTMLCanvasElement: A.HtmlElement, HTMLContentElement: A.HtmlElement, HTMLDListElement: A.HtmlElement, HTMLDataElement: A.HtmlElement, HTMLDataListElement: A.HtmlElement, HTMLDetailsElement: A.HtmlElement, HTMLDialogElement: A.HtmlElement, HTMLDivElement: A.HtmlElement, HTMLEmbedElement: A.HtmlElement, HTMLFieldSetElement: A.HtmlElement, HTMLHRElement: A.HtmlElement, HTMLHeadElement: A.HtmlElement, HTMLHeadingElement: A.HtmlElement, HTMLHtmlElement: A.HtmlElement, HTMLIFrameElement: A.HtmlElement, HTMLImageElement: A.HtmlElement, HTMLInputElement: A.HtmlElement, HTMLLIElement: A.HtmlElement, HTMLLabelElement: A.HtmlElement, HTMLLegendElement: A.HtmlElement, HTMLMapElement: A.HtmlElement, HTMLMediaElement: A.HtmlElement, HTMLMenuElement: A.HtmlElement, HTMLMetaElement: A.HtmlElement, HTMLMeterElement: A.HtmlElement, HTMLModElement: A.HtmlElement, HTMLOListElement: A.HtmlElement, HTMLObjectElement: A.HtmlElement, HTMLOptGroupElement: A.HtmlElement, HTMLOptionElement: A.HtmlElement, HTMLOutputElement: A.HtmlElement, HTMLParagraphElement: A.HtmlElement, HTMLParamElement: A.HtmlElement, HTMLPictureElement: A.HtmlElement, HTMLPreElement: A.HtmlElement, HTMLProgressElement: A.HtmlElement, HTMLQuoteElement: A.HtmlElement, HTMLShadowElement: A.HtmlElement, HTMLSlotElement: A.HtmlElement, HTMLSourceElement: A.HtmlElement, HTMLSpanElement: A.HtmlElement, HTMLStyleElement: A.HtmlElement, HTMLTableCaptionElement: A.HtmlElement, HTMLTableCellElement: A.HtmlElement, HTMLTableDataCellElement: A.HtmlElement, HTMLTableHeaderCellElement: A.HtmlElement, HTMLTableColElement: A.HtmlElement, HTMLTextAreaElement: A.HtmlElement, HTMLTimeElement: A.HtmlElement, HTMLTitleElement: A.HtmlElement, HTMLTrackElement: A.HtmlElement, HTMLUListElement: A.HtmlElement, HTMLUnknownElement: A.HtmlElement, HTMLVideoElement: A.HtmlElement, HTMLDirectoryElement: A.HtmlElement, HTMLFontElement: A.HtmlElement, HTMLFrameElement: A.HtmlElement, HTMLFrameSetElement: A.HtmlElement, HTMLMarqueeElement: A.HtmlElement, HTMLElement: A.HtmlElement, AccessibleNodeList: A.AccessibleNodeList, HTMLAnchorElement: A.AnchorElement, HTMLAreaElement: A.AreaElement, HTMLBaseElement: A.BaseElement, Blob: A.Blob, HTMLBodyElement: A.BodyElement, CDATASection: A.CharacterData, CharacterData: A.CharacterData, Comment: A.CharacterData, ProcessingInstruction: A.CharacterData, Text: A.CharacterData, CSSPerspective: A.CssPerspective, CSSCharsetRule: A.CssRule, CSSConditionRule: A.CssRule, CSSFontFaceRule: A.CssRule, CSSGroupingRule: A.CssRule, CSSImportRule: A.CssRule, CSSKeyframeRule: A.CssRule, MozCSSKeyframeRule: A.CssRule, WebKitCSSKeyframeRule: A.CssRule, CSSKeyframesRule: A.CssRule, MozCSSKeyframesRule: A.CssRule, WebKitCSSKeyframesRule: A.CssRule, CSSMediaRule: A.CssRule, CSSNamespaceRule: A.CssRule, CSSPageRule: A.CssRule, CSSRule: A.CssRule, CSSStyleRule: A.CssRule, CSSSupportsRule: A.CssRule, CSSViewportRule: A.CssRule, CSSStyleDeclaration: A.CssStyleDeclaration, MSStyleCSSProperties: A.CssStyleDeclaration, CSS2Properties: A.CssStyleDeclaration, CSSImageValue: A.CssStyleValue, CSSKeywordValue: A.CssStyleValue, CSSNumericValue: A.CssStyleValue, CSSPositionValue: A.CssStyleValue, CSSResourceValue: A.CssStyleValue, CSSUnitValue: A.CssStyleValue, CSSURLImageValue: A.CssStyleValue, CSSStyleValue: A.CssStyleValue, CSSMatrixComponent: A.CssTransformComponent, CSSRotation: A.CssTransformComponent, CSSScale: A.CssTransformComponent, CSSSkew: A.CssTransformComponent, CSSTranslation: A.CssTransformComponent, CSSTransformComponent: A.CssTransformComponent, CSSTransformValue: A.CssTransformValue, CSSUnparsedValue: A.CssUnparsedValue, DataTransferItemList: A.DataTransferItemList, DOMException: A.DomException0, ClientRectList: A.DomRectList, DOMRectList: A.DomRectList, DOMRectReadOnly: A.DomRectReadOnly0, DOMStringList: A.DomStringList, DOMTokenList: A.DomTokenList0, MathMLElement: A.Element, Element: A.Element, AbortPaymentEvent: A.Event, AnimationEvent: A.Event, AnimationPlaybackEvent: A.Event, ApplicationCacheErrorEvent: A.Event, BackgroundFetchClickEvent: A.Event, BackgroundFetchEvent: A.Event, BackgroundFetchFailEvent: A.Event, BackgroundFetchedEvent: A.Event, BeforeInstallPromptEvent: A.Event, BeforeUnloadEvent: A.Event, BlobEvent: A.Event, CanMakePaymentEvent: A.Event, ClipboardEvent: A.Event, CloseEvent: A.Event, CompositionEvent: A.Event, CustomEvent: A.Event, DeviceMotionEvent: A.Event, DeviceOrientationEvent: A.Event, ErrorEvent: A.Event, Event: A.Event, InputEvent: A.Event, SubmitEvent: A.Event, ExtendableEvent: A.Event, ExtendableMessageEvent: A.Event, FetchEvent: A.Event, FocusEvent: A.Event, FontFaceSetLoadEvent: A.Event, ForeignFetchEvent: A.Event, GamepadEvent: A.Event, HashChangeEvent: A.Event, InstallEvent: A.Event, KeyboardEvent: A.Event, MediaEncryptedEvent: A.Event, MediaKeyMessageEvent: A.Event, MediaQueryListEvent: A.Event, MediaStreamEvent: A.Event, MediaStreamTrackEvent: A.Event, MessageEvent: A.Event, MIDIConnectionEvent: A.Event, MIDIMessageEvent: A.Event, MouseEvent: A.Event, DragEvent: A.Event, MutationEvent: A.Event, NotificationEvent: A.Event, PageTransitionEvent: A.Event, PaymentRequestEvent: A.Event, PaymentRequestUpdateEvent: A.Event, PointerEvent: A.Event, PopStateEvent: A.Event, PresentationConnectionAvailableEvent: A.Event, PresentationConnectionCloseEvent: A.Event, ProgressEvent: A.Event, PromiseRejectionEvent: A.Event, PushEvent: A.Event, RTCDataChannelEvent: A.Event, RTCDTMFToneChangeEvent: A.Event, RTCPeerConnectionIceEvent: A.Event, RTCTrackEvent: A.Event, SecurityPolicyViolationEvent: A.Event, SensorErrorEvent: A.Event, SpeechRecognitionError: A.Event, SpeechRecognitionEvent: A.Event, SpeechSynthesisEvent: A.Event, StorageEvent: A.Event, SyncEvent: A.Event, TextEvent: A.Event, TouchEvent: A.Event, TrackEvent: A.Event, TransitionEvent: A.Event, WebKitTransitionEvent: A.Event, UIEvent: A.Event, VRDeviceEvent: A.Event, VRDisplayEvent: A.Event, VRSessionEvent: A.Event, WheelEvent: A.Event, MojoInterfaceRequestEvent: A.Event, ResourceProgressEvent: A.Event, USBConnectionEvent: A.Event, IDBVersionChangeEvent: A.Event, AudioProcessingEvent: A.Event, OfflineAudioCompletionEvent: A.Event, WebGLContextEvent: A.Event, AbsoluteOrientationSensor: A.EventTarget, Accelerometer: A.EventTarget, AccessibleNode: A.EventTarget, AmbientLightSensor: A.EventTarget, Animation: A.EventTarget, ApplicationCache: A.EventTarget, DOMApplicationCache: A.EventTarget, OfflineResourceList: A.EventTarget, BackgroundFetchRegistration: A.EventTarget, BatteryManager: A.EventTarget, BroadcastChannel: A.EventTarget, CanvasCaptureMediaStreamTrack: A.EventTarget, DedicatedWorkerGlobalScope: A.EventTarget, EventSource: A.EventTarget, FileReader: A.EventTarget, FontFaceSet: A.EventTarget, Gyroscope: A.EventTarget, XMLHttpRequest: A.EventTarget, XMLHttpRequestEventTarget: A.EventTarget, XMLHttpRequestUpload: A.EventTarget, LinearAccelerationSensor: A.EventTarget, Magnetometer: A.EventTarget, MediaDevices: A.EventTarget, MediaKeySession: A.EventTarget, MediaQueryList: A.EventTarget, MediaRecorder: A.EventTarget, MediaSource: A.EventTarget, MediaStream: A.EventTarget, MediaStreamTrack: A.EventTarget, MessagePort: A.EventTarget, MIDIAccess: A.EventTarget, MIDIInput: A.EventTarget, MIDIOutput: A.EventTarget, MIDIPort: A.EventTarget, NetworkInformation: A.EventTarget, Notification: A.EventTarget, OffscreenCanvas: A.EventTarget, OrientationSensor: A.EventTarget, PaymentRequest: A.EventTarget, Performance: A.EventTarget, PermissionStatus: A.EventTarget, PresentationAvailability: A.EventTarget, PresentationConnection: A.EventTarget, PresentationConnectionList: A.EventTarget, PresentationRequest: A.EventTarget, RelativeOrientationSensor: A.EventTarget, RemotePlayback: A.EventTarget, RTCDataChannel: A.EventTarget, DataChannel: A.EventTarget, RTCDTMFSender: A.EventTarget, RTCPeerConnection: A.EventTarget, webkitRTCPeerConnection: A.EventTarget, mozRTCPeerConnection: A.EventTarget, ScreenOrientation: A.EventTarget, Sensor: A.EventTarget, ServiceWorker: A.EventTarget, ServiceWorkerContainer: A.EventTarget, ServiceWorkerGlobalScope: A.EventTarget, ServiceWorkerRegistration: A.EventTarget, SharedWorker: A.EventTarget, SharedWorkerGlobalScope: A.EventTarget, SpeechRecognition: A.EventTarget, webkitSpeechRecognition: A.EventTarget, SpeechSynthesis: A.EventTarget, SpeechSynthesisUtterance: A.EventTarget, VR: A.EventTarget, VRDevice: A.EventTarget, VRDisplay: A.EventTarget, VRSession: A.EventTarget, VisualViewport: A.EventTarget, WebSocket: A.EventTarget, Window: A.EventTarget, DOMWindow: A.EventTarget, Worker: A.EventTarget, WorkerGlobalScope: A.EventTarget, WorkerPerformance: A.EventTarget, BluetoothDevice: A.EventTarget, BluetoothRemoteGATTCharacteristic: A.EventTarget, Clipboard: A.EventTarget, MojoInterfaceInterceptor: A.EventTarget, USB: A.EventTarget, IDBDatabase: A.EventTarget, IDBOpenDBRequest: A.EventTarget, IDBVersionChangeRequest: A.EventTarget, IDBRequest: A.EventTarget, IDBTransaction: A.EventTarget, AnalyserNode: A.EventTarget, RealtimeAnalyserNode: A.EventTarget, AudioBufferSourceNode: A.EventTarget, AudioDestinationNode: A.EventTarget, AudioNode: A.EventTarget, AudioScheduledSourceNode: A.EventTarget, AudioWorkletNode: A.EventTarget, BiquadFilterNode: A.EventTarget, ChannelMergerNode: A.EventTarget, AudioChannelMerger: A.EventTarget, ChannelSplitterNode: A.EventTarget, AudioChannelSplitter: A.EventTarget, ConstantSourceNode: A.EventTarget, ConvolverNode: A.EventTarget, DelayNode: A.EventTarget, DynamicsCompressorNode: A.EventTarget, GainNode: A.EventTarget, AudioGainNode: A.EventTarget, IIRFilterNode: A.EventTarget, MediaElementAudioSourceNode: A.EventTarget, MediaStreamAudioDestinationNode: A.EventTarget, MediaStreamAudioSourceNode: A.EventTarget, OscillatorNode: A.EventTarget, Oscillator: A.EventTarget, PannerNode: A.EventTarget, AudioPannerNode: A.EventTarget, webkitAudioPannerNode: A.EventTarget, ScriptProcessorNode: A.EventTarget, JavaScriptAudioNode: A.EventTarget, StereoPannerNode: A.EventTarget, WaveShaperNode: A.EventTarget, EventTarget: A.EventTarget, File: A.File, FileList: A.FileList, FileWriter: A.FileWriter, HTMLFormElement: A.FormElement, Gamepad: A.Gamepad, History: A.History, HTMLCollection: A.HtmlCollection, HTMLFormControlsCollection: A.HtmlCollection, HTMLOptionsCollection: A.HtmlCollection, HTMLLinkElement: A.LinkElement, Location: A.Location, MediaList: A.MediaList, MIDIInputMap: A.MidiInputMap, MIDIOutputMap: A.MidiOutputMap, MimeType: A.MimeType, MimeTypeArray: A.MimeTypeArray, Document: A.Node, DocumentFragment: A.Node, HTMLDocument: A.Node, ShadowRoot: A.Node, XMLDocument: A.Node, DocumentType: A.Node, Node: A.Node, NodeList: A.NodeList, RadioNodeList: A.NodeList, Plugin: A.Plugin, PluginArray: A.PluginArray, RTCStatsReport: A.RtcStatsReport, HTMLScriptElement: A.ScriptElement, HTMLSelectElement: A.SelectElement, SourceBuffer: A.SourceBuffer, SourceBufferList: A.SourceBufferList, SpeechGrammar: A.SpeechGrammar, SpeechGrammarList: A.SpeechGrammarList, SpeechRecognitionResult: A.SpeechRecognitionResult, Storage: A.Storage, CSSStyleSheet: A.StyleSheet, StyleSheet: A.StyleSheet, HTMLTableElement: A.TableElement, HTMLTableRowElement: A.TableRowElement, HTMLTableSectionElement: A.TableSectionElement, HTMLTemplateElement: A.TemplateElement, TextTrack: A.TextTrack, TextTrackCue: A.TextTrackCue, VTTCue: A.TextTrackCue, TextTrackCueList: A.TextTrackCueList, TextTrackList: A.TextTrackList, TimeRanges: A.TimeRanges, Touch: A.Touch, TouchList: A.TouchList, TrackDefaultList: A.TrackDefaultList, URL: A.Url, VideoTrackList: A.VideoTrackList, Attr: A._Attr, CSSRuleList: A._CssRuleList, ClientRect: A._DomRect, DOMRect: A._DomRect, GamepadList: A._GamepadList, NamedNodeMap: A._NamedNodeMap, MozNamedAttrMap: A._NamedNodeMap, SpeechRecognitionResultList: A._SpeechRecognitionResultList, StyleSheetList: A._StyleSheetList, SVGLength: A.Length, SVGLengthList: A.LengthList, SVGNumber: A.Number, SVGNumberList: A.NumberList, SVGPointList: A.PointList, SVGScriptElement: A.ScriptElement0, SVGStringList: A.StringList, SVGAElement: A.SvgElement, SVGAnimateElement: A.SvgElement, SVGAnimateMotionElement: A.SvgElement, SVGAnimateTransformElement: A.SvgElement, SVGAnimationElement: A.SvgElement, SVGCircleElement: A.SvgElement, SVGClipPathElement: A.SvgElement, SVGDefsElement: A.SvgElement, SVGDescElement: A.SvgElement, SVGDiscardElement: A.SvgElement, SVGEllipseElement: A.SvgElement, SVGFEBlendElement: A.SvgElement, SVGFEColorMatrixElement: A.SvgElement, SVGFEComponentTransferElement: A.SvgElement, SVGFECompositeElement: A.SvgElement, SVGFEConvolveMatrixElement: A.SvgElement, SVGFEDiffuseLightingElement: A.SvgElement, SVGFEDisplacementMapElement: A.SvgElement, SVGFEDistantLightElement: A.SvgElement, SVGFEFloodElement: A.SvgElement, SVGFEFuncAElement: A.SvgElement, SVGFEFuncBElement: A.SvgElement, SVGFEFuncGElement: A.SvgElement, SVGFEFuncRElement: A.SvgElement, SVGFEGaussianBlurElement: A.SvgElement, SVGFEImageElement: A.SvgElement, SVGFEMergeElement: A.SvgElement, SVGFEMergeNodeElement: A.SvgElement, SVGFEMorphologyElement: A.SvgElement, SVGFEOffsetElement: A.SvgElement, SVGFEPointLightElement: A.SvgElement, SVGFESpecularLightingElement: A.SvgElement, SVGFESpotLightElement: A.SvgElement, SVGFETileElement: A.SvgElement, SVGFETurbulenceElement: A.SvgElement, SVGFilterElement: A.SvgElement, SVGForeignObjectElement: A.SvgElement, SVGGElement: A.SvgElement, SVGGeometryElement: A.SvgElement, SVGGraphicsElement: A.SvgElement, SVGImageElement: A.SvgElement, SVGLineElement: A.SvgElement, SVGLinearGradientElement: A.SvgElement, SVGMarkerElement: A.SvgElement, SVGMaskElement: A.SvgElement, SVGMetadataElement: A.SvgElement, SVGPathElement: A.SvgElement, SVGPatternElement: A.SvgElement, SVGPolygonElement: A.SvgElement, SVGPolylineElement: A.SvgElement, SVGRadialGradientElement: A.SvgElement, SVGRectElement: A.SvgElement, SVGSetElement: A.SvgElement, SVGStopElement: A.SvgElement, SVGStyleElement: A.SvgElement, SVGSVGElement: A.SvgElement, SVGSwitchElement: A.SvgElement, SVGSymbolElement: A.SvgElement, SVGTSpanElement: A.SvgElement, SVGTextContentElement: A.SvgElement, SVGTextElement: A.SvgElement, SVGTextPathElement: A.SvgElement, SVGTextPositioningElement: A.SvgElement, SVGTitleElement: A.SvgElement, SVGUseElement: A.SvgElement, SVGViewElement: A.SvgElement, SVGGradientElement: A.SvgElement, SVGComponentTransferFunctionElement: A.SvgElement, SVGFEDropShadowElement: A.SvgElement, SVGMPathElement: A.SvgElement, SVGElement: A.SvgElement, SVGTransform: A.Transform, SVGTransformList: A.TransformList, AudioBuffer: A.AudioBuffer, AudioParamMap: A.AudioParamMap, AudioTrackList: A.AudioTrackList, AudioContext: A.BaseAudioContext, webkitAudioContext: A.BaseAudioContext, BaseAudioContext: A.BaseAudioContext, OfflineAudioContext: A.OfflineAudioContext});
    hunkHelpers.setOrUpdateLeafTags({WebGL: true, AnimationEffectReadOnly: true, AnimationEffectTiming: true, AnimationEffectTimingReadOnly: true, AnimationTimeline: true, AnimationWorkletGlobalScope: true, AuthenticatorAssertionResponse: true, AuthenticatorAttestationResponse: true, AuthenticatorResponse: true, BackgroundFetchFetch: true, BackgroundFetchManager: true, BackgroundFetchSettledFetch: true, BarProp: true, BarcodeDetector: true, BluetoothRemoteGATTDescriptor: true, Body: true, BudgetState: true, CacheStorage: true, CanvasGradient: true, CanvasPattern: true, CanvasRenderingContext2D: true, Client: true, Clients: true, CookieStore: true, Coordinates: true, Credential: true, CredentialUserData: true, CredentialsContainer: true, Crypto: true, CryptoKey: true, CSS: true, CSSVariableReferenceValue: true, CustomElementRegistry: true, DataTransfer: true, DataTransferItem: true, DeprecatedStorageInfo: true, DeprecatedStorageQuota: true, DeprecationReport: true, DetectedBarcode: true, DetectedFace: true, DetectedText: true, DeviceAcceleration: true, DeviceRotationRate: true, DirectoryEntry: true, webkitFileSystemDirectoryEntry: true, FileSystemDirectoryEntry: true, DirectoryReader: true, WebKitDirectoryReader: true, webkitFileSystemDirectoryReader: true, FileSystemDirectoryReader: true, DocumentOrShadowRoot: true, DocumentTimeline: true, DOMError: true, DOMImplementation: true, Iterator: true, DOMMatrix: true, DOMMatrixReadOnly: true, DOMParser: true, DOMPoint: true, DOMPointReadOnly: true, DOMQuad: true, DOMStringMap: true, Entry: true, webkitFileSystemEntry: true, FileSystemEntry: true, External: true, FaceDetector: true, FederatedCredential: true, FileEntry: true, webkitFileSystemFileEntry: true, FileSystemFileEntry: true, DOMFileSystem: true, WebKitFileSystem: true, webkitFileSystem: true, FileSystem: true, FontFace: true, FontFaceSource: true, FormData: true, GamepadButton: true, GamepadPose: true, Geolocation: true, Position: true, GeolocationPosition: true, Headers: true, HTMLHyperlinkElementUtils: true, IdleDeadline: true, ImageBitmap: true, ImageBitmapRenderingContext: true, ImageCapture: true, ImageData: true, InputDeviceCapabilities: true, IntersectionObserver: true, IntersectionObserverEntry: true, InterventionReport: true, KeyframeEffect: true, KeyframeEffectReadOnly: true, MediaCapabilities: true, MediaCapabilitiesInfo: true, MediaDeviceInfo: true, MediaError: true, MediaKeyStatusMap: true, MediaKeySystemAccess: true, MediaKeys: true, MediaKeysPolicy: true, MediaMetadata: true, MediaSession: true, MediaSettingsRange: true, MemoryInfo: true, MessageChannel: true, Metadata: true, MutationObserver: true, WebKitMutationObserver: true, MutationRecord: true, NavigationPreloadManager: true, Navigator: true, NavigatorAutomationInformation: true, NavigatorConcurrentHardware: true, NavigatorCookies: true, NavigatorUserMediaError: true, NodeFilter: true, NodeIterator: true, NonDocumentTypeChildNode: true, NonElementParentNode: true, NoncedElement: true, OffscreenCanvasRenderingContext2D: true, OverconstrainedError: true, PaintRenderingContext2D: true, PaintSize: true, PaintWorkletGlobalScope: true, PasswordCredential: true, Path2D: true, PaymentAddress: true, PaymentInstruments: true, PaymentManager: true, PaymentResponse: true, PerformanceEntry: true, PerformanceLongTaskTiming: true, PerformanceMark: true, PerformanceMeasure: true, PerformanceNavigation: true, PerformanceNavigationTiming: true, PerformanceObserver: true, PerformanceObserverEntryList: true, PerformancePaintTiming: true, PerformanceResourceTiming: true, PerformanceServerTiming: true, PerformanceTiming: true, Permissions: true, PhotoCapabilities: true, PositionError: true, GeolocationPositionError: true, Presentation: true, PresentationReceiver: true, PublicKeyCredential: true, PushManager: true, PushMessageData: true, PushSubscription: true, PushSubscriptionOptions: true, Range: true, RelatedApplication: true, ReportBody: true, ReportingObserver: true, ResizeObserver: true, ResizeObserverEntry: true, RTCCertificate: true, RTCIceCandidate: true, mozRTCIceCandidate: true, RTCLegacyStatsReport: true, RTCRtpContributingSource: true, RTCRtpReceiver: true, RTCRtpSender: true, RTCSessionDescription: true, mozRTCSessionDescription: true, RTCStatsResponse: true, Screen: true, ScrollState: true, ScrollTimeline: true, Selection: true, SharedArrayBuffer: true, SpeechRecognitionAlternative: true, SpeechSynthesisVoice: true, StaticRange: true, StorageManager: true, StyleMedia: true, StylePropertyMap: true, StylePropertyMapReadonly: true, SyncManager: true, TaskAttributionTiming: true, TextDetector: true, TextMetrics: true, TrackDefault: true, TreeWalker: true, TrustedHTML: true, TrustedScriptURL: true, TrustedURL: true, UnderlyingSourceBase: true, URLSearchParams: true, VRCoordinateSystem: true, VRDisplayCapabilities: true, VREyeParameters: true, VRFrameData: true, VRFrameOfReference: true, VRPose: true, VRStageBounds: true, VRStageBoundsPoint: true, VRStageParameters: true, ValidityState: true, VideoPlaybackQuality: true, VideoTrack: true, VTTRegion: true, WindowClient: true, WorkletAnimation: true, WorkletGlobalScope: true, XPathEvaluator: true, XPathExpression: true, XPathNSResolver: true, XPathResult: true, XMLSerializer: true, XSLTProcessor: true, Bluetooth: true, BluetoothCharacteristicProperties: true, BluetoothRemoteGATTServer: true, BluetoothRemoteGATTService: true, BluetoothUUID: true, BudgetService: true, Cache: true, DOMFileSystemSync: true, DirectoryEntrySync: true, DirectoryReaderSync: true, EntrySync: true, FileEntrySync: true, FileReaderSync: true, FileWriterSync: true, HTMLAllCollection: true, Mojo: true, MojoHandle: true, MojoWatcher: true, NFC: true, PagePopupController: true, Report: true, Request: true, Response: true, SubtleCrypto: true, USBAlternateInterface: true, USBConfiguration: true, USBDevice: true, USBEndpoint: true, USBInTransferResult: true, USBInterface: true, USBIsochronousInTransferPacket: true, USBIsochronousInTransferResult: true, USBIsochronousOutTransferPacket: true, USBIsochronousOutTransferResult: true, USBOutTransferResult: true, WorkerLocation: true, WorkerNavigator: true, Worklet: true, IDBCursor: true, IDBCursorWithValue: true, IDBFactory: true, IDBIndex: true, IDBKeyRange: true, IDBObjectStore: true, IDBObservation: true, IDBObserver: true, IDBObserverChanges: true, SVGAngle: true, SVGAnimatedAngle: true, SVGAnimatedBoolean: true, SVGAnimatedEnumeration: true, SVGAnimatedInteger: true, SVGAnimatedLength: true, SVGAnimatedLengthList: true, SVGAnimatedNumber: true, SVGAnimatedNumberList: true, SVGAnimatedPreserveAspectRatio: true, SVGAnimatedRect: true, SVGAnimatedString: true, SVGAnimatedTransformList: true, SVGMatrix: true, SVGPoint: true, SVGPreserveAspectRatio: true, SVGRect: true, SVGUnitTypes: true, AudioListener: true, AudioParam: true, AudioTrack: true, AudioWorkletGlobalScope: true, AudioWorkletProcessor: true, PeriodicWave: true, WebGLActiveInfo: true, ANGLEInstancedArrays: true, ANGLE_instanced_arrays: true, WebGLBuffer: true, WebGLCanvas: true, WebGLColorBufferFloat: true, WebGLCompressedTextureASTC: true, WebGLCompressedTextureATC: true, WEBGL_compressed_texture_atc: true, WebGLCompressedTextureETC1: true, WEBGL_compressed_texture_etc1: true, WebGLCompressedTextureETC: true, WebGLCompressedTexturePVRTC: true, WEBGL_compressed_texture_pvrtc: true, WebGLCompressedTextureS3TC: true, WEBGL_compressed_texture_s3tc: true, WebGLCompressedTextureS3TCsRGB: true, WebGLDebugRendererInfo: true, WEBGL_debug_renderer_info: true, WebGLDebugShaders: true, WEBGL_debug_shaders: true, WebGLDepthTexture: true, WEBGL_depth_texture: true, WebGLDrawBuffers: true, WEBGL_draw_buffers: true, EXTsRGB: true, EXT_sRGB: true, EXTBlendMinMax: true, EXT_blend_minmax: true, EXTColorBufferFloat: true, EXTColorBufferHalfFloat: true, EXTDisjointTimerQuery: true, EXTDisjointTimerQueryWebGL2: true, EXTFragDepth: true, EXT_frag_depth: true, EXTShaderTextureLOD: true, EXT_shader_texture_lod: true, EXTTextureFilterAnisotropic: true, EXT_texture_filter_anisotropic: true, WebGLFramebuffer: true, WebGLGetBufferSubDataAsync: true, WebGLLoseContext: true, WebGLExtensionLoseContext: true, WEBGL_lose_context: true, OESElementIndexUint: true, OES_element_index_uint: true, OESStandardDerivatives: true, OES_standard_derivatives: true, OESTextureFloat: true, OES_texture_float: true, OESTextureFloatLinear: true, OES_texture_float_linear: true, OESTextureHalfFloat: true, OES_texture_half_float: true, OESTextureHalfFloatLinear: true, OES_texture_half_float_linear: true, OESVertexArrayObject: true, OES_vertex_array_object: true, WebGLProgram: true, WebGLQuery: true, WebGLRenderbuffer: true, WebGLRenderingContext: true, WebGL2RenderingContext: true, WebGLSampler: true, WebGLShader: true, WebGLShaderPrecisionFormat: true, WebGLSync: true, WebGLTexture: true, WebGLTimerQueryEXT: true, WebGLTransformFeedback: true, WebGLUniformLocation: true, WebGLVertexArrayObject: true, WebGLVertexArrayObjectOES: true, WebGL2RenderingContextBase: true, ArrayBuffer: true, ArrayBufferView: false, DataView: true, Float32Array: true, Float64Array: true, Int16Array: true, Int32Array: true, Int8Array: true, Uint16Array: true, Uint32Array: true, Uint8ClampedArray: true, CanvasPixelArray: true, Uint8Array: false, HTMLAudioElement: true, HTMLBRElement: true, HTMLButtonElement: true, HTMLCanvasElement: true, HTMLContentElement: true, HTMLDListElement: true, HTMLDataElement: true, HTMLDataListElement: true, HTMLDetailsElement: true, HTMLDialogElement: true, HTMLDivElement: true, HTMLEmbedElement: true, HTMLFieldSetElement: true, HTMLHRElement: true, HTMLHeadElement: true, HTMLHeadingElement: true, HTMLHtmlElement: true, HTMLIFrameElement: true, HTMLImageElement: true, HTMLInputElement: true, HTMLLIElement: true, HTMLLabelElement: true, HTMLLegendElement: true, HTMLMapElement: true, HTMLMediaElement: true, HTMLMenuElement: true, HTMLMetaElement: true, HTMLMeterElement: true, HTMLModElement: true, HTMLOListElement: true, HTMLObjectElement: true, HTMLOptGroupElement: true, HTMLOptionElement: true, HTMLOutputElement: true, HTMLParagraphElement: true, HTMLParamElement: true, HTMLPictureElement: true, HTMLPreElement: true, HTMLProgressElement: true, HTMLQuoteElement: true, HTMLShadowElement: true, HTMLSlotElement: true, HTMLSourceElement: true, HTMLSpanElement: true, HTMLStyleElement: true, HTMLTableCaptionElement: true, HTMLTableCellElement: true, HTMLTableDataCellElement: true, HTMLTableHeaderCellElement: true, HTMLTableColElement: true, HTMLTextAreaElement: true, HTMLTimeElement: true, HTMLTitleElement: true, HTMLTrackElement: true, HTMLUListElement: true, HTMLUnknownElement: true, HTMLVideoElement: true, HTMLDirectoryElement: true, HTMLFontElement: true, HTMLFrameElement: true, HTMLFrameSetElement: true, HTMLMarqueeElement: true, HTMLElement: false, AccessibleNodeList: true, HTMLAnchorElement: true, HTMLAreaElement: true, HTMLBaseElement: true, Blob: false, HTMLBodyElement: true, CDATASection: true, CharacterData: true, Comment: true, ProcessingInstruction: true, Text: true, CSSPerspective: true, CSSCharsetRule: true, CSSConditionRule: true, CSSFontFaceRule: true, CSSGroupingRule: true, CSSImportRule: true, CSSKeyframeRule: true, MozCSSKeyframeRule: true, WebKitCSSKeyframeRule: true, CSSKeyframesRule: true, MozCSSKeyframesRule: true, WebKitCSSKeyframesRule: true, CSSMediaRule: true, CSSNamespaceRule: true, CSSPageRule: true, CSSRule: true, CSSStyleRule: true, CSSSupportsRule: true, CSSViewportRule: true, CSSStyleDeclaration: true, MSStyleCSSProperties: true, CSS2Properties: true, CSSImageValue: true, CSSKeywordValue: true, CSSNumericValue: true, CSSPositionValue: true, CSSResourceValue: true, CSSUnitValue: true, CSSURLImageValue: true, CSSStyleValue: false, CSSMatrixComponent: true, CSSRotation: true, CSSScale: true, CSSSkew: true, CSSTranslation: true, CSSTransformComponent: false, CSSTransformValue: true, CSSUnparsedValue: true, DataTransferItemList: true, DOMException: true, ClientRectList: true, DOMRectList: true, DOMRectReadOnly: false, DOMStringList: true, DOMTokenList: true, MathMLElement: true, Element: false, AbortPaymentEvent: true, AnimationEvent: true, AnimationPlaybackEvent: true, ApplicationCacheErrorEvent: true, BackgroundFetchClickEvent: true, BackgroundFetchEvent: true, BackgroundFetchFailEvent: true, BackgroundFetchedEvent: true, BeforeInstallPromptEvent: true, BeforeUnloadEvent: true, BlobEvent: true, CanMakePaymentEvent: true, ClipboardEvent: true, CloseEvent: true, CompositionEvent: true, CustomEvent: true, DeviceMotionEvent: true, DeviceOrientationEvent: true, ErrorEvent: true, Event: true, InputEvent: true, SubmitEvent: true, ExtendableEvent: true, ExtendableMessageEvent: true, FetchEvent: true, FocusEvent: true, FontFaceSetLoadEvent: true, ForeignFetchEvent: true, GamepadEvent: true, HashChangeEvent: true, InstallEvent: true, KeyboardEvent: true, MediaEncryptedEvent: true, MediaKeyMessageEvent: true, MediaQueryListEvent: true, MediaStreamEvent: true, MediaStreamTrackEvent: true, MessageEvent: true, MIDIConnectionEvent: true, MIDIMessageEvent: true, MouseEvent: true, DragEvent: true, MutationEvent: true, NotificationEvent: true, PageTransitionEvent: true, PaymentRequestEvent: true, PaymentRequestUpdateEvent: true, PointerEvent: true, PopStateEvent: true, PresentationConnectionAvailableEvent: true, PresentationConnectionCloseEvent: true, ProgressEvent: true, PromiseRejectionEvent: true, PushEvent: true, RTCDataChannelEvent: true, RTCDTMFToneChangeEvent: true, RTCPeerConnectionIceEvent: true, RTCTrackEvent: true, SecurityPolicyViolationEvent: true, SensorErrorEvent: true, SpeechRecognitionError: true, SpeechRecognitionEvent: true, SpeechSynthesisEvent: true, StorageEvent: true, SyncEvent: true, TextEvent: true, TouchEvent: true, TrackEvent: true, TransitionEvent: true, WebKitTransitionEvent: true, UIEvent: true, VRDeviceEvent: true, VRDisplayEvent: true, VRSessionEvent: true, WheelEvent: true, MojoInterfaceRequestEvent: true, ResourceProgressEvent: true, USBConnectionEvent: true, IDBVersionChangeEvent: true, AudioProcessingEvent: true, OfflineAudioCompletionEvent: true, WebGLContextEvent: true, AbsoluteOrientationSensor: true, Accelerometer: true, AccessibleNode: true, AmbientLightSensor: true, Animation: true, ApplicationCache: true, DOMApplicationCache: true, OfflineResourceList: true, BackgroundFetchRegistration: true, BatteryManager: true, BroadcastChannel: true, CanvasCaptureMediaStreamTrack: true, DedicatedWorkerGlobalScope: true, EventSource: true, FileReader: true, FontFaceSet: true, Gyroscope: true, XMLHttpRequest: true, XMLHttpRequestEventTarget: true, XMLHttpRequestUpload: true, LinearAccelerationSensor: true, Magnetometer: true, MediaDevices: true, MediaKeySession: true, MediaQueryList: true, MediaRecorder: true, MediaSource: true, MediaStream: true, MediaStreamTrack: true, MessagePort: true, MIDIAccess: true, MIDIInput: true, MIDIOutput: true, MIDIPort: true, NetworkInformation: true, Notification: true, OffscreenCanvas: true, OrientationSensor: true, PaymentRequest: true, Performance: true, PermissionStatus: true, PresentationAvailability: true, PresentationConnection: true, PresentationConnectionList: true, PresentationRequest: true, RelativeOrientationSensor: true, RemotePlayback: true, RTCDataChannel: true, DataChannel: true, RTCDTMFSender: true, RTCPeerConnection: true, webkitRTCPeerConnection: true, mozRTCPeerConnection: true, ScreenOrientation: true, Sensor: true, ServiceWorker: true, ServiceWorkerContainer: true, ServiceWorkerGlobalScope: true, ServiceWorkerRegistration: true, SharedWorker: true, SharedWorkerGlobalScope: true, SpeechRecognition: true, webkitSpeechRecognition: true, SpeechSynthesis: true, SpeechSynthesisUtterance: true, VR: true, VRDevice: true, VRDisplay: true, VRSession: true, VisualViewport: true, WebSocket: true, Window: true, DOMWindow: true, Worker: true, WorkerGlobalScope: true, WorkerPerformance: true, BluetoothDevice: true, BluetoothRemoteGATTCharacteristic: true, Clipboard: true, MojoInterfaceInterceptor: true, USB: true, IDBDatabase: true, IDBOpenDBRequest: true, IDBVersionChangeRequest: true, IDBRequest: true, IDBTransaction: true, AnalyserNode: true, RealtimeAnalyserNode: true, AudioBufferSourceNode: true, AudioDestinationNode: true, AudioNode: true, AudioScheduledSourceNode: true, AudioWorkletNode: true, BiquadFilterNode: true, ChannelMergerNode: true, AudioChannelMerger: true, ChannelSplitterNode: true, AudioChannelSplitter: true, ConstantSourceNode: true, ConvolverNode: true, DelayNode: true, DynamicsCompressorNode: true, GainNode: true, AudioGainNode: true, IIRFilterNode: true, MediaElementAudioSourceNode: true, MediaStreamAudioDestinationNode: true, MediaStreamAudioSourceNode: true, OscillatorNode: true, Oscillator: true, PannerNode: true, AudioPannerNode: true, webkitAudioPannerNode: true, ScriptProcessorNode: true, JavaScriptAudioNode: true, StereoPannerNode: true, WaveShaperNode: true, EventTarget: false, File: true, FileList: true, FileWriter: true, HTMLFormElement: true, Gamepad: true, History: true, HTMLCollection: true, HTMLFormControlsCollection: true, HTMLOptionsCollection: true, HTMLLinkElement: true, Location: true, MediaList: true, MIDIInputMap: true, MIDIOutputMap: true, MimeType: true, MimeTypeArray: true, Document: true, DocumentFragment: true, HTMLDocument: true, ShadowRoot: true, XMLDocument: true, DocumentType: true, Node: false, NodeList: true, RadioNodeList: true, Plugin: true, PluginArray: true, RTCStatsReport: true, HTMLScriptElement: true, HTMLSelectElement: true, SourceBuffer: true, SourceBufferList: true, SpeechGrammar: true, SpeechGrammarList: true, SpeechRecognitionResult: true, Storage: true, CSSStyleSheet: true, StyleSheet: true, HTMLTableElement: true, HTMLTableRowElement: true, HTMLTableSectionElement: true, HTMLTemplateElement: true, TextTrack: true, TextTrackCue: true, VTTCue: true, TextTrackCueList: true, TextTrackList: true, TimeRanges: true, Touch: true, TouchList: true, TrackDefaultList: true, URL: true, VideoTrackList: true, Attr: true, CSSRuleList: true, ClientRect: true, DOMRect: true, GamepadList: true, NamedNodeMap: true, MozNamedAttrMap: true, SpeechRecognitionResultList: true, StyleSheetList: true, SVGLength: true, SVGLengthList: true, SVGNumber: true, SVGNumberList: true, SVGPointList: true, SVGScriptElement: true, SVGStringList: true, SVGAElement: true, SVGAnimateElement: true, SVGAnimateMotionElement: true, SVGAnimateTransformElement: true, SVGAnimationElement: true, SVGCircleElement: true, SVGClipPathElement: true, SVGDefsElement: true, SVGDescElement: true, SVGDiscardElement: true, SVGEllipseElement: true, SVGFEBlendElement: true, SVGFEColorMatrixElement: true, SVGFEComponentTransferElement: true, SVGFECompositeElement: true, SVGFEConvolveMatrixElement: true, SVGFEDiffuseLightingElement: true, SVGFEDisplacementMapElement: true, SVGFEDistantLightElement: true, SVGFEFloodElement: true, SVGFEFuncAElement: true, SVGFEFuncBElement: true, SVGFEFuncGElement: true, SVGFEFuncRElement: true, SVGFEGaussianBlurElement: true, SVGFEImageElement: true, SVGFEMergeElement: true, SVGFEMergeNodeElement: true, SVGFEMorphologyElement: true, SVGFEOffsetElement: true, SVGFEPointLightElement: true, SVGFESpecularLightingElement: true, SVGFESpotLightElement: true, SVGFETileElement: true, SVGFETurbulenceElement: true, SVGFilterElement: true, SVGForeignObjectElement: true, SVGGElement: true, SVGGeometryElement: true, SVGGraphicsElement: true, SVGImageElement: true, SVGLineElement: true, SVGLinearGradientElement: true, SVGMarkerElement: true, SVGMaskElement: true, SVGMetadataElement: true, SVGPathElement: true, SVGPatternElement: true, SVGPolygonElement: true, SVGPolylineElement: true, SVGRadialGradientElement: true, SVGRectElement: true, SVGSetElement: true, SVGStopElement: true, SVGStyleElement: true, SVGSVGElement: true, SVGSwitchElement: true, SVGSymbolElement: true, SVGTSpanElement: true, SVGTextContentElement: true, SVGTextElement: true, SVGTextPathElement: true, SVGTextPositioningElement: true, SVGTitleElement: true, SVGUseElement: true, SVGViewElement: true, SVGGradientElement: true, SVGComponentTransferFunctionElement: true, SVGFEDropShadowElement: true, SVGMPathElement: true, SVGElement: false, SVGTransform: true, SVGTransformList: true, AudioBuffer: true, AudioParamMap: true, AudioTrackList: true, AudioContext: true, webkitAudioContext: true, BaseAudioContext: false, OfflineAudioContext: true});
    A.NativeTypedArray.$nativeSuperclassTag = "ArrayBufferView";
    A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin.$nativeSuperclassTag = "ArrayBufferView";
    A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin.$nativeSuperclassTag = "ArrayBufferView";
    A.NativeTypedArrayOfDouble.$nativeSuperclassTag = "ArrayBufferView";
    A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin.$nativeSuperclassTag = "ArrayBufferView";
    A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin.$nativeSuperclassTag = "ArrayBufferView";
    A.NativeTypedArrayOfInt.$nativeSuperclassTag = "ArrayBufferView";
    A._SourceBufferList_EventTarget_ListMixin.$nativeSuperclassTag = "EventTarget";
    A._SourceBufferList_EventTarget_ListMixin_ImmutableListMixin.$nativeSuperclassTag = "EventTarget";
    A._TextTrackList_EventTarget_ListMixin.$nativeSuperclassTag = "EventTarget";
    A._TextTrackList_EventTarget_ListMixin_ImmutableListMixin.$nativeSuperclassTag = "EventTarget";
  })();
  Function.prototype.call$0 = function() {
    return this();
  };
  Function.prototype.call$1 = function(a) {
    return this(a);
  };
  Function.prototype.call$2 = function(a, b) {
    return this(a, b);
  };
  Function.prototype.call$3 = function(a, b, c) {
    return this(a, b, c);
  };
  Function.prototype.call$4 = function(a, b, c, d) {
    return this(a, b, c, d);
  };
  Function.prototype.call$1$1 = function(a) {
    return this(a);
  };
  Function.prototype.call$1$0 = function() {
    return this();
  };
  convertAllToFastObject(holders);
  convertToFastObject($);
  (function(callback) {
    if (typeof document === "undefined") {
      callback(null);
      return;
    }
    if (typeof document.currentScript != "undefined") {
      callback(document.currentScript);
      return;
    }
    var scripts = document.scripts;
    function onLoad(event) {
      for (var i = 0; i < scripts.length; ++i)
        scripts[i].removeEventListener("load", onLoad, false);
      callback(event.target);
    }
    for (var i = 0; i < scripts.length; ++i)
      scripts[i].addEventListener("load", onLoad, false);
  })(function(currentScript) {
    init.currentScript = currentScript;
    var callMain = A.main;
    if (typeof dartMainRunner === "function")
      dartMainRunner(callMain, []);
    else
      callMain([]);
  });
})();

//# sourceMappingURL=main.dart.js.map
